//------------------------------------------------------------------------------
// <autogenerated>
//     This code was generated by a tool.
//     Runtime Version: 1.1.4322.573
//
//     Changes to this file may cause incorrect behavior and will be lost if 
//     the code is regenerated.
// </autogenerated>
//------------------------------------------------------------------------------

namespace mz.erp.commontypes.data {
    using System;
    using System.Data;
    using System.Xml;
    using System.Runtime.Serialization;
    
    
    [Serializable()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Diagnostics.DebuggerStepThrough()]
    [System.ComponentModel.ToolboxItem(true)]
    public class sy_TablaXMLDataset : DataSet {
        
        private sy_TablaXMLDataTable tablesy_TablaXML;
        
        public sy_TablaXMLDataset() {
            this.InitClass();
            System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            this.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        protected sy_TablaXMLDataset(SerializationInfo info, StreamingContext context) {
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((strSchema != null)) {
                DataSet ds = new DataSet();
                ds.ReadXmlSchema(new XmlTextReader(new System.IO.StringReader(strSchema)));
                if ((ds.Tables["sy_TablaXML"] != null)) {
                    this.Tables.Add(new sy_TablaXMLDataTable(ds.Tables["sy_TablaXML"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.InitClass();
            }
            this.GetSerializationData(info, context);
            System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            this.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public sy_TablaXMLDataTable sy_TablaXML {
            get {
                return this.tablesy_TablaXML;
            }
        }
        
        public override DataSet Clone() {
            sy_TablaXMLDataset cln = ((sy_TablaXMLDataset)(base.Clone()));
            cln.InitVars();
            return cln;
        }
        
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        protected override void ReadXmlSerializable(XmlReader reader) {
            this.Reset();
            DataSet ds = new DataSet();
            ds.ReadXml(reader);
            if ((ds.Tables["sy_TablaXML"] != null)) {
                this.Tables.Add(new sy_TablaXMLDataTable(ds.Tables["sy_TablaXML"]));
            }
            this.DataSetName = ds.DataSetName;
            this.Prefix = ds.Prefix;
            this.Namespace = ds.Namespace;
            this.Locale = ds.Locale;
            this.CaseSensitive = ds.CaseSensitive;
            this.EnforceConstraints = ds.EnforceConstraints;
            this.Merge(ds, false, System.Data.MissingSchemaAction.Add);
            this.InitVars();
        }
        
        protected override System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            System.IO.MemoryStream stream = new System.IO.MemoryStream();
            this.WriteXmlSchema(new XmlTextWriter(stream, null));
            stream.Position = 0;
            return System.Xml.Schema.XmlSchema.Read(new XmlTextReader(stream), null);
        }
        
        internal void InitVars() {
            this.tablesy_TablaXML = ((sy_TablaXMLDataTable)(this.Tables["sy_TablaXML"]));
            if ((this.tablesy_TablaXML != null)) {
                this.tablesy_TablaXML.InitVars();
            }
        }
        
        private void InitClass() {
            this.DataSetName = "sy_TablaXMLDataset";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/sy_TablaXML.xsd";
            this.Locale = new System.Globalization.CultureInfo("en-US");
            this.CaseSensitive = false;
            this.EnforceConstraints = true;
            this.tablesy_TablaXML = new sy_TablaXMLDataTable();
            this.Tables.Add(this.tablesy_TablaXML);
        }
        
        private bool ShouldSerializesy_TablaXML() {
            return false;
        }
        
        private void SchemaChanged(object sender, System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        public delegate void sy_TablaXMLRowChangeEventHandler(object sender, sy_TablaXMLRowChangeEvent e);
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class sy_TablaXMLDataTable : DataTable, System.Collections.IEnumerable {
            
            private DataColumn columnidimagen;
            
            private DataColumn columnimagen;
            
            private DataColumn columnfechaCreacion;
            
            internal sy_TablaXMLDataTable() : 
                    base("sy_TablaXML") {
                this.InitClass();
            }
            
            internal sy_TablaXMLDataTable(DataTable table) : 
                    base(table.TableName) {
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
                this.DisplayExpression = table.DisplayExpression;
            }
            
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            internal DataColumn idimagenColumn {
                get {
                    return this.columnidimagen;
                }
            }
            
            internal DataColumn imagenColumn {
                get {
                    return this.columnimagen;
                }
            }
            
            internal DataColumn fechaCreacionColumn {
                get {
                    return this.columnfechaCreacion;
                }
            }
            
            public sy_TablaXMLRow this[int index] {
                get {
                    return ((sy_TablaXMLRow)(this.Rows[index]));
                }
            }
            
            public event sy_TablaXMLRowChangeEventHandler sy_TablaXMLRowChanged;
            
            public event sy_TablaXMLRowChangeEventHandler sy_TablaXMLRowChanging;
            
            public event sy_TablaXMLRowChangeEventHandler sy_TablaXMLRowDeleted;
            
            public event sy_TablaXMLRowChangeEventHandler sy_TablaXMLRowDeleting;
            
            public void Addsy_TablaXMLRow(sy_TablaXMLRow row) {
                this.Rows.Add(row);
            }
            
            public sy_TablaXMLRow Addsy_TablaXMLRow(int idimagen, System.Byte[] imagen, System.DateTime fechaCreacion) {
                sy_TablaXMLRow rowsy_TablaXMLRow = ((sy_TablaXMLRow)(this.NewRow()));
                rowsy_TablaXMLRow.ItemArray = new object[] {
                        idimagen,
                        imagen,
                        fechaCreacion};
                this.Rows.Add(rowsy_TablaXMLRow);
                return rowsy_TablaXMLRow;
            }
            
            public sy_TablaXMLRow FindByidimagen(int idimagen) {
                return ((sy_TablaXMLRow)(this.Rows.Find(new object[] {
                            idimagen})));
            }
            
            public System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            public override DataTable Clone() {
                sy_TablaXMLDataTable cln = ((sy_TablaXMLDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            protected override DataTable CreateInstance() {
                return new sy_TablaXMLDataTable();
            }
            
            internal void InitVars() {
                this.columnidimagen = this.Columns["idimagen"];
                this.columnimagen = this.Columns["imagen"];
                this.columnfechaCreacion = this.Columns["fechaCreacion"];
            }
            
            private void InitClass() {
                this.columnidimagen = new DataColumn("idimagen", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnidimagen);
                this.columnimagen = new DataColumn("imagen", typeof(System.Byte[]), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnimagen);
                this.columnfechaCreacion = new DataColumn("fechaCreacion", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnfechaCreacion);
                this.Constraints.Add(new UniqueConstraint("sy_TablaXMLDatasetKey1", new DataColumn[] {
                                this.columnidimagen}, true));
                this.columnidimagen.AllowDBNull = false;
                this.columnidimagen.Unique = true;
                this.columnfechaCreacion.AllowDBNull = false;
            }
            
            public sy_TablaXMLRow Newsy_TablaXMLRow() {
                return ((sy_TablaXMLRow)(this.NewRow()));
            }
            
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder) {
                return new sy_TablaXMLRow(builder);
            }
            
            protected override System.Type GetRowType() {
                return typeof(sy_TablaXMLRow);
            }
            
            protected override void OnRowChanged(DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.sy_TablaXMLRowChanged != null)) {
                    this.sy_TablaXMLRowChanged(this, new sy_TablaXMLRowChangeEvent(((sy_TablaXMLRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowChanging(DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.sy_TablaXMLRowChanging != null)) {
                    this.sy_TablaXMLRowChanging(this, new sy_TablaXMLRowChangeEvent(((sy_TablaXMLRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleted(DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.sy_TablaXMLRowDeleted != null)) {
                    this.sy_TablaXMLRowDeleted(this, new sy_TablaXMLRowChangeEvent(((sy_TablaXMLRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleting(DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.sy_TablaXMLRowDeleting != null)) {
                    this.sy_TablaXMLRowDeleting(this, new sy_TablaXMLRowChangeEvent(((sy_TablaXMLRow)(e.Row)), e.Action));
                }
            }
            
            public void Removesy_TablaXMLRow(sy_TablaXMLRow row) {
                this.Rows.Remove(row);
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class sy_TablaXMLRow : DataRow {
            
            private sy_TablaXMLDataTable tablesy_TablaXML;
            
            internal sy_TablaXMLRow(DataRowBuilder rb) : 
                    base(rb) {
                this.tablesy_TablaXML = ((sy_TablaXMLDataTable)(this.Table));
            }
            
            public int idimagen {
                get {
                    return ((int)(this[this.tablesy_TablaXML.idimagenColumn]));
                }
                set {
                    this[this.tablesy_TablaXML.idimagenColumn] = value;
                }
            }
            
            public System.Byte[] imagen {
                get {
                    try {
                        return ((System.Byte[])(this[this.tablesy_TablaXML.imagenColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tablesy_TablaXML.imagenColumn] = value;
                }
            }
            
            public System.DateTime fechaCreacion {
                get {
                    return ((System.DateTime)(this[this.tablesy_TablaXML.fechaCreacionColumn]));
                }
                set {
                    this[this.tablesy_TablaXML.fechaCreacionColumn] = value;
                }
            }
            
            public bool IsimagenNull() {
                return this.IsNull(this.tablesy_TablaXML.imagenColumn);
            }
            
            public void SetimagenNull() {
                this[this.tablesy_TablaXML.imagenColumn] = System.Convert.DBNull;
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class sy_TablaXMLRowChangeEvent : EventArgs {
            
            private sy_TablaXMLRow eventRow;
            
            private DataRowAction eventAction;
            
            public sy_TablaXMLRowChangeEvent(sy_TablaXMLRow row, DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            public sy_TablaXMLRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            public DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
