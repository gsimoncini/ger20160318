//------------------------------------------------------------------------------
// <autogenerated>
//     This code was generated by a tool.
//     Runtime Version: 1.1.4322.573
//
//     Changes to this file may cause incorrect behavior and will be lost if 
//     the code is regenerated.
// </autogenerated>
//------------------------------------------------------------------------------

namespace mz.erp.commontypes.data {
    using System;
    using System.Data;
    using System.Xml;
    using System.Runtime.Serialization;
    
    
    [Serializable()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Diagnostics.DebuggerStepThrough()]
    [System.ComponentModel.ToolboxItem(true)]
    public class tsa_ComprobanteExDataset : DataSet {
        
        private tsa_ComprobanteDataTable tabletsa_Comprobante;
        
        public tsa_ComprobanteExDataset() {
            this.InitClass();
            System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            this.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        protected tsa_ComprobanteExDataset(SerializationInfo info, StreamingContext context) {
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((strSchema != null)) {
                DataSet ds = new DataSet();
                ds.ReadXmlSchema(new XmlTextReader(new System.IO.StringReader(strSchema)));
                if ((ds.Tables["tsa_Comprobante"] != null)) {
                    this.Tables.Add(new tsa_ComprobanteDataTable(ds.Tables["tsa_Comprobante"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.InitClass();
            }
            this.GetSerializationData(info, context);
            System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            this.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public tsa_ComprobanteDataTable tsa_Comprobante {
            get {
                return this.tabletsa_Comprobante;
            }
        }
        
        public override DataSet Clone() {
            tsa_ComprobanteExDataset cln = ((tsa_ComprobanteExDataset)(base.Clone()));
            cln.InitVars();
            return cln;
        }
        
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        protected override void ReadXmlSerializable(XmlReader reader) {
            this.Reset();
            DataSet ds = new DataSet();
            ds.ReadXml(reader);
            if ((ds.Tables["tsa_Comprobante"] != null)) {
                this.Tables.Add(new tsa_ComprobanteDataTable(ds.Tables["tsa_Comprobante"]));
            }
            this.DataSetName = ds.DataSetName;
            this.Prefix = ds.Prefix;
            this.Namespace = ds.Namespace;
            this.Locale = ds.Locale;
            this.CaseSensitive = ds.CaseSensitive;
            this.EnforceConstraints = ds.EnforceConstraints;
            this.Merge(ds, false, System.Data.MissingSchemaAction.Add);
            this.InitVars();
        }
        
        protected override System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            System.IO.MemoryStream stream = new System.IO.MemoryStream();
            this.WriteXmlSchema(new XmlTextWriter(stream, null));
            stream.Position = 0;
            return System.Xml.Schema.XmlSchema.Read(new XmlTextReader(stream), null);
        }
        
        internal void InitVars() {
            this.tabletsa_Comprobante = ((tsa_ComprobanteDataTable)(this.Tables["tsa_Comprobante"]));
            if ((this.tabletsa_Comprobante != null)) {
                this.tabletsa_Comprobante.InitVars();
            }
        }
        
        private void InitClass() {
            this.DataSetName = "tsa_ComprobanteExDataset";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/tsa_ComprobanteEx.xsd";
            this.Locale = new System.Globalization.CultureInfo("en-US");
            this.CaseSensitive = false;
            this.EnforceConstraints = true;
            this.tabletsa_Comprobante = new tsa_ComprobanteDataTable();
            this.Tables.Add(this.tabletsa_Comprobante);
        }
        
        private bool ShouldSerializetsa_Comprobante() {
            return false;
        }
        
        private void SchemaChanged(object sender, System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        public delegate void tsa_ComprobanteRowChangeEventHandler(object sender, tsa_ComprobanteRowChangeEvent e);
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class tsa_ComprobanteDataTable : DataTable, System.Collections.IEnumerable {
            
            private DataColumn columnIdComprobante;
            
            private DataColumn columnFecha;
            
            private DataColumn columnTipo;
            
            private DataColumn columnNumero;
            
            private DataColumn columnIdCuenta;
            
            private DataColumn columnIdCondicionDeVenta;
            
            private DataColumn columnBaseImponible;
            
            private DataColumn columnExento;
            
            private DataColumn columnIvaInscripto;
            
            private DataColumn columnRetencionIB;
            
            private DataColumn columnRetencionIva;
            
            private DataColumn columnRetencionGanancia;
            
            private DataColumn columnBonificacionRecargo;
            
            private DataColumn columnTotal;
            
            private DataColumn columnFechaVencimiento;
            
            private DataColumn columnIdVendedor;
            
            private DataColumn columnPeriodoFiscal;
            
            private DataColumn columnFechaCreacion;
            
            private DataColumn columnIdConexionCreacion;
            
            private DataColumn columnUltimaModificacion;
            
            private DataColumn columnIdConexionUltimaModificacion;
            
            private DataColumn columnIdReservado;
            
            private DataColumn columnRowId;
            
            private DataColumn columnIdSucursal;
            
            private DataColumn columnIdEmpresa;
            
            internal tsa_ComprobanteDataTable() : 
                    base("tsa_Comprobante") {
                this.InitClass();
            }
            
            internal tsa_ComprobanteDataTable(DataTable table) : 
                    base(table.TableName) {
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
                this.DisplayExpression = table.DisplayExpression;
            }
            
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            internal DataColumn IdComprobanteColumn {
                get {
                    return this.columnIdComprobante;
                }
            }
            
            internal DataColumn FechaColumn {
                get {
                    return this.columnFecha;
                }
            }
            
            internal DataColumn TipoColumn {
                get {
                    return this.columnTipo;
                }
            }
            
            internal DataColumn NumeroColumn {
                get {
                    return this.columnNumero;
                }
            }
            
            internal DataColumn IdCuentaColumn {
                get {
                    return this.columnIdCuenta;
                }
            }
            
            internal DataColumn IdCondicionDeVentaColumn {
                get {
                    return this.columnIdCondicionDeVenta;
                }
            }
            
            internal DataColumn BaseImponibleColumn {
                get {
                    return this.columnBaseImponible;
                }
            }
            
            internal DataColumn ExentoColumn {
                get {
                    return this.columnExento;
                }
            }
            
            internal DataColumn IvaInscriptoColumn {
                get {
                    return this.columnIvaInscripto;
                }
            }
            
            internal DataColumn RetencionIBColumn {
                get {
                    return this.columnRetencionIB;
                }
            }
            
            internal DataColumn RetencionIvaColumn {
                get {
                    return this.columnRetencionIva;
                }
            }
            
            internal DataColumn RetencionGananciaColumn {
                get {
                    return this.columnRetencionGanancia;
                }
            }
            
            internal DataColumn BonificacionRecargoColumn {
                get {
                    return this.columnBonificacionRecargo;
                }
            }
            
            internal DataColumn TotalColumn {
                get {
                    return this.columnTotal;
                }
            }
            
            internal DataColumn FechaVencimientoColumn {
                get {
                    return this.columnFechaVencimiento;
                }
            }
            
            internal DataColumn IdVendedorColumn {
                get {
                    return this.columnIdVendedor;
                }
            }
            
            internal DataColumn PeriodoFiscalColumn {
                get {
                    return this.columnPeriodoFiscal;
                }
            }
            
            internal DataColumn FechaCreacionColumn {
                get {
                    return this.columnFechaCreacion;
                }
            }
            
            internal DataColumn IdConexionCreacionColumn {
                get {
                    return this.columnIdConexionCreacion;
                }
            }
            
            internal DataColumn UltimaModificacionColumn {
                get {
                    return this.columnUltimaModificacion;
                }
            }
            
            internal DataColumn IdConexionUltimaModificacionColumn {
                get {
                    return this.columnIdConexionUltimaModificacion;
                }
            }
            
            internal DataColumn IdReservadoColumn {
                get {
                    return this.columnIdReservado;
                }
            }
            
            internal DataColumn RowIdColumn {
                get {
                    return this.columnRowId;
                }
            }
            
            internal DataColumn IdSucursalColumn {
                get {
                    return this.columnIdSucursal;
                }
            }
            
            internal DataColumn IdEmpresaColumn {
                get {
                    return this.columnIdEmpresa;
                }
            }
            
            public tsa_ComprobanteRow this[int index] {
                get {
                    return ((tsa_ComprobanteRow)(this.Rows[index]));
                }
            }
            
            public event tsa_ComprobanteRowChangeEventHandler tsa_ComprobanteRowChanged;
            
            public event tsa_ComprobanteRowChangeEventHandler tsa_ComprobanteRowChanging;
            
            public event tsa_ComprobanteRowChangeEventHandler tsa_ComprobanteRowDeleted;
            
            public event tsa_ComprobanteRowChangeEventHandler tsa_ComprobanteRowDeleting;
            
            public void Addtsa_ComprobanteRow(tsa_ComprobanteRow row) {
                this.Rows.Add(row);
            }
            
            public tsa_ComprobanteRow Addtsa_ComprobanteRow(
                        long IdComprobante, 
                        System.DateTime Fecha, 
                        string Tipo, 
                        string Numero, 
                        string IdCuenta, 
                        long IdCondicionDeVenta, 
                        System.Decimal BaseImponible, 
                        System.Decimal Exento, 
                        System.Decimal IvaInscripto, 
                        System.Decimal RetencionIB, 
                        System.Decimal RetencionIva, 
                        System.Decimal RetencionGanancia, 
                        System.Decimal BonificacionRecargo, 
                        System.Decimal Total, 
                        System.DateTime FechaVencimiento, 
                        string IdVendedor, 
                        string PeriodoFiscal, 
                        System.DateTime FechaCreacion, 
                        long IdConexionCreacion, 
                        System.Byte[] UltimaModificacion, 
                        long IdConexionUltimaModificacion, 
                        long IdReservado, 
                        System.Guid RowId, 
                        long IdSucursal, 
                        long IdEmpresa) {
                tsa_ComprobanteRow rowtsa_ComprobanteRow = ((tsa_ComprobanteRow)(this.NewRow()));
                rowtsa_ComprobanteRow.ItemArray = new object[] {
                        IdComprobante,
                        Fecha,
                        Tipo,
                        Numero,
                        IdCuenta,
                        IdCondicionDeVenta,
                        BaseImponible,
                        Exento,
                        IvaInscripto,
                        RetencionIB,
                        RetencionIva,
                        RetencionGanancia,
                        BonificacionRecargo,
                        Total,
                        FechaVencimiento,
                        IdVendedor,
                        PeriodoFiscal,
                        FechaCreacion,
                        IdConexionCreacion,
                        UltimaModificacion,
                        IdConexionUltimaModificacion,
                        IdReservado,
                        RowId,
                        IdSucursal,
                        IdEmpresa};
                this.Rows.Add(rowtsa_ComprobanteRow);
                return rowtsa_ComprobanteRow;
            }
            
            public tsa_ComprobanteRow FindByFechaTipoNumero(System.DateTime Fecha, string Tipo, string Numero) {
                return ((tsa_ComprobanteRow)(this.Rows.Find(new object[] {
                            Fecha,
                            Tipo,
                            Numero})));
            }
            
            public System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            public override DataTable Clone() {
                tsa_ComprobanteDataTable cln = ((tsa_ComprobanteDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            protected override DataTable CreateInstance() {
                return new tsa_ComprobanteDataTable();
            }
            
            internal void InitVars() {
                this.columnIdComprobante = this.Columns["IdComprobante"];
                this.columnFecha = this.Columns["Fecha"];
                this.columnTipo = this.Columns["Tipo"];
                this.columnNumero = this.Columns["Numero"];
                this.columnIdCuenta = this.Columns["IdCuenta"];
                this.columnIdCondicionDeVenta = this.Columns["IdCondicionDeVenta"];
                this.columnBaseImponible = this.Columns["BaseImponible"];
                this.columnExento = this.Columns["Exento"];
                this.columnIvaInscripto = this.Columns["IvaInscripto"];
                this.columnRetencionIB = this.Columns["RetencionIB"];
                this.columnRetencionIva = this.Columns["RetencionIva"];
                this.columnRetencionGanancia = this.Columns["RetencionGanancia"];
                this.columnBonificacionRecargo = this.Columns["BonificacionRecargo"];
                this.columnTotal = this.Columns["Total"];
                this.columnFechaVencimiento = this.Columns["FechaVencimiento"];
                this.columnIdVendedor = this.Columns["IdVendedor"];
                this.columnPeriodoFiscal = this.Columns["PeriodoFiscal"];
                this.columnFechaCreacion = this.Columns["FechaCreacion"];
                this.columnIdConexionCreacion = this.Columns["IdConexionCreacion"];
                this.columnUltimaModificacion = this.Columns["UltimaModificacion"];
                this.columnIdConexionUltimaModificacion = this.Columns["IdConexionUltimaModificacion"];
                this.columnIdReservado = this.Columns["IdReservado"];
                this.columnRowId = this.Columns["RowId"];
                this.columnIdSucursal = this.Columns["IdSucursal"];
                this.columnIdEmpresa = this.Columns["IdEmpresa"];
            }
            
            private void InitClass() {
                this.columnIdComprobante = new DataColumn("IdComprobante", typeof(long), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdComprobante);
                this.columnFecha = new DataColumn("Fecha", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnFecha);
                this.columnTipo = new DataColumn("Tipo", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnTipo);
                this.columnNumero = new DataColumn("Numero", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnNumero);
                this.columnIdCuenta = new DataColumn("IdCuenta", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdCuenta);
                this.columnIdCondicionDeVenta = new DataColumn("IdCondicionDeVenta", typeof(long), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdCondicionDeVenta);
                this.columnBaseImponible = new DataColumn("BaseImponible", typeof(System.Decimal), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnBaseImponible);
                this.columnExento = new DataColumn("Exento", typeof(System.Decimal), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnExento);
                this.columnIvaInscripto = new DataColumn("IvaInscripto", typeof(System.Decimal), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIvaInscripto);
                this.columnRetencionIB = new DataColumn("RetencionIB", typeof(System.Decimal), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnRetencionIB);
                this.columnRetencionIva = new DataColumn("RetencionIva", typeof(System.Decimal), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnRetencionIva);
                this.columnRetencionGanancia = new DataColumn("RetencionGanancia", typeof(System.Decimal), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnRetencionGanancia);
                this.columnBonificacionRecargo = new DataColumn("BonificacionRecargo", typeof(System.Decimal), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnBonificacionRecargo);
                this.columnTotal = new DataColumn("Total", typeof(System.Decimal), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnTotal);
                this.columnFechaVencimiento = new DataColumn("FechaVencimiento", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnFechaVencimiento);
                this.columnIdVendedor = new DataColumn("IdVendedor", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdVendedor);
                this.columnPeriodoFiscal = new DataColumn("PeriodoFiscal", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnPeriodoFiscal);
                this.columnFechaCreacion = new DataColumn("FechaCreacion", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnFechaCreacion);
                this.columnIdConexionCreacion = new DataColumn("IdConexionCreacion", typeof(long), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdConexionCreacion);
                this.columnUltimaModificacion = new DataColumn("UltimaModificacion", typeof(System.Byte[]), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnUltimaModificacion);
                this.columnIdConexionUltimaModificacion = new DataColumn("IdConexionUltimaModificacion", typeof(long), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdConexionUltimaModificacion);
                this.columnIdReservado = new DataColumn("IdReservado", typeof(long), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdReservado);
                this.columnRowId = new DataColumn("RowId", typeof(System.Guid), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnRowId);
                this.columnIdSucursal = new DataColumn("IdSucursal", typeof(long), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdSucursal);
                this.columnIdEmpresa = new DataColumn("IdEmpresa", typeof(long), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdEmpresa);
                this.Constraints.Add(new UniqueConstraint("tsa_ComprobanteExKey1", new DataColumn[] {
                                this.columnFecha,
                                this.columnTipo,
                                this.columnNumero}, true));
                this.columnIdComprobante.AllowDBNull = false;
                this.columnFecha.AllowDBNull = false;
                this.columnTipo.AllowDBNull = false;
                this.columnNumero.AllowDBNull = false;
                this.columnUltimaModificacion.ReadOnly = true;
            }
            
            public tsa_ComprobanteRow Newtsa_ComprobanteRow() {
                return ((tsa_ComprobanteRow)(this.NewRow()));
            }
            
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder) {
                return new tsa_ComprobanteRow(builder);
            }
            
            protected override System.Type GetRowType() {
                return typeof(tsa_ComprobanteRow);
            }
            
            protected override void OnRowChanged(DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.tsa_ComprobanteRowChanged != null)) {
                    this.tsa_ComprobanteRowChanged(this, new tsa_ComprobanteRowChangeEvent(((tsa_ComprobanteRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowChanging(DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.tsa_ComprobanteRowChanging != null)) {
                    this.tsa_ComprobanteRowChanging(this, new tsa_ComprobanteRowChangeEvent(((tsa_ComprobanteRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleted(DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.tsa_ComprobanteRowDeleted != null)) {
                    this.tsa_ComprobanteRowDeleted(this, new tsa_ComprobanteRowChangeEvent(((tsa_ComprobanteRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleting(DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.tsa_ComprobanteRowDeleting != null)) {
                    this.tsa_ComprobanteRowDeleting(this, new tsa_ComprobanteRowChangeEvent(((tsa_ComprobanteRow)(e.Row)), e.Action));
                }
            }
            
            public void Removetsa_ComprobanteRow(tsa_ComprobanteRow row) {
                this.Rows.Remove(row);
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class tsa_ComprobanteRow : DataRow {
            
            private tsa_ComprobanteDataTable tabletsa_Comprobante;
            
            internal tsa_ComprobanteRow(DataRowBuilder rb) : 
                    base(rb) {
                this.tabletsa_Comprobante = ((tsa_ComprobanteDataTable)(this.Table));
            }
            
            public long IdComprobante {
                get {
                    return ((long)(this[this.tabletsa_Comprobante.IdComprobanteColumn]));
                }
                set {
                    this[this.tabletsa_Comprobante.IdComprobanteColumn] = value;
                }
            }
            
            public System.DateTime Fecha {
                get {
                    return ((System.DateTime)(this[this.tabletsa_Comprobante.FechaColumn]));
                }
                set {
                    this[this.tabletsa_Comprobante.FechaColumn] = value;
                }
            }
            
            public string Tipo {
                get {
                    return ((string)(this[this.tabletsa_Comprobante.TipoColumn]));
                }
                set {
                    this[this.tabletsa_Comprobante.TipoColumn] = value;
                }
            }
            
            public string Numero {
                get {
                    return ((string)(this[this.tabletsa_Comprobante.NumeroColumn]));
                }
                set {
                    this[this.tabletsa_Comprobante.NumeroColumn] = value;
                }
            }
            
            public string IdCuenta {
                get {
                    try {
                        return ((string)(this[this.tabletsa_Comprobante.IdCuentaColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletsa_Comprobante.IdCuentaColumn] = value;
                }
            }
            
            public long IdCondicionDeVenta {
                get {
                    try {
                        return ((long)(this[this.tabletsa_Comprobante.IdCondicionDeVentaColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletsa_Comprobante.IdCondicionDeVentaColumn] = value;
                }
            }
            
            public System.Decimal BaseImponible {
                get {
                    try {
                        return ((System.Decimal)(this[this.tabletsa_Comprobante.BaseImponibleColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletsa_Comprobante.BaseImponibleColumn] = value;
                }
            }
            
            public System.Decimal Exento {
                get {
                    try {
                        return ((System.Decimal)(this[this.tabletsa_Comprobante.ExentoColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletsa_Comprobante.ExentoColumn] = value;
                }
            }
            
            public System.Decimal IvaInscripto {
                get {
                    try {
                        return ((System.Decimal)(this[this.tabletsa_Comprobante.IvaInscriptoColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletsa_Comprobante.IvaInscriptoColumn] = value;
                }
            }
            
            public System.Decimal RetencionIB {
                get {
                    try {
                        return ((System.Decimal)(this[this.tabletsa_Comprobante.RetencionIBColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletsa_Comprobante.RetencionIBColumn] = value;
                }
            }
            
            public System.Decimal RetencionIva {
                get {
                    try {
                        return ((System.Decimal)(this[this.tabletsa_Comprobante.RetencionIvaColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletsa_Comprobante.RetencionIvaColumn] = value;
                }
            }
            
            public System.Decimal RetencionGanancia {
                get {
                    try {
                        return ((System.Decimal)(this[this.tabletsa_Comprobante.RetencionGananciaColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletsa_Comprobante.RetencionGananciaColumn] = value;
                }
            }
            
            public System.Decimal BonificacionRecargo {
                get {
                    try {
                        return ((System.Decimal)(this[this.tabletsa_Comprobante.BonificacionRecargoColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletsa_Comprobante.BonificacionRecargoColumn] = value;
                }
            }
            
            public System.Decimal Total {
                get {
                    try {
                        return ((System.Decimal)(this[this.tabletsa_Comprobante.TotalColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletsa_Comprobante.TotalColumn] = value;
                }
            }
            
            public System.DateTime FechaVencimiento {
                get {
                    try {
                        return ((System.DateTime)(this[this.tabletsa_Comprobante.FechaVencimientoColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletsa_Comprobante.FechaVencimientoColumn] = value;
                }
            }
            
            public string IdVendedor {
                get {
                    try {
                        return ((string)(this[this.tabletsa_Comprobante.IdVendedorColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletsa_Comprobante.IdVendedorColumn] = value;
                }
            }
            
            public string PeriodoFiscal {
                get {
                    try {
                        return ((string)(this[this.tabletsa_Comprobante.PeriodoFiscalColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletsa_Comprobante.PeriodoFiscalColumn] = value;
                }
            }
            
            public System.DateTime FechaCreacion {
                get {
                    try {
                        return ((System.DateTime)(this[this.tabletsa_Comprobante.FechaCreacionColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletsa_Comprobante.FechaCreacionColumn] = value;
                }
            }
            
            public long IdConexionCreacion {
                get {
                    try {
                        return ((long)(this[this.tabletsa_Comprobante.IdConexionCreacionColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletsa_Comprobante.IdConexionCreacionColumn] = value;
                }
            }
            
            public System.Byte[] UltimaModificacion {
                get {
                    try {
                        return ((System.Byte[])(this[this.tabletsa_Comprobante.UltimaModificacionColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletsa_Comprobante.UltimaModificacionColumn] = value;
                }
            }
            
            public long IdConexionUltimaModificacion {
                get {
                    try {
                        return ((long)(this[this.tabletsa_Comprobante.IdConexionUltimaModificacionColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletsa_Comprobante.IdConexionUltimaModificacionColumn] = value;
                }
            }
            
            public long IdReservado {
                get {
                    try {
                        return ((long)(this[this.tabletsa_Comprobante.IdReservadoColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletsa_Comprobante.IdReservadoColumn] = value;
                }
            }
            
            public System.Guid RowId {
                get {
                    try {
                        return ((System.Guid)(this[this.tabletsa_Comprobante.RowIdColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletsa_Comprobante.RowIdColumn] = value;
                }
            }
            
            public long IdSucursal {
                get {
                    try {
                        return ((long)(this[this.tabletsa_Comprobante.IdSucursalColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletsa_Comprobante.IdSucursalColumn] = value;
                }
            }
            
            public long IdEmpresa {
                get {
                    try {
                        return ((long)(this[this.tabletsa_Comprobante.IdEmpresaColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletsa_Comprobante.IdEmpresaColumn] = value;
                }
            }
            
            public bool IsIdCuentaNull() {
                return this.IsNull(this.tabletsa_Comprobante.IdCuentaColumn);
            }
            
            public void SetIdCuentaNull() {
                this[this.tabletsa_Comprobante.IdCuentaColumn] = System.Convert.DBNull;
            }
            
            public bool IsIdCondicionDeVentaNull() {
                return this.IsNull(this.tabletsa_Comprobante.IdCondicionDeVentaColumn);
            }
            
            public void SetIdCondicionDeVentaNull() {
                this[this.tabletsa_Comprobante.IdCondicionDeVentaColumn] = System.Convert.DBNull;
            }
            
            public bool IsBaseImponibleNull() {
                return this.IsNull(this.tabletsa_Comprobante.BaseImponibleColumn);
            }
            
            public void SetBaseImponibleNull() {
                this[this.tabletsa_Comprobante.BaseImponibleColumn] = System.Convert.DBNull;
            }
            
            public bool IsExentoNull() {
                return this.IsNull(this.tabletsa_Comprobante.ExentoColumn);
            }
            
            public void SetExentoNull() {
                this[this.tabletsa_Comprobante.ExentoColumn] = System.Convert.DBNull;
            }
            
            public bool IsIvaInscriptoNull() {
                return this.IsNull(this.tabletsa_Comprobante.IvaInscriptoColumn);
            }
            
            public void SetIvaInscriptoNull() {
                this[this.tabletsa_Comprobante.IvaInscriptoColumn] = System.Convert.DBNull;
            }
            
            public bool IsRetencionIBNull() {
                return this.IsNull(this.tabletsa_Comprobante.RetencionIBColumn);
            }
            
            public void SetRetencionIBNull() {
                this[this.tabletsa_Comprobante.RetencionIBColumn] = System.Convert.DBNull;
            }
            
            public bool IsRetencionIvaNull() {
                return this.IsNull(this.tabletsa_Comprobante.RetencionIvaColumn);
            }
            
            public void SetRetencionIvaNull() {
                this[this.tabletsa_Comprobante.RetencionIvaColumn] = System.Convert.DBNull;
            }
            
            public bool IsRetencionGananciaNull() {
                return this.IsNull(this.tabletsa_Comprobante.RetencionGananciaColumn);
            }
            
            public void SetRetencionGananciaNull() {
                this[this.tabletsa_Comprobante.RetencionGananciaColumn] = System.Convert.DBNull;
            }
            
            public bool IsBonificacionRecargoNull() {
                return this.IsNull(this.tabletsa_Comprobante.BonificacionRecargoColumn);
            }
            
            public void SetBonificacionRecargoNull() {
                this[this.tabletsa_Comprobante.BonificacionRecargoColumn] = System.Convert.DBNull;
            }
            
            public bool IsTotalNull() {
                return this.IsNull(this.tabletsa_Comprobante.TotalColumn);
            }
            
            public void SetTotalNull() {
                this[this.tabletsa_Comprobante.TotalColumn] = System.Convert.DBNull;
            }
            
            public bool IsFechaVencimientoNull() {
                return this.IsNull(this.tabletsa_Comprobante.FechaVencimientoColumn);
            }
            
            public void SetFechaVencimientoNull() {
                this[this.tabletsa_Comprobante.FechaVencimientoColumn] = System.Convert.DBNull;
            }
            
            public bool IsIdVendedorNull() {
                return this.IsNull(this.tabletsa_Comprobante.IdVendedorColumn);
            }
            
            public void SetIdVendedorNull() {
                this[this.tabletsa_Comprobante.IdVendedorColumn] = System.Convert.DBNull;
            }
            
            public bool IsPeriodoFiscalNull() {
                return this.IsNull(this.tabletsa_Comprobante.PeriodoFiscalColumn);
            }
            
            public void SetPeriodoFiscalNull() {
                this[this.tabletsa_Comprobante.PeriodoFiscalColumn] = System.Convert.DBNull;
            }
            
            public bool IsFechaCreacionNull() {
                return this.IsNull(this.tabletsa_Comprobante.FechaCreacionColumn);
            }
            
            public void SetFechaCreacionNull() {
                this[this.tabletsa_Comprobante.FechaCreacionColumn] = System.Convert.DBNull;
            }
            
            public bool IsIdConexionCreacionNull() {
                return this.IsNull(this.tabletsa_Comprobante.IdConexionCreacionColumn);
            }
            
            public void SetIdConexionCreacionNull() {
                this[this.tabletsa_Comprobante.IdConexionCreacionColumn] = System.Convert.DBNull;
            }
            
            public bool IsUltimaModificacionNull() {
                return this.IsNull(this.tabletsa_Comprobante.UltimaModificacionColumn);
            }
            
            public void SetUltimaModificacionNull() {
                this[this.tabletsa_Comprobante.UltimaModificacionColumn] = System.Convert.DBNull;
            }
            
            public bool IsIdConexionUltimaModificacionNull() {
                return this.IsNull(this.tabletsa_Comprobante.IdConexionUltimaModificacionColumn);
            }
            
            public void SetIdConexionUltimaModificacionNull() {
                this[this.tabletsa_Comprobante.IdConexionUltimaModificacionColumn] = System.Convert.DBNull;
            }
            
            public bool IsIdReservadoNull() {
                return this.IsNull(this.tabletsa_Comprobante.IdReservadoColumn);
            }
            
            public void SetIdReservadoNull() {
                this[this.tabletsa_Comprobante.IdReservadoColumn] = System.Convert.DBNull;
            }
            
            public bool IsRowIdNull() {
                return this.IsNull(this.tabletsa_Comprobante.RowIdColumn);
            }
            
            public void SetRowIdNull() {
                this[this.tabletsa_Comprobante.RowIdColumn] = System.Convert.DBNull;
            }
            
            public bool IsIdSucursalNull() {
                return this.IsNull(this.tabletsa_Comprobante.IdSucursalColumn);
            }
            
            public void SetIdSucursalNull() {
                this[this.tabletsa_Comprobante.IdSucursalColumn] = System.Convert.DBNull;
            }
            
            public bool IsIdEmpresaNull() {
                return this.IsNull(this.tabletsa_Comprobante.IdEmpresaColumn);
            }
            
            public void SetIdEmpresaNull() {
                this[this.tabletsa_Comprobante.IdEmpresaColumn] = System.Convert.DBNull;
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class tsa_ComprobanteRowChangeEvent : EventArgs {
            
            private tsa_ComprobanteRow eventRow;
            
            private DataRowAction eventAction;
            
            public tsa_ComprobanteRowChangeEvent(tsa_ComprobanteRow row, DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            public tsa_ComprobanteRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            public DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
