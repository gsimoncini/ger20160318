//------------------------------------------------------------------------------
// <autogenerated>
//     This code was generated by a tool.
//     Runtime Version: 1.1.4322.2032
//
//     Changes to this file may cause incorrect behavior and will be lost if 
//     the code is regenerated.
// </autogenerated>
//------------------------------------------------------------------------------

namespace mz.erp.commontypes.data {
    using System;
    using System.Data;
    using System.Xml;
    using System.Runtime.Serialization;
    
    
    [Serializable()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Diagnostics.DebuggerStepThrough()]
    [System.ComponentModel.ToolboxItem(true)]
    public class sy_ExcepcionesDataset : DataSet {
        
        private sy_ExcepcionesDataTable tablesy_Excepciones;
        
        public sy_ExcepcionesDataset() {
            this.InitClass();
            System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            this.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        protected sy_ExcepcionesDataset(SerializationInfo info, StreamingContext context) {
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((strSchema != null)) {
                DataSet ds = new DataSet();
                ds.ReadXmlSchema(new XmlTextReader(new System.IO.StringReader(strSchema)));
                if ((ds.Tables["sy_Excepciones"] != null)) {
                    this.Tables.Add(new sy_ExcepcionesDataTable(ds.Tables["sy_Excepciones"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.InitClass();
            }
            this.GetSerializationData(info, context);
            System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            this.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public sy_ExcepcionesDataTable sy_Excepciones {
            get {
                return this.tablesy_Excepciones;
            }
        }
        
        public override DataSet Clone() {
            sy_ExcepcionesDataset cln = ((sy_ExcepcionesDataset)(base.Clone()));
            cln.InitVars();
            return cln;
        }
        
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        protected override void ReadXmlSerializable(XmlReader reader) {
            this.Reset();
            DataSet ds = new DataSet();
            ds.ReadXml(reader);
            if ((ds.Tables["sy_Excepciones"] != null)) {
                this.Tables.Add(new sy_ExcepcionesDataTable(ds.Tables["sy_Excepciones"]));
            }
            this.DataSetName = ds.DataSetName;
            this.Prefix = ds.Prefix;
            this.Namespace = ds.Namespace;
            this.Locale = ds.Locale;
            this.CaseSensitive = ds.CaseSensitive;
            this.EnforceConstraints = ds.EnforceConstraints;
            this.Merge(ds, false, System.Data.MissingSchemaAction.Add);
            this.InitVars();
        }
        
        protected override System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            System.IO.MemoryStream stream = new System.IO.MemoryStream();
            this.WriteXmlSchema(new XmlTextWriter(stream, null));
            stream.Position = 0;
            return System.Xml.Schema.XmlSchema.Read(new XmlTextReader(stream), null);
        }
        
        internal void InitVars() {
            this.tablesy_Excepciones = ((sy_ExcepcionesDataTable)(this.Tables["sy_Excepciones"]));
            if ((this.tablesy_Excepciones != null)) {
                this.tablesy_Excepciones.InitVars();
            }
        }
        
        private void InitClass() {
            this.DataSetName = "sy_ExcepcionesDataset";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/sy_Excepciones.xsd";
            this.Locale = new System.Globalization.CultureInfo("en-US");
            this.CaseSensitive = false;
            this.EnforceConstraints = true;
            this.tablesy_Excepciones = new sy_ExcepcionesDataTable();
            this.Tables.Add(this.tablesy_Excepciones);
        }
        
        private bool ShouldSerializesy_Excepciones() {
            return false;
        }
        
        private void SchemaChanged(object sender, System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        public delegate void sy_ExcepcionesRowChangeEventHandler(object sender, sy_ExcepcionesRowChangeEvent e);
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class sy_ExcepcionesDataTable : DataTable, System.Collections.IEnumerable {
            
            private DataColumn columnIdExcepcion;
            
            private DataColumn columnFechaCreacion;
            
            private DataColumn columnMachine;
            
            private DataColumn columnUser;
            
            private DataColumn columnVersion;
            
            private DataColumn columnAppDomain;
            
            private DataColumn columnCodeBase;
            
            private DataColumn columnExc_Source;
            
            private DataColumn columnExc_Type;
            
            private DataColumn columnExc_Message;
            
            private DataColumn columnExc_Site;
            
            private DataColumn columnExc_StackTrace;
            
            private DataColumn columnExc_InnerException;
            
            private DataColumn columnExc_HelpLink;
            
            private DataColumn columnException;
            
            private DataColumn columnIdConexionCreacion;
            
            private DataColumn columnUltimaModificacion;
            
            private DataColumn columnIdConexionUltimaModificacion;
            
            private DataColumn columnIdReservado;
            
            private DataColumn columnRowId;
            
            private DataColumn columnIdSucursal;
            
            private DataColumn columnIdEmpresa;
            
            internal sy_ExcepcionesDataTable() : 
                    base("sy_Excepciones") {
                this.InitClass();
            }
            
            internal sy_ExcepcionesDataTable(DataTable table) : 
                    base(table.TableName) {
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
                this.DisplayExpression = table.DisplayExpression;
            }
            
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            internal DataColumn IdExcepcionColumn {
                get {
                    return this.columnIdExcepcion;
                }
            }
            
            internal DataColumn FechaCreacionColumn {
                get {
                    return this.columnFechaCreacion;
                }
            }
            
            internal DataColumn MachineColumn {
                get {
                    return this.columnMachine;
                }
            }
            
            internal DataColumn UserColumn {
                get {
                    return this.columnUser;
                }
            }
            
            internal DataColumn VersionColumn {
                get {
                    return this.columnVersion;
                }
            }
            
            internal DataColumn AppDomainColumn {
                get {
                    return this.columnAppDomain;
                }
            }
            
            internal DataColumn CodeBaseColumn {
                get {
                    return this.columnCodeBase;
                }
            }
            
            internal DataColumn Exc_SourceColumn {
                get {
                    return this.columnExc_Source;
                }
            }
            
            internal DataColumn Exc_TypeColumn {
                get {
                    return this.columnExc_Type;
                }
            }
            
            internal DataColumn Exc_MessageColumn {
                get {
                    return this.columnExc_Message;
                }
            }
            
            internal DataColumn Exc_SiteColumn {
                get {
                    return this.columnExc_Site;
                }
            }
            
            internal DataColumn Exc_StackTraceColumn {
                get {
                    return this.columnExc_StackTrace;
                }
            }
            
            internal DataColumn Exc_InnerExceptionColumn {
                get {
                    return this.columnExc_InnerException;
                }
            }
            
            internal DataColumn Exc_HelpLinkColumn {
                get {
                    return this.columnExc_HelpLink;
                }
            }
            
            internal DataColumn ExceptionColumn {
                get {
                    return this.columnException;
                }
            }
            
            internal DataColumn IdConexionCreacionColumn {
                get {
                    return this.columnIdConexionCreacion;
                }
            }
            
            internal DataColumn UltimaModificacionColumn {
                get {
                    return this.columnUltimaModificacion;
                }
            }
            
            internal DataColumn IdConexionUltimaModificacionColumn {
                get {
                    return this.columnIdConexionUltimaModificacion;
                }
            }
            
            internal DataColumn IdReservadoColumn {
                get {
                    return this.columnIdReservado;
                }
            }
            
            internal DataColumn RowIdColumn {
                get {
                    return this.columnRowId;
                }
            }
            
            internal DataColumn IdSucursalColumn {
                get {
                    return this.columnIdSucursal;
                }
            }
            
            internal DataColumn IdEmpresaColumn {
                get {
                    return this.columnIdEmpresa;
                }
            }
            
            public sy_ExcepcionesRow this[int index] {
                get {
                    return ((sy_ExcepcionesRow)(this.Rows[index]));
                }
            }
            
            public event sy_ExcepcionesRowChangeEventHandler sy_ExcepcionesRowChanged;
            
            public event sy_ExcepcionesRowChangeEventHandler sy_ExcepcionesRowChanging;
            
            public event sy_ExcepcionesRowChangeEventHandler sy_ExcepcionesRowDeleted;
            
            public event sy_ExcepcionesRowChangeEventHandler sy_ExcepcionesRowDeleting;
            
            public void Addsy_ExcepcionesRow(sy_ExcepcionesRow row) {
                this.Rows.Add(row);
            }
            
            public sy_ExcepcionesRow Addsy_ExcepcionesRow(
                        string IdExcepcion, 
                        System.DateTime FechaCreacion, 
                        string Machine, 
                        string User, 
                        string Version, 
                        string AppDomain, 
                        string CodeBase, 
                        string Exc_Source, 
                        string Exc_Type, 
                        string Exc_Message, 
                        string Exc_Site, 
                        string Exc_StackTrace, 
                        string Exc_InnerException, 
                        string Exc_HelpLink, 
                        string Exception, 
                        long IdConexionCreacion, 
                        System.Byte[] UltimaModificacion, 
                        long IdConexionUltimaModificacion, 
                        long IdReservado, 
                        System.Guid RowId, 
                        long IdSucursal, 
                        long IdEmpresa) {
                sy_ExcepcionesRow rowsy_ExcepcionesRow = ((sy_ExcepcionesRow)(this.NewRow()));
                rowsy_ExcepcionesRow.ItemArray = new object[] {
                        IdExcepcion,
                        FechaCreacion,
                        Machine,
                        User,
                        Version,
                        AppDomain,
                        CodeBase,
                        Exc_Source,
                        Exc_Type,
                        Exc_Message,
                        Exc_Site,
                        Exc_StackTrace,
                        Exc_InnerException,
                        Exc_HelpLink,
                        Exception,
                        IdConexionCreacion,
                        UltimaModificacion,
                        IdConexionUltimaModificacion,
                        IdReservado,
                        RowId,
                        IdSucursal,
                        IdEmpresa};
                this.Rows.Add(rowsy_ExcepcionesRow);
                return rowsy_ExcepcionesRow;
            }
            
            public sy_ExcepcionesRow FindByIdExcepcion(string IdExcepcion) {
                return ((sy_ExcepcionesRow)(this.Rows.Find(new object[] {
                            IdExcepcion})));
            }
            
            public System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            public override DataTable Clone() {
                sy_ExcepcionesDataTable cln = ((sy_ExcepcionesDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            protected override DataTable CreateInstance() {
                return new sy_ExcepcionesDataTable();
            }
            
            internal void InitVars() {
                this.columnIdExcepcion = this.Columns["IdExcepcion"];
                this.columnFechaCreacion = this.Columns["FechaCreacion"];
                this.columnMachine = this.Columns["Machine"];
                this.columnUser = this.Columns["User"];
                this.columnVersion = this.Columns["Version"];
                this.columnAppDomain = this.Columns["AppDomain"];
                this.columnCodeBase = this.Columns["CodeBase"];
                this.columnExc_Source = this.Columns["Exc_Source"];
                this.columnExc_Type = this.Columns["Exc_Type"];
                this.columnExc_Message = this.Columns["Exc_Message"];
                this.columnExc_Site = this.Columns["Exc_Site"];
                this.columnExc_StackTrace = this.Columns["Exc_StackTrace"];
                this.columnExc_InnerException = this.Columns["Exc_InnerException"];
                this.columnExc_HelpLink = this.Columns["Exc_HelpLink"];
                this.columnException = this.Columns["Exception"];
                this.columnIdConexionCreacion = this.Columns["IdConexionCreacion"];
                this.columnUltimaModificacion = this.Columns["UltimaModificacion"];
                this.columnIdConexionUltimaModificacion = this.Columns["IdConexionUltimaModificacion"];
                this.columnIdReservado = this.Columns["IdReservado"];
                this.columnRowId = this.Columns["RowId"];
                this.columnIdSucursal = this.Columns["IdSucursal"];
                this.columnIdEmpresa = this.Columns["IdEmpresa"];
            }
            
            private void InitClass() {
                this.columnIdExcepcion = new DataColumn("IdExcepcion", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdExcepcion);
                this.columnFechaCreacion = new DataColumn("FechaCreacion", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnFechaCreacion);
                this.columnMachine = new DataColumn("Machine", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnMachine);
                this.columnUser = new DataColumn("User", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnUser);
                this.columnVersion = new DataColumn("Version", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnVersion);
                this.columnAppDomain = new DataColumn("AppDomain", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnAppDomain);
                this.columnCodeBase = new DataColumn("CodeBase", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnCodeBase);
                this.columnExc_Source = new DataColumn("Exc_Source", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnExc_Source);
                this.columnExc_Type = new DataColumn("Exc_Type", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnExc_Type);
                this.columnExc_Message = new DataColumn("Exc_Message", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnExc_Message);
                this.columnExc_Site = new DataColumn("Exc_Site", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnExc_Site);
                this.columnExc_StackTrace = new DataColumn("Exc_StackTrace", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnExc_StackTrace);
                this.columnExc_InnerException = new DataColumn("Exc_InnerException", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnExc_InnerException);
                this.columnExc_HelpLink = new DataColumn("Exc_HelpLink", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnExc_HelpLink);
                this.columnException = new DataColumn("Exception", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnException);
                this.columnIdConexionCreacion = new DataColumn("IdConexionCreacion", typeof(long), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdConexionCreacion);
                this.columnUltimaModificacion = new DataColumn("UltimaModificacion", typeof(System.Byte[]), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnUltimaModificacion);
                this.columnIdConexionUltimaModificacion = new DataColumn("IdConexionUltimaModificacion", typeof(long), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdConexionUltimaModificacion);
                this.columnIdReservado = new DataColumn("IdReservado", typeof(long), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdReservado);
                this.columnRowId = new DataColumn("RowId", typeof(System.Guid), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnRowId);
                this.columnIdSucursal = new DataColumn("IdSucursal", typeof(long), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdSucursal);
                this.columnIdEmpresa = new DataColumn("IdEmpresa", typeof(long), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdEmpresa);
                this.Constraints.Add(new UniqueConstraint("sy_ExcepcionesDatasetKey1", new DataColumn[] {
                                this.columnIdExcepcion}, true));
                this.columnIdExcepcion.AllowDBNull = false;
                this.columnIdExcepcion.Unique = true;
                this.columnMachine.AllowDBNull = false;
                this.columnUser.AllowDBNull = false;
                this.columnVersion.AllowDBNull = false;
                this.columnAppDomain.AllowDBNull = false;
                this.columnCodeBase.AllowDBNull = false;
                this.columnExc_Source.AllowDBNull = false;
                this.columnExc_Type.AllowDBNull = false;
                this.columnExc_Message.AllowDBNull = false;
                this.columnExc_Site.AllowDBNull = false;
                this.columnExc_StackTrace.AllowDBNull = false;
                this.columnExc_InnerException.AllowDBNull = false;
                this.columnException.AllowDBNull = false;
                this.columnUltimaModificacion.ReadOnly = true;
            }
            
            public sy_ExcepcionesRow Newsy_ExcepcionesRow() {
                return ((sy_ExcepcionesRow)(this.NewRow()));
            }
            
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder) {
                return new sy_ExcepcionesRow(builder);
            }
            
            protected override System.Type GetRowType() {
                return typeof(sy_ExcepcionesRow);
            }
            
            protected override void OnRowChanged(DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.sy_ExcepcionesRowChanged != null)) {
                    this.sy_ExcepcionesRowChanged(this, new sy_ExcepcionesRowChangeEvent(((sy_ExcepcionesRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowChanging(DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.sy_ExcepcionesRowChanging != null)) {
                    this.sy_ExcepcionesRowChanging(this, new sy_ExcepcionesRowChangeEvent(((sy_ExcepcionesRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleted(DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.sy_ExcepcionesRowDeleted != null)) {
                    this.sy_ExcepcionesRowDeleted(this, new sy_ExcepcionesRowChangeEvent(((sy_ExcepcionesRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleting(DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.sy_ExcepcionesRowDeleting != null)) {
                    this.sy_ExcepcionesRowDeleting(this, new sy_ExcepcionesRowChangeEvent(((sy_ExcepcionesRow)(e.Row)), e.Action));
                }
            }
            
            public void Removesy_ExcepcionesRow(sy_ExcepcionesRow row) {
                this.Rows.Remove(row);
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class sy_ExcepcionesRow : DataRow {
            
            private sy_ExcepcionesDataTable tablesy_Excepciones;
            
            internal sy_ExcepcionesRow(DataRowBuilder rb) : 
                    base(rb) {
                this.tablesy_Excepciones = ((sy_ExcepcionesDataTable)(this.Table));
            }
            
            public string IdExcepcion {
                get {
                    return ((string)(this[this.tablesy_Excepciones.IdExcepcionColumn]));
                }
                set {
                    this[this.tablesy_Excepciones.IdExcepcionColumn] = value;
                }
            }
            
            public System.DateTime FechaCreacion {
                get {
                    try {
                        return ((System.DateTime)(this[this.tablesy_Excepciones.FechaCreacionColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tablesy_Excepciones.FechaCreacionColumn] = value;
                }
            }
            
            public string Machine {
                get {
                    return ((string)(this[this.tablesy_Excepciones.MachineColumn]));
                }
                set {
                    this[this.tablesy_Excepciones.MachineColumn] = value;
                }
            }
            
            public string User {
                get {
                    return ((string)(this[this.tablesy_Excepciones.UserColumn]));
                }
                set {
                    this[this.tablesy_Excepciones.UserColumn] = value;
                }
            }
            
            public string Version {
                get {
                    return ((string)(this[this.tablesy_Excepciones.VersionColumn]));
                }
                set {
                    this[this.tablesy_Excepciones.VersionColumn] = value;
                }
            }
            
            public string AppDomain {
                get {
                    return ((string)(this[this.tablesy_Excepciones.AppDomainColumn]));
                }
                set {
                    this[this.tablesy_Excepciones.AppDomainColumn] = value;
                }
            }
            
            public string CodeBase {
                get {
                    return ((string)(this[this.tablesy_Excepciones.CodeBaseColumn]));
                }
                set {
                    this[this.tablesy_Excepciones.CodeBaseColumn] = value;
                }
            }
            
            public string Exc_Source {
                get {
                    return ((string)(this[this.tablesy_Excepciones.Exc_SourceColumn]));
                }
                set {
                    this[this.tablesy_Excepciones.Exc_SourceColumn] = value;
                }
            }
            
            public string Exc_Type {
                get {
                    return ((string)(this[this.tablesy_Excepciones.Exc_TypeColumn]));
                }
                set {
                    this[this.tablesy_Excepciones.Exc_TypeColumn] = value;
                }
            }
            
            public string Exc_Message {
                get {
                    return ((string)(this[this.tablesy_Excepciones.Exc_MessageColumn]));
                }
                set {
                    this[this.tablesy_Excepciones.Exc_MessageColumn] = value;
                }
            }
            
            public string Exc_Site {
                get {
                    return ((string)(this[this.tablesy_Excepciones.Exc_SiteColumn]));
                }
                set {
                    this[this.tablesy_Excepciones.Exc_SiteColumn] = value;
                }
            }
            
            public string Exc_StackTrace {
                get {
                    return ((string)(this[this.tablesy_Excepciones.Exc_StackTraceColumn]));
                }
                set {
                    this[this.tablesy_Excepciones.Exc_StackTraceColumn] = value;
                }
            }
            
            public string Exc_InnerException {
                get {
                    return ((string)(this[this.tablesy_Excepciones.Exc_InnerExceptionColumn]));
                }
                set {
                    this[this.tablesy_Excepciones.Exc_InnerExceptionColumn] = value;
                }
            }
            
            public string Exc_HelpLink {
                get {
                    try {
                        return ((string)(this[this.tablesy_Excepciones.Exc_HelpLinkColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tablesy_Excepciones.Exc_HelpLinkColumn] = value;
                }
            }
            
            public string Exception {
                get {
                    return ((string)(this[this.tablesy_Excepciones.ExceptionColumn]));
                }
                set {
                    this[this.tablesy_Excepciones.ExceptionColumn] = value;
                }
            }
            
            public long IdConexionCreacion {
                get {
                    try {
                        return ((long)(this[this.tablesy_Excepciones.IdConexionCreacionColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tablesy_Excepciones.IdConexionCreacionColumn] = value;
                }
            }
            
            public System.Byte[] UltimaModificacion {
                get {
                    try {
                        return ((System.Byte[])(this[this.tablesy_Excepciones.UltimaModificacionColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tablesy_Excepciones.UltimaModificacionColumn] = value;
                }
            }
            
            public long IdConexionUltimaModificacion {
                get {
                    try {
                        return ((long)(this[this.tablesy_Excepciones.IdConexionUltimaModificacionColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tablesy_Excepciones.IdConexionUltimaModificacionColumn] = value;
                }
            }
            
            public long IdReservado {
                get {
                    try {
                        return ((long)(this[this.tablesy_Excepciones.IdReservadoColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tablesy_Excepciones.IdReservadoColumn] = value;
                }
            }
            
            public System.Guid RowId {
                get {
                    try {
                        return ((System.Guid)(this[this.tablesy_Excepciones.RowIdColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tablesy_Excepciones.RowIdColumn] = value;
                }
            }
            
            public long IdSucursal {
                get {
                    try {
                        return ((long)(this[this.tablesy_Excepciones.IdSucursalColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tablesy_Excepciones.IdSucursalColumn] = value;
                }
            }
            
            public long IdEmpresa {
                get {
                    try {
                        return ((long)(this[this.tablesy_Excepciones.IdEmpresaColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tablesy_Excepciones.IdEmpresaColumn] = value;
                }
            }
            
            public bool IsFechaCreacionNull() {
                return this.IsNull(this.tablesy_Excepciones.FechaCreacionColumn);
            }
            
            public void SetFechaCreacionNull() {
                this[this.tablesy_Excepciones.FechaCreacionColumn] = System.Convert.DBNull;
            }
            
            public bool IsExc_HelpLinkNull() {
                return this.IsNull(this.tablesy_Excepciones.Exc_HelpLinkColumn);
            }
            
            public void SetExc_HelpLinkNull() {
                this[this.tablesy_Excepciones.Exc_HelpLinkColumn] = System.Convert.DBNull;
            }
            
            public bool IsIdConexionCreacionNull() {
                return this.IsNull(this.tablesy_Excepciones.IdConexionCreacionColumn);
            }
            
            public void SetIdConexionCreacionNull() {
                this[this.tablesy_Excepciones.IdConexionCreacionColumn] = System.Convert.DBNull;
            }
            
            public bool IsUltimaModificacionNull() {
                return this.IsNull(this.tablesy_Excepciones.UltimaModificacionColumn);
            }
            
            public void SetUltimaModificacionNull() {
                this[this.tablesy_Excepciones.UltimaModificacionColumn] = System.Convert.DBNull;
            }
            
            public bool IsIdConexionUltimaModificacionNull() {
                return this.IsNull(this.tablesy_Excepciones.IdConexionUltimaModificacionColumn);
            }
            
            public void SetIdConexionUltimaModificacionNull() {
                this[this.tablesy_Excepciones.IdConexionUltimaModificacionColumn] = System.Convert.DBNull;
            }
            
            public bool IsIdReservadoNull() {
                return this.IsNull(this.tablesy_Excepciones.IdReservadoColumn);
            }
            
            public void SetIdReservadoNull() {
                this[this.tablesy_Excepciones.IdReservadoColumn] = System.Convert.DBNull;
            }
            
            public bool IsRowIdNull() {
                return this.IsNull(this.tablesy_Excepciones.RowIdColumn);
            }
            
            public void SetRowIdNull() {
                this[this.tablesy_Excepciones.RowIdColumn] = System.Convert.DBNull;
            }
            
            public bool IsIdSucursalNull() {
                return this.IsNull(this.tablesy_Excepciones.IdSucursalColumn);
            }
            
            public void SetIdSucursalNull() {
                this[this.tablesy_Excepciones.IdSucursalColumn] = System.Convert.DBNull;
            }
            
            public bool IsIdEmpresaNull() {
                return this.IsNull(this.tablesy_Excepciones.IdEmpresaColumn);
            }
            
            public void SetIdEmpresaNull() {
                this[this.tablesy_Excepciones.IdEmpresaColumn] = System.Convert.DBNull;
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class sy_ExcepcionesRowChangeEvent : EventArgs {
            
            private sy_ExcepcionesRow eventRow;
            
            private DataRowAction eventAction;
            
            public sy_ExcepcionesRowChangeEvent(sy_ExcepcionesRow row, DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            public sy_ExcepcionesRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            public DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
