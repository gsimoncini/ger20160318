//------------------------------------------------------------------------------
// <autogenerated>
//     This code was generated by a tool.
//     Runtime Version: 1.1.4322.2407
//
//     Changes to this file may cause incorrect behavior and will be lost if 
//     the code is regenerated.
// </autogenerated>
//------------------------------------------------------------------------------

namespace mz.erp.commontypes.data {
    using System;
    using System.Data;
    using System.Xml;
    using System.Runtime.Serialization;
    
    
    [Serializable()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Diagnostics.DebuggerStepThrough()]
    [System.ComponentModel.ToolboxItem(true)]
    public class tsa_ComprobantesDataset : DataSet {
        
        private tsa_ComprobantesDataTable tabletsa_Comprobantes;
        
        public tsa_ComprobantesDataset() {
            this.InitClass();
            System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            this.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        protected tsa_ComprobantesDataset(SerializationInfo info, StreamingContext context) {
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((strSchema != null)) {
                DataSet ds = new DataSet();
                ds.ReadXmlSchema(new XmlTextReader(new System.IO.StringReader(strSchema)));
                if ((ds.Tables["tsa_Comprobantes"] != null)) {
                    this.Tables.Add(new tsa_ComprobantesDataTable(ds.Tables["tsa_Comprobantes"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.InitClass();
            }
            this.GetSerializationData(info, context);
            System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            this.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public tsa_ComprobantesDataTable tsa_Comprobantes {
            get {
                return this.tabletsa_Comprobantes;
            }
        }
        
        public override DataSet Clone() {
            tsa_ComprobantesDataset cln = ((tsa_ComprobantesDataset)(base.Clone()));
            cln.InitVars();
            return cln;
        }
        
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        protected override void ReadXmlSerializable(XmlReader reader) {
            this.Reset();
            DataSet ds = new DataSet();
            ds.ReadXml(reader);
            if ((ds.Tables["tsa_Comprobantes"] != null)) {
                this.Tables.Add(new tsa_ComprobantesDataTable(ds.Tables["tsa_Comprobantes"]));
            }
            this.DataSetName = ds.DataSetName;
            this.Prefix = ds.Prefix;
            this.Namespace = ds.Namespace;
            this.Locale = ds.Locale;
            this.CaseSensitive = ds.CaseSensitive;
            this.EnforceConstraints = ds.EnforceConstraints;
            this.Merge(ds, false, System.Data.MissingSchemaAction.Add);
            this.InitVars();
        }
        
        protected override System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            System.IO.MemoryStream stream = new System.IO.MemoryStream();
            this.WriteXmlSchema(new XmlTextWriter(stream, null));
            stream.Position = 0;
            return System.Xml.Schema.XmlSchema.Read(new XmlTextReader(stream), null);
        }
        
        internal void InitVars() {
            this.tabletsa_Comprobantes = ((tsa_ComprobantesDataTable)(this.Tables["tsa_Comprobantes"]));
            if ((this.tabletsa_Comprobantes != null)) {
                this.tabletsa_Comprobantes.InitVars();
            }
        }
        
        private void InitClass() {
            this.DataSetName = "tsa_ComprobantesDataset";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/tsa_Comprobantes.xsd";
            this.Locale = new System.Globalization.CultureInfo("en-US");
            this.CaseSensitive = false;
            this.EnforceConstraints = true;
            this.tabletsa_Comprobantes = new tsa_ComprobantesDataTable();
            this.Tables.Add(this.tabletsa_Comprobantes);
        }
        
        private bool ShouldSerializetsa_Comprobantes() {
            return false;
        }
        
        private void SchemaChanged(object sender, System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        public delegate void tsa_ComprobantesRowChangeEventHandler(object sender, tsa_ComprobantesRowChangeEvent e);
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class tsa_ComprobantesDataTable : DataTable, System.Collections.IEnumerable {
            
            private DataColumn columnIdComprobante;
            
            private DataColumn columnIdEmpresa;
            
            private DataColumn columnIdSucursal;
            
            private DataColumn columnIdInstanciaCaja;
            
            private DataColumn columnIdTipoDeComprobante;
            
            private DataColumn columnNumero;
            
            private DataColumn columnFecha;
            
            private DataColumn columnIdCuenta;
            
            private DataColumn columnIdResponsable;
            
            private DataColumn columnTotal;
            
            private DataColumn columnIdMonedaCierre;
            
            private DataColumn columnIdCotizacionCierre;
            
            private DataColumn columnFechaCreacion;
            
            private DataColumn columnIdConexionCreacion;
            
            private DataColumn columnUltimaModificacion;
            
            private DataColumn columnIdConexionUltimaModificacion;
            
            private DataColumn columnIdReservado;
            
            private DataColumn columnRowId;
            
            private DataColumn columnIdGenerado;
            
            private DataColumn columnRowIdGenerado;
            
            private DataColumn columnCliente;
            
            private DataColumn columnDomicilio;
            
            private DataColumn columnTipoDocumento;
            
            private DataColumn columnDocumento;
            
            private DataColumn columnObservaciones;
            
            private DataColumn columnAux1;
            
            private DataColumn columnAux2;
            
            private DataColumn columnAux3;
            
            private DataColumn columnIdCondicionDeVenta;
            
            private DataColumn columnCampoAuxiliar1;
            
            private DataColumn columnCampoAuxiliar2;
            
            private DataColumn columnCampoAuxiliar3;
            
            private DataColumn columnCampoAuxiliar4;
            
            private DataColumn columnCampoAuxiliar5;
            
            private DataColumn columnIdCotizacionCierreDolarOficial;
            
            internal tsa_ComprobantesDataTable() : 
                    base("tsa_Comprobantes") {
                this.InitClass();
            }
            
            internal tsa_ComprobantesDataTable(DataTable table) : 
                    base(table.TableName) {
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
                this.DisplayExpression = table.DisplayExpression;
            }
            
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            internal DataColumn IdComprobanteColumn {
                get {
                    return this.columnIdComprobante;
                }
            }
            
            internal DataColumn IdEmpresaColumn {
                get {
                    return this.columnIdEmpresa;
                }
            }
            
            internal DataColumn IdSucursalColumn {
                get {
                    return this.columnIdSucursal;
                }
            }
            
            internal DataColumn IdInstanciaCajaColumn {
                get {
                    return this.columnIdInstanciaCaja;
                }
            }
            
            internal DataColumn IdTipoDeComprobanteColumn {
                get {
                    return this.columnIdTipoDeComprobante;
                }
            }
            
            internal DataColumn NumeroColumn {
                get {
                    return this.columnNumero;
                }
            }
            
            internal DataColumn FechaColumn {
                get {
                    return this.columnFecha;
                }
            }
            
            internal DataColumn IdCuentaColumn {
                get {
                    return this.columnIdCuenta;
                }
            }
            
            internal DataColumn IdResponsableColumn {
                get {
                    return this.columnIdResponsable;
                }
            }
            
            internal DataColumn TotalColumn {
                get {
                    return this.columnTotal;
                }
            }
            
            internal DataColumn IdMonedaCierreColumn {
                get {
                    return this.columnIdMonedaCierre;
                }
            }
            
            internal DataColumn IdCotizacionCierreColumn {
                get {
                    return this.columnIdCotizacionCierre;
                }
            }
            
            internal DataColumn FechaCreacionColumn {
                get {
                    return this.columnFechaCreacion;
                }
            }
            
            internal DataColumn IdConexionCreacionColumn {
                get {
                    return this.columnIdConexionCreacion;
                }
            }
            
            internal DataColumn UltimaModificacionColumn {
                get {
                    return this.columnUltimaModificacion;
                }
            }
            
            internal DataColumn IdConexionUltimaModificacionColumn {
                get {
                    return this.columnIdConexionUltimaModificacion;
                }
            }
            
            internal DataColumn IdReservadoColumn {
                get {
                    return this.columnIdReservado;
                }
            }
            
            internal DataColumn RowIdColumn {
                get {
                    return this.columnRowId;
                }
            }
            
            internal DataColumn IdGeneradoColumn {
                get {
                    return this.columnIdGenerado;
                }
            }
            
            internal DataColumn RowIdGeneradoColumn {
                get {
                    return this.columnRowIdGenerado;
                }
            }
            
            internal DataColumn ClienteColumn {
                get {
                    return this.columnCliente;
                }
            }
            
            internal DataColumn DomicilioColumn {
                get {
                    return this.columnDomicilio;
                }
            }
            
            internal DataColumn TipoDocumentoColumn {
                get {
                    return this.columnTipoDocumento;
                }
            }
            
            internal DataColumn DocumentoColumn {
                get {
                    return this.columnDocumento;
                }
            }
            
            internal DataColumn ObservacionesColumn {
                get {
                    return this.columnObservaciones;
                }
            }
            
            internal DataColumn Aux1Column {
                get {
                    return this.columnAux1;
                }
            }
            
            internal DataColumn Aux2Column {
                get {
                    return this.columnAux2;
                }
            }
            
            internal DataColumn Aux3Column {
                get {
                    return this.columnAux3;
                }
            }
            
            internal DataColumn IdCondicionDeVentaColumn {
                get {
                    return this.columnIdCondicionDeVenta;
                }
            }
            
            internal DataColumn CampoAuxiliar1Column {
                get {
                    return this.columnCampoAuxiliar1;
                }
            }
            
            internal DataColumn CampoAuxiliar2Column {
                get {
                    return this.columnCampoAuxiliar2;
                }
            }
            
            internal DataColumn CampoAuxiliar3Column {
                get {
                    return this.columnCampoAuxiliar3;
                }
            }
            
            internal DataColumn CampoAuxiliar4Column {
                get {
                    return this.columnCampoAuxiliar4;
                }
            }
            
            internal DataColumn CampoAuxiliar5Column {
                get {
                    return this.columnCampoAuxiliar5;
                }
            }
            
            internal DataColumn IdCotizacionCierreDolarOficialColumn {
                get {
                    return this.columnIdCotizacionCierreDolarOficial;
                }
            }
            
            public tsa_ComprobantesRow this[int index] {
                get {
                    return ((tsa_ComprobantesRow)(this.Rows[index]));
                }
            }
            
            public event tsa_ComprobantesRowChangeEventHandler tsa_ComprobantesRowChanged;
            
            public event tsa_ComprobantesRowChangeEventHandler tsa_ComprobantesRowChanging;
            
            public event tsa_ComprobantesRowChangeEventHandler tsa_ComprobantesRowDeleted;
            
            public event tsa_ComprobantesRowChangeEventHandler tsa_ComprobantesRowDeleting;
            
            public void Addtsa_ComprobantesRow(tsa_ComprobantesRow row) {
                this.Rows.Add(row);
            }
            
            public tsa_ComprobantesRow Addtsa_ComprobantesRow(
                        string IdComprobante, 
                        long IdEmpresa, 
                        long IdSucursal, 
                        string IdInstanciaCaja, 
                        string IdTipoDeComprobante, 
                        string Numero, 
                        System.DateTime Fecha, 
                        string IdCuenta, 
                        string IdResponsable, 
                        System.Decimal Total, 
                        string IdMonedaCierre, 
                        string IdCotizacionCierre, 
                        System.DateTime FechaCreacion, 
                        long IdConexionCreacion, 
                        System.Byte[] UltimaModificacion, 
                        long IdConexionUltimaModificacion, 
                        long IdReservado, 
                        System.Guid RowId, 
                        string IdGenerado, 
                        string RowIdGenerado, 
                        string Cliente, 
                        string Domicilio, 
                        string TipoDocumento, 
                        string Documento, 
                        string Observaciones, 
                        string Aux1, 
                        string Aux2, 
                        string Aux3, 
                        string IdCondicionDeVenta, 
                        string CampoAuxiliar1, 
                        string CampoAuxiliar2, 
                        string CampoAuxiliar3, 
                        string CampoAuxiliar4, 
                        string CampoAuxiliar5, 
                        string IdCotizacionCierreDolarOficial) {
                tsa_ComprobantesRow rowtsa_ComprobantesRow = ((tsa_ComprobantesRow)(this.NewRow()));
                rowtsa_ComprobantesRow.ItemArray = new object[] {
                        IdComprobante,
                        IdEmpresa,
                        IdSucursal,
                        IdInstanciaCaja,
                        IdTipoDeComprobante,
                        Numero,
                        Fecha,
                        IdCuenta,
                        IdResponsable,
                        Total,
                        IdMonedaCierre,
                        IdCotizacionCierre,
                        FechaCreacion,
                        IdConexionCreacion,
                        UltimaModificacion,
                        IdConexionUltimaModificacion,
                        IdReservado,
                        RowId,
                        IdGenerado,
                        RowIdGenerado,
                        Cliente,
                        Domicilio,
                        TipoDocumento,
                        Documento,
                        Observaciones,
                        Aux1,
                        Aux2,
                        Aux3,
                        IdCondicionDeVenta,
                        CampoAuxiliar1,
                        CampoAuxiliar2,
                        CampoAuxiliar3,
                        CampoAuxiliar4,
                        CampoAuxiliar5,
                        IdCotizacionCierreDolarOficial};
                this.Rows.Add(rowtsa_ComprobantesRow);
                return rowtsa_ComprobantesRow;
            }
            
            public tsa_ComprobantesRow FindByIdComprobante(string IdComprobante) {
                return ((tsa_ComprobantesRow)(this.Rows.Find(new object[] {
                            IdComprobante})));
            }
            
            public System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            public override DataTable Clone() {
                tsa_ComprobantesDataTable cln = ((tsa_ComprobantesDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            protected override DataTable CreateInstance() {
                return new tsa_ComprobantesDataTable();
            }
            
            internal void InitVars() {
                this.columnIdComprobante = this.Columns["IdComprobante"];
                this.columnIdEmpresa = this.Columns["IdEmpresa"];
                this.columnIdSucursal = this.Columns["IdSucursal"];
                this.columnIdInstanciaCaja = this.Columns["IdInstanciaCaja"];
                this.columnIdTipoDeComprobante = this.Columns["IdTipoDeComprobante"];
                this.columnNumero = this.Columns["Numero"];
                this.columnFecha = this.Columns["Fecha"];
                this.columnIdCuenta = this.Columns["IdCuenta"];
                this.columnIdResponsable = this.Columns["IdResponsable"];
                this.columnTotal = this.Columns["Total"];
                this.columnIdMonedaCierre = this.Columns["IdMonedaCierre"];
                this.columnIdCotizacionCierre = this.Columns["IdCotizacionCierre"];
                this.columnFechaCreacion = this.Columns["FechaCreacion"];
                this.columnIdConexionCreacion = this.Columns["IdConexionCreacion"];
                this.columnUltimaModificacion = this.Columns["UltimaModificacion"];
                this.columnIdConexionUltimaModificacion = this.Columns["IdConexionUltimaModificacion"];
                this.columnIdReservado = this.Columns["IdReservado"];
                this.columnRowId = this.Columns["RowId"];
                this.columnIdGenerado = this.Columns["IdGenerado"];
                this.columnRowIdGenerado = this.Columns["RowIdGenerado"];
                this.columnCliente = this.Columns["Cliente"];
                this.columnDomicilio = this.Columns["Domicilio"];
                this.columnTipoDocumento = this.Columns["TipoDocumento"];
                this.columnDocumento = this.Columns["Documento"];
                this.columnObservaciones = this.Columns["Observaciones"];
                this.columnAux1 = this.Columns["Aux1"];
                this.columnAux2 = this.Columns["Aux2"];
                this.columnAux3 = this.Columns["Aux3"];
                this.columnIdCondicionDeVenta = this.Columns["IdCondicionDeVenta"];
                this.columnCampoAuxiliar1 = this.Columns["CampoAuxiliar1"];
                this.columnCampoAuxiliar2 = this.Columns["CampoAuxiliar2"];
                this.columnCampoAuxiliar3 = this.Columns["CampoAuxiliar3"];
                this.columnCampoAuxiliar4 = this.Columns["CampoAuxiliar4"];
                this.columnCampoAuxiliar5 = this.Columns["CampoAuxiliar5"];
                this.columnIdCotizacionCierreDolarOficial = this.Columns["IdCotizacionCierreDolarOficial"];
            }
            
            private void InitClass() {
                this.columnIdComprobante = new DataColumn("IdComprobante", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdComprobante);
                this.columnIdEmpresa = new DataColumn("IdEmpresa", typeof(long), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdEmpresa);
                this.columnIdSucursal = new DataColumn("IdSucursal", typeof(long), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdSucursal);
                this.columnIdInstanciaCaja = new DataColumn("IdInstanciaCaja", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdInstanciaCaja);
                this.columnIdTipoDeComprobante = new DataColumn("IdTipoDeComprobante", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdTipoDeComprobante);
                this.columnNumero = new DataColumn("Numero", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnNumero);
                this.columnFecha = new DataColumn("Fecha", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnFecha);
                this.columnIdCuenta = new DataColumn("IdCuenta", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdCuenta);
                this.columnIdResponsable = new DataColumn("IdResponsable", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdResponsable);
                this.columnTotal = new DataColumn("Total", typeof(System.Decimal), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnTotal);
                this.columnIdMonedaCierre = new DataColumn("IdMonedaCierre", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdMonedaCierre);
                this.columnIdCotizacionCierre = new DataColumn("IdCotizacionCierre", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdCotizacionCierre);
                this.columnFechaCreacion = new DataColumn("FechaCreacion", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnFechaCreacion);
                this.columnIdConexionCreacion = new DataColumn("IdConexionCreacion", typeof(long), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdConexionCreacion);
                this.columnUltimaModificacion = new DataColumn("UltimaModificacion", typeof(System.Byte[]), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnUltimaModificacion);
                this.columnIdConexionUltimaModificacion = new DataColumn("IdConexionUltimaModificacion", typeof(long), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdConexionUltimaModificacion);
                this.columnIdReservado = new DataColumn("IdReservado", typeof(long), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdReservado);
                this.columnRowId = new DataColumn("RowId", typeof(System.Guid), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnRowId);
                this.columnIdGenerado = new DataColumn("IdGenerado", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdGenerado);
                this.columnRowIdGenerado = new DataColumn("RowIdGenerado", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnRowIdGenerado);
                this.columnCliente = new DataColumn("Cliente", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnCliente);
                this.columnDomicilio = new DataColumn("Domicilio", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnDomicilio);
                this.columnTipoDocumento = new DataColumn("TipoDocumento", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnTipoDocumento);
                this.columnDocumento = new DataColumn("Documento", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnDocumento);
                this.columnObservaciones = new DataColumn("Observaciones", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnObservaciones);
                this.columnAux1 = new DataColumn("Aux1", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnAux1);
                this.columnAux2 = new DataColumn("Aux2", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnAux2);
                this.columnAux3 = new DataColumn("Aux3", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnAux3);
                this.columnIdCondicionDeVenta = new DataColumn("IdCondicionDeVenta", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdCondicionDeVenta);
                this.columnCampoAuxiliar1 = new DataColumn("CampoAuxiliar1", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnCampoAuxiliar1);
                this.columnCampoAuxiliar2 = new DataColumn("CampoAuxiliar2", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnCampoAuxiliar2);
                this.columnCampoAuxiliar3 = new DataColumn("CampoAuxiliar3", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnCampoAuxiliar3);
                this.columnCampoAuxiliar4 = new DataColumn("CampoAuxiliar4", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnCampoAuxiliar4);
                this.columnCampoAuxiliar5 = new DataColumn("CampoAuxiliar5", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnCampoAuxiliar5);
                this.columnIdCotizacionCierreDolarOficial = new DataColumn("IdCotizacionCierreDolarOficial", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdCotizacionCierreDolarOficial);
                this.Constraints.Add(new UniqueConstraint("tsa_ComprobantesKey1", new DataColumn[] {
                                this.columnIdComprobante}, true));
                this.columnIdComprobante.AllowDBNull = false;
                this.columnIdComprobante.Unique = true;
                this.columnUltimaModificacion.ReadOnly = true;
            }
            
            public tsa_ComprobantesRow Newtsa_ComprobantesRow() {
                return ((tsa_ComprobantesRow)(this.NewRow()));
            }
            
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder) {
                return new tsa_ComprobantesRow(builder);
            }
            
            protected override System.Type GetRowType() {
                return typeof(tsa_ComprobantesRow);
            }
            
            protected override void OnRowChanged(DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.tsa_ComprobantesRowChanged != null)) {
                    this.tsa_ComprobantesRowChanged(this, new tsa_ComprobantesRowChangeEvent(((tsa_ComprobantesRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowChanging(DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.tsa_ComprobantesRowChanging != null)) {
                    this.tsa_ComprobantesRowChanging(this, new tsa_ComprobantesRowChangeEvent(((tsa_ComprobantesRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleted(DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.tsa_ComprobantesRowDeleted != null)) {
                    this.tsa_ComprobantesRowDeleted(this, new tsa_ComprobantesRowChangeEvent(((tsa_ComprobantesRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleting(DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.tsa_ComprobantesRowDeleting != null)) {
                    this.tsa_ComprobantesRowDeleting(this, new tsa_ComprobantesRowChangeEvent(((tsa_ComprobantesRow)(e.Row)), e.Action));
                }
            }
            
            public void Removetsa_ComprobantesRow(tsa_ComprobantesRow row) {
                this.Rows.Remove(row);
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class tsa_ComprobantesRow : DataRow {
            
            private tsa_ComprobantesDataTable tabletsa_Comprobantes;
            
            internal tsa_ComprobantesRow(DataRowBuilder rb) : 
                    base(rb) {
                this.tabletsa_Comprobantes = ((tsa_ComprobantesDataTable)(this.Table));
            }
            
            public string IdComprobante {
                get {
                    return ((string)(this[this.tabletsa_Comprobantes.IdComprobanteColumn]));
                }
                set {
                    this[this.tabletsa_Comprobantes.IdComprobanteColumn] = value;
                }
            }
            
            public long IdEmpresa {
                get {
                    try {
                        return ((long)(this[this.tabletsa_Comprobantes.IdEmpresaColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletsa_Comprobantes.IdEmpresaColumn] = value;
                }
            }
            
            public long IdSucursal {
                get {
                    try {
                        return ((long)(this[this.tabletsa_Comprobantes.IdSucursalColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletsa_Comprobantes.IdSucursalColumn] = value;
                }
            }
            
            public string IdInstanciaCaja {
                get {
                    try {
                        return ((string)(this[this.tabletsa_Comprobantes.IdInstanciaCajaColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletsa_Comprobantes.IdInstanciaCajaColumn] = value;
                }
            }
            
            public string IdTipoDeComprobante {
                get {
                    try {
                        return ((string)(this[this.tabletsa_Comprobantes.IdTipoDeComprobanteColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletsa_Comprobantes.IdTipoDeComprobanteColumn] = value;
                }
            }
            
            public string Numero {
                get {
                    try {
                        return ((string)(this[this.tabletsa_Comprobantes.NumeroColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletsa_Comprobantes.NumeroColumn] = value;
                }
            }
            
            public System.DateTime Fecha {
                get {
                    try {
                        return ((System.DateTime)(this[this.tabletsa_Comprobantes.FechaColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletsa_Comprobantes.FechaColumn] = value;
                }
            }
            
            public string IdCuenta {
                get {
                    try {
                        return ((string)(this[this.tabletsa_Comprobantes.IdCuentaColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletsa_Comprobantes.IdCuentaColumn] = value;
                }
            }
            
            public string IdResponsable {
                get {
                    try {
                        return ((string)(this[this.tabletsa_Comprobantes.IdResponsableColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletsa_Comprobantes.IdResponsableColumn] = value;
                }
            }
            
            public System.Decimal Total {
                get {
                    try {
                        return ((System.Decimal)(this[this.tabletsa_Comprobantes.TotalColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletsa_Comprobantes.TotalColumn] = value;
                }
            }
            
            public string IdMonedaCierre {
                get {
                    try {
                        return ((string)(this[this.tabletsa_Comprobantes.IdMonedaCierreColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletsa_Comprobantes.IdMonedaCierreColumn] = value;
                }
            }
            
            public string IdCotizacionCierre {
                get {
                    try {
                        return ((string)(this[this.tabletsa_Comprobantes.IdCotizacionCierreColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletsa_Comprobantes.IdCotizacionCierreColumn] = value;
                }
            }
            
            public System.DateTime FechaCreacion {
                get {
                    try {
                        return ((System.DateTime)(this[this.tabletsa_Comprobantes.FechaCreacionColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletsa_Comprobantes.FechaCreacionColumn] = value;
                }
            }
            
            public long IdConexionCreacion {
                get {
                    try {
                        return ((long)(this[this.tabletsa_Comprobantes.IdConexionCreacionColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletsa_Comprobantes.IdConexionCreacionColumn] = value;
                }
            }
            
            public System.Byte[] UltimaModificacion {
                get {
                    try {
                        return ((System.Byte[])(this[this.tabletsa_Comprobantes.UltimaModificacionColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletsa_Comprobantes.UltimaModificacionColumn] = value;
                }
            }
            
            public long IdConexionUltimaModificacion {
                get {
                    try {
                        return ((long)(this[this.tabletsa_Comprobantes.IdConexionUltimaModificacionColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletsa_Comprobantes.IdConexionUltimaModificacionColumn] = value;
                }
            }
            
            public long IdReservado {
                get {
                    try {
                        return ((long)(this[this.tabletsa_Comprobantes.IdReservadoColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletsa_Comprobantes.IdReservadoColumn] = value;
                }
            }
            
            public System.Guid RowId {
                get {
                    try {
                        return ((System.Guid)(this[this.tabletsa_Comprobantes.RowIdColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletsa_Comprobantes.RowIdColumn] = value;
                }
            }
            
            public string IdGenerado {
                get {
                    try {
                        return ((string)(this[this.tabletsa_Comprobantes.IdGeneradoColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletsa_Comprobantes.IdGeneradoColumn] = value;
                }
            }
            
            public string RowIdGenerado {
                get {
                    try {
                        return ((string)(this[this.tabletsa_Comprobantes.RowIdGeneradoColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletsa_Comprobantes.RowIdGeneradoColumn] = value;
                }
            }
            
            public string Cliente {
                get {
                    try {
                        return ((string)(this[this.tabletsa_Comprobantes.ClienteColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletsa_Comprobantes.ClienteColumn] = value;
                }
            }
            
            public string Domicilio {
                get {
                    try {
                        return ((string)(this[this.tabletsa_Comprobantes.DomicilioColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletsa_Comprobantes.DomicilioColumn] = value;
                }
            }
            
            public string TipoDocumento {
                get {
                    try {
                        return ((string)(this[this.tabletsa_Comprobantes.TipoDocumentoColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletsa_Comprobantes.TipoDocumentoColumn] = value;
                }
            }
            
            public string Documento {
                get {
                    try {
                        return ((string)(this[this.tabletsa_Comprobantes.DocumentoColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletsa_Comprobantes.DocumentoColumn] = value;
                }
            }
            
            public string Observaciones {
                get {
                    try {
                        return ((string)(this[this.tabletsa_Comprobantes.ObservacionesColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletsa_Comprobantes.ObservacionesColumn] = value;
                }
            }
            
            public string Aux1 {
                get {
                    try {
                        return ((string)(this[this.tabletsa_Comprobantes.Aux1Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletsa_Comprobantes.Aux1Column] = value;
                }
            }
            
            public string Aux2 {
                get {
                    try {
                        return ((string)(this[this.tabletsa_Comprobantes.Aux2Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletsa_Comprobantes.Aux2Column] = value;
                }
            }
            
            public string Aux3 {
                get {
                    try {
                        return ((string)(this[this.tabletsa_Comprobantes.Aux3Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletsa_Comprobantes.Aux3Column] = value;
                }
            }
            
            public string IdCondicionDeVenta {
                get {
                    if (this.IsIdCondicionDeVentaNull()) {
                        return null;
                    }
                    else {
                        return ((string)(this[this.tabletsa_Comprobantes.IdCondicionDeVentaColumn]));
                    }
                }
                set {
                    this[this.tabletsa_Comprobantes.IdCondicionDeVentaColumn] = value;
                }
            }
            
            public string CampoAuxiliar1 {
                get {
                    try {
                        return ((string)(this[this.tabletsa_Comprobantes.CampoAuxiliar1Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletsa_Comprobantes.CampoAuxiliar1Column] = value;
                }
            }
            
            public string CampoAuxiliar2 {
                get {
                    try {
                        return ((string)(this[this.tabletsa_Comprobantes.CampoAuxiliar2Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletsa_Comprobantes.CampoAuxiliar2Column] = value;
                }
            }
            
            public string CampoAuxiliar3 {
                get {
                    try {
                        return ((string)(this[this.tabletsa_Comprobantes.CampoAuxiliar3Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletsa_Comprobantes.CampoAuxiliar3Column] = value;
                }
            }
            
            public string CampoAuxiliar4 {
                get {
                    try {
                        return ((string)(this[this.tabletsa_Comprobantes.CampoAuxiliar4Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletsa_Comprobantes.CampoAuxiliar4Column] = value;
                }
            }
            
            public string CampoAuxiliar5 {
                get {
                    try {
                        return ((string)(this[this.tabletsa_Comprobantes.CampoAuxiliar5Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletsa_Comprobantes.CampoAuxiliar5Column] = value;
                }
            }
            
            public string IdCotizacionCierreDolarOficial {
                get {
                    try {
                        return ((string)(this[this.tabletsa_Comprobantes.IdCotizacionCierreDolarOficialColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletsa_Comprobantes.IdCotizacionCierreDolarOficialColumn] = value;
                }
            }
            
            public bool IsIdEmpresaNull() {
                return this.IsNull(this.tabletsa_Comprobantes.IdEmpresaColumn);
            }
            
            public void SetIdEmpresaNull() {
                this[this.tabletsa_Comprobantes.IdEmpresaColumn] = System.Convert.DBNull;
            }
            
            public bool IsIdSucursalNull() {
                return this.IsNull(this.tabletsa_Comprobantes.IdSucursalColumn);
            }
            
            public void SetIdSucursalNull() {
                this[this.tabletsa_Comprobantes.IdSucursalColumn] = System.Convert.DBNull;
            }
            
            public bool IsIdInstanciaCajaNull() {
                return this.IsNull(this.tabletsa_Comprobantes.IdInstanciaCajaColumn);
            }
            
            public void SetIdInstanciaCajaNull() {
                this[this.tabletsa_Comprobantes.IdInstanciaCajaColumn] = System.Convert.DBNull;
            }
            
            public bool IsIdTipoDeComprobanteNull() {
                return this.IsNull(this.tabletsa_Comprobantes.IdTipoDeComprobanteColumn);
            }
            
            public void SetIdTipoDeComprobanteNull() {
                this[this.tabletsa_Comprobantes.IdTipoDeComprobanteColumn] = System.Convert.DBNull;
            }
            
            public bool IsNumeroNull() {
                return this.IsNull(this.tabletsa_Comprobantes.NumeroColumn);
            }
            
            public void SetNumeroNull() {
                this[this.tabletsa_Comprobantes.NumeroColumn] = System.Convert.DBNull;
            }
            
            public bool IsFechaNull() {
                return this.IsNull(this.tabletsa_Comprobantes.FechaColumn);
            }
            
            public void SetFechaNull() {
                this[this.tabletsa_Comprobantes.FechaColumn] = System.Convert.DBNull;
            }
            
            public bool IsIdCuentaNull() {
                return this.IsNull(this.tabletsa_Comprobantes.IdCuentaColumn);
            }
            
            public void SetIdCuentaNull() {
                this[this.tabletsa_Comprobantes.IdCuentaColumn] = System.Convert.DBNull;
            }
            
            public bool IsIdResponsableNull() {
                return this.IsNull(this.tabletsa_Comprobantes.IdResponsableColumn);
            }
            
            public void SetIdResponsableNull() {
                this[this.tabletsa_Comprobantes.IdResponsableColumn] = System.Convert.DBNull;
            }
            
            public bool IsTotalNull() {
                return this.IsNull(this.tabletsa_Comprobantes.TotalColumn);
            }
            
            public void SetTotalNull() {
                this[this.tabletsa_Comprobantes.TotalColumn] = System.Convert.DBNull;
            }
            
            public bool IsIdMonedaCierreNull() {
                return this.IsNull(this.tabletsa_Comprobantes.IdMonedaCierreColumn);
            }
            
            public void SetIdMonedaCierreNull() {
                this[this.tabletsa_Comprobantes.IdMonedaCierreColumn] = System.Convert.DBNull;
            }
            
            public bool IsIdCotizacionCierreNull() {
                return this.IsNull(this.tabletsa_Comprobantes.IdCotizacionCierreColumn);
            }
            
            public void SetIdCotizacionCierreNull() {
                this[this.tabletsa_Comprobantes.IdCotizacionCierreColumn] = System.Convert.DBNull;
            }
            
            public bool IsFechaCreacionNull() {
                return this.IsNull(this.tabletsa_Comprobantes.FechaCreacionColumn);
            }
            
            public void SetFechaCreacionNull() {
                this[this.tabletsa_Comprobantes.FechaCreacionColumn] = System.Convert.DBNull;
            }
            
            public bool IsIdConexionCreacionNull() {
                return this.IsNull(this.tabletsa_Comprobantes.IdConexionCreacionColumn);
            }
            
            public void SetIdConexionCreacionNull() {
                this[this.tabletsa_Comprobantes.IdConexionCreacionColumn] = System.Convert.DBNull;
            }
            
            public bool IsUltimaModificacionNull() {
                return this.IsNull(this.tabletsa_Comprobantes.UltimaModificacionColumn);
            }
            
            public void SetUltimaModificacionNull() {
                this[this.tabletsa_Comprobantes.UltimaModificacionColumn] = System.Convert.DBNull;
            }
            
            public bool IsIdConexionUltimaModificacionNull() {
                return this.IsNull(this.tabletsa_Comprobantes.IdConexionUltimaModificacionColumn);
            }
            
            public void SetIdConexionUltimaModificacionNull() {
                this[this.tabletsa_Comprobantes.IdConexionUltimaModificacionColumn] = System.Convert.DBNull;
            }
            
            public bool IsIdReservadoNull() {
                return this.IsNull(this.tabletsa_Comprobantes.IdReservadoColumn);
            }
            
            public void SetIdReservadoNull() {
                this[this.tabletsa_Comprobantes.IdReservadoColumn] = System.Convert.DBNull;
            }
            
            public bool IsRowIdNull() {
                return this.IsNull(this.tabletsa_Comprobantes.RowIdColumn);
            }
            
            public void SetRowIdNull() {
                this[this.tabletsa_Comprobantes.RowIdColumn] = System.Convert.DBNull;
            }
            
            public bool IsIdGeneradoNull() {
                return this.IsNull(this.tabletsa_Comprobantes.IdGeneradoColumn);
            }
            
            public void SetIdGeneradoNull() {
                this[this.tabletsa_Comprobantes.IdGeneradoColumn] = System.Convert.DBNull;
            }
            
            public bool IsRowIdGeneradoNull() {
                return this.IsNull(this.tabletsa_Comprobantes.RowIdGeneradoColumn);
            }
            
            public void SetRowIdGeneradoNull() {
                this[this.tabletsa_Comprobantes.RowIdGeneradoColumn] = System.Convert.DBNull;
            }
            
            public bool IsClienteNull() {
                return this.IsNull(this.tabletsa_Comprobantes.ClienteColumn);
            }
            
            public void SetClienteNull() {
                this[this.tabletsa_Comprobantes.ClienteColumn] = System.Convert.DBNull;
            }
            
            public bool IsDomicilioNull() {
                return this.IsNull(this.tabletsa_Comprobantes.DomicilioColumn);
            }
            
            public void SetDomicilioNull() {
                this[this.tabletsa_Comprobantes.DomicilioColumn] = System.Convert.DBNull;
            }
            
            public bool IsTipoDocumentoNull() {
                return this.IsNull(this.tabletsa_Comprobantes.TipoDocumentoColumn);
            }
            
            public void SetTipoDocumentoNull() {
                this[this.tabletsa_Comprobantes.TipoDocumentoColumn] = System.Convert.DBNull;
            }
            
            public bool IsDocumentoNull() {
                return this.IsNull(this.tabletsa_Comprobantes.DocumentoColumn);
            }
            
            public void SetDocumentoNull() {
                this[this.tabletsa_Comprobantes.DocumentoColumn] = System.Convert.DBNull;
            }
            
            public bool IsObservacionesNull() {
                return this.IsNull(this.tabletsa_Comprobantes.ObservacionesColumn);
            }
            
            public void SetObservacionesNull() {
                this[this.tabletsa_Comprobantes.ObservacionesColumn] = System.Convert.DBNull;
            }
            
            public bool IsAux1Null() {
                return this.IsNull(this.tabletsa_Comprobantes.Aux1Column);
            }
            
            public void SetAux1Null() {
                this[this.tabletsa_Comprobantes.Aux1Column] = System.Convert.DBNull;
            }
            
            public bool IsAux2Null() {
                return this.IsNull(this.tabletsa_Comprobantes.Aux2Column);
            }
            
            public void SetAux2Null() {
                this[this.tabletsa_Comprobantes.Aux2Column] = System.Convert.DBNull;
            }
            
            public bool IsAux3Null() {
                return this.IsNull(this.tabletsa_Comprobantes.Aux3Column);
            }
            
            public void SetAux3Null() {
                this[this.tabletsa_Comprobantes.Aux3Column] = System.Convert.DBNull;
            }
            
            public bool IsIdCondicionDeVentaNull() {
                return this.IsNull(this.tabletsa_Comprobantes.IdCondicionDeVentaColumn);
            }
            
            public void SetIdCondicionDeVentaNull() {
                this[this.tabletsa_Comprobantes.IdCondicionDeVentaColumn] = System.Convert.DBNull;
            }
            
            public bool IsCampoAuxiliar1Null() {
                return this.IsNull(this.tabletsa_Comprobantes.CampoAuxiliar1Column);
            }
            
            public void SetCampoAuxiliar1Null() {
                this[this.tabletsa_Comprobantes.CampoAuxiliar1Column] = System.Convert.DBNull;
            }
            
            public bool IsCampoAuxiliar2Null() {
                return this.IsNull(this.tabletsa_Comprobantes.CampoAuxiliar2Column);
            }
            
            public void SetCampoAuxiliar2Null() {
                this[this.tabletsa_Comprobantes.CampoAuxiliar2Column] = System.Convert.DBNull;
            }
            
            public bool IsCampoAuxiliar3Null() {
                return this.IsNull(this.tabletsa_Comprobantes.CampoAuxiliar3Column);
            }
            
            public void SetCampoAuxiliar3Null() {
                this[this.tabletsa_Comprobantes.CampoAuxiliar3Column] = System.Convert.DBNull;
            }
            
            public bool IsCampoAuxiliar4Null() {
                return this.IsNull(this.tabletsa_Comprobantes.CampoAuxiliar4Column);
            }
            
            public void SetCampoAuxiliar4Null() {
                this[this.tabletsa_Comprobantes.CampoAuxiliar4Column] = System.Convert.DBNull;
            }
            
            public bool IsCampoAuxiliar5Null() {
                return this.IsNull(this.tabletsa_Comprobantes.CampoAuxiliar5Column);
            }
            
            public void SetCampoAuxiliar5Null() {
                this[this.tabletsa_Comprobantes.CampoAuxiliar5Column] = System.Convert.DBNull;
            }
            
            public bool IsIdCotizacionCierreDolarOficialNull() {
                return this.IsNull(this.tabletsa_Comprobantes.IdCotizacionCierreDolarOficialColumn);
            }
            
            public void SetIdCotizacionCierreDolarOficialNull() {
                this[this.tabletsa_Comprobantes.IdCotizacionCierreDolarOficialColumn] = System.Convert.DBNull;
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class tsa_ComprobantesRowChangeEvent : EventArgs {
            
            private tsa_ComprobantesRow eventRow;
            
            private DataRowAction eventAction;
            
            public tsa_ComprobantesRowChangeEvent(tsa_ComprobantesRow row, DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            public tsa_ComprobantesRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            public DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
