//------------------------------------------------------------------------------
// <autogenerated>
//     This code was generated by a tool.
//     Runtime Version: 1.1.4322.573
//
//     Changes to this file may cause incorrect behavior and will be lost if 
//     the code is regenerated.
// </autogenerated>
//------------------------------------------------------------------------------

namespace mz.erp.commontypes.data {
    using System;
    using System.Data;
    using System.Xml;
    using System.Runtime.Serialization;
    
    
    [Serializable()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Diagnostics.DebuggerStepThrough()]
    [System.ComponentModel.ToolboxItem(true)]
    public class tsh_MovimientosStockDetDataset : DataSet {
        
        private tsh_MovimientosStockDetDataTable tabletsh_MovimientosStockDet;
        
        public tsh_MovimientosStockDetDataset() {
            this.InitClass();
            System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            this.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        protected tsh_MovimientosStockDetDataset(SerializationInfo info, StreamingContext context) {
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((strSchema != null)) {
                DataSet ds = new DataSet();
                ds.ReadXmlSchema(new XmlTextReader(new System.IO.StringReader(strSchema)));
                if ((ds.Tables["tsh_MovimientosStockDet"] != null)) {
                    this.Tables.Add(new tsh_MovimientosStockDetDataTable(ds.Tables["tsh_MovimientosStockDet"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.InitClass();
            }
            this.GetSerializationData(info, context);
            System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            this.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public tsh_MovimientosStockDetDataTable tsh_MovimientosStockDet {
            get {
                return this.tabletsh_MovimientosStockDet;
            }
        }
        
        public override DataSet Clone() {
            tsh_MovimientosStockDetDataset cln = ((tsh_MovimientosStockDetDataset)(base.Clone()));
            cln.InitVars();
            return cln;
        }
        
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        protected override void ReadXmlSerializable(XmlReader reader) {
            this.Reset();
            DataSet ds = new DataSet();
            ds.ReadXml(reader);
            if ((ds.Tables["tsh_MovimientosStockDet"] != null)) {
                this.Tables.Add(new tsh_MovimientosStockDetDataTable(ds.Tables["tsh_MovimientosStockDet"]));
            }
            this.DataSetName = ds.DataSetName;
            this.Prefix = ds.Prefix;
            this.Namespace = ds.Namespace;
            this.Locale = ds.Locale;
            this.CaseSensitive = ds.CaseSensitive;
            this.EnforceConstraints = ds.EnforceConstraints;
            this.Merge(ds, false, System.Data.MissingSchemaAction.Add);
            this.InitVars();
        }
        
        protected override System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            System.IO.MemoryStream stream = new System.IO.MemoryStream();
            this.WriteXmlSchema(new XmlTextWriter(stream, null));
            stream.Position = 0;
            return System.Xml.Schema.XmlSchema.Read(new XmlTextReader(stream), null);
        }
        
        internal void InitVars() {
            this.tabletsh_MovimientosStockDet = ((tsh_MovimientosStockDetDataTable)(this.Tables["tsh_MovimientosStockDet"]));
            if ((this.tabletsh_MovimientosStockDet != null)) {
                this.tabletsh_MovimientosStockDet.InitVars();
            }
        }
        
        private void InitClass() {
            this.DataSetName = "tsh_MovimientosStockDetDataset";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/tsh_MovimientosStockDet.xsd";
            this.Locale = new System.Globalization.CultureInfo("en-US");
            this.CaseSensitive = false;
            this.EnforceConstraints = true;
            this.tabletsh_MovimientosStockDet = new tsh_MovimientosStockDetDataTable();
            this.Tables.Add(this.tabletsh_MovimientosStockDet);
        }
        
        private bool ShouldSerializetsh_MovimientosStockDet() {
            return false;
        }
        
        private void SchemaChanged(object sender, System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        public delegate void tsh_MovimientosStockDetRowChangeEventHandler(object sender, tsh_MovimientosStockDetRowChangeEvent e);
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class tsh_MovimientosStockDetDataTable : DataTable, System.Collections.IEnumerable {
            
            private DataColumn columnIdMovimientoStock;
            
            private DataColumn columnRenglon;
            
            private DataColumn columnIdProducto;
            
            private DataColumn columnCantidad;
            
            private DataColumn columnIdDeposito;
            
            private DataColumn columnIdSeccion;
            
            private DataColumn columnNumeroSerie;
            
            private DataColumn columnIdLote;
            
            private DataColumn columnFechaCreacion;
            
            private DataColumn columnIdConexionCreacion;
            
            private DataColumn columnUltimaModificacion;
            
            private DataColumn columnIdConexionUltimaModificacion;
            
            private DataColumn columnIdReservado;
            
            private DataColumn columnRowId;
            
            private DataColumn columnIdSucursal;
            
            private DataColumn columnIdEmpresa;
            
            internal tsh_MovimientosStockDetDataTable() : 
                    base("tsh_MovimientosStockDet") {
                this.InitClass();
            }
            
            internal tsh_MovimientosStockDetDataTable(DataTable table) : 
                    base(table.TableName) {
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
                this.DisplayExpression = table.DisplayExpression;
            }
            
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            internal DataColumn IdMovimientoStockColumn {
                get {
                    return this.columnIdMovimientoStock;
                }
            }
            
            internal DataColumn RenglonColumn {
                get {
                    return this.columnRenglon;
                }
            }
            
            internal DataColumn IdProductoColumn {
                get {
                    return this.columnIdProducto;
                }
            }
            
            internal DataColumn CantidadColumn {
                get {
                    return this.columnCantidad;
                }
            }
            
            internal DataColumn IdDepositoColumn {
                get {
                    return this.columnIdDeposito;
                }
            }
            
            internal DataColumn IdSeccionColumn {
                get {
                    return this.columnIdSeccion;
                }
            }
            
            internal DataColumn NumeroSerieColumn {
                get {
                    return this.columnNumeroSerie;
                }
            }
            
            internal DataColumn IdLoteColumn {
                get {
                    return this.columnIdLote;
                }
            }
            
            internal DataColumn FechaCreacionColumn {
                get {
                    return this.columnFechaCreacion;
                }
            }
            
            internal DataColumn IdConexionCreacionColumn {
                get {
                    return this.columnIdConexionCreacion;
                }
            }
            
            internal DataColumn UltimaModificacionColumn {
                get {
                    return this.columnUltimaModificacion;
                }
            }
            
            internal DataColumn IdConexionUltimaModificacionColumn {
                get {
                    return this.columnIdConexionUltimaModificacion;
                }
            }
            
            internal DataColumn IdReservadoColumn {
                get {
                    return this.columnIdReservado;
                }
            }
            
            internal DataColumn RowIdColumn {
                get {
                    return this.columnRowId;
                }
            }
            
            internal DataColumn IdSucursalColumn {
                get {
                    return this.columnIdSucursal;
                }
            }
            
            internal DataColumn IdEmpresaColumn {
                get {
                    return this.columnIdEmpresa;
                }
            }
            
            public tsh_MovimientosStockDetRow this[int index] {
                get {
                    return ((tsh_MovimientosStockDetRow)(this.Rows[index]));
                }
            }
            
            public event tsh_MovimientosStockDetRowChangeEventHandler tsh_MovimientosStockDetRowChanged;
            
            public event tsh_MovimientosStockDetRowChangeEventHandler tsh_MovimientosStockDetRowChanging;
            
            public event tsh_MovimientosStockDetRowChangeEventHandler tsh_MovimientosStockDetRowDeleted;
            
            public event tsh_MovimientosStockDetRowChangeEventHandler tsh_MovimientosStockDetRowDeleting;
            
            public void Addtsh_MovimientosStockDetRow(tsh_MovimientosStockDetRow row) {
                this.Rows.Add(row);
            }
            
            public tsh_MovimientosStockDetRow Addtsh_MovimientosStockDetRow(
                        long IdMovimientoStock, 
                        short Renglon, 
                        string IdProducto, 
                        long Cantidad, 
                        long IdDeposito, 
                        long IdSeccion, 
                        string NumeroSerie, 
                        long IdLote, 
                        System.DateTime FechaCreacion, 
                        long IdConexionCreacion, 
                        System.Byte[] UltimaModificacion, 
                        long IdConexionUltimaModificacion, 
                        long IdReservado, 
                        System.Guid RowId, 
                        long IdSucursal, 
                        long IdEmpresa) {
                tsh_MovimientosStockDetRow rowtsh_MovimientosStockDetRow = ((tsh_MovimientosStockDetRow)(this.NewRow()));
                rowtsh_MovimientosStockDetRow.ItemArray = new object[] {
                        IdMovimientoStock,
                        Renglon,
                        IdProducto,
                        Cantidad,
                        IdDeposito,
                        IdSeccion,
                        NumeroSerie,
                        IdLote,
                        FechaCreacion,
                        IdConexionCreacion,
                        UltimaModificacion,
                        IdConexionUltimaModificacion,
                        IdReservado,
                        RowId,
                        IdSucursal,
                        IdEmpresa};
                this.Rows.Add(rowtsh_MovimientosStockDetRow);
                return rowtsh_MovimientosStockDetRow;
            }
            
            public tsh_MovimientosStockDetRow FindByIdMovimientoStockRenglon(long IdMovimientoStock, short Renglon) {
                return ((tsh_MovimientosStockDetRow)(this.Rows.Find(new object[] {
                            IdMovimientoStock,
                            Renglon})));
            }
            
            public System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            public override DataTable Clone() {
                tsh_MovimientosStockDetDataTable cln = ((tsh_MovimientosStockDetDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            protected override DataTable CreateInstance() {
                return new tsh_MovimientosStockDetDataTable();
            }
            
            internal void InitVars() {
                this.columnIdMovimientoStock = this.Columns["IdMovimientoStock"];
                this.columnRenglon = this.Columns["Renglon"];
                this.columnIdProducto = this.Columns["IdProducto"];
                this.columnCantidad = this.Columns["Cantidad"];
                this.columnIdDeposito = this.Columns["IdDeposito"];
                this.columnIdSeccion = this.Columns["IdSeccion"];
                this.columnNumeroSerie = this.Columns["NumeroSerie"];
                this.columnIdLote = this.Columns["IdLote"];
                this.columnFechaCreacion = this.Columns["FechaCreacion"];
                this.columnIdConexionCreacion = this.Columns["IdConexionCreacion"];
                this.columnUltimaModificacion = this.Columns["UltimaModificacion"];
                this.columnIdConexionUltimaModificacion = this.Columns["IdConexionUltimaModificacion"];
                this.columnIdReservado = this.Columns["IdReservado"];
                this.columnRowId = this.Columns["RowId"];
                this.columnIdSucursal = this.Columns["IdSucursal"];
                this.columnIdEmpresa = this.Columns["IdEmpresa"];
            }
            
            private void InitClass() {
                this.columnIdMovimientoStock = new DataColumn("IdMovimientoStock", typeof(long), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdMovimientoStock);
                this.columnRenglon = new DataColumn("Renglon", typeof(short), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnRenglon);
                this.columnIdProducto = new DataColumn("IdProducto", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdProducto);
                this.columnCantidad = new DataColumn("Cantidad", typeof(long), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnCantidad);
                this.columnIdDeposito = new DataColumn("IdDeposito", typeof(long), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdDeposito);
                this.columnIdSeccion = new DataColumn("IdSeccion", typeof(long), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdSeccion);
                this.columnNumeroSerie = new DataColumn("NumeroSerie", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnNumeroSerie);
                this.columnIdLote = new DataColumn("IdLote", typeof(long), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdLote);
                this.columnFechaCreacion = new DataColumn("FechaCreacion", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnFechaCreacion);
                this.columnIdConexionCreacion = new DataColumn("IdConexionCreacion", typeof(long), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdConexionCreacion);
                this.columnUltimaModificacion = new DataColumn("UltimaModificacion", typeof(System.Byte[]), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnUltimaModificacion);
                this.columnIdConexionUltimaModificacion = new DataColumn("IdConexionUltimaModificacion", typeof(long), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdConexionUltimaModificacion);
                this.columnIdReservado = new DataColumn("IdReservado", typeof(long), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdReservado);
                this.columnRowId = new DataColumn("RowId", typeof(System.Guid), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnRowId);
                this.columnIdSucursal = new DataColumn("IdSucursal", typeof(long), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdSucursal);
                this.columnIdEmpresa = new DataColumn("IdEmpresa", typeof(long), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdEmpresa);
                this.Constraints.Add(new UniqueConstraint("tsh_MovimientosStockDetKey1", new DataColumn[] {
                                this.columnIdMovimientoStock,
                                this.columnRenglon}, true));
                this.columnIdMovimientoStock.AllowDBNull = false;
                this.columnRenglon.AllowDBNull = false;
                this.columnUltimaModificacion.ReadOnly = true;
            }
            
            public tsh_MovimientosStockDetRow Newtsh_MovimientosStockDetRow() {
                return ((tsh_MovimientosStockDetRow)(this.NewRow()));
            }
            
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder) {
                return new tsh_MovimientosStockDetRow(builder);
            }
            
            protected override System.Type GetRowType() {
                return typeof(tsh_MovimientosStockDetRow);
            }
            
            protected override void OnRowChanged(DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.tsh_MovimientosStockDetRowChanged != null)) {
                    this.tsh_MovimientosStockDetRowChanged(this, new tsh_MovimientosStockDetRowChangeEvent(((tsh_MovimientosStockDetRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowChanging(DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.tsh_MovimientosStockDetRowChanging != null)) {
                    this.tsh_MovimientosStockDetRowChanging(this, new tsh_MovimientosStockDetRowChangeEvent(((tsh_MovimientosStockDetRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleted(DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.tsh_MovimientosStockDetRowDeleted != null)) {
                    this.tsh_MovimientosStockDetRowDeleted(this, new tsh_MovimientosStockDetRowChangeEvent(((tsh_MovimientosStockDetRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleting(DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.tsh_MovimientosStockDetRowDeleting != null)) {
                    this.tsh_MovimientosStockDetRowDeleting(this, new tsh_MovimientosStockDetRowChangeEvent(((tsh_MovimientosStockDetRow)(e.Row)), e.Action));
                }
            }
            
            public void Removetsh_MovimientosStockDetRow(tsh_MovimientosStockDetRow row) {
                this.Rows.Remove(row);
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class tsh_MovimientosStockDetRow : DataRow {
            
            private tsh_MovimientosStockDetDataTable tabletsh_MovimientosStockDet;
            
            internal tsh_MovimientosStockDetRow(DataRowBuilder rb) : 
                    base(rb) {
                this.tabletsh_MovimientosStockDet = ((tsh_MovimientosStockDetDataTable)(this.Table));
            }
            
            public long IdMovimientoStock {
                get {
                    return ((long)(this[this.tabletsh_MovimientosStockDet.IdMovimientoStockColumn]));
                }
                set {
                    this[this.tabletsh_MovimientosStockDet.IdMovimientoStockColumn] = value;
                }
            }
            
            public short Renglon {
                get {
                    return ((short)(this[this.tabletsh_MovimientosStockDet.RenglonColumn]));
                }
                set {
                    this[this.tabletsh_MovimientosStockDet.RenglonColumn] = value;
                }
            }
            
            public string IdProducto {
                get {
                    try {
                        return ((string)(this[this.tabletsh_MovimientosStockDet.IdProductoColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletsh_MovimientosStockDet.IdProductoColumn] = value;
                }
            }
            
            public long Cantidad {
                get {
                    try {
                        return ((long)(this[this.tabletsh_MovimientosStockDet.CantidadColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletsh_MovimientosStockDet.CantidadColumn] = value;
                }
            }
            
            public long IdDeposito {
                get {
                    try {
                        return ((long)(this[this.tabletsh_MovimientosStockDet.IdDepositoColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletsh_MovimientosStockDet.IdDepositoColumn] = value;
                }
            }
            
            public long IdSeccion {
                get {
                    try {
                        return ((long)(this[this.tabletsh_MovimientosStockDet.IdSeccionColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletsh_MovimientosStockDet.IdSeccionColumn] = value;
                }
            }
            
            public string NumeroSerie {
                get {
                    try {
                        return ((string)(this[this.tabletsh_MovimientosStockDet.NumeroSerieColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletsh_MovimientosStockDet.NumeroSerieColumn] = value;
                }
            }
            
            public long IdLote {
                get {
                    try {
                        return ((long)(this[this.tabletsh_MovimientosStockDet.IdLoteColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletsh_MovimientosStockDet.IdLoteColumn] = value;
                }
            }
            
            public System.DateTime FechaCreacion {
                get {
                    try {
                        return ((System.DateTime)(this[this.tabletsh_MovimientosStockDet.FechaCreacionColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletsh_MovimientosStockDet.FechaCreacionColumn] = value;
                }
            }
            
            public long IdConexionCreacion {
                get {
                    try {
                        return ((long)(this[this.tabletsh_MovimientosStockDet.IdConexionCreacionColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletsh_MovimientosStockDet.IdConexionCreacionColumn] = value;
                }
            }
            
            public System.Byte[] UltimaModificacion {
                get {
                    try {
                        return ((System.Byte[])(this[this.tabletsh_MovimientosStockDet.UltimaModificacionColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletsh_MovimientosStockDet.UltimaModificacionColumn] = value;
                }
            }
            
            public long IdConexionUltimaModificacion {
                get {
                    try {
                        return ((long)(this[this.tabletsh_MovimientosStockDet.IdConexionUltimaModificacionColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletsh_MovimientosStockDet.IdConexionUltimaModificacionColumn] = value;
                }
            }
            
            public long IdReservado {
                get {
                    try {
                        return ((long)(this[this.tabletsh_MovimientosStockDet.IdReservadoColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletsh_MovimientosStockDet.IdReservadoColumn] = value;
                }
            }
            
            public System.Guid RowId {
                get {
                    try {
                        return ((System.Guid)(this[this.tabletsh_MovimientosStockDet.RowIdColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletsh_MovimientosStockDet.RowIdColumn] = value;
                }
            }
            
            public long IdSucursal {
                get {
                    try {
                        return ((long)(this[this.tabletsh_MovimientosStockDet.IdSucursalColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletsh_MovimientosStockDet.IdSucursalColumn] = value;
                }
            }
            
            public long IdEmpresa {
                get {
                    try {
                        return ((long)(this[this.tabletsh_MovimientosStockDet.IdEmpresaColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletsh_MovimientosStockDet.IdEmpresaColumn] = value;
                }
            }
            
            public bool IsIdProductoNull() {
                return this.IsNull(this.tabletsh_MovimientosStockDet.IdProductoColumn);
            }
            
            public void SetIdProductoNull() {
                this[this.tabletsh_MovimientosStockDet.IdProductoColumn] = System.Convert.DBNull;
            }
            
            public bool IsCantidadNull() {
                return this.IsNull(this.tabletsh_MovimientosStockDet.CantidadColumn);
            }
            
            public void SetCantidadNull() {
                this[this.tabletsh_MovimientosStockDet.CantidadColumn] = System.Convert.DBNull;
            }
            
            public bool IsIdDepositoNull() {
                return this.IsNull(this.tabletsh_MovimientosStockDet.IdDepositoColumn);
            }
            
            public void SetIdDepositoNull() {
                this[this.tabletsh_MovimientosStockDet.IdDepositoColumn] = System.Convert.DBNull;
            }
            
            public bool IsIdSeccionNull() {
                return this.IsNull(this.tabletsh_MovimientosStockDet.IdSeccionColumn);
            }
            
            public void SetIdSeccionNull() {
                this[this.tabletsh_MovimientosStockDet.IdSeccionColumn] = System.Convert.DBNull;
            }
            
            public bool IsNumeroSerieNull() {
                return this.IsNull(this.tabletsh_MovimientosStockDet.NumeroSerieColumn);
            }
            
            public void SetNumeroSerieNull() {
                this[this.tabletsh_MovimientosStockDet.NumeroSerieColumn] = System.Convert.DBNull;
            }
            
            public bool IsIdLoteNull() {
                return this.IsNull(this.tabletsh_MovimientosStockDet.IdLoteColumn);
            }
            
            public void SetIdLoteNull() {
                this[this.tabletsh_MovimientosStockDet.IdLoteColumn] = System.Convert.DBNull;
            }
            
            public bool IsFechaCreacionNull() {
                return this.IsNull(this.tabletsh_MovimientosStockDet.FechaCreacionColumn);
            }
            
            public void SetFechaCreacionNull() {
                this[this.tabletsh_MovimientosStockDet.FechaCreacionColumn] = System.Convert.DBNull;
            }
            
            public bool IsIdConexionCreacionNull() {
                return this.IsNull(this.tabletsh_MovimientosStockDet.IdConexionCreacionColumn);
            }
            
            public void SetIdConexionCreacionNull() {
                this[this.tabletsh_MovimientosStockDet.IdConexionCreacionColumn] = System.Convert.DBNull;
            }
            
            public bool IsUltimaModificacionNull() {
                return this.IsNull(this.tabletsh_MovimientosStockDet.UltimaModificacionColumn);
            }
            
            public void SetUltimaModificacionNull() {
                this[this.tabletsh_MovimientosStockDet.UltimaModificacionColumn] = System.Convert.DBNull;
            }
            
            public bool IsIdConexionUltimaModificacionNull() {
                return this.IsNull(this.tabletsh_MovimientosStockDet.IdConexionUltimaModificacionColumn);
            }
            
            public void SetIdConexionUltimaModificacionNull() {
                this[this.tabletsh_MovimientosStockDet.IdConexionUltimaModificacionColumn] = System.Convert.DBNull;
            }
            
            public bool IsIdReservadoNull() {
                return this.IsNull(this.tabletsh_MovimientosStockDet.IdReservadoColumn);
            }
            
            public void SetIdReservadoNull() {
                this[this.tabletsh_MovimientosStockDet.IdReservadoColumn] = System.Convert.DBNull;
            }
            
            public bool IsRowIdNull() {
                return this.IsNull(this.tabletsh_MovimientosStockDet.RowIdColumn);
            }
            
            public void SetRowIdNull() {
                this[this.tabletsh_MovimientosStockDet.RowIdColumn] = System.Convert.DBNull;
            }
            
            public bool IsIdSucursalNull() {
                return this.IsNull(this.tabletsh_MovimientosStockDet.IdSucursalColumn);
            }
            
            public void SetIdSucursalNull() {
                this[this.tabletsh_MovimientosStockDet.IdSucursalColumn] = System.Convert.DBNull;
            }
            
            public bool IsIdEmpresaNull() {
                return this.IsNull(this.tabletsh_MovimientosStockDet.IdEmpresaColumn);
            }
            
            public void SetIdEmpresaNull() {
                this[this.tabletsh_MovimientosStockDet.IdEmpresaColumn] = System.Convert.DBNull;
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class tsh_MovimientosStockDetRowChangeEvent : EventArgs {
            
            private tsh_MovimientosStockDetRow eventRow;
            
            private DataRowAction eventAction;
            
            public tsh_MovimientosStockDetRowChangeEvent(tsh_MovimientosStockDetRow row, DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            public tsh_MovimientosStockDetRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            public DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
