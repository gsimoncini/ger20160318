//------------------------------------------------------------------------------
// <autogenerated>
//     This code was generated by a tool.
//     Runtime Version: 1.1.4322.2032
//
//     Changes to this file may cause incorrect behavior and will be lost if 
//     the code is regenerated.
// </autogenerated>
//------------------------------------------------------------------------------

namespace mz.erp.commontypes.data {
    using System;
    using System.Data;
    using System.Xml;
    using System.Runtime.Serialization;
    
    
    [Serializable()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Diagnostics.DebuggerStepThrough()]
    [System.ComponentModel.ToolboxItem(true)]
    public class tsa_CierresFiscalesDataset : DataSet {
        
        private tsa_CierresFiscalesDataTable tabletsa_CierresFiscales;
        
        public tsa_CierresFiscalesDataset() {
            this.InitClass();
            System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            this.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        protected tsa_CierresFiscalesDataset(SerializationInfo info, StreamingContext context) {
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((strSchema != null)) {
                DataSet ds = new DataSet();
                ds.ReadXmlSchema(new XmlTextReader(new System.IO.StringReader(strSchema)));
                if ((ds.Tables["tsa_CierresFiscales"] != null)) {
                    this.Tables.Add(new tsa_CierresFiscalesDataTable(ds.Tables["tsa_CierresFiscales"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.InitClass();
            }
            this.GetSerializationData(info, context);
            System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            this.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public tsa_CierresFiscalesDataTable tsa_CierresFiscales {
            get {
                return this.tabletsa_CierresFiscales;
            }
        }
        
        public override DataSet Clone() {
            tsa_CierresFiscalesDataset cln = ((tsa_CierresFiscalesDataset)(base.Clone()));
            cln.InitVars();
            return cln;
        }
        
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        protected override void ReadXmlSerializable(XmlReader reader) {
            this.Reset();
            DataSet ds = new DataSet();
            ds.ReadXml(reader);
            if ((ds.Tables["tsa_CierresFiscales"] != null)) {
                this.Tables.Add(new tsa_CierresFiscalesDataTable(ds.Tables["tsa_CierresFiscales"]));
            }
            this.DataSetName = ds.DataSetName;
            this.Prefix = ds.Prefix;
            this.Namespace = ds.Namespace;
            this.Locale = ds.Locale;
            this.CaseSensitive = ds.CaseSensitive;
            this.EnforceConstraints = ds.EnforceConstraints;
            this.Merge(ds, false, System.Data.MissingSchemaAction.Add);
            this.InitVars();
        }
        
        protected override System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            System.IO.MemoryStream stream = new System.IO.MemoryStream();
            this.WriteXmlSchema(new XmlTextWriter(stream, null));
            stream.Position = 0;
            return System.Xml.Schema.XmlSchema.Read(new XmlTextReader(stream), null);
        }
        
        internal void InitVars() {
            this.tabletsa_CierresFiscales = ((tsa_CierresFiscalesDataTable)(this.Tables["tsa_CierresFiscales"]));
            if ((this.tabletsa_CierresFiscales != null)) {
                this.tabletsa_CierresFiscales.InitVars();
            }
        }
        
        private void InitClass() {
            this.DataSetName = "tsa_CierresFiscalesDataset";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/tsa_CierresFiscales.xsd";
            this.Locale = new System.Globalization.CultureInfo("en-US");
            this.CaseSensitive = false;
            this.EnforceConstraints = true;
            this.tabletsa_CierresFiscales = new tsa_CierresFiscalesDataTable();
            this.Tables.Add(this.tabletsa_CierresFiscales);
        }
        
        private bool ShouldSerializetsa_CierresFiscales() {
            return false;
        }
        
        private void SchemaChanged(object sender, System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        public delegate void tsa_CierresFiscalesRowChangeEventHandler(object sender, tsa_CierresFiscalesRowChangeEvent e);
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class tsa_CierresFiscalesDataTable : DataTable, System.Collections.IEnumerable {
            
            private DataColumn columnIdCierreFiscal;
            
            private DataColumn columnFecha;
            
            private DataColumn columnSucursal;
            
            private DataColumn columnTipo;
            
            private DataColumn columnNumero;
            
            private DataColumn columnComprobantes_Neto;
            
            private DataColumn columnComprobantes_IVA;
            
            private DataColumn columnComprobantes_II;
            
            private DataColumn columnComprobantes_NoGravados;
            
            private DataColumn columnComprobantes_Percepciones;
            
            private DataColumn columnComprobantes_Emitidos;
            
            private DataColumn columnComprobantes_Cancelados;
            
            private DataColumn columnNC_Neto;
            
            private DataColumn columnNC_IVA;
            
            private DataColumn columnNC_II;
            
            private DataColumn columnNC_NoGravados;
            
            private DataColumn columnNC_Percepciones;
            
            private DataColumn columnNC_Emitidos;
            
            private DataColumn columnNC_Cancelados;
            
            private DataColumn columnUltimoComprobanteA;
            
            private DataColumn columnUltimoComprobanteB;
            
            private DataColumn columnUltimaNCA;
            
            private DataColumn columnUltimaNCB;
            
            private DataColumn columnUltimoRemito;
            
            private DataColumn columnRemitos_Emitidos;
            
            private DataColumn columnDocumentosNF_Emitidos;
            
            private DataColumn columnDocumentosNFH_Emitidos;
            
            private DataColumn columnIdResponsable;
            
            private DataColumn columnObservacion;
            
            private DataColumn columnFechaCreacion;
            
            private DataColumn columnIdConexionCreacion;
            
            private DataColumn columnUltimaModificacion;
            
            private DataColumn columnIdConexionUltimaModificacion;
            
            private DataColumn columnIdReservado;
            
            private DataColumn columnRowId;
            
            private DataColumn columnIdSucursal;
            
            private DataColumn columnIdEmpresa;
            
            internal tsa_CierresFiscalesDataTable() : 
                    base("tsa_CierresFiscales") {
                this.InitClass();
            }
            
            internal tsa_CierresFiscalesDataTable(DataTable table) : 
                    base(table.TableName) {
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
                this.DisplayExpression = table.DisplayExpression;
            }
            
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            internal DataColumn IdCierreFiscalColumn {
                get {
                    return this.columnIdCierreFiscal;
                }
            }
            
            internal DataColumn FechaColumn {
                get {
                    return this.columnFecha;
                }
            }
            
            internal DataColumn SucursalColumn {
                get {
                    return this.columnSucursal;
                }
            }
            
            internal DataColumn TipoColumn {
                get {
                    return this.columnTipo;
                }
            }
            
            internal DataColumn NumeroColumn {
                get {
                    return this.columnNumero;
                }
            }
            
            internal DataColumn Comprobantes_NetoColumn {
                get {
                    return this.columnComprobantes_Neto;
                }
            }
            
            internal DataColumn Comprobantes_IVAColumn {
                get {
                    return this.columnComprobantes_IVA;
                }
            }
            
            internal DataColumn Comprobantes_IIColumn {
                get {
                    return this.columnComprobantes_II;
                }
            }
            
            internal DataColumn Comprobantes_NoGravadosColumn {
                get {
                    return this.columnComprobantes_NoGravados;
                }
            }
            
            internal DataColumn Comprobantes_PercepcionesColumn {
                get {
                    return this.columnComprobantes_Percepciones;
                }
            }
            
            internal DataColumn Comprobantes_EmitidosColumn {
                get {
                    return this.columnComprobantes_Emitidos;
                }
            }
            
            internal DataColumn Comprobantes_CanceladosColumn {
                get {
                    return this.columnComprobantes_Cancelados;
                }
            }
            
            internal DataColumn NC_NetoColumn {
                get {
                    return this.columnNC_Neto;
                }
            }
            
            internal DataColumn NC_IVAColumn {
                get {
                    return this.columnNC_IVA;
                }
            }
            
            internal DataColumn NC_IIColumn {
                get {
                    return this.columnNC_II;
                }
            }
            
            internal DataColumn NC_NoGravadosColumn {
                get {
                    return this.columnNC_NoGravados;
                }
            }
            
            internal DataColumn NC_PercepcionesColumn {
                get {
                    return this.columnNC_Percepciones;
                }
            }
            
            internal DataColumn NC_EmitidosColumn {
                get {
                    return this.columnNC_Emitidos;
                }
            }
            
            internal DataColumn NC_CanceladosColumn {
                get {
                    return this.columnNC_Cancelados;
                }
            }
            
            internal DataColumn UltimoComprobanteAColumn {
                get {
                    return this.columnUltimoComprobanteA;
                }
            }
            
            internal DataColumn UltimoComprobanteBColumn {
                get {
                    return this.columnUltimoComprobanteB;
                }
            }
            
            internal DataColumn UltimaNCAColumn {
                get {
                    return this.columnUltimaNCA;
                }
            }
            
            internal DataColumn UltimaNCBColumn {
                get {
                    return this.columnUltimaNCB;
                }
            }
            
            internal DataColumn UltimoRemitoColumn {
                get {
                    return this.columnUltimoRemito;
                }
            }
            
            internal DataColumn Remitos_EmitidosColumn {
                get {
                    return this.columnRemitos_Emitidos;
                }
            }
            
            internal DataColumn DocumentosNF_EmitidosColumn {
                get {
                    return this.columnDocumentosNF_Emitidos;
                }
            }
            
            internal DataColumn DocumentosNFH_EmitidosColumn {
                get {
                    return this.columnDocumentosNFH_Emitidos;
                }
            }
            
            internal DataColumn IdResponsableColumn {
                get {
                    return this.columnIdResponsable;
                }
            }
            
            internal DataColumn ObservacionColumn {
                get {
                    return this.columnObservacion;
                }
            }
            
            internal DataColumn FechaCreacionColumn {
                get {
                    return this.columnFechaCreacion;
                }
            }
            
            internal DataColumn IdConexionCreacionColumn {
                get {
                    return this.columnIdConexionCreacion;
                }
            }
            
            internal DataColumn UltimaModificacionColumn {
                get {
                    return this.columnUltimaModificacion;
                }
            }
            
            internal DataColumn IdConexionUltimaModificacionColumn {
                get {
                    return this.columnIdConexionUltimaModificacion;
                }
            }
            
            internal DataColumn IdReservadoColumn {
                get {
                    return this.columnIdReservado;
                }
            }
            
            internal DataColumn RowIdColumn {
                get {
                    return this.columnRowId;
                }
            }
            
            internal DataColumn IdSucursalColumn {
                get {
                    return this.columnIdSucursal;
                }
            }
            
            internal DataColumn IdEmpresaColumn {
                get {
                    return this.columnIdEmpresa;
                }
            }
            
            public tsa_CierresFiscalesRow this[int index] {
                get {
                    return ((tsa_CierresFiscalesRow)(this.Rows[index]));
                }
            }
            
            public event tsa_CierresFiscalesRowChangeEventHandler tsa_CierresFiscalesRowChanged;
            
            public event tsa_CierresFiscalesRowChangeEventHandler tsa_CierresFiscalesRowChanging;
            
            public event tsa_CierresFiscalesRowChangeEventHandler tsa_CierresFiscalesRowDeleted;
            
            public event tsa_CierresFiscalesRowChangeEventHandler tsa_CierresFiscalesRowDeleting;
            
            public void Addtsa_CierresFiscalesRow(tsa_CierresFiscalesRow row) {
                this.Rows.Add(row);
            }
            
            public tsa_CierresFiscalesRow Addtsa_CierresFiscalesRow(
                        string IdCierreFiscal, 
                        System.DateTime Fecha, 
                        string Sucursal, 
                        string Tipo, 
                        string Numero, 
                        System.Decimal Comprobantes_Neto, 
                        System.Decimal Comprobantes_IVA, 
                        System.Decimal Comprobantes_II, 
                        System.Decimal Comprobantes_NoGravados, 
                        System.Decimal Comprobantes_Percepciones, 
                        int Comprobantes_Emitidos, 
                        int Comprobantes_Cancelados, 
                        System.Decimal NC_Neto, 
                        System.Decimal NC_IVA, 
                        System.Decimal NC_II, 
                        System.Decimal NC_NoGravados, 
                        System.Decimal NC_Percepciones, 
                        int NC_Emitidos, 
                        int NC_Cancelados, 
                        int UltimoComprobanteA, 
                        int UltimoComprobanteB, 
                        int UltimaNCA, 
                        int UltimaNCB, 
                        int UltimoRemito, 
                        int Remitos_Emitidos, 
                        int DocumentosNF_Emitidos, 
                        int DocumentosNFH_Emitidos, 
                        string IdResponsable, 
                        string Observacion, 
                        System.DateTime FechaCreacion, 
                        long IdConexionCreacion, 
                        System.Byte[] UltimaModificacion, 
                        long IdConexionUltimaModificacion, 
                        long IdReservado, 
                        System.Guid RowId, 
                        long IdSucursal, 
                        long IdEmpresa) {
                tsa_CierresFiscalesRow rowtsa_CierresFiscalesRow = ((tsa_CierresFiscalesRow)(this.NewRow()));
                rowtsa_CierresFiscalesRow.ItemArray = new object[] {
                        IdCierreFiscal,
                        Fecha,
                        Sucursal,
                        Tipo,
                        Numero,
                        Comprobantes_Neto,
                        Comprobantes_IVA,
                        Comprobantes_II,
                        Comprobantes_NoGravados,
                        Comprobantes_Percepciones,
                        Comprobantes_Emitidos,
                        Comprobantes_Cancelados,
                        NC_Neto,
                        NC_IVA,
                        NC_II,
                        NC_NoGravados,
                        NC_Percepciones,
                        NC_Emitidos,
                        NC_Cancelados,
                        UltimoComprobanteA,
                        UltimoComprobanteB,
                        UltimaNCA,
                        UltimaNCB,
                        UltimoRemito,
                        Remitos_Emitidos,
                        DocumentosNF_Emitidos,
                        DocumentosNFH_Emitidos,
                        IdResponsable,
                        Observacion,
                        FechaCreacion,
                        IdConexionCreacion,
                        UltimaModificacion,
                        IdConexionUltimaModificacion,
                        IdReservado,
                        RowId,
                        IdSucursal,
                        IdEmpresa};
                this.Rows.Add(rowtsa_CierresFiscalesRow);
                return rowtsa_CierresFiscalesRow;
            }
            
            public tsa_CierresFiscalesRow FindByIdCierreFiscal(string IdCierreFiscal) {
                return ((tsa_CierresFiscalesRow)(this.Rows.Find(new object[] {
                            IdCierreFiscal})));
            }
            
            public System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            public override DataTable Clone() {
                tsa_CierresFiscalesDataTable cln = ((tsa_CierresFiscalesDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            protected override DataTable CreateInstance() {
                return new tsa_CierresFiscalesDataTable();
            }
            
            internal void InitVars() {
                this.columnIdCierreFiscal = this.Columns["IdCierreFiscal"];
                this.columnFecha = this.Columns["Fecha"];
                this.columnSucursal = this.Columns["Sucursal"];
                this.columnTipo = this.Columns["Tipo"];
                this.columnNumero = this.Columns["Numero"];
                this.columnComprobantes_Neto = this.Columns["Comprobantes_Neto"];
                this.columnComprobantes_IVA = this.Columns["Comprobantes_IVA"];
                this.columnComprobantes_II = this.Columns["Comprobantes_II"];
                this.columnComprobantes_NoGravados = this.Columns["Comprobantes_NoGravados"];
                this.columnComprobantes_Percepciones = this.Columns["Comprobantes_Percepciones"];
                this.columnComprobantes_Emitidos = this.Columns["Comprobantes_Emitidos"];
                this.columnComprobantes_Cancelados = this.Columns["Comprobantes_Cancelados"];
                this.columnNC_Neto = this.Columns["NC_Neto"];
                this.columnNC_IVA = this.Columns["NC_IVA"];
                this.columnNC_II = this.Columns["NC_II"];
                this.columnNC_NoGravados = this.Columns["NC_NoGravados"];
                this.columnNC_Percepciones = this.Columns["NC_Percepciones"];
                this.columnNC_Emitidos = this.Columns["NC_Emitidos"];
                this.columnNC_Cancelados = this.Columns["NC_Cancelados"];
                this.columnUltimoComprobanteA = this.Columns["UltimoComprobanteA"];
                this.columnUltimoComprobanteB = this.Columns["UltimoComprobanteB"];
                this.columnUltimaNCA = this.Columns["UltimaNCA"];
                this.columnUltimaNCB = this.Columns["UltimaNCB"];
                this.columnUltimoRemito = this.Columns["UltimoRemito"];
                this.columnRemitos_Emitidos = this.Columns["Remitos_Emitidos"];
                this.columnDocumentosNF_Emitidos = this.Columns["DocumentosNF_Emitidos"];
                this.columnDocumentosNFH_Emitidos = this.Columns["DocumentosNFH_Emitidos"];
                this.columnIdResponsable = this.Columns["IdResponsable"];
                this.columnObservacion = this.Columns["Observacion"];
                this.columnFechaCreacion = this.Columns["FechaCreacion"];
                this.columnIdConexionCreacion = this.Columns["IdConexionCreacion"];
                this.columnUltimaModificacion = this.Columns["UltimaModificacion"];
                this.columnIdConexionUltimaModificacion = this.Columns["IdConexionUltimaModificacion"];
                this.columnIdReservado = this.Columns["IdReservado"];
                this.columnRowId = this.Columns["RowId"];
                this.columnIdSucursal = this.Columns["IdSucursal"];
                this.columnIdEmpresa = this.Columns["IdEmpresa"];
            }
            
            private void InitClass() {
                this.columnIdCierreFiscal = new DataColumn("IdCierreFiscal", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdCierreFiscal);
                this.columnFecha = new DataColumn("Fecha", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnFecha);
                this.columnSucursal = new DataColumn("Sucursal", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnSucursal);
                this.columnTipo = new DataColumn("Tipo", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnTipo);
                this.columnNumero = new DataColumn("Numero", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnNumero);
                this.columnComprobantes_Neto = new DataColumn("Comprobantes_Neto", typeof(System.Decimal), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnComprobantes_Neto);
                this.columnComprobantes_IVA = new DataColumn("Comprobantes_IVA", typeof(System.Decimal), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnComprobantes_IVA);
                this.columnComprobantes_II = new DataColumn("Comprobantes_II", typeof(System.Decimal), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnComprobantes_II);
                this.columnComprobantes_NoGravados = new DataColumn("Comprobantes_NoGravados", typeof(System.Decimal), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnComprobantes_NoGravados);
                this.columnComprobantes_Percepciones = new DataColumn("Comprobantes_Percepciones", typeof(System.Decimal), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnComprobantes_Percepciones);
                this.columnComprobantes_Emitidos = new DataColumn("Comprobantes_Emitidos", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnComprobantes_Emitidos);
                this.columnComprobantes_Cancelados = new DataColumn("Comprobantes_Cancelados", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnComprobantes_Cancelados);
                this.columnNC_Neto = new DataColumn("NC_Neto", typeof(System.Decimal), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnNC_Neto);
                this.columnNC_IVA = new DataColumn("NC_IVA", typeof(System.Decimal), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnNC_IVA);
                this.columnNC_II = new DataColumn("NC_II", typeof(System.Decimal), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnNC_II);
                this.columnNC_NoGravados = new DataColumn("NC_NoGravados", typeof(System.Decimal), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnNC_NoGravados);
                this.columnNC_Percepciones = new DataColumn("NC_Percepciones", typeof(System.Decimal), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnNC_Percepciones);
                this.columnNC_Emitidos = new DataColumn("NC_Emitidos", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnNC_Emitidos);
                this.columnNC_Cancelados = new DataColumn("NC_Cancelados", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnNC_Cancelados);
                this.columnUltimoComprobanteA = new DataColumn("UltimoComprobanteA", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnUltimoComprobanteA);
                this.columnUltimoComprobanteB = new DataColumn("UltimoComprobanteB", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnUltimoComprobanteB);
                this.columnUltimaNCA = new DataColumn("UltimaNCA", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnUltimaNCA);
                this.columnUltimaNCB = new DataColumn("UltimaNCB", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnUltimaNCB);
                this.columnUltimoRemito = new DataColumn("UltimoRemito", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnUltimoRemito);
                this.columnRemitos_Emitidos = new DataColumn("Remitos_Emitidos", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnRemitos_Emitidos);
                this.columnDocumentosNF_Emitidos = new DataColumn("DocumentosNF_Emitidos", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnDocumentosNF_Emitidos);
                this.columnDocumentosNFH_Emitidos = new DataColumn("DocumentosNFH_Emitidos", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnDocumentosNFH_Emitidos);
                this.columnIdResponsable = new DataColumn("IdResponsable", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdResponsable);
                this.columnObservacion = new DataColumn("Observacion", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnObservacion);
                this.columnFechaCreacion = new DataColumn("FechaCreacion", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnFechaCreacion);
                this.columnIdConexionCreacion = new DataColumn("IdConexionCreacion", typeof(long), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdConexionCreacion);
                this.columnUltimaModificacion = new DataColumn("UltimaModificacion", typeof(System.Byte[]), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnUltimaModificacion);
                this.columnIdConexionUltimaModificacion = new DataColumn("IdConexionUltimaModificacion", typeof(long), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdConexionUltimaModificacion);
                this.columnIdReservado = new DataColumn("IdReservado", typeof(long), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdReservado);
                this.columnRowId = new DataColumn("RowId", typeof(System.Guid), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnRowId);
                this.columnIdSucursal = new DataColumn("IdSucursal", typeof(long), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdSucursal);
                this.columnIdEmpresa = new DataColumn("IdEmpresa", typeof(long), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdEmpresa);
                this.Constraints.Add(new UniqueConstraint("tsa_CierresFiscalesDatasetKey1", new DataColumn[] {
                                this.columnIdCierreFiscal}, true));
                this.columnIdCierreFiscal.AllowDBNull = false;
                this.columnIdCierreFiscal.Unique = true;
                this.columnSucursal.AllowDBNull = false;
                this.columnTipo.AllowDBNull = false;
                this.columnNumero.AllowDBNull = false;
                this.columnUltimaModificacion.ReadOnly = true;
            }
            
            public tsa_CierresFiscalesRow Newtsa_CierresFiscalesRow() {
                return ((tsa_CierresFiscalesRow)(this.NewRow()));
            }
            
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder) {
                return new tsa_CierresFiscalesRow(builder);
            }
            
            protected override System.Type GetRowType() {
                return typeof(tsa_CierresFiscalesRow);
            }
            
            protected override void OnRowChanged(DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.tsa_CierresFiscalesRowChanged != null)) {
                    this.tsa_CierresFiscalesRowChanged(this, new tsa_CierresFiscalesRowChangeEvent(((tsa_CierresFiscalesRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowChanging(DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.tsa_CierresFiscalesRowChanging != null)) {
                    this.tsa_CierresFiscalesRowChanging(this, new tsa_CierresFiscalesRowChangeEvent(((tsa_CierresFiscalesRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleted(DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.tsa_CierresFiscalesRowDeleted != null)) {
                    this.tsa_CierresFiscalesRowDeleted(this, new tsa_CierresFiscalesRowChangeEvent(((tsa_CierresFiscalesRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleting(DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.tsa_CierresFiscalesRowDeleting != null)) {
                    this.tsa_CierresFiscalesRowDeleting(this, new tsa_CierresFiscalesRowChangeEvent(((tsa_CierresFiscalesRow)(e.Row)), e.Action));
                }
            }
            
            public void Removetsa_CierresFiscalesRow(tsa_CierresFiscalesRow row) {
                this.Rows.Remove(row);
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class tsa_CierresFiscalesRow : DataRow {
            
            private tsa_CierresFiscalesDataTable tabletsa_CierresFiscales;
            
            internal tsa_CierresFiscalesRow(DataRowBuilder rb) : 
                    base(rb) {
                this.tabletsa_CierresFiscales = ((tsa_CierresFiscalesDataTable)(this.Table));
            }
            
            public string IdCierreFiscal {
                get {
                    return ((string)(this[this.tabletsa_CierresFiscales.IdCierreFiscalColumn]));
                }
                set {
                    this[this.tabletsa_CierresFiscales.IdCierreFiscalColumn] = value;
                }
            }
            
            public System.DateTime Fecha {
                get {
                    try {
                        return ((System.DateTime)(this[this.tabletsa_CierresFiscales.FechaColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletsa_CierresFiscales.FechaColumn] = value;
                }
            }
            
            public string Sucursal {
                get {
                    return ((string)(this[this.tabletsa_CierresFiscales.SucursalColumn]));
                }
                set {
                    this[this.tabletsa_CierresFiscales.SucursalColumn] = value;
                }
            }
            
            public string Tipo {
                get {
                    return ((string)(this[this.tabletsa_CierresFiscales.TipoColumn]));
                }
                set {
                    this[this.tabletsa_CierresFiscales.TipoColumn] = value;
                }
            }
            
            public string Numero {
                get {
                    return ((string)(this[this.tabletsa_CierresFiscales.NumeroColumn]));
                }
                set {
                    this[this.tabletsa_CierresFiscales.NumeroColumn] = value;
                }
            }
            
            public System.Decimal Comprobantes_Neto {
                get {
                    try {
                        return ((System.Decimal)(this[this.tabletsa_CierresFiscales.Comprobantes_NetoColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletsa_CierresFiscales.Comprobantes_NetoColumn] = value;
                }
            }
            
            public System.Decimal Comprobantes_IVA {
                get {
                    try {
                        return ((System.Decimal)(this[this.tabletsa_CierresFiscales.Comprobantes_IVAColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletsa_CierresFiscales.Comprobantes_IVAColumn] = value;
                }
            }
            
            public System.Decimal Comprobantes_II {
                get {
                    try {
                        return ((System.Decimal)(this[this.tabletsa_CierresFiscales.Comprobantes_IIColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletsa_CierresFiscales.Comprobantes_IIColumn] = value;
                }
            }
            
            public System.Decimal Comprobantes_NoGravados {
                get {
                    try {
                        return ((System.Decimal)(this[this.tabletsa_CierresFiscales.Comprobantes_NoGravadosColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletsa_CierresFiscales.Comprobantes_NoGravadosColumn] = value;
                }
            }
            
            public System.Decimal Comprobantes_Percepciones {
                get {
                    try {
                        return ((System.Decimal)(this[this.tabletsa_CierresFiscales.Comprobantes_PercepcionesColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletsa_CierresFiscales.Comprobantes_PercepcionesColumn] = value;
                }
            }
            
            public int Comprobantes_Emitidos {
                get {
                    try {
                        return ((int)(this[this.tabletsa_CierresFiscales.Comprobantes_EmitidosColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletsa_CierresFiscales.Comprobantes_EmitidosColumn] = value;
                }
            }
            
            public int Comprobantes_Cancelados {
                get {
                    try {
                        return ((int)(this[this.tabletsa_CierresFiscales.Comprobantes_CanceladosColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletsa_CierresFiscales.Comprobantes_CanceladosColumn] = value;
                }
            }
            
            public System.Decimal NC_Neto {
                get {
                    try {
                        return ((System.Decimal)(this[this.tabletsa_CierresFiscales.NC_NetoColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletsa_CierresFiscales.NC_NetoColumn] = value;
                }
            }
            
            public System.Decimal NC_IVA {
                get {
                    try {
                        return ((System.Decimal)(this[this.tabletsa_CierresFiscales.NC_IVAColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletsa_CierresFiscales.NC_IVAColumn] = value;
                }
            }
            
            public System.Decimal NC_II {
                get {
                    try {
                        return ((System.Decimal)(this[this.tabletsa_CierresFiscales.NC_IIColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletsa_CierresFiscales.NC_IIColumn] = value;
                }
            }
            
            public System.Decimal NC_NoGravados {
                get {
                    try {
                        return ((System.Decimal)(this[this.tabletsa_CierresFiscales.NC_NoGravadosColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletsa_CierresFiscales.NC_NoGravadosColumn] = value;
                }
            }
            
            public System.Decimal NC_Percepciones {
                get {
                    try {
                        return ((System.Decimal)(this[this.tabletsa_CierresFiscales.NC_PercepcionesColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletsa_CierresFiscales.NC_PercepcionesColumn] = value;
                }
            }
            
            public int NC_Emitidos {
                get {
                    try {
                        return ((int)(this[this.tabletsa_CierresFiscales.NC_EmitidosColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletsa_CierresFiscales.NC_EmitidosColumn] = value;
                }
            }
            
            public int NC_Cancelados {
                get {
                    try {
                        return ((int)(this[this.tabletsa_CierresFiscales.NC_CanceladosColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletsa_CierresFiscales.NC_CanceladosColumn] = value;
                }
            }
            
            public int UltimoComprobanteA {
                get {
                    try {
                        return ((int)(this[this.tabletsa_CierresFiscales.UltimoComprobanteAColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletsa_CierresFiscales.UltimoComprobanteAColumn] = value;
                }
            }
            
            public int UltimoComprobanteB {
                get {
                    try {
                        return ((int)(this[this.tabletsa_CierresFiscales.UltimoComprobanteBColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletsa_CierresFiscales.UltimoComprobanteBColumn] = value;
                }
            }
            
            public int UltimaNCA {
                get {
                    try {
                        return ((int)(this[this.tabletsa_CierresFiscales.UltimaNCAColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletsa_CierresFiscales.UltimaNCAColumn] = value;
                }
            }
            
            public int UltimaNCB {
                get {
                    try {
                        return ((int)(this[this.tabletsa_CierresFiscales.UltimaNCBColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletsa_CierresFiscales.UltimaNCBColumn] = value;
                }
            }
            
            public int UltimoRemito {
                get {
                    try {
                        return ((int)(this[this.tabletsa_CierresFiscales.UltimoRemitoColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletsa_CierresFiscales.UltimoRemitoColumn] = value;
                }
            }
            
            public int Remitos_Emitidos {
                get {
                    try {
                        return ((int)(this[this.tabletsa_CierresFiscales.Remitos_EmitidosColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletsa_CierresFiscales.Remitos_EmitidosColumn] = value;
                }
            }
            
            public int DocumentosNF_Emitidos {
                get {
                    try {
                        return ((int)(this[this.tabletsa_CierresFiscales.DocumentosNF_EmitidosColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletsa_CierresFiscales.DocumentosNF_EmitidosColumn] = value;
                }
            }
            
            public int DocumentosNFH_Emitidos {
                get {
                    try {
                        return ((int)(this[this.tabletsa_CierresFiscales.DocumentosNFH_EmitidosColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletsa_CierresFiscales.DocumentosNFH_EmitidosColumn] = value;
                }
            }
            
            public string IdResponsable {
                get {
                    try {
                        return ((string)(this[this.tabletsa_CierresFiscales.IdResponsableColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletsa_CierresFiscales.IdResponsableColumn] = value;
                }
            }
            
            public string Observacion {
                get {
                    try {
                        return ((string)(this[this.tabletsa_CierresFiscales.ObservacionColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletsa_CierresFiscales.ObservacionColumn] = value;
                }
            }
            
            public System.DateTime FechaCreacion {
                get {
                    try {
                        return ((System.DateTime)(this[this.tabletsa_CierresFiscales.FechaCreacionColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletsa_CierresFiscales.FechaCreacionColumn] = value;
                }
            }
            
            public long IdConexionCreacion {
                get {
                    try {
                        return ((long)(this[this.tabletsa_CierresFiscales.IdConexionCreacionColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletsa_CierresFiscales.IdConexionCreacionColumn] = value;
                }
            }
            
            public System.Byte[] UltimaModificacion {
                get {
                    try {
                        return ((System.Byte[])(this[this.tabletsa_CierresFiscales.UltimaModificacionColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletsa_CierresFiscales.UltimaModificacionColumn] = value;
                }
            }
            
            public long IdConexionUltimaModificacion {
                get {
                    try {
                        return ((long)(this[this.tabletsa_CierresFiscales.IdConexionUltimaModificacionColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletsa_CierresFiscales.IdConexionUltimaModificacionColumn] = value;
                }
            }
            
            public long IdReservado {
                get {
                    try {
                        return ((long)(this[this.tabletsa_CierresFiscales.IdReservadoColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletsa_CierresFiscales.IdReservadoColumn] = value;
                }
            }
            
            public System.Guid RowId {
                get {
                    try {
                        return ((System.Guid)(this[this.tabletsa_CierresFiscales.RowIdColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletsa_CierresFiscales.RowIdColumn] = value;
                }
            }
            
            public long IdSucursal {
                get {
                    try {
                        return ((long)(this[this.tabletsa_CierresFiscales.IdSucursalColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletsa_CierresFiscales.IdSucursalColumn] = value;
                }
            }
            
            public long IdEmpresa {
                get {
                    try {
                        return ((long)(this[this.tabletsa_CierresFiscales.IdEmpresaColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletsa_CierresFiscales.IdEmpresaColumn] = value;
                }
            }
            
            public bool IsFechaNull() {
                return this.IsNull(this.tabletsa_CierresFiscales.FechaColumn);
            }
            
            public void SetFechaNull() {
                this[this.tabletsa_CierresFiscales.FechaColumn] = System.Convert.DBNull;
            }
            
            public bool IsComprobantes_NetoNull() {
                return this.IsNull(this.tabletsa_CierresFiscales.Comprobantes_NetoColumn);
            }
            
            public void SetComprobantes_NetoNull() {
                this[this.tabletsa_CierresFiscales.Comprobantes_NetoColumn] = System.Convert.DBNull;
            }
            
            public bool IsComprobantes_IVANull() {
                return this.IsNull(this.tabletsa_CierresFiscales.Comprobantes_IVAColumn);
            }
            
            public void SetComprobantes_IVANull() {
                this[this.tabletsa_CierresFiscales.Comprobantes_IVAColumn] = System.Convert.DBNull;
            }
            
            public bool IsComprobantes_IINull() {
                return this.IsNull(this.tabletsa_CierresFiscales.Comprobantes_IIColumn);
            }
            
            public void SetComprobantes_IINull() {
                this[this.tabletsa_CierresFiscales.Comprobantes_IIColumn] = System.Convert.DBNull;
            }
            
            public bool IsComprobantes_NoGravadosNull() {
                return this.IsNull(this.tabletsa_CierresFiscales.Comprobantes_NoGravadosColumn);
            }
            
            public void SetComprobantes_NoGravadosNull() {
                this[this.tabletsa_CierresFiscales.Comprobantes_NoGravadosColumn] = System.Convert.DBNull;
            }
            
            public bool IsComprobantes_PercepcionesNull() {
                return this.IsNull(this.tabletsa_CierresFiscales.Comprobantes_PercepcionesColumn);
            }
            
            public void SetComprobantes_PercepcionesNull() {
                this[this.tabletsa_CierresFiscales.Comprobantes_PercepcionesColumn] = System.Convert.DBNull;
            }
            
            public bool IsComprobantes_EmitidosNull() {
                return this.IsNull(this.tabletsa_CierresFiscales.Comprobantes_EmitidosColumn);
            }
            
            public void SetComprobantes_EmitidosNull() {
                this[this.tabletsa_CierresFiscales.Comprobantes_EmitidosColumn] = System.Convert.DBNull;
            }
            
            public bool IsComprobantes_CanceladosNull() {
                return this.IsNull(this.tabletsa_CierresFiscales.Comprobantes_CanceladosColumn);
            }
            
            public void SetComprobantes_CanceladosNull() {
                this[this.tabletsa_CierresFiscales.Comprobantes_CanceladosColumn] = System.Convert.DBNull;
            }
            
            public bool IsNC_NetoNull() {
                return this.IsNull(this.tabletsa_CierresFiscales.NC_NetoColumn);
            }
            
            public void SetNC_NetoNull() {
                this[this.tabletsa_CierresFiscales.NC_NetoColumn] = System.Convert.DBNull;
            }
            
            public bool IsNC_IVANull() {
                return this.IsNull(this.tabletsa_CierresFiscales.NC_IVAColumn);
            }
            
            public void SetNC_IVANull() {
                this[this.tabletsa_CierresFiscales.NC_IVAColumn] = System.Convert.DBNull;
            }
            
            public bool IsNC_IINull() {
                return this.IsNull(this.tabletsa_CierresFiscales.NC_IIColumn);
            }
            
            public void SetNC_IINull() {
                this[this.tabletsa_CierresFiscales.NC_IIColumn] = System.Convert.DBNull;
            }
            
            public bool IsNC_NoGravadosNull() {
                return this.IsNull(this.tabletsa_CierresFiscales.NC_NoGravadosColumn);
            }
            
            public void SetNC_NoGravadosNull() {
                this[this.tabletsa_CierresFiscales.NC_NoGravadosColumn] = System.Convert.DBNull;
            }
            
            public bool IsNC_PercepcionesNull() {
                return this.IsNull(this.tabletsa_CierresFiscales.NC_PercepcionesColumn);
            }
            
            public void SetNC_PercepcionesNull() {
                this[this.tabletsa_CierresFiscales.NC_PercepcionesColumn] = System.Convert.DBNull;
            }
            
            public bool IsNC_EmitidosNull() {
                return this.IsNull(this.tabletsa_CierresFiscales.NC_EmitidosColumn);
            }
            
            public void SetNC_EmitidosNull() {
                this[this.tabletsa_CierresFiscales.NC_EmitidosColumn] = System.Convert.DBNull;
            }
            
            public bool IsNC_CanceladosNull() {
                return this.IsNull(this.tabletsa_CierresFiscales.NC_CanceladosColumn);
            }
            
            public void SetNC_CanceladosNull() {
                this[this.tabletsa_CierresFiscales.NC_CanceladosColumn] = System.Convert.DBNull;
            }
            
            public bool IsUltimoComprobanteANull() {
                return this.IsNull(this.tabletsa_CierresFiscales.UltimoComprobanteAColumn);
            }
            
            public void SetUltimoComprobanteANull() {
                this[this.tabletsa_CierresFiscales.UltimoComprobanteAColumn] = System.Convert.DBNull;
            }
            
            public bool IsUltimoComprobanteBNull() {
                return this.IsNull(this.tabletsa_CierresFiscales.UltimoComprobanteBColumn);
            }
            
            public void SetUltimoComprobanteBNull() {
                this[this.tabletsa_CierresFiscales.UltimoComprobanteBColumn] = System.Convert.DBNull;
            }
            
            public bool IsUltimaNCANull() {
                return this.IsNull(this.tabletsa_CierresFiscales.UltimaNCAColumn);
            }
            
            public void SetUltimaNCANull() {
                this[this.tabletsa_CierresFiscales.UltimaNCAColumn] = System.Convert.DBNull;
            }
            
            public bool IsUltimaNCBNull() {
                return this.IsNull(this.tabletsa_CierresFiscales.UltimaNCBColumn);
            }
            
            public void SetUltimaNCBNull() {
                this[this.tabletsa_CierresFiscales.UltimaNCBColumn] = System.Convert.DBNull;
            }
            
            public bool IsUltimoRemitoNull() {
                return this.IsNull(this.tabletsa_CierresFiscales.UltimoRemitoColumn);
            }
            
            public void SetUltimoRemitoNull() {
                this[this.tabletsa_CierresFiscales.UltimoRemitoColumn] = System.Convert.DBNull;
            }
            
            public bool IsRemitos_EmitidosNull() {
                return this.IsNull(this.tabletsa_CierresFiscales.Remitos_EmitidosColumn);
            }
            
            public void SetRemitos_EmitidosNull() {
                this[this.tabletsa_CierresFiscales.Remitos_EmitidosColumn] = System.Convert.DBNull;
            }
            
            public bool IsDocumentosNF_EmitidosNull() {
                return this.IsNull(this.tabletsa_CierresFiscales.DocumentosNF_EmitidosColumn);
            }
            
            public void SetDocumentosNF_EmitidosNull() {
                this[this.tabletsa_CierresFiscales.DocumentosNF_EmitidosColumn] = System.Convert.DBNull;
            }
            
            public bool IsDocumentosNFH_EmitidosNull() {
                return this.IsNull(this.tabletsa_CierresFiscales.DocumentosNFH_EmitidosColumn);
            }
            
            public void SetDocumentosNFH_EmitidosNull() {
                this[this.tabletsa_CierresFiscales.DocumentosNFH_EmitidosColumn] = System.Convert.DBNull;
            }
            
            public bool IsIdResponsableNull() {
                return this.IsNull(this.tabletsa_CierresFiscales.IdResponsableColumn);
            }
            
            public void SetIdResponsableNull() {
                this[this.tabletsa_CierresFiscales.IdResponsableColumn] = System.Convert.DBNull;
            }
            
            public bool IsObservacionNull() {
                return this.IsNull(this.tabletsa_CierresFiscales.ObservacionColumn);
            }
            
            public void SetObservacionNull() {
                this[this.tabletsa_CierresFiscales.ObservacionColumn] = System.Convert.DBNull;
            }
            
            public bool IsFechaCreacionNull() {
                return this.IsNull(this.tabletsa_CierresFiscales.FechaCreacionColumn);
            }
            
            public void SetFechaCreacionNull() {
                this[this.tabletsa_CierresFiscales.FechaCreacionColumn] = System.Convert.DBNull;
            }
            
            public bool IsIdConexionCreacionNull() {
                return this.IsNull(this.tabletsa_CierresFiscales.IdConexionCreacionColumn);
            }
            
            public void SetIdConexionCreacionNull() {
                this[this.tabletsa_CierresFiscales.IdConexionCreacionColumn] = System.Convert.DBNull;
            }
            
            public bool IsUltimaModificacionNull() {
                return this.IsNull(this.tabletsa_CierresFiscales.UltimaModificacionColumn);
            }
            
            public void SetUltimaModificacionNull() {
                this[this.tabletsa_CierresFiscales.UltimaModificacionColumn] = System.Convert.DBNull;
            }
            
            public bool IsIdConexionUltimaModificacionNull() {
                return this.IsNull(this.tabletsa_CierresFiscales.IdConexionUltimaModificacionColumn);
            }
            
            public void SetIdConexionUltimaModificacionNull() {
                this[this.tabletsa_CierresFiscales.IdConexionUltimaModificacionColumn] = System.Convert.DBNull;
            }
            
            public bool IsIdReservadoNull() {
                return this.IsNull(this.tabletsa_CierresFiscales.IdReservadoColumn);
            }
            
            public void SetIdReservadoNull() {
                this[this.tabletsa_CierresFiscales.IdReservadoColumn] = System.Convert.DBNull;
            }
            
            public bool IsRowIdNull() {
                return this.IsNull(this.tabletsa_CierresFiscales.RowIdColumn);
            }
            
            public void SetRowIdNull() {
                this[this.tabletsa_CierresFiscales.RowIdColumn] = System.Convert.DBNull;
            }
            
            public bool IsIdSucursalNull() {
                return this.IsNull(this.tabletsa_CierresFiscales.IdSucursalColumn);
            }
            
            public void SetIdSucursalNull() {
                this[this.tabletsa_CierresFiscales.IdSucursalColumn] = System.Convert.DBNull;
            }
            
            public bool IsIdEmpresaNull() {
                return this.IsNull(this.tabletsa_CierresFiscales.IdEmpresaColumn);
            }
            
            public void SetIdEmpresaNull() {
                this[this.tabletsa_CierresFiscales.IdEmpresaColumn] = System.Convert.DBNull;
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class tsa_CierresFiscalesRowChangeEvent : EventArgs {
            
            private tsa_CierresFiscalesRow eventRow;
            
            private DataRowAction eventAction;
            
            public tsa_CierresFiscalesRowChangeEvent(tsa_CierresFiscalesRow row, DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            public tsa_CierresFiscalesRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            public DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
