//------------------------------------------------------------------------------
// <autogenerated>
//     This code was generated by a tool.
//     Runtime Version: 1.1.4322.2407
//
//     Changes to this file may cause incorrect behavior and will be lost if 
//     the code is regenerated.
// </autogenerated>
//------------------------------------------------------------------------------

namespace mz.erp.commontypes.data {
    using System;
    using System.Data;
    using System.Xml;
    using System.Runtime.Serialization;
    
    
    [Serializable()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Diagnostics.DebuggerStepThrough()]
    [System.ComponentModel.ToolboxItem(true)]
    public class tpu_ComprobantesDeCompraDetConfirmacionDePreciosDataset : DataSet {
        
        private tpu_ComprobantesDeCompraDetConfirmacionDePreciosDataTable tabletpu_ComprobantesDeCompraDetConfirmacionDePrecios;
        
        public tpu_ComprobantesDeCompraDetConfirmacionDePreciosDataset() {
            this.InitClass();
            System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            this.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        protected tpu_ComprobantesDeCompraDetConfirmacionDePreciosDataset(SerializationInfo info, StreamingContext context) {
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((strSchema != null)) {
                DataSet ds = new DataSet();
                ds.ReadXmlSchema(new XmlTextReader(new System.IO.StringReader(strSchema)));
                if ((ds.Tables["tpu_ComprobantesDeCompraDetConfirmacionDePrecios"] != null)) {
                    this.Tables.Add(new tpu_ComprobantesDeCompraDetConfirmacionDePreciosDataTable(ds.Tables["tpu_ComprobantesDeCompraDetConfirmacionDePrecios"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.InitClass();
            }
            this.GetSerializationData(info, context);
            System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            this.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public tpu_ComprobantesDeCompraDetConfirmacionDePreciosDataTable tpu_ComprobantesDeCompraDetConfirmacionDePrecios {
            get {
                return this.tabletpu_ComprobantesDeCompraDetConfirmacionDePrecios;
            }
        }
        
        public override DataSet Clone() {
            tpu_ComprobantesDeCompraDetConfirmacionDePreciosDataset cln = ((tpu_ComprobantesDeCompraDetConfirmacionDePreciosDataset)(base.Clone()));
            cln.InitVars();
            return cln;
        }
        
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        protected override void ReadXmlSerializable(XmlReader reader) {
            this.Reset();
            DataSet ds = new DataSet();
            ds.ReadXml(reader);
            if ((ds.Tables["tpu_ComprobantesDeCompraDetConfirmacionDePrecios"] != null)) {
                this.Tables.Add(new tpu_ComprobantesDeCompraDetConfirmacionDePreciosDataTable(ds.Tables["tpu_ComprobantesDeCompraDetConfirmacionDePrecios"]));
            }
            this.DataSetName = ds.DataSetName;
            this.Prefix = ds.Prefix;
            this.Namespace = ds.Namespace;
            this.Locale = ds.Locale;
            this.CaseSensitive = ds.CaseSensitive;
            this.EnforceConstraints = ds.EnforceConstraints;
            this.Merge(ds, false, System.Data.MissingSchemaAction.Add);
            this.InitVars();
        }
        
        protected override System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            System.IO.MemoryStream stream = new System.IO.MemoryStream();
            this.WriteXmlSchema(new XmlTextWriter(stream, null));
            stream.Position = 0;
            return System.Xml.Schema.XmlSchema.Read(new XmlTextReader(stream), null);
        }
        
        internal void InitVars() {
            this.tabletpu_ComprobantesDeCompraDetConfirmacionDePrecios = ((tpu_ComprobantesDeCompraDetConfirmacionDePreciosDataTable)(this.Tables["tpu_ComprobantesDeCompraDetConfirmacionDePrecios"]));
            if ((this.tabletpu_ComprobantesDeCompraDetConfirmacionDePrecios != null)) {
                this.tabletpu_ComprobantesDeCompraDetConfirmacionDePrecios.InitVars();
            }
        }
        
        private void InitClass() {
            this.DataSetName = "tpu_ComprobantesDeCompraDetConfirmacionDePreciosDataset";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/tpu_ComprobantesDeCompraDetConfirmacionDePrecios.xsd";
            this.Locale = new System.Globalization.CultureInfo("en-US");
            this.CaseSensitive = false;
            this.EnforceConstraints = true;
            this.tabletpu_ComprobantesDeCompraDetConfirmacionDePrecios = new tpu_ComprobantesDeCompraDetConfirmacionDePreciosDataTable();
            this.Tables.Add(this.tabletpu_ComprobantesDeCompraDetConfirmacionDePrecios);
        }
        
        private bool ShouldSerializetpu_ComprobantesDeCompraDetConfirmacionDePrecios() {
            return false;
        }
        
        private void SchemaChanged(object sender, System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        public delegate void tpu_ComprobantesDeCompraDetConfirmacionDePreciosRowChangeEventHandler(object sender, tpu_ComprobantesDeCompraDetConfirmacionDePreciosRowChangeEvent e);
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class tpu_ComprobantesDeCompraDetConfirmacionDePreciosDataTable : DataTable, System.Collections.IEnumerable {
            
            private DataColumn columnIdComprobante;
            
            private DataColumn columnOrdinal;
            
            private DataColumn columnIdComprobanteOrdenDeCompra;
            
            private DataColumn columnOrdinalOrdenDeCompra;
            
            private DataColumn columnEstado;
            
            private DataColumn columnIdProducto;
            
            private DataColumn columnCantidadOrdenDeCompra;
            
            private DataColumn columnCantidadFactura;
            
            private DataColumn columnPrecioDeCostoOrdenDeCompra;
            
            private DataColumn columnPrecioDeCostoFactura;
            
            private DataColumn columnValorCotizacion;
            
            private DataColumn columnIdMoneda;
            
            private DataColumn columnIdFuenteDeCambio;
            
            private DataColumn columnIdCotizacion;
            
            private DataColumn columnObservaciones;
            
            private DataColumn columnIdMotivoDiferencia;
            
            private DataColumn columnIdConexionCreacion;
            
            private DataColumn columnUltimaModificacion;
            
            private DataColumn columnIdConexionUltimaModificacion;
            
            private DataColumn columnIdReservado;
            
            private DataColumn columnRowId;
            
            private DataColumn columnIdSucursal;
            
            private DataColumn columnIdEmpresa;
            
            private DataColumn columnPrecioDeCostoReal;
            
            private DataColumn columnTieneDiferenciaPorCantidad;
            
            private DataColumn columnTieneDiferenciaPorPrecio;
            
            private DataColumn columnTieneDiferenciaPorCotizacion;
            
            private DataColumn columnCantidadReal;
            
            internal tpu_ComprobantesDeCompraDetConfirmacionDePreciosDataTable() : 
                    base("tpu_ComprobantesDeCompraDetConfirmacionDePrecios") {
                this.InitClass();
            }
            
            internal tpu_ComprobantesDeCompraDetConfirmacionDePreciosDataTable(DataTable table) : 
                    base(table.TableName) {
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
                this.DisplayExpression = table.DisplayExpression;
            }
            
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            internal DataColumn IdComprobanteColumn {
                get {
                    return this.columnIdComprobante;
                }
            }
            
            internal DataColumn OrdinalColumn {
                get {
                    return this.columnOrdinal;
                }
            }
            
            internal DataColumn IdComprobanteOrdenDeCompraColumn {
                get {
                    return this.columnIdComprobanteOrdenDeCompra;
                }
            }
            
            internal DataColumn OrdinalOrdenDeCompraColumn {
                get {
                    return this.columnOrdinalOrdenDeCompra;
                }
            }
            
            internal DataColumn EstadoColumn {
                get {
                    return this.columnEstado;
                }
            }
            
            internal DataColumn IdProductoColumn {
                get {
                    return this.columnIdProducto;
                }
            }
            
            internal DataColumn CantidadOrdenDeCompraColumn {
                get {
                    return this.columnCantidadOrdenDeCompra;
                }
            }
            
            internal DataColumn CantidadFacturaColumn {
                get {
                    return this.columnCantidadFactura;
                }
            }
            
            internal DataColumn PrecioDeCostoOrdenDeCompraColumn {
                get {
                    return this.columnPrecioDeCostoOrdenDeCompra;
                }
            }
            
            internal DataColumn PrecioDeCostoFacturaColumn {
                get {
                    return this.columnPrecioDeCostoFactura;
                }
            }
            
            internal DataColumn ValorCotizacionColumn {
                get {
                    return this.columnValorCotizacion;
                }
            }
            
            internal DataColumn IdMonedaColumn {
                get {
                    return this.columnIdMoneda;
                }
            }
            
            internal DataColumn IdFuenteDeCambioColumn {
                get {
                    return this.columnIdFuenteDeCambio;
                }
            }
            
            internal DataColumn IdCotizacionColumn {
                get {
                    return this.columnIdCotizacion;
                }
            }
            
            internal DataColumn ObservacionesColumn {
                get {
                    return this.columnObservaciones;
                }
            }
            
            internal DataColumn IdMotivoDiferenciaColumn {
                get {
                    return this.columnIdMotivoDiferencia;
                }
            }
            
            internal DataColumn IdConexionCreacionColumn {
                get {
                    return this.columnIdConexionCreacion;
                }
            }
            
            internal DataColumn UltimaModificacionColumn {
                get {
                    return this.columnUltimaModificacion;
                }
            }
            
            internal DataColumn IdConexionUltimaModificacionColumn {
                get {
                    return this.columnIdConexionUltimaModificacion;
                }
            }
            
            internal DataColumn IdReservadoColumn {
                get {
                    return this.columnIdReservado;
                }
            }
            
            internal DataColumn RowIdColumn {
                get {
                    return this.columnRowId;
                }
            }
            
            internal DataColumn IdSucursalColumn {
                get {
                    return this.columnIdSucursal;
                }
            }
            
            internal DataColumn IdEmpresaColumn {
                get {
                    return this.columnIdEmpresa;
                }
            }
            
            internal DataColumn PrecioDeCostoRealColumn {
                get {
                    return this.columnPrecioDeCostoReal;
                }
            }
            
            internal DataColumn TieneDiferenciaPorCantidadColumn {
                get {
                    return this.columnTieneDiferenciaPorCantidad;
                }
            }
            
            internal DataColumn TieneDiferenciaPorPrecioColumn {
                get {
                    return this.columnTieneDiferenciaPorPrecio;
                }
            }
            
            internal DataColumn TieneDiferenciaPorCotizacionColumn {
                get {
                    return this.columnTieneDiferenciaPorCotizacion;
                }
            }
            
            internal DataColumn CantidadRealColumn {
                get {
                    return this.columnCantidadReal;
                }
            }
            
            public tpu_ComprobantesDeCompraDetConfirmacionDePreciosRow this[int index] {
                get {
                    return ((tpu_ComprobantesDeCompraDetConfirmacionDePreciosRow)(this.Rows[index]));
                }
            }
            
            public event tpu_ComprobantesDeCompraDetConfirmacionDePreciosRowChangeEventHandler tpu_ComprobantesDeCompraDetConfirmacionDePreciosRowChanged;
            
            public event tpu_ComprobantesDeCompraDetConfirmacionDePreciosRowChangeEventHandler tpu_ComprobantesDeCompraDetConfirmacionDePreciosRowChanging;
            
            public event tpu_ComprobantesDeCompraDetConfirmacionDePreciosRowChangeEventHandler tpu_ComprobantesDeCompraDetConfirmacionDePreciosRowDeleted;
            
            public event tpu_ComprobantesDeCompraDetConfirmacionDePreciosRowChangeEventHandler tpu_ComprobantesDeCompraDetConfirmacionDePreciosRowDeleting;
            
            public void Addtpu_ComprobantesDeCompraDetConfirmacionDePreciosRow(tpu_ComprobantesDeCompraDetConfirmacionDePreciosRow row) {
                this.Rows.Add(row);
            }
            
            public tpu_ComprobantesDeCompraDetConfirmacionDePreciosRow Addtpu_ComprobantesDeCompraDetConfirmacionDePreciosRow(
                        string IdComprobante, 
                        long Ordinal, 
                        string IdComprobanteOrdenDeCompra, 
                        long OrdinalOrdenDeCompra, 
                        string Estado, 
                        string IdProducto, 
                        System.Decimal CantidadOrdenDeCompra, 
                        System.Decimal CantidadFactura, 
                        System.Decimal PrecioDeCostoOrdenDeCompra, 
                        System.Decimal PrecioDeCostoFactura, 
                        System.Decimal ValorCotizacion, 
                        string IdMoneda, 
                        string IdFuenteDeCambio, 
                        string IdCotizacion, 
                        string Observaciones, 
                        long IdMotivoDiferencia, 
                        long IdConexionCreacion, 
                        System.Byte[] UltimaModificacion, 
                        long IdConexionUltimaModificacion, 
                        long IdReservado, 
                        System.Guid RowId, 
                        long IdSucursal, 
                        long IdEmpresa, 
                        System.Decimal PrecioDeCostoReal, 
                        bool TieneDiferenciaPorCantidad, 
                        bool TieneDiferenciaPorPrecio, 
                        bool TieneDiferenciaPorCotizacion, 
                        System.Decimal CantidadReal) {
                tpu_ComprobantesDeCompraDetConfirmacionDePreciosRow rowtpu_ComprobantesDeCompraDetConfirmacionDePreciosRow = ((tpu_ComprobantesDeCompraDetConfirmacionDePreciosRow)(this.NewRow()));
                rowtpu_ComprobantesDeCompraDetConfirmacionDePreciosRow.ItemArray = new object[] {
                        IdComprobante,
                        Ordinal,
                        IdComprobanteOrdenDeCompra,
                        OrdinalOrdenDeCompra,
                        Estado,
                        IdProducto,
                        CantidadOrdenDeCompra,
                        CantidadFactura,
                        PrecioDeCostoOrdenDeCompra,
                        PrecioDeCostoFactura,
                        ValorCotizacion,
                        IdMoneda,
                        IdFuenteDeCambio,
                        IdCotizacion,
                        Observaciones,
                        IdMotivoDiferencia,
                        IdConexionCreacion,
                        UltimaModificacion,
                        IdConexionUltimaModificacion,
                        IdReservado,
                        RowId,
                        IdSucursal,
                        IdEmpresa,
                        PrecioDeCostoReal,
                        TieneDiferenciaPorCantidad,
                        TieneDiferenciaPorPrecio,
                        TieneDiferenciaPorCotizacion,
                        CantidadReal};
                this.Rows.Add(rowtpu_ComprobantesDeCompraDetConfirmacionDePreciosRow);
                return rowtpu_ComprobantesDeCompraDetConfirmacionDePreciosRow;
            }
            
            public tpu_ComprobantesDeCompraDetConfirmacionDePreciosRow FindByIdComprobanteOrdinal(string IdComprobante, long Ordinal) {
                return ((tpu_ComprobantesDeCompraDetConfirmacionDePreciosRow)(this.Rows.Find(new object[] {
                            IdComprobante,
                            Ordinal})));
            }
            
            public System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            public override DataTable Clone() {
                tpu_ComprobantesDeCompraDetConfirmacionDePreciosDataTable cln = ((tpu_ComprobantesDeCompraDetConfirmacionDePreciosDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            protected override DataTable CreateInstance() {
                return new tpu_ComprobantesDeCompraDetConfirmacionDePreciosDataTable();
            }
            
            internal void InitVars() {
                this.columnIdComprobante = this.Columns["IdComprobante"];
                this.columnOrdinal = this.Columns["Ordinal"];
                this.columnIdComprobanteOrdenDeCompra = this.Columns["IdComprobanteOrdenDeCompra"];
                this.columnOrdinalOrdenDeCompra = this.Columns["OrdinalOrdenDeCompra"];
                this.columnEstado = this.Columns["Estado"];
                this.columnIdProducto = this.Columns["IdProducto"];
                this.columnCantidadOrdenDeCompra = this.Columns["CantidadOrdenDeCompra"];
                this.columnCantidadFactura = this.Columns["CantidadFactura"];
                this.columnPrecioDeCostoOrdenDeCompra = this.Columns["PrecioDeCostoOrdenDeCompra"];
                this.columnPrecioDeCostoFactura = this.Columns["PrecioDeCostoFactura"];
                this.columnValorCotizacion = this.Columns["ValorCotizacion"];
                this.columnIdMoneda = this.Columns["IdMoneda"];
                this.columnIdFuenteDeCambio = this.Columns["IdFuenteDeCambio"];
                this.columnIdCotizacion = this.Columns["IdCotizacion"];
                this.columnObservaciones = this.Columns["Observaciones"];
                this.columnIdMotivoDiferencia = this.Columns["IdMotivoDiferencia"];
                this.columnIdConexionCreacion = this.Columns["IdConexionCreacion"];
                this.columnUltimaModificacion = this.Columns["UltimaModificacion"];
                this.columnIdConexionUltimaModificacion = this.Columns["IdConexionUltimaModificacion"];
                this.columnIdReservado = this.Columns["IdReservado"];
                this.columnRowId = this.Columns["RowId"];
                this.columnIdSucursal = this.Columns["IdSucursal"];
                this.columnIdEmpresa = this.Columns["IdEmpresa"];
                this.columnPrecioDeCostoReal = this.Columns["PrecioDeCostoReal"];
                this.columnTieneDiferenciaPorCantidad = this.Columns["TieneDiferenciaPorCantidad"];
                this.columnTieneDiferenciaPorPrecio = this.Columns["TieneDiferenciaPorPrecio"];
                this.columnTieneDiferenciaPorCotizacion = this.Columns["TieneDiferenciaPorCotizacion"];
                this.columnCantidadReal = this.Columns["CantidadReal"];
            }
            
            private void InitClass() {
                this.columnIdComprobante = new DataColumn("IdComprobante", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdComprobante);
                this.columnOrdinal = new DataColumn("Ordinal", typeof(long), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnOrdinal);
                this.columnIdComprobanteOrdenDeCompra = new DataColumn("IdComprobanteOrdenDeCompra", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdComprobanteOrdenDeCompra);
                this.columnOrdinalOrdenDeCompra = new DataColumn("OrdinalOrdenDeCompra", typeof(long), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnOrdinalOrdenDeCompra);
                this.columnEstado = new DataColumn("Estado", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnEstado);
                this.columnIdProducto = new DataColumn("IdProducto", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdProducto);
                this.columnCantidadOrdenDeCompra = new DataColumn("CantidadOrdenDeCompra", typeof(System.Decimal), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnCantidadOrdenDeCompra);
                this.columnCantidadFactura = new DataColumn("CantidadFactura", typeof(System.Decimal), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnCantidadFactura);
                this.columnPrecioDeCostoOrdenDeCompra = new DataColumn("PrecioDeCostoOrdenDeCompra", typeof(System.Decimal), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnPrecioDeCostoOrdenDeCompra);
                this.columnPrecioDeCostoFactura = new DataColumn("PrecioDeCostoFactura", typeof(System.Decimal), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnPrecioDeCostoFactura);
                this.columnValorCotizacion = new DataColumn("ValorCotizacion", typeof(System.Decimal), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnValorCotizacion);
                this.columnIdMoneda = new DataColumn("IdMoneda", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdMoneda);
                this.columnIdFuenteDeCambio = new DataColumn("IdFuenteDeCambio", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdFuenteDeCambio);
                this.columnIdCotizacion = new DataColumn("IdCotizacion", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdCotizacion);
                this.columnObservaciones = new DataColumn("Observaciones", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnObservaciones);
                this.columnIdMotivoDiferencia = new DataColumn("IdMotivoDiferencia", typeof(long), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdMotivoDiferencia);
                this.columnIdConexionCreacion = new DataColumn("IdConexionCreacion", typeof(long), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdConexionCreacion);
                this.columnUltimaModificacion = new DataColumn("UltimaModificacion", typeof(System.Byte[]), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnUltimaModificacion);
                this.columnIdConexionUltimaModificacion = new DataColumn("IdConexionUltimaModificacion", typeof(long), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdConexionUltimaModificacion);
                this.columnIdReservado = new DataColumn("IdReservado", typeof(long), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdReservado);
                this.columnRowId = new DataColumn("RowId", typeof(System.Guid), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnRowId);
                this.columnIdSucursal = new DataColumn("IdSucursal", typeof(long), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdSucursal);
                this.columnIdEmpresa = new DataColumn("IdEmpresa", typeof(long), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdEmpresa);
                this.columnPrecioDeCostoReal = new DataColumn("PrecioDeCostoReal", typeof(System.Decimal), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnPrecioDeCostoReal);
                this.columnTieneDiferenciaPorCantidad = new DataColumn("TieneDiferenciaPorCantidad", typeof(bool), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnTieneDiferenciaPorCantidad);
                this.columnTieneDiferenciaPorPrecio = new DataColumn("TieneDiferenciaPorPrecio", typeof(bool), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnTieneDiferenciaPorPrecio);
                this.columnTieneDiferenciaPorCotizacion = new DataColumn("TieneDiferenciaPorCotizacion", typeof(bool), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnTieneDiferenciaPorCotizacion);
                this.columnCantidadReal = new DataColumn("CantidadReal", typeof(System.Decimal), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnCantidadReal);
                this.Constraints.Add(new UniqueConstraint("tpu_ComprobantesDeCompraDetConfirmacionDePreciosDatasetKey1", new DataColumn[] {
                                this.columnIdComprobante,
                                this.columnOrdinal}, true));
                this.columnIdComprobante.AllowDBNull = false;
                this.columnOrdinal.AllowDBNull = false;
                this.columnEstado.AllowDBNull = false;
                this.columnIdProducto.AllowDBNull = false;
                this.columnCantidadOrdenDeCompra.AllowDBNull = false;
                this.columnCantidadFactura.AllowDBNull = false;
                this.columnPrecioDeCostoOrdenDeCompra.AllowDBNull = false;
                this.columnPrecioDeCostoFactura.AllowDBNull = false;
                this.columnValorCotizacion.AllowDBNull = false;
                this.columnIdMoneda.AllowDBNull = false;
                this.columnIdFuenteDeCambio.AllowDBNull = false;
                this.columnUltimaModificacion.ReadOnly = true;
            }
            
            public tpu_ComprobantesDeCompraDetConfirmacionDePreciosRow Newtpu_ComprobantesDeCompraDetConfirmacionDePreciosRow() {
                return ((tpu_ComprobantesDeCompraDetConfirmacionDePreciosRow)(this.NewRow()));
            }
            
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder) {
                return new tpu_ComprobantesDeCompraDetConfirmacionDePreciosRow(builder);
            }
            
            protected override System.Type GetRowType() {
                return typeof(tpu_ComprobantesDeCompraDetConfirmacionDePreciosRow);
            }
            
            protected override void OnRowChanged(DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.tpu_ComprobantesDeCompraDetConfirmacionDePreciosRowChanged != null)) {
                    this.tpu_ComprobantesDeCompraDetConfirmacionDePreciosRowChanged(this, new tpu_ComprobantesDeCompraDetConfirmacionDePreciosRowChangeEvent(((tpu_ComprobantesDeCompraDetConfirmacionDePreciosRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowChanging(DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.tpu_ComprobantesDeCompraDetConfirmacionDePreciosRowChanging != null)) {
                    this.tpu_ComprobantesDeCompraDetConfirmacionDePreciosRowChanging(this, new tpu_ComprobantesDeCompraDetConfirmacionDePreciosRowChangeEvent(((tpu_ComprobantesDeCompraDetConfirmacionDePreciosRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleted(DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.tpu_ComprobantesDeCompraDetConfirmacionDePreciosRowDeleted != null)) {
                    this.tpu_ComprobantesDeCompraDetConfirmacionDePreciosRowDeleted(this, new tpu_ComprobantesDeCompraDetConfirmacionDePreciosRowChangeEvent(((tpu_ComprobantesDeCompraDetConfirmacionDePreciosRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleting(DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.tpu_ComprobantesDeCompraDetConfirmacionDePreciosRowDeleting != null)) {
                    this.tpu_ComprobantesDeCompraDetConfirmacionDePreciosRowDeleting(this, new tpu_ComprobantesDeCompraDetConfirmacionDePreciosRowChangeEvent(((tpu_ComprobantesDeCompraDetConfirmacionDePreciosRow)(e.Row)), e.Action));
                }
            }
            
            public void Removetpu_ComprobantesDeCompraDetConfirmacionDePreciosRow(tpu_ComprobantesDeCompraDetConfirmacionDePreciosRow row) {
                this.Rows.Remove(row);
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class tpu_ComprobantesDeCompraDetConfirmacionDePreciosRow : DataRow {
            
            private tpu_ComprobantesDeCompraDetConfirmacionDePreciosDataTable tabletpu_ComprobantesDeCompraDetConfirmacionDePrecios;
            
            internal tpu_ComprobantesDeCompraDetConfirmacionDePreciosRow(DataRowBuilder rb) : 
                    base(rb) {
                this.tabletpu_ComprobantesDeCompraDetConfirmacionDePrecios = ((tpu_ComprobantesDeCompraDetConfirmacionDePreciosDataTable)(this.Table));
            }
            
            public string IdComprobante {
                get {
                    return ((string)(this[this.tabletpu_ComprobantesDeCompraDetConfirmacionDePrecios.IdComprobanteColumn]));
                }
                set {
                    this[this.tabletpu_ComprobantesDeCompraDetConfirmacionDePrecios.IdComprobanteColumn] = value;
                }
            }
            
            public long Ordinal {
                get {
                    return ((long)(this[this.tabletpu_ComprobantesDeCompraDetConfirmacionDePrecios.OrdinalColumn]));
                }
                set {
                    this[this.tabletpu_ComprobantesDeCompraDetConfirmacionDePrecios.OrdinalColumn] = value;
                }
            }
            
            public string IdComprobanteOrdenDeCompra {
                get {
                    try {
                        return ((string)(this[this.tabletpu_ComprobantesDeCompraDetConfirmacionDePrecios.IdComprobanteOrdenDeCompraColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletpu_ComprobantesDeCompraDetConfirmacionDePrecios.IdComprobanteOrdenDeCompraColumn] = value;
                }
            }
            
            public long OrdinalOrdenDeCompra {
                get {
                    try {
                        return ((long)(this[this.tabletpu_ComprobantesDeCompraDetConfirmacionDePrecios.OrdinalOrdenDeCompraColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletpu_ComprobantesDeCompraDetConfirmacionDePrecios.OrdinalOrdenDeCompraColumn] = value;
                }
            }
            
            public string Estado {
                get {
                    return ((string)(this[this.tabletpu_ComprobantesDeCompraDetConfirmacionDePrecios.EstadoColumn]));
                }
                set {
                    this[this.tabletpu_ComprobantesDeCompraDetConfirmacionDePrecios.EstadoColumn] = value;
                }
            }
            
            public string IdProducto {
                get {
                    return ((string)(this[this.tabletpu_ComprobantesDeCompraDetConfirmacionDePrecios.IdProductoColumn]));
                }
                set {
                    this[this.tabletpu_ComprobantesDeCompraDetConfirmacionDePrecios.IdProductoColumn] = value;
                }
            }
            
            public System.Decimal CantidadOrdenDeCompra {
                get {
                    return ((System.Decimal)(this[this.tabletpu_ComprobantesDeCompraDetConfirmacionDePrecios.CantidadOrdenDeCompraColumn]));
                }
                set {
                    this[this.tabletpu_ComprobantesDeCompraDetConfirmacionDePrecios.CantidadOrdenDeCompraColumn] = value;
                }
            }
            
            public System.Decimal CantidadFactura {
                get {
                    return ((System.Decimal)(this[this.tabletpu_ComprobantesDeCompraDetConfirmacionDePrecios.CantidadFacturaColumn]));
                }
                set {
                    this[this.tabletpu_ComprobantesDeCompraDetConfirmacionDePrecios.CantidadFacturaColumn] = value;
                }
            }
            
            public System.Decimal PrecioDeCostoOrdenDeCompra {
                get {
                    return ((System.Decimal)(this[this.tabletpu_ComprobantesDeCompraDetConfirmacionDePrecios.PrecioDeCostoOrdenDeCompraColumn]));
                }
                set {
                    this[this.tabletpu_ComprobantesDeCompraDetConfirmacionDePrecios.PrecioDeCostoOrdenDeCompraColumn] = value;
                }
            }
            
            public System.Decimal PrecioDeCostoFactura {
                get {
                    return ((System.Decimal)(this[this.tabletpu_ComprobantesDeCompraDetConfirmacionDePrecios.PrecioDeCostoFacturaColumn]));
                }
                set {
                    this[this.tabletpu_ComprobantesDeCompraDetConfirmacionDePrecios.PrecioDeCostoFacturaColumn] = value;
                }
            }
            
            public System.Decimal ValorCotizacion {
                get {
                    return ((System.Decimal)(this[this.tabletpu_ComprobantesDeCompraDetConfirmacionDePrecios.ValorCotizacionColumn]));
                }
                set {
                    this[this.tabletpu_ComprobantesDeCompraDetConfirmacionDePrecios.ValorCotizacionColumn] = value;
                }
            }
            
            public string IdMoneda {
                get {
                    return ((string)(this[this.tabletpu_ComprobantesDeCompraDetConfirmacionDePrecios.IdMonedaColumn]));
                }
                set {
                    this[this.tabletpu_ComprobantesDeCompraDetConfirmacionDePrecios.IdMonedaColumn] = value;
                }
            }
            
            public string IdFuenteDeCambio {
                get {
                    return ((string)(this[this.tabletpu_ComprobantesDeCompraDetConfirmacionDePrecios.IdFuenteDeCambioColumn]));
                }
                set {
                    this[this.tabletpu_ComprobantesDeCompraDetConfirmacionDePrecios.IdFuenteDeCambioColumn] = value;
                }
            }
            
            public string IdCotizacion {
                get {
                    try {
                        return ((string)(this[this.tabletpu_ComprobantesDeCompraDetConfirmacionDePrecios.IdCotizacionColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletpu_ComprobantesDeCompraDetConfirmacionDePrecios.IdCotizacionColumn] = value;
                }
            }
            
            public string Observaciones {
                get {
                    try {
                        return ((string)(this[this.tabletpu_ComprobantesDeCompraDetConfirmacionDePrecios.ObservacionesColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletpu_ComprobantesDeCompraDetConfirmacionDePrecios.ObservacionesColumn] = value;
                }
            }
            
            public long IdMotivoDiferencia {
                get {
                    try {
                        return ((long)(this[this.tabletpu_ComprobantesDeCompraDetConfirmacionDePrecios.IdMotivoDiferenciaColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletpu_ComprobantesDeCompraDetConfirmacionDePrecios.IdMotivoDiferenciaColumn] = value;
                }
            }
            
            public long IdConexionCreacion {
                get {
                    try {
                        return ((long)(this[this.tabletpu_ComprobantesDeCompraDetConfirmacionDePrecios.IdConexionCreacionColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletpu_ComprobantesDeCompraDetConfirmacionDePrecios.IdConexionCreacionColumn] = value;
                }
            }
            
            public System.Byte[] UltimaModificacion {
                get {
                    try {
                        return ((System.Byte[])(this[this.tabletpu_ComprobantesDeCompraDetConfirmacionDePrecios.UltimaModificacionColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletpu_ComprobantesDeCompraDetConfirmacionDePrecios.UltimaModificacionColumn] = value;
                }
            }
            
            public long IdConexionUltimaModificacion {
                get {
                    try {
                        return ((long)(this[this.tabletpu_ComprobantesDeCompraDetConfirmacionDePrecios.IdConexionUltimaModificacionColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletpu_ComprobantesDeCompraDetConfirmacionDePrecios.IdConexionUltimaModificacionColumn] = value;
                }
            }
            
            public long IdReservado {
                get {
                    try {
                        return ((long)(this[this.tabletpu_ComprobantesDeCompraDetConfirmacionDePrecios.IdReservadoColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletpu_ComprobantesDeCompraDetConfirmacionDePrecios.IdReservadoColumn] = value;
                }
            }
            
            public System.Guid RowId {
                get {
                    try {
                        return ((System.Guid)(this[this.tabletpu_ComprobantesDeCompraDetConfirmacionDePrecios.RowIdColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletpu_ComprobantesDeCompraDetConfirmacionDePrecios.RowIdColumn] = value;
                }
            }
            
            public long IdSucursal {
                get {
                    try {
                        return ((long)(this[this.tabletpu_ComprobantesDeCompraDetConfirmacionDePrecios.IdSucursalColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletpu_ComprobantesDeCompraDetConfirmacionDePrecios.IdSucursalColumn] = value;
                }
            }
            
            public long IdEmpresa {
                get {
                    try {
                        return ((long)(this[this.tabletpu_ComprobantesDeCompraDetConfirmacionDePrecios.IdEmpresaColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletpu_ComprobantesDeCompraDetConfirmacionDePrecios.IdEmpresaColumn] = value;
                }
            }
            
            public System.Decimal PrecioDeCostoReal {
                get {
                    try {
                        return ((System.Decimal)(this[this.tabletpu_ComprobantesDeCompraDetConfirmacionDePrecios.PrecioDeCostoRealColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletpu_ComprobantesDeCompraDetConfirmacionDePrecios.PrecioDeCostoRealColumn] = value;
                }
            }
            
            public bool TieneDiferenciaPorCantidad {
                get {
                    try {
                        return ((bool)(this[this.tabletpu_ComprobantesDeCompraDetConfirmacionDePrecios.TieneDiferenciaPorCantidadColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletpu_ComprobantesDeCompraDetConfirmacionDePrecios.TieneDiferenciaPorCantidadColumn] = value;
                }
            }
            
            public bool TieneDiferenciaPorPrecio {
                get {
                    try {
                        return ((bool)(this[this.tabletpu_ComprobantesDeCompraDetConfirmacionDePrecios.TieneDiferenciaPorPrecioColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletpu_ComprobantesDeCompraDetConfirmacionDePrecios.TieneDiferenciaPorPrecioColumn] = value;
                }
            }
            
            public bool TieneDiferenciaPorCotizacion {
                get {
                    try {
                        return ((bool)(this[this.tabletpu_ComprobantesDeCompraDetConfirmacionDePrecios.TieneDiferenciaPorCotizacionColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletpu_ComprobantesDeCompraDetConfirmacionDePrecios.TieneDiferenciaPorCotizacionColumn] = value;
                }
            }
            
            public System.Decimal CantidadReal {
                get {
                    try {
                        return ((System.Decimal)(this[this.tabletpu_ComprobantesDeCompraDetConfirmacionDePrecios.CantidadRealColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletpu_ComprobantesDeCompraDetConfirmacionDePrecios.CantidadRealColumn] = value;
                }
            }
            
            public bool IsIdComprobanteOrdenDeCompraNull() {
                return this.IsNull(this.tabletpu_ComprobantesDeCompraDetConfirmacionDePrecios.IdComprobanteOrdenDeCompraColumn);
            }
            
            public void SetIdComprobanteOrdenDeCompraNull() {
                this[this.tabletpu_ComprobantesDeCompraDetConfirmacionDePrecios.IdComprobanteOrdenDeCompraColumn] = System.Convert.DBNull;
            }
            
            public bool IsOrdinalOrdenDeCompraNull() {
                return this.IsNull(this.tabletpu_ComprobantesDeCompraDetConfirmacionDePrecios.OrdinalOrdenDeCompraColumn);
            }
            
            public void SetOrdinalOrdenDeCompraNull() {
                this[this.tabletpu_ComprobantesDeCompraDetConfirmacionDePrecios.OrdinalOrdenDeCompraColumn] = System.Convert.DBNull;
            }
            
            public bool IsIdCotizacionNull() {
                return this.IsNull(this.tabletpu_ComprobantesDeCompraDetConfirmacionDePrecios.IdCotizacionColumn);
            }
            
            public void SetIdCotizacionNull() {
                this[this.tabletpu_ComprobantesDeCompraDetConfirmacionDePrecios.IdCotizacionColumn] = System.Convert.DBNull;
            }
            
            public bool IsObservacionesNull() {
                return this.IsNull(this.tabletpu_ComprobantesDeCompraDetConfirmacionDePrecios.ObservacionesColumn);
            }
            
            public void SetObservacionesNull() {
                this[this.tabletpu_ComprobantesDeCompraDetConfirmacionDePrecios.ObservacionesColumn] = System.Convert.DBNull;
            }
            
            public bool IsIdMotivoDiferenciaNull() {
                return this.IsNull(this.tabletpu_ComprobantesDeCompraDetConfirmacionDePrecios.IdMotivoDiferenciaColumn);
            }
            
            public void SetIdMotivoDiferenciaNull() {
                this[this.tabletpu_ComprobantesDeCompraDetConfirmacionDePrecios.IdMotivoDiferenciaColumn] = System.Convert.DBNull;
            }
            
            public bool IsIdConexionCreacionNull() {
                return this.IsNull(this.tabletpu_ComprobantesDeCompraDetConfirmacionDePrecios.IdConexionCreacionColumn);
            }
            
            public void SetIdConexionCreacionNull() {
                this[this.tabletpu_ComprobantesDeCompraDetConfirmacionDePrecios.IdConexionCreacionColumn] = System.Convert.DBNull;
            }
            
            public bool IsUltimaModificacionNull() {
                return this.IsNull(this.tabletpu_ComprobantesDeCompraDetConfirmacionDePrecios.UltimaModificacionColumn);
            }
            
            public void SetUltimaModificacionNull() {
                this[this.tabletpu_ComprobantesDeCompraDetConfirmacionDePrecios.UltimaModificacionColumn] = System.Convert.DBNull;
            }
            
            public bool IsIdConexionUltimaModificacionNull() {
                return this.IsNull(this.tabletpu_ComprobantesDeCompraDetConfirmacionDePrecios.IdConexionUltimaModificacionColumn);
            }
            
            public void SetIdConexionUltimaModificacionNull() {
                this[this.tabletpu_ComprobantesDeCompraDetConfirmacionDePrecios.IdConexionUltimaModificacionColumn] = System.Convert.DBNull;
            }
            
            public bool IsIdReservadoNull() {
                return this.IsNull(this.tabletpu_ComprobantesDeCompraDetConfirmacionDePrecios.IdReservadoColumn);
            }
            
            public void SetIdReservadoNull() {
                this[this.tabletpu_ComprobantesDeCompraDetConfirmacionDePrecios.IdReservadoColumn] = System.Convert.DBNull;
            }
            
            public bool IsRowIdNull() {
                return this.IsNull(this.tabletpu_ComprobantesDeCompraDetConfirmacionDePrecios.RowIdColumn);
            }
            
            public void SetRowIdNull() {
                this[this.tabletpu_ComprobantesDeCompraDetConfirmacionDePrecios.RowIdColumn] = System.Convert.DBNull;
            }
            
            public bool IsIdSucursalNull() {
                return this.IsNull(this.tabletpu_ComprobantesDeCompraDetConfirmacionDePrecios.IdSucursalColumn);
            }
            
            public void SetIdSucursalNull() {
                this[this.tabletpu_ComprobantesDeCompraDetConfirmacionDePrecios.IdSucursalColumn] = System.Convert.DBNull;
            }
            
            public bool IsIdEmpresaNull() {
                return this.IsNull(this.tabletpu_ComprobantesDeCompraDetConfirmacionDePrecios.IdEmpresaColumn);
            }
            
            public void SetIdEmpresaNull() {
                this[this.tabletpu_ComprobantesDeCompraDetConfirmacionDePrecios.IdEmpresaColumn] = System.Convert.DBNull;
            }
            
            public bool IsPrecioDeCostoRealNull() {
                return this.IsNull(this.tabletpu_ComprobantesDeCompraDetConfirmacionDePrecios.PrecioDeCostoRealColumn);
            }
            
            public void SetPrecioDeCostoRealNull() {
                this[this.tabletpu_ComprobantesDeCompraDetConfirmacionDePrecios.PrecioDeCostoRealColumn] = System.Convert.DBNull;
            }
            
            public bool IsTieneDiferenciaPorCantidadNull() {
                return this.IsNull(this.tabletpu_ComprobantesDeCompraDetConfirmacionDePrecios.TieneDiferenciaPorCantidadColumn);
            }
            
            public void SetTieneDiferenciaPorCantidadNull() {
                this[this.tabletpu_ComprobantesDeCompraDetConfirmacionDePrecios.TieneDiferenciaPorCantidadColumn] = System.Convert.DBNull;
            }
            
            public bool IsTieneDiferenciaPorPrecioNull() {
                return this.IsNull(this.tabletpu_ComprobantesDeCompraDetConfirmacionDePrecios.TieneDiferenciaPorPrecioColumn);
            }
            
            public void SetTieneDiferenciaPorPrecioNull() {
                this[this.tabletpu_ComprobantesDeCompraDetConfirmacionDePrecios.TieneDiferenciaPorPrecioColumn] = System.Convert.DBNull;
            }
            
            public bool IsTieneDiferenciaPorCotizacionNull() {
                return this.IsNull(this.tabletpu_ComprobantesDeCompraDetConfirmacionDePrecios.TieneDiferenciaPorCotizacionColumn);
            }
            
            public void SetTieneDiferenciaPorCotizacionNull() {
                this[this.tabletpu_ComprobantesDeCompraDetConfirmacionDePrecios.TieneDiferenciaPorCotizacionColumn] = System.Convert.DBNull;
            }
            
            public bool IsCantidadRealNull() {
                return this.IsNull(this.tabletpu_ComprobantesDeCompraDetConfirmacionDePrecios.CantidadRealColumn);
            }
            
            public void SetCantidadRealNull() {
                this[this.tabletpu_ComprobantesDeCompraDetConfirmacionDePrecios.CantidadRealColumn] = System.Convert.DBNull;
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class tpu_ComprobantesDeCompraDetConfirmacionDePreciosRowChangeEvent : EventArgs {
            
            private tpu_ComprobantesDeCompraDetConfirmacionDePreciosRow eventRow;
            
            private DataRowAction eventAction;
            
            public tpu_ComprobantesDeCompraDetConfirmacionDePreciosRowChangeEvent(tpu_ComprobantesDeCompraDetConfirmacionDePreciosRow row, DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            public tpu_ComprobantesDeCompraDetConfirmacionDePreciosRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            public DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
