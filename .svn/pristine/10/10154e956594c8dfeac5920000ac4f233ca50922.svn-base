//------------------------------------------------------------------------------
// <autogenerated>
//     This code was generated by a tool.
//     Runtime Version: 1.1.4322.573
//
//     Changes to this file may cause incorrect behavior and will be lost if 
//     the code is regenerated.
// </autogenerated>
//------------------------------------------------------------------------------

namespace mz.erp.commontypes.data {
    using System;
    using System.Data;
    using System.Xml;
    using System.Runtime.Serialization;
    
    
    [Serializable()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Diagnostics.DebuggerStepThrough()]
    [System.ComponentModel.ToolboxItem(true)]
    public class tsh_ProductosSucursalesDataset : DataSet {
        
        private tsh_ProductosSucursalesDataTable tabletsh_ProductosSucursales;
        
        public tsh_ProductosSucursalesDataset() {
            this.InitClass();
            System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            this.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        protected tsh_ProductosSucursalesDataset(SerializationInfo info, StreamingContext context) {
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((strSchema != null)) {
                DataSet ds = new DataSet();
                ds.ReadXmlSchema(new XmlTextReader(new System.IO.StringReader(strSchema)));
                if ((ds.Tables["tsh_ProductosSucursales"] != null)) {
                    this.Tables.Add(new tsh_ProductosSucursalesDataTable(ds.Tables["tsh_ProductosSucursales"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.InitClass();
            }
            this.GetSerializationData(info, context);
            System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            this.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public tsh_ProductosSucursalesDataTable tsh_ProductosSucursales {
            get {
                return this.tabletsh_ProductosSucursales;
            }
        }
        
        public override DataSet Clone() {
            tsh_ProductosSucursalesDataset cln = ((tsh_ProductosSucursalesDataset)(base.Clone()));
            cln.InitVars();
            return cln;
        }
        
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        protected override void ReadXmlSerializable(XmlReader reader) {
            this.Reset();
            DataSet ds = new DataSet();
            ds.ReadXml(reader);
            if ((ds.Tables["tsh_ProductosSucursales"] != null)) {
                this.Tables.Add(new tsh_ProductosSucursalesDataTable(ds.Tables["tsh_ProductosSucursales"]));
            }
            this.DataSetName = ds.DataSetName;
            this.Prefix = ds.Prefix;
            this.Namespace = ds.Namespace;
            this.Locale = ds.Locale;
            this.CaseSensitive = ds.CaseSensitive;
            this.EnforceConstraints = ds.EnforceConstraints;
            this.Merge(ds, false, System.Data.MissingSchemaAction.Add);
            this.InitVars();
        }
        
        protected override System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            System.IO.MemoryStream stream = new System.IO.MemoryStream();
            this.WriteXmlSchema(new XmlTextWriter(stream, null));
            stream.Position = 0;
            return System.Xml.Schema.XmlSchema.Read(new XmlTextReader(stream), null);
        }
        
        internal void InitVars() {
            this.tabletsh_ProductosSucursales = ((tsh_ProductosSucursalesDataTable)(this.Tables["tsh_ProductosSucursales"]));
            if ((this.tabletsh_ProductosSucursales != null)) {
                this.tabletsh_ProductosSucursales.InitVars();
            }
        }
        
        private void InitClass() {
            this.DataSetName = "tsh_ProductosSucursalesDataset";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/tsh_ProductosSucursales.xsd";
            this.Locale = new System.Globalization.CultureInfo("en-US");
            this.CaseSensitive = false;
            this.EnforceConstraints = true;
            this.tabletsh_ProductosSucursales = new tsh_ProductosSucursalesDataTable();
            this.Tables.Add(this.tabletsh_ProductosSucursales);
        }
        
        private bool ShouldSerializetsh_ProductosSucursales() {
            return false;
        }
        
        private void SchemaChanged(object sender, System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        public delegate void tsh_ProductosSucursalesRowChangeEventHandler(object sender, tsh_ProductosSucursalesRowChangeEvent e);
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class tsh_ProductosSucursalesDataTable : DataTable, System.Collections.IEnumerable {
            
            private DataColumn columnIdProducto;
            
            private DataColumn columnIdSucursal;
            
            private DataColumn columnIdEmpresa;
            
            private DataColumn columnIncrementoDeCosto;
            
            private DataColumn columnMAC;
            
            private DataColumn columnPrecioDeVentaNeto;
            
            private DataColumn columnMaxDescuento;
            
            private DataColumn columnPrecioDeVentaBruto;
            
            private DataColumn columnStockReservado;
            
            private DataColumn columnStockConfirmado;
            
            private DataColumn columnStockDisponible;
            
            private DataColumn columnStockFisico;
            
            private DataColumn columnStockMinimo;
            
            private DataColumn columnStockMaximo;
            
            private DataColumn columnActivo;
            
            private DataColumn columnBloqueado;
            
            internal tsh_ProductosSucursalesDataTable() : 
                    base("tsh_ProductosSucursales") {
                this.InitClass();
            }
            
            internal tsh_ProductosSucursalesDataTable(DataTable table) : 
                    base(table.TableName) {
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
                this.DisplayExpression = table.DisplayExpression;
            }
            
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            internal DataColumn IdProductoColumn {
                get {
                    return this.columnIdProducto;
                }
            }
            
            internal DataColumn IdSucursalColumn {
                get {
                    return this.columnIdSucursal;
                }
            }
            
            internal DataColumn IdEmpresaColumn {
                get {
                    return this.columnIdEmpresa;
                }
            }
            
            internal DataColumn IncrementoDeCostoColumn {
                get {
                    return this.columnIncrementoDeCosto;
                }
            }
            
            internal DataColumn MACColumn {
                get {
                    return this.columnMAC;
                }
            }
            
            internal DataColumn PrecioDeVentaNetoColumn {
                get {
                    return this.columnPrecioDeVentaNeto;
                }
            }
            
            internal DataColumn MaxDescuentoColumn {
                get {
                    return this.columnMaxDescuento;
                }
            }
            
            internal DataColumn PrecioDeVentaBrutoColumn {
                get {
                    return this.columnPrecioDeVentaBruto;
                }
            }
            
            internal DataColumn StockReservadoColumn {
                get {
                    return this.columnStockReservado;
                }
            }
            
            internal DataColumn StockConfirmadoColumn {
                get {
                    return this.columnStockConfirmado;
                }
            }
            
            internal DataColumn StockDisponibleColumn {
                get {
                    return this.columnStockDisponible;
                }
            }
            
            internal DataColumn StockFisicoColumn {
                get {
                    return this.columnStockFisico;
                }
            }
            
            internal DataColumn StockMinimoColumn {
                get {
                    return this.columnStockMinimo;
                }
            }
            
            internal DataColumn StockMaximoColumn {
                get {
                    return this.columnStockMaximo;
                }
            }
            
            internal DataColumn ActivoColumn {
                get {
                    return this.columnActivo;
                }
            }
            
            internal DataColumn BloqueadoColumn {
                get {
                    return this.columnBloqueado;
                }
            }
            
            public tsh_ProductosSucursalesRow this[int index] {
                get {
                    return ((tsh_ProductosSucursalesRow)(this.Rows[index]));
                }
            }
            
            public event tsh_ProductosSucursalesRowChangeEventHandler tsh_ProductosSucursalesRowChanged;
            
            public event tsh_ProductosSucursalesRowChangeEventHandler tsh_ProductosSucursalesRowChanging;
            
            public event tsh_ProductosSucursalesRowChangeEventHandler tsh_ProductosSucursalesRowDeleted;
            
            public event tsh_ProductosSucursalesRowChangeEventHandler tsh_ProductosSucursalesRowDeleting;
            
            public void Addtsh_ProductosSucursalesRow(tsh_ProductosSucursalesRow row) {
                this.Rows.Add(row);
            }
            
            public tsh_ProductosSucursalesRow Addtsh_ProductosSucursalesRow(
                        string IdProducto, 
                        long IdSucursal, 
                        long IdEmpresa, 
                        System.Decimal IncrementoDeCosto, 
                        System.Decimal MAC, 
                        System.Decimal PrecioDeVentaNeto, 
                        System.Decimal MaxDescuento, 
                        System.Decimal PrecioDeVentaBruto, 
                        System.Decimal StockReservado, 
                        System.Decimal StockConfirmado, 
                        System.Decimal StockDisponible, 
                        System.Decimal StockFisico, 
                        System.Decimal StockMinimo, 
                        System.Decimal StockMaximo, 
                        bool Activo, 
                        bool Bloqueado) {
                tsh_ProductosSucursalesRow rowtsh_ProductosSucursalesRow = ((tsh_ProductosSucursalesRow)(this.NewRow()));
                rowtsh_ProductosSucursalesRow.ItemArray = new object[] {
                        IdProducto,
                        IdSucursal,
                        IdEmpresa,
                        IncrementoDeCosto,
                        MAC,
                        PrecioDeVentaNeto,
                        MaxDescuento,
                        PrecioDeVentaBruto,
                        StockReservado,
                        StockConfirmado,
                        StockDisponible,
                        StockFisico,
                        StockMinimo,
                        StockMaximo,
                        Activo,
                        Bloqueado};
                this.Rows.Add(rowtsh_ProductosSucursalesRow);
                return rowtsh_ProductosSucursalesRow;
            }
            
            public tsh_ProductosSucursalesRow FindByIdProductoIdSucursalIdEmpresa(string IdProducto, long IdSucursal, long IdEmpresa) {
                return ((tsh_ProductosSucursalesRow)(this.Rows.Find(new object[] {
                            IdProducto,
                            IdSucursal,
                            IdEmpresa})));
            }
            
            public System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            public override DataTable Clone() {
                tsh_ProductosSucursalesDataTable cln = ((tsh_ProductosSucursalesDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            protected override DataTable CreateInstance() {
                return new tsh_ProductosSucursalesDataTable();
            }
            
            internal void InitVars() {
                this.columnIdProducto = this.Columns["IdProducto"];
                this.columnIdSucursal = this.Columns["IdSucursal"];
                this.columnIdEmpresa = this.Columns["IdEmpresa"];
                this.columnIncrementoDeCosto = this.Columns["IncrementoDeCosto"];
                this.columnMAC = this.Columns["MAC"];
                this.columnPrecioDeVentaNeto = this.Columns["PrecioDeVentaNeto"];
                this.columnMaxDescuento = this.Columns["MaxDescuento"];
                this.columnPrecioDeVentaBruto = this.Columns["PrecioDeVentaBruto"];
                this.columnStockReservado = this.Columns["StockReservado"];
                this.columnStockConfirmado = this.Columns["StockConfirmado"];
                this.columnStockDisponible = this.Columns["StockDisponible"];
                this.columnStockFisico = this.Columns["StockFisico"];
                this.columnStockMinimo = this.Columns["StockMinimo"];
                this.columnStockMaximo = this.Columns["StockMaximo"];
                this.columnActivo = this.Columns["Activo"];
                this.columnBloqueado = this.Columns["Bloqueado"];
            }
            
            private void InitClass() {
                this.columnIdProducto = new DataColumn("IdProducto", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdProducto);
                this.columnIdSucursal = new DataColumn("IdSucursal", typeof(long), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdSucursal);
                this.columnIdEmpresa = new DataColumn("IdEmpresa", typeof(long), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdEmpresa);
                this.columnIncrementoDeCosto = new DataColumn("IncrementoDeCosto", typeof(System.Decimal), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIncrementoDeCosto);
                this.columnMAC = new DataColumn("MAC", typeof(System.Decimal), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnMAC);
                this.columnPrecioDeVentaNeto = new DataColumn("PrecioDeVentaNeto", typeof(System.Decimal), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnPrecioDeVentaNeto);
                this.columnMaxDescuento = new DataColumn("MaxDescuento", typeof(System.Decimal), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnMaxDescuento);
                this.columnPrecioDeVentaBruto = new DataColumn("PrecioDeVentaBruto", typeof(System.Decimal), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnPrecioDeVentaBruto);
                this.columnStockReservado = new DataColumn("StockReservado", typeof(System.Decimal), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnStockReservado);
                this.columnStockConfirmado = new DataColumn("StockConfirmado", typeof(System.Decimal), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnStockConfirmado);
                this.columnStockDisponible = new DataColumn("StockDisponible", typeof(System.Decimal), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnStockDisponible);
                this.columnStockFisico = new DataColumn("StockFisico", typeof(System.Decimal), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnStockFisico);
                this.columnStockMinimo = new DataColumn("StockMinimo", typeof(System.Decimal), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnStockMinimo);
                this.columnStockMaximo = new DataColumn("StockMaximo", typeof(System.Decimal), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnStockMaximo);
                this.columnActivo = new DataColumn("Activo", typeof(bool), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnActivo);
                this.columnBloqueado = new DataColumn("Bloqueado", typeof(bool), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnBloqueado);
                this.Constraints.Add(new UniqueConstraint("tsh_ProductosSucursalesDatasetKey1", new DataColumn[] {
                                this.columnIdProducto,
                                this.columnIdSucursal,
                                this.columnIdEmpresa}, true));
                this.columnIdProducto.AllowDBNull = false;
                this.columnIdSucursal.AllowDBNull = false;
                this.columnIdEmpresa.AllowDBNull = false;
            }
            
            public tsh_ProductosSucursalesRow Newtsh_ProductosSucursalesRow() {
                return ((tsh_ProductosSucursalesRow)(this.NewRow()));
            }
            
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder) {
                return new tsh_ProductosSucursalesRow(builder);
            }
            
            protected override System.Type GetRowType() {
                return typeof(tsh_ProductosSucursalesRow);
            }
            
            protected override void OnRowChanged(DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.tsh_ProductosSucursalesRowChanged != null)) {
                    this.tsh_ProductosSucursalesRowChanged(this, new tsh_ProductosSucursalesRowChangeEvent(((tsh_ProductosSucursalesRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowChanging(DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.tsh_ProductosSucursalesRowChanging != null)) {
                    this.tsh_ProductosSucursalesRowChanging(this, new tsh_ProductosSucursalesRowChangeEvent(((tsh_ProductosSucursalesRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleted(DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.tsh_ProductosSucursalesRowDeleted != null)) {
                    this.tsh_ProductosSucursalesRowDeleted(this, new tsh_ProductosSucursalesRowChangeEvent(((tsh_ProductosSucursalesRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleting(DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.tsh_ProductosSucursalesRowDeleting != null)) {
                    this.tsh_ProductosSucursalesRowDeleting(this, new tsh_ProductosSucursalesRowChangeEvent(((tsh_ProductosSucursalesRow)(e.Row)), e.Action));
                }
            }
            
            public void Removetsh_ProductosSucursalesRow(tsh_ProductosSucursalesRow row) {
                this.Rows.Remove(row);
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class tsh_ProductosSucursalesRow : DataRow {
            
            private tsh_ProductosSucursalesDataTable tabletsh_ProductosSucursales;
            
            internal tsh_ProductosSucursalesRow(DataRowBuilder rb) : 
                    base(rb) {
                this.tabletsh_ProductosSucursales = ((tsh_ProductosSucursalesDataTable)(this.Table));
            }
            
            public string IdProducto {
                get {
                    return ((string)(this[this.tabletsh_ProductosSucursales.IdProductoColumn]));
                }
                set {
                    this[this.tabletsh_ProductosSucursales.IdProductoColumn] = value;
                }
            }
            
            public long IdSucursal {
                get {
                    return ((long)(this[this.tabletsh_ProductosSucursales.IdSucursalColumn]));
                }
                set {
                    this[this.tabletsh_ProductosSucursales.IdSucursalColumn] = value;
                }
            }
            
            public long IdEmpresa {
                get {
                    return ((long)(this[this.tabletsh_ProductosSucursales.IdEmpresaColumn]));
                }
                set {
                    this[this.tabletsh_ProductosSucursales.IdEmpresaColumn] = value;
                }
            }
            
            public System.Decimal IncrementoDeCosto {
                get {
                    try {
                        return ((System.Decimal)(this[this.tabletsh_ProductosSucursales.IncrementoDeCostoColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletsh_ProductosSucursales.IncrementoDeCostoColumn] = value;
                }
            }
            
            public System.Decimal MAC {
                get {
                    try {
                        return ((System.Decimal)(this[this.tabletsh_ProductosSucursales.MACColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletsh_ProductosSucursales.MACColumn] = value;
                }
            }
            
            public System.Decimal PrecioDeVentaNeto {
                get {
                    try {
                        return ((System.Decimal)(this[this.tabletsh_ProductosSucursales.PrecioDeVentaNetoColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletsh_ProductosSucursales.PrecioDeVentaNetoColumn] = value;
                }
            }
            
            public System.Decimal MaxDescuento {
                get {
                    try {
                        return ((System.Decimal)(this[this.tabletsh_ProductosSucursales.MaxDescuentoColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletsh_ProductosSucursales.MaxDescuentoColumn] = value;
                }
            }
            
            public System.Decimal PrecioDeVentaBruto {
                get {
                    try {
                        return ((System.Decimal)(this[this.tabletsh_ProductosSucursales.PrecioDeVentaBrutoColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletsh_ProductosSucursales.PrecioDeVentaBrutoColumn] = value;
                }
            }
            
            public System.Decimal StockReservado {
                get {
                    try {
                        return ((System.Decimal)(this[this.tabletsh_ProductosSucursales.StockReservadoColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletsh_ProductosSucursales.StockReservadoColumn] = value;
                }
            }
            
            public System.Decimal StockConfirmado {
                get {
                    try {
                        return ((System.Decimal)(this[this.tabletsh_ProductosSucursales.StockConfirmadoColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletsh_ProductosSucursales.StockConfirmadoColumn] = value;
                }
            }
            
            public System.Decimal StockDisponible {
                get {
                    try {
                        return ((System.Decimal)(this[this.tabletsh_ProductosSucursales.StockDisponibleColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletsh_ProductosSucursales.StockDisponibleColumn] = value;
                }
            }
            
            public System.Decimal StockFisico {
                get {
                    try {
                        return ((System.Decimal)(this[this.tabletsh_ProductosSucursales.StockFisicoColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletsh_ProductosSucursales.StockFisicoColumn] = value;
                }
            }
            
            public System.Decimal StockMinimo {
                get {
                    try {
                        return ((System.Decimal)(this[this.tabletsh_ProductosSucursales.StockMinimoColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletsh_ProductosSucursales.StockMinimoColumn] = value;
                }
            }
            
            public System.Decimal StockMaximo {
                get {
                    try {
                        return ((System.Decimal)(this[this.tabletsh_ProductosSucursales.StockMaximoColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletsh_ProductosSucursales.StockMaximoColumn] = value;
                }
            }
            
            public bool Activo {
                get {
                    try {
                        return ((bool)(this[this.tabletsh_ProductosSucursales.ActivoColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletsh_ProductosSucursales.ActivoColumn] = value;
                }
            }
            
            public bool Bloqueado {
                get {
                    try {
                        return ((bool)(this[this.tabletsh_ProductosSucursales.BloqueadoColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletsh_ProductosSucursales.BloqueadoColumn] = value;
                }
            }
            
            public bool IsIncrementoDeCostoNull() {
                return this.IsNull(this.tabletsh_ProductosSucursales.IncrementoDeCostoColumn);
            }
            
            public void SetIncrementoDeCostoNull() {
                this[this.tabletsh_ProductosSucursales.IncrementoDeCostoColumn] = System.Convert.DBNull;
            }
            
            public bool IsMACNull() {
                return this.IsNull(this.tabletsh_ProductosSucursales.MACColumn);
            }
            
            public void SetMACNull() {
                this[this.tabletsh_ProductosSucursales.MACColumn] = System.Convert.DBNull;
            }
            
            public bool IsPrecioDeVentaNetoNull() {
                return this.IsNull(this.tabletsh_ProductosSucursales.PrecioDeVentaNetoColumn);
            }
            
            public void SetPrecioDeVentaNetoNull() {
                this[this.tabletsh_ProductosSucursales.PrecioDeVentaNetoColumn] = System.Convert.DBNull;
            }
            
            public bool IsMaxDescuentoNull() {
                return this.IsNull(this.tabletsh_ProductosSucursales.MaxDescuentoColumn);
            }
            
            public void SetMaxDescuentoNull() {
                this[this.tabletsh_ProductosSucursales.MaxDescuentoColumn] = System.Convert.DBNull;
            }
            
            public bool IsPrecioDeVentaBrutoNull() {
                return this.IsNull(this.tabletsh_ProductosSucursales.PrecioDeVentaBrutoColumn);
            }
            
            public void SetPrecioDeVentaBrutoNull() {
                this[this.tabletsh_ProductosSucursales.PrecioDeVentaBrutoColumn] = System.Convert.DBNull;
            }
            
            public bool IsStockReservadoNull() {
                return this.IsNull(this.tabletsh_ProductosSucursales.StockReservadoColumn);
            }
            
            public void SetStockReservadoNull() {
                this[this.tabletsh_ProductosSucursales.StockReservadoColumn] = System.Convert.DBNull;
            }
            
            public bool IsStockConfirmadoNull() {
                return this.IsNull(this.tabletsh_ProductosSucursales.StockConfirmadoColumn);
            }
            
            public void SetStockConfirmadoNull() {
                this[this.tabletsh_ProductosSucursales.StockConfirmadoColumn] = System.Convert.DBNull;
            }
            
            public bool IsStockDisponibleNull() {
                return this.IsNull(this.tabletsh_ProductosSucursales.StockDisponibleColumn);
            }
            
            public void SetStockDisponibleNull() {
                this[this.tabletsh_ProductosSucursales.StockDisponibleColumn] = System.Convert.DBNull;
            }
            
            public bool IsStockFisicoNull() {
                return this.IsNull(this.tabletsh_ProductosSucursales.StockFisicoColumn);
            }
            
            public void SetStockFisicoNull() {
                this[this.tabletsh_ProductosSucursales.StockFisicoColumn] = System.Convert.DBNull;
            }
            
            public bool IsStockMinimoNull() {
                return this.IsNull(this.tabletsh_ProductosSucursales.StockMinimoColumn);
            }
            
            public void SetStockMinimoNull() {
                this[this.tabletsh_ProductosSucursales.StockMinimoColumn] = System.Convert.DBNull;
            }
            
            public bool IsStockMaximoNull() {
                return this.IsNull(this.tabletsh_ProductosSucursales.StockMaximoColumn);
            }
            
            public void SetStockMaximoNull() {
                this[this.tabletsh_ProductosSucursales.StockMaximoColumn] = System.Convert.DBNull;
            }
            
            public bool IsActivoNull() {
                return this.IsNull(this.tabletsh_ProductosSucursales.ActivoColumn);
            }
            
            public void SetActivoNull() {
                this[this.tabletsh_ProductosSucursales.ActivoColumn] = System.Convert.DBNull;
            }
            
            public bool IsBloqueadoNull() {
                return this.IsNull(this.tabletsh_ProductosSucursales.BloqueadoColumn);
            }
            
            public void SetBloqueadoNull() {
                this[this.tabletsh_ProductosSucursales.BloqueadoColumn] = System.Convert.DBNull;
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class tsh_ProductosSucursalesRowChangeEvent : EventArgs {
            
            private tsh_ProductosSucursalesRow eventRow;
            
            private DataRowAction eventAction;
            
            public tsh_ProductosSucursalesRowChangeEvent(tsh_ProductosSucursalesRow row, DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            public tsh_ProductosSucursalesRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            public DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
