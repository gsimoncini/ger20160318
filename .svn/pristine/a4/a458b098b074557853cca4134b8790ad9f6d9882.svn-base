//------------------------------------------------------------------------------
// <autogenerated>
//     This code was generated by a tool.
//     Runtime Version: 1.1.4322.2032
//
//     Changes to this file may cause incorrect behavior and will be lost if 
//     the code is regenerated.
// </autogenerated>
//------------------------------------------------------------------------------

namespace mz.erp.commontypes.data {
    using System;
    using System.Data;
    using System.Xml;
    using System.Runtime.Serialization;
    
    
    [Serializable()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Diagnostics.DebuggerStepThrough()]
    [System.ComponentModel.ToolboxItem(true)]
    public class tlg_ComprobantesDataset : DataSet {
        
        private tlg_ComprobantesDataTable tabletlg_Comprobantes;
        
        public tlg_ComprobantesDataset() {
            this.InitClass();
            System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            this.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        protected tlg_ComprobantesDataset(SerializationInfo info, StreamingContext context) {
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((strSchema != null)) {
                DataSet ds = new DataSet();
                ds.ReadXmlSchema(new XmlTextReader(new System.IO.StringReader(strSchema)));
                if ((ds.Tables["tlg_Comprobantes"] != null)) {
                    this.Tables.Add(new tlg_ComprobantesDataTable(ds.Tables["tlg_Comprobantes"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.InitClass();
            }
            this.GetSerializationData(info, context);
            System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            this.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public tlg_ComprobantesDataTable tlg_Comprobantes {
            get {
                return this.tabletlg_Comprobantes;
            }
        }
        
        public override DataSet Clone() {
            tlg_ComprobantesDataset cln = ((tlg_ComprobantesDataset)(base.Clone()));
            cln.InitVars();
            return cln;
        }
        
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        protected override void ReadXmlSerializable(XmlReader reader) {
            this.Reset();
            DataSet ds = new DataSet();
            ds.ReadXml(reader);
            if ((ds.Tables["tlg_Comprobantes"] != null)) {
                this.Tables.Add(new tlg_ComprobantesDataTable(ds.Tables["tlg_Comprobantes"]));
            }
            this.DataSetName = ds.DataSetName;
            this.Prefix = ds.Prefix;
            this.Namespace = ds.Namespace;
            this.Locale = ds.Locale;
            this.CaseSensitive = ds.CaseSensitive;
            this.EnforceConstraints = ds.EnforceConstraints;
            this.Merge(ds, false, System.Data.MissingSchemaAction.Add);
            this.InitVars();
        }
        
        protected override System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            System.IO.MemoryStream stream = new System.IO.MemoryStream();
            this.WriteXmlSchema(new XmlTextWriter(stream, null));
            stream.Position = 0;
            return System.Xml.Schema.XmlSchema.Read(new XmlTextReader(stream), null);
        }
        
        internal void InitVars() {
            this.tabletlg_Comprobantes = ((tlg_ComprobantesDataTable)(this.Tables["tlg_Comprobantes"]));
            if ((this.tabletlg_Comprobantes != null)) {
                this.tabletlg_Comprobantes.InitVars();
            }
        }
        
        private void InitClass() {
            this.DataSetName = "tlg_ComprobantesDataset";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/tlg_Comprobantes.xsd";
            this.Locale = new System.Globalization.CultureInfo("en-US");
            this.CaseSensitive = false;
            this.EnforceConstraints = true;
            this.tabletlg_Comprobantes = new tlg_ComprobantesDataTable();
            this.Tables.Add(this.tabletlg_Comprobantes);
        }
        
        private bool ShouldSerializetlg_Comprobantes() {
            return false;
        }
        
        private void SchemaChanged(object sender, System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        public delegate void tlg_ComprobantesRowChangeEventHandler(object sender, tlg_ComprobantesRowChangeEvent e);
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class tlg_ComprobantesDataTable : DataTable, System.Collections.IEnumerable {
            
            private DataColumn columnIdComprobante;
            
            private DataColumn columnFechaConvenida;
            
            private DataColumn columnFechaVencimiento;
            
            private DataColumn columnObservaciones;
            
            private DataColumn columnCampoAuxiliar1;
            
            private DataColumn columnCampoAuxiliar2;
            
            private DataColumn columnCampoAuxiliar3;
            
            private DataColumn columnCampoAuxiliar4;
            
            private DataColumn columnCampoAuxiliar5;
            
            private DataColumn columnIdDomicilio;
            
            private DataColumn columnFechaCreacion;
            
            private DataColumn columnIdConexionCreacion;
            
            private DataColumn columnUltimaModificacion;
            
            private DataColumn columnIdConexionUltimaModificacion;
            
            private DataColumn columnIdReservado;
            
            private DataColumn columnRowId;
            
            private DataColumn columnIdEmpresa;
            
            private DataColumn columnIdSucursal;
            
            private DataColumn columnOldIdComprobante;
            
            internal tlg_ComprobantesDataTable() : 
                    base("tlg_Comprobantes") {
                this.InitClass();
            }
            
            internal tlg_ComprobantesDataTable(DataTable table) : 
                    base(table.TableName) {
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
                this.DisplayExpression = table.DisplayExpression;
            }
            
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            internal DataColumn IdComprobanteColumn {
                get {
                    return this.columnIdComprobante;
                }
            }
            
            internal DataColumn FechaConvenidaColumn {
                get {
                    return this.columnFechaConvenida;
                }
            }
            
            internal DataColumn FechaVencimientoColumn {
                get {
                    return this.columnFechaVencimiento;
                }
            }
            
            internal DataColumn ObservacionesColumn {
                get {
                    return this.columnObservaciones;
                }
            }
            
            internal DataColumn CampoAuxiliar1Column {
                get {
                    return this.columnCampoAuxiliar1;
                }
            }
            
            internal DataColumn CampoAuxiliar2Column {
                get {
                    return this.columnCampoAuxiliar2;
                }
            }
            
            internal DataColumn CampoAuxiliar3Column {
                get {
                    return this.columnCampoAuxiliar3;
                }
            }
            
            internal DataColumn CampoAuxiliar4Column {
                get {
                    return this.columnCampoAuxiliar4;
                }
            }
            
            internal DataColumn CampoAuxiliar5Column {
                get {
                    return this.columnCampoAuxiliar5;
                }
            }
            
            internal DataColumn IdDomicilioColumn {
                get {
                    return this.columnIdDomicilio;
                }
            }
            
            internal DataColumn FechaCreacionColumn {
                get {
                    return this.columnFechaCreacion;
                }
            }
            
            internal DataColumn IdConexionCreacionColumn {
                get {
                    return this.columnIdConexionCreacion;
                }
            }
            
            internal DataColumn UltimaModificacionColumn {
                get {
                    return this.columnUltimaModificacion;
                }
            }
            
            internal DataColumn IdConexionUltimaModificacionColumn {
                get {
                    return this.columnIdConexionUltimaModificacion;
                }
            }
            
            internal DataColumn IdReservadoColumn {
                get {
                    return this.columnIdReservado;
                }
            }
            
            internal DataColumn RowIdColumn {
                get {
                    return this.columnRowId;
                }
            }
            
            internal DataColumn IdEmpresaColumn {
                get {
                    return this.columnIdEmpresa;
                }
            }
            
            internal DataColumn IdSucursalColumn {
                get {
                    return this.columnIdSucursal;
                }
            }
            
            internal DataColumn OldIdComprobanteColumn {
                get {
                    return this.columnOldIdComprobante;
                }
            }
            
            public tlg_ComprobantesRow this[int index] {
                get {
                    return ((tlg_ComprobantesRow)(this.Rows[index]));
                }
            }
            
            public event tlg_ComprobantesRowChangeEventHandler tlg_ComprobantesRowChanged;
            
            public event tlg_ComprobantesRowChangeEventHandler tlg_ComprobantesRowChanging;
            
            public event tlg_ComprobantesRowChangeEventHandler tlg_ComprobantesRowDeleted;
            
            public event tlg_ComprobantesRowChangeEventHandler tlg_ComprobantesRowDeleting;
            
            public void Addtlg_ComprobantesRow(tlg_ComprobantesRow row) {
                this.Rows.Add(row);
            }
            
            public tlg_ComprobantesRow Addtlg_ComprobantesRow(
                        string IdComprobante, 
                        System.DateTime FechaConvenida, 
                        System.DateTime FechaVencimiento, 
                        string Observaciones, 
                        string CampoAuxiliar1, 
                        string CampoAuxiliar2, 
                        string CampoAuxiliar3, 
                        string CampoAuxiliar4, 
                        string CampoAuxiliar5, 
                        string IdDomicilio, 
                        System.DateTime FechaCreacion, 
                        long IdConexionCreacion, 
                        System.Byte[] UltimaModificacion, 
                        long IdConexionUltimaModificacion, 
                        long IdReservado, 
                        System.Guid RowId, 
                        long IdEmpresa, 
                        long IdSucursal, 
                        string OldIdComprobante) {
                tlg_ComprobantesRow rowtlg_ComprobantesRow = ((tlg_ComprobantesRow)(this.NewRow()));
                rowtlg_ComprobantesRow.ItemArray = new object[] {
                        IdComprobante,
                        FechaConvenida,
                        FechaVencimiento,
                        Observaciones,
                        CampoAuxiliar1,
                        CampoAuxiliar2,
                        CampoAuxiliar3,
                        CampoAuxiliar4,
                        CampoAuxiliar5,
                        IdDomicilio,
                        FechaCreacion,
                        IdConexionCreacion,
                        UltimaModificacion,
                        IdConexionUltimaModificacion,
                        IdReservado,
                        RowId,
                        IdEmpresa,
                        IdSucursal,
                        OldIdComprobante};
                this.Rows.Add(rowtlg_ComprobantesRow);
                return rowtlg_ComprobantesRow;
            }
            
            public tlg_ComprobantesRow FindByIdComprobante(string IdComprobante) {
                return ((tlg_ComprobantesRow)(this.Rows.Find(new object[] {
                            IdComprobante})));
            }
            
            public System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            public override DataTable Clone() {
                tlg_ComprobantesDataTable cln = ((tlg_ComprobantesDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            protected override DataTable CreateInstance() {
                return new tlg_ComprobantesDataTable();
            }
            
            internal void InitVars() {
                this.columnIdComprobante = this.Columns["IdComprobante"];
                this.columnFechaConvenida = this.Columns["FechaConvenida"];
                this.columnFechaVencimiento = this.Columns["FechaVencimiento"];
                this.columnObservaciones = this.Columns["Observaciones"];
                this.columnCampoAuxiliar1 = this.Columns["CampoAuxiliar1"];
                this.columnCampoAuxiliar2 = this.Columns["CampoAuxiliar2"];
                this.columnCampoAuxiliar3 = this.Columns["CampoAuxiliar3"];
                this.columnCampoAuxiliar4 = this.Columns["CampoAuxiliar4"];
                this.columnCampoAuxiliar5 = this.Columns["CampoAuxiliar5"];
                this.columnIdDomicilio = this.Columns["IdDomicilio"];
                this.columnFechaCreacion = this.Columns["FechaCreacion"];
                this.columnIdConexionCreacion = this.Columns["IdConexionCreacion"];
                this.columnUltimaModificacion = this.Columns["UltimaModificacion"];
                this.columnIdConexionUltimaModificacion = this.Columns["IdConexionUltimaModificacion"];
                this.columnIdReservado = this.Columns["IdReservado"];
                this.columnRowId = this.Columns["RowId"];
                this.columnIdEmpresa = this.Columns["IdEmpresa"];
                this.columnIdSucursal = this.Columns["IdSucursal"];
                this.columnOldIdComprobante = this.Columns["OldIdComprobante"];
            }
            
            private void InitClass() {
                this.columnIdComprobante = new DataColumn("IdComprobante", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdComprobante);
                this.columnFechaConvenida = new DataColumn("FechaConvenida", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnFechaConvenida);
                this.columnFechaVencimiento = new DataColumn("FechaVencimiento", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnFechaVencimiento);
                this.columnObservaciones = new DataColumn("Observaciones", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnObservaciones);
                this.columnCampoAuxiliar1 = new DataColumn("CampoAuxiliar1", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnCampoAuxiliar1);
                this.columnCampoAuxiliar2 = new DataColumn("CampoAuxiliar2", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnCampoAuxiliar2);
                this.columnCampoAuxiliar3 = new DataColumn("CampoAuxiliar3", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnCampoAuxiliar3);
                this.columnCampoAuxiliar4 = new DataColumn("CampoAuxiliar4", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnCampoAuxiliar4);
                this.columnCampoAuxiliar5 = new DataColumn("CampoAuxiliar5", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnCampoAuxiliar5);
                this.columnIdDomicilio = new DataColumn("IdDomicilio", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdDomicilio);
                this.columnFechaCreacion = new DataColumn("FechaCreacion", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnFechaCreacion);
                this.columnIdConexionCreacion = new DataColumn("IdConexionCreacion", typeof(long), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdConexionCreacion);
                this.columnUltimaModificacion = new DataColumn("UltimaModificacion", typeof(System.Byte[]), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnUltimaModificacion);
                this.columnIdConexionUltimaModificacion = new DataColumn("IdConexionUltimaModificacion", typeof(long), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdConexionUltimaModificacion);
                this.columnIdReservado = new DataColumn("IdReservado", typeof(long), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdReservado);
                this.columnRowId = new DataColumn("RowId", typeof(System.Guid), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnRowId);
                this.columnIdEmpresa = new DataColumn("IdEmpresa", typeof(long), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdEmpresa);
                this.columnIdSucursal = new DataColumn("IdSucursal", typeof(long), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdSucursal);
                this.columnOldIdComprobante = new DataColumn("OldIdComprobante", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnOldIdComprobante);
                this.Constraints.Add(new UniqueConstraint("tlg_ComprobantesKey1", new DataColumn[] {
                                this.columnIdComprobante}, true));
                this.columnIdComprobante.AllowDBNull = false;
                this.columnIdComprobante.Unique = true;
                this.columnUltimaModificacion.ReadOnly = true;
                this.columnOldIdComprobante.AllowDBNull = false;
            }
            
            public tlg_ComprobantesRow Newtlg_ComprobantesRow() {
                return ((tlg_ComprobantesRow)(this.NewRow()));
            }
            
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder) {
                return new tlg_ComprobantesRow(builder);
            }
            
            protected override System.Type GetRowType() {
                return typeof(tlg_ComprobantesRow);
            }
            
            protected override void OnRowChanged(DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.tlg_ComprobantesRowChanged != null)) {
                    this.tlg_ComprobantesRowChanged(this, new tlg_ComprobantesRowChangeEvent(((tlg_ComprobantesRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowChanging(DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.tlg_ComprobantesRowChanging != null)) {
                    this.tlg_ComprobantesRowChanging(this, new tlg_ComprobantesRowChangeEvent(((tlg_ComprobantesRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleted(DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.tlg_ComprobantesRowDeleted != null)) {
                    this.tlg_ComprobantesRowDeleted(this, new tlg_ComprobantesRowChangeEvent(((tlg_ComprobantesRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleting(DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.tlg_ComprobantesRowDeleting != null)) {
                    this.tlg_ComprobantesRowDeleting(this, new tlg_ComprobantesRowChangeEvent(((tlg_ComprobantesRow)(e.Row)), e.Action));
                }
            }
            
            public void Removetlg_ComprobantesRow(tlg_ComprobantesRow row) {
                this.Rows.Remove(row);
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class tlg_ComprobantesRow : DataRow {
            
            private tlg_ComprobantesDataTable tabletlg_Comprobantes;
            
            internal tlg_ComprobantesRow(DataRowBuilder rb) : 
                    base(rb) {
                this.tabletlg_Comprobantes = ((tlg_ComprobantesDataTable)(this.Table));
            }
            
            public string IdComprobante {
                get {
                    return ((string)(this[this.tabletlg_Comprobantes.IdComprobanteColumn]));
                }
                set {
                    this[this.tabletlg_Comprobantes.IdComprobanteColumn] = value;
                }
            }
            
            public System.DateTime FechaConvenida {
                get {
                    try {
                        return ((System.DateTime)(this[this.tabletlg_Comprobantes.FechaConvenidaColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletlg_Comprobantes.FechaConvenidaColumn] = value;
                }
            }
            
            public System.DateTime FechaVencimiento {
                get {
                    try {
                        return ((System.DateTime)(this[this.tabletlg_Comprobantes.FechaVencimientoColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletlg_Comprobantes.FechaVencimientoColumn] = value;
                }
            }
            
            public string Observaciones {
                get {
                    try {
                        return ((string)(this[this.tabletlg_Comprobantes.ObservacionesColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletlg_Comprobantes.ObservacionesColumn] = value;
                }
            }
            
            public string CampoAuxiliar1 {
                get {
                    try {
                        return ((string)(this[this.tabletlg_Comprobantes.CampoAuxiliar1Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletlg_Comprobantes.CampoAuxiliar1Column] = value;
                }
            }
            
            public string CampoAuxiliar2 {
                get {
                    try {
                        return ((string)(this[this.tabletlg_Comprobantes.CampoAuxiliar2Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletlg_Comprobantes.CampoAuxiliar2Column] = value;
                }
            }
            
            public string CampoAuxiliar3 {
                get {
                    try {
                        return ((string)(this[this.tabletlg_Comprobantes.CampoAuxiliar3Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletlg_Comprobantes.CampoAuxiliar3Column] = value;
                }
            }
            
            public string CampoAuxiliar4 {
                get {
                    try {
                        return ((string)(this[this.tabletlg_Comprobantes.CampoAuxiliar4Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletlg_Comprobantes.CampoAuxiliar4Column] = value;
                }
            }
            
            public string CampoAuxiliar5 {
                get {
                    try {
                        return ((string)(this[this.tabletlg_Comprobantes.CampoAuxiliar5Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletlg_Comprobantes.CampoAuxiliar5Column] = value;
                }
            }
            
            public string IdDomicilio {
                get {
                    try {
                        return ((string)(this[this.tabletlg_Comprobantes.IdDomicilioColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletlg_Comprobantes.IdDomicilioColumn] = value;
                }
            }
            
            public System.DateTime FechaCreacion {
                get {
                    try {
                        return ((System.DateTime)(this[this.tabletlg_Comprobantes.FechaCreacionColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletlg_Comprobantes.FechaCreacionColumn] = value;
                }
            }
            
            public long IdConexionCreacion {
                get {
                    try {
                        return ((long)(this[this.tabletlg_Comprobantes.IdConexionCreacionColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletlg_Comprobantes.IdConexionCreacionColumn] = value;
                }
            }
            
            public System.Byte[] UltimaModificacion {
                get {
                    try {
                        return ((System.Byte[])(this[this.tabletlg_Comprobantes.UltimaModificacionColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletlg_Comprobantes.UltimaModificacionColumn] = value;
                }
            }
            
            public long IdConexionUltimaModificacion {
                get {
                    try {
                        return ((long)(this[this.tabletlg_Comprobantes.IdConexionUltimaModificacionColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletlg_Comprobantes.IdConexionUltimaModificacionColumn] = value;
                }
            }
            
            public long IdReservado {
                get {
                    try {
                        return ((long)(this[this.tabletlg_Comprobantes.IdReservadoColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletlg_Comprobantes.IdReservadoColumn] = value;
                }
            }
            
            public System.Guid RowId {
                get {
                    try {
                        return ((System.Guid)(this[this.tabletlg_Comprobantes.RowIdColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletlg_Comprobantes.RowIdColumn] = value;
                }
            }
            
            public long IdEmpresa {
                get {
                    try {
                        return ((long)(this[this.tabletlg_Comprobantes.IdEmpresaColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletlg_Comprobantes.IdEmpresaColumn] = value;
                }
            }
            
            public long IdSucursal {
                get {
                    try {
                        return ((long)(this[this.tabletlg_Comprobantes.IdSucursalColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletlg_Comprobantes.IdSucursalColumn] = value;
                }
            }
            
            public string OldIdComprobante {
                get {
                    return ((string)(this[this.tabletlg_Comprobantes.OldIdComprobanteColumn]));
                }
                set {
                    this[this.tabletlg_Comprobantes.OldIdComprobanteColumn] = value;
                }
            }
            
            public bool IsFechaConvenidaNull() {
                return this.IsNull(this.tabletlg_Comprobantes.FechaConvenidaColumn);
            }
            
            public void SetFechaConvenidaNull() {
                this[this.tabletlg_Comprobantes.FechaConvenidaColumn] = System.Convert.DBNull;
            }
            
            public bool IsFechaVencimientoNull() {
                return this.IsNull(this.tabletlg_Comprobantes.FechaVencimientoColumn);
            }
            
            public void SetFechaVencimientoNull() {
                this[this.tabletlg_Comprobantes.FechaVencimientoColumn] = System.Convert.DBNull;
            }
            
            public bool IsObservacionesNull() {
                return this.IsNull(this.tabletlg_Comprobantes.ObservacionesColumn);
            }
            
            public void SetObservacionesNull() {
                this[this.tabletlg_Comprobantes.ObservacionesColumn] = System.Convert.DBNull;
            }
            
            public bool IsCampoAuxiliar1Null() {
                return this.IsNull(this.tabletlg_Comprobantes.CampoAuxiliar1Column);
            }
            
            public void SetCampoAuxiliar1Null() {
                this[this.tabletlg_Comprobantes.CampoAuxiliar1Column] = System.Convert.DBNull;
            }
            
            public bool IsCampoAuxiliar2Null() {
                return this.IsNull(this.tabletlg_Comprobantes.CampoAuxiliar2Column);
            }
            
            public void SetCampoAuxiliar2Null() {
                this[this.tabletlg_Comprobantes.CampoAuxiliar2Column] = System.Convert.DBNull;
            }
            
            public bool IsCampoAuxiliar3Null() {
                return this.IsNull(this.tabletlg_Comprobantes.CampoAuxiliar3Column);
            }
            
            public void SetCampoAuxiliar3Null() {
                this[this.tabletlg_Comprobantes.CampoAuxiliar3Column] = System.Convert.DBNull;
            }
            
            public bool IsCampoAuxiliar4Null() {
                return this.IsNull(this.tabletlg_Comprobantes.CampoAuxiliar4Column);
            }
            
            public void SetCampoAuxiliar4Null() {
                this[this.tabletlg_Comprobantes.CampoAuxiliar4Column] = System.Convert.DBNull;
            }
            
            public bool IsCampoAuxiliar5Null() {
                return this.IsNull(this.tabletlg_Comprobantes.CampoAuxiliar5Column);
            }
            
            public void SetCampoAuxiliar5Null() {
                this[this.tabletlg_Comprobantes.CampoAuxiliar5Column] = System.Convert.DBNull;
            }
            
            public bool IsIdDomicilioNull() {
                return this.IsNull(this.tabletlg_Comprobantes.IdDomicilioColumn);
            }
            
            public void SetIdDomicilioNull() {
                this[this.tabletlg_Comprobantes.IdDomicilioColumn] = System.Convert.DBNull;
            }
            
            public bool IsFechaCreacionNull() {
                return this.IsNull(this.tabletlg_Comprobantes.FechaCreacionColumn);
            }
            
            public void SetFechaCreacionNull() {
                this[this.tabletlg_Comprobantes.FechaCreacionColumn] = System.Convert.DBNull;
            }
            
            public bool IsIdConexionCreacionNull() {
                return this.IsNull(this.tabletlg_Comprobantes.IdConexionCreacionColumn);
            }
            
            public void SetIdConexionCreacionNull() {
                this[this.tabletlg_Comprobantes.IdConexionCreacionColumn] = System.Convert.DBNull;
            }
            
            public bool IsUltimaModificacionNull() {
                return this.IsNull(this.tabletlg_Comprobantes.UltimaModificacionColumn);
            }
            
            public void SetUltimaModificacionNull() {
                this[this.tabletlg_Comprobantes.UltimaModificacionColumn] = System.Convert.DBNull;
            }
            
            public bool IsIdConexionUltimaModificacionNull() {
                return this.IsNull(this.tabletlg_Comprobantes.IdConexionUltimaModificacionColumn);
            }
            
            public void SetIdConexionUltimaModificacionNull() {
                this[this.tabletlg_Comprobantes.IdConexionUltimaModificacionColumn] = System.Convert.DBNull;
            }
            
            public bool IsIdReservadoNull() {
                return this.IsNull(this.tabletlg_Comprobantes.IdReservadoColumn);
            }
            
            public void SetIdReservadoNull() {
                this[this.tabletlg_Comprobantes.IdReservadoColumn] = System.Convert.DBNull;
            }
            
            public bool IsRowIdNull() {
                return this.IsNull(this.tabletlg_Comprobantes.RowIdColumn);
            }
            
            public void SetRowIdNull() {
                this[this.tabletlg_Comprobantes.RowIdColumn] = System.Convert.DBNull;
            }
            
            public bool IsIdEmpresaNull() {
                return this.IsNull(this.tabletlg_Comprobantes.IdEmpresaColumn);
            }
            
            public void SetIdEmpresaNull() {
                this[this.tabletlg_Comprobantes.IdEmpresaColumn] = System.Convert.DBNull;
            }
            
            public bool IsIdSucursalNull() {
                return this.IsNull(this.tabletlg_Comprobantes.IdSucursalColumn);
            }
            
            public void SetIdSucursalNull() {
                this[this.tabletlg_Comprobantes.IdSucursalColumn] = System.Convert.DBNull;
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class tlg_ComprobantesRowChangeEvent : EventArgs {
            
            private tlg_ComprobantesRow eventRow;
            
            private DataRowAction eventAction;
            
            public tlg_ComprobantesRowChangeEvent(tlg_ComprobantesRow row, DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            public tlg_ComprobantesRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            public DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
