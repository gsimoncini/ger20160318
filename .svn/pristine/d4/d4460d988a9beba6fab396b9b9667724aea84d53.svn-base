//------------------------------------------------------------------------------
// <autogenerated>
//     This code was generated by a tool.
//     Runtime Version: 1.1.4322.2032
//
//     Changes to this file may cause incorrect behavior and will be lost if 
//     the code is regenerated.
// </autogenerated>
//------------------------------------------------------------------------------

namespace mz.erp.commontypes.data {
    using System;
    using System.Data;
    using System.Xml;
    using System.Runtime.Serialization;
    
    
    [Serializable()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Diagnostics.DebuggerStepThrough()]
    [System.ComponentModel.ToolboxItem(true)]
    public class tsy_ImpuestosDataset : DataSet {
        
        private tsy_ImpuestosDataTable tabletsy_Impuestos;
        
        public tsy_ImpuestosDataset() {
            this.InitClass();
            System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            this.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        protected tsy_ImpuestosDataset(SerializationInfo info, StreamingContext context) {
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((strSchema != null)) {
                DataSet ds = new DataSet();
                ds.ReadXmlSchema(new XmlTextReader(new System.IO.StringReader(strSchema)));
                if ((ds.Tables["tsy_Impuestos"] != null)) {
                    this.Tables.Add(new tsy_ImpuestosDataTable(ds.Tables["tsy_Impuestos"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.InitClass();
            }
            this.GetSerializationData(info, context);
            System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            this.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public tsy_ImpuestosDataTable tsy_Impuestos {
            get {
                return this.tabletsy_Impuestos;
            }
        }
        
        public override DataSet Clone() {
            tsy_ImpuestosDataset cln = ((tsy_ImpuestosDataset)(base.Clone()));
            cln.InitVars();
            return cln;
        }
        
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        protected override void ReadXmlSerializable(XmlReader reader) {
            this.Reset();
            DataSet ds = new DataSet();
            ds.ReadXml(reader);
            if ((ds.Tables["tsy_Impuestos"] != null)) {
                this.Tables.Add(new tsy_ImpuestosDataTable(ds.Tables["tsy_Impuestos"]));
            }
            this.DataSetName = ds.DataSetName;
            this.Prefix = ds.Prefix;
            this.Namespace = ds.Namespace;
            this.Locale = ds.Locale;
            this.CaseSensitive = ds.CaseSensitive;
            this.EnforceConstraints = ds.EnforceConstraints;
            this.Merge(ds, false, System.Data.MissingSchemaAction.Add);
            this.InitVars();
        }
        
        protected override System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            System.IO.MemoryStream stream = new System.IO.MemoryStream();
            this.WriteXmlSchema(new XmlTextWriter(stream, null));
            stream.Position = 0;
            return System.Xml.Schema.XmlSchema.Read(new XmlTextReader(stream), null);
        }
        
        internal void InitVars() {
            this.tabletsy_Impuestos = ((tsy_ImpuestosDataTable)(this.Tables["tsy_Impuestos"]));
            if ((this.tabletsy_Impuestos != null)) {
                this.tabletsy_Impuestos.InitVars();
            }
        }
        
        private void InitClass() {
            this.DataSetName = "tsy_ImpuestosDataset";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/tsy_Impuestos.xsd";
            this.Locale = new System.Globalization.CultureInfo("en-US");
            this.CaseSensitive = false;
            this.EnforceConstraints = true;
            this.tabletsy_Impuestos = new tsy_ImpuestosDataTable();
            this.Tables.Add(this.tabletsy_Impuestos);
        }
        
        private bool ShouldSerializetsy_Impuestos() {
            return false;
        }
        
        private void SchemaChanged(object sender, System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        public delegate void tsy_ImpuestosRowChangeEventHandler(object sender, tsy_ImpuestosRowChangeEvent e);
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class tsy_ImpuestosDataTable : DataTable, System.Collections.IEnumerable {
            
            private DataColumn columnIdImpuesto;
            
            private DataColumn columnDescripcion;
            
            private DataColumn columnIdTipoDeConcepto;
            
            private DataColumn columnFormulaDeCalculo;
            
            private DataColumn columnMetodoDeComparacion;
            
            private DataColumn columnActivo;
            
            private DataColumn columnFechaCreacion;
            
            private DataColumn columnIdConexionCreacion;
            
            private DataColumn columnUltimaModificacion;
            
            private DataColumn columnIdConexionUltimaModificacion;
            
            private DataColumn columnIdReservado;
            
            private DataColumn columnRowId;
            
            private DataColumn columnIdEmpresa;
            
            private DataColumn columnIdSucursal;
            
            internal tsy_ImpuestosDataTable() : 
                    base("tsy_Impuestos") {
                this.InitClass();
            }
            
            internal tsy_ImpuestosDataTable(DataTable table) : 
                    base(table.TableName) {
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
                this.DisplayExpression = table.DisplayExpression;
            }
            
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            internal DataColumn IdImpuestoColumn {
                get {
                    return this.columnIdImpuesto;
                }
            }
            
            internal DataColumn DescripcionColumn {
                get {
                    return this.columnDescripcion;
                }
            }
            
            internal DataColumn IdTipoDeConceptoColumn {
                get {
                    return this.columnIdTipoDeConcepto;
                }
            }
            
            internal DataColumn FormulaDeCalculoColumn {
                get {
                    return this.columnFormulaDeCalculo;
                }
            }
            
            internal DataColumn MetodoDeComparacionColumn {
                get {
                    return this.columnMetodoDeComparacion;
                }
            }
            
            internal DataColumn ActivoColumn {
                get {
                    return this.columnActivo;
                }
            }
            
            internal DataColumn FechaCreacionColumn {
                get {
                    return this.columnFechaCreacion;
                }
            }
            
            internal DataColumn IdConexionCreacionColumn {
                get {
                    return this.columnIdConexionCreacion;
                }
            }
            
            internal DataColumn UltimaModificacionColumn {
                get {
                    return this.columnUltimaModificacion;
                }
            }
            
            internal DataColumn IdConexionUltimaModificacionColumn {
                get {
                    return this.columnIdConexionUltimaModificacion;
                }
            }
            
            internal DataColumn IdReservadoColumn {
                get {
                    return this.columnIdReservado;
                }
            }
            
            internal DataColumn RowIdColumn {
                get {
                    return this.columnRowId;
                }
            }
            
            internal DataColumn IdEmpresaColumn {
                get {
                    return this.columnIdEmpresa;
                }
            }
            
            internal DataColumn IdSucursalColumn {
                get {
                    return this.columnIdSucursal;
                }
            }
            
            public tsy_ImpuestosRow this[int index] {
                get {
                    return ((tsy_ImpuestosRow)(this.Rows[index]));
                }
            }
            
            public event tsy_ImpuestosRowChangeEventHandler tsy_ImpuestosRowChanged;
            
            public event tsy_ImpuestosRowChangeEventHandler tsy_ImpuestosRowChanging;
            
            public event tsy_ImpuestosRowChangeEventHandler tsy_ImpuestosRowDeleted;
            
            public event tsy_ImpuestosRowChangeEventHandler tsy_ImpuestosRowDeleting;
            
            public void Addtsy_ImpuestosRow(tsy_ImpuestosRow row) {
                this.Rows.Add(row);
            }
            
            public tsy_ImpuestosRow Addtsy_ImpuestosRow(string IdImpuesto, string Descripcion, string IdTipoDeConcepto, string FormulaDeCalculo, string MetodoDeComparacion, bool Activo, System.DateTime FechaCreacion, long IdConexionCreacion, System.Byte[] UltimaModificacion, long IdConexionUltimaModificacion, long IdReservado, System.Guid RowId, long IdEmpresa, long IdSucursal) {
                tsy_ImpuestosRow rowtsy_ImpuestosRow = ((tsy_ImpuestosRow)(this.NewRow()));
                rowtsy_ImpuestosRow.ItemArray = new object[] {
                        IdImpuesto,
                        Descripcion,
                        IdTipoDeConcepto,
                        FormulaDeCalculo,
                        MetodoDeComparacion,
                        Activo,
                        FechaCreacion,
                        IdConexionCreacion,
                        UltimaModificacion,
                        IdConexionUltimaModificacion,
                        IdReservado,
                        RowId,
                        IdEmpresa,
                        IdSucursal};
                this.Rows.Add(rowtsy_ImpuestosRow);
                return rowtsy_ImpuestosRow;
            }
            
            public tsy_ImpuestosRow FindByIdImpuesto(string IdImpuesto) {
                return ((tsy_ImpuestosRow)(this.Rows.Find(new object[] {
                            IdImpuesto})));
            }
            
            public System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            public override DataTable Clone() {
                tsy_ImpuestosDataTable cln = ((tsy_ImpuestosDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            protected override DataTable CreateInstance() {
                return new tsy_ImpuestosDataTable();
            }
            
            internal void InitVars() {
                this.columnIdImpuesto = this.Columns["IdImpuesto"];
                this.columnDescripcion = this.Columns["Descripcion"];
                this.columnIdTipoDeConcepto = this.Columns["IdTipoDeConcepto"];
                this.columnFormulaDeCalculo = this.Columns["FormulaDeCalculo"];
                this.columnMetodoDeComparacion = this.Columns["MetodoDeComparacion"];
                this.columnActivo = this.Columns["Activo"];
                this.columnFechaCreacion = this.Columns["FechaCreacion"];
                this.columnIdConexionCreacion = this.Columns["IdConexionCreacion"];
                this.columnUltimaModificacion = this.Columns["UltimaModificacion"];
                this.columnIdConexionUltimaModificacion = this.Columns["IdConexionUltimaModificacion"];
                this.columnIdReservado = this.Columns["IdReservado"];
                this.columnRowId = this.Columns["RowId"];
                this.columnIdEmpresa = this.Columns["IdEmpresa"];
                this.columnIdSucursal = this.Columns["IdSucursal"];
            }
            
            private void InitClass() {
                this.columnIdImpuesto = new DataColumn("IdImpuesto", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdImpuesto);
                this.columnDescripcion = new DataColumn("Descripcion", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnDescripcion);
                this.columnIdTipoDeConcepto = new DataColumn("IdTipoDeConcepto", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdTipoDeConcepto);
                this.columnFormulaDeCalculo = new DataColumn("FormulaDeCalculo", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnFormulaDeCalculo);
                this.columnMetodoDeComparacion = new DataColumn("MetodoDeComparacion", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnMetodoDeComparacion);
                this.columnActivo = new DataColumn("Activo", typeof(bool), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnActivo);
                this.columnFechaCreacion = new DataColumn("FechaCreacion", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnFechaCreacion);
                this.columnIdConexionCreacion = new DataColumn("IdConexionCreacion", typeof(long), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdConexionCreacion);
                this.columnUltimaModificacion = new DataColumn("UltimaModificacion", typeof(System.Byte[]), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnUltimaModificacion);
                this.columnIdConexionUltimaModificacion = new DataColumn("IdConexionUltimaModificacion", typeof(long), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdConexionUltimaModificacion);
                this.columnIdReservado = new DataColumn("IdReservado", typeof(long), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdReservado);
                this.columnRowId = new DataColumn("RowId", typeof(System.Guid), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnRowId);
                this.columnIdEmpresa = new DataColumn("IdEmpresa", typeof(long), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdEmpresa);
                this.columnIdSucursal = new DataColumn("IdSucursal", typeof(long), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdSucursal);
                this.Constraints.Add(new UniqueConstraint("tsy_ImpuestosKey1", new DataColumn[] {
                                this.columnIdImpuesto}, true));
                this.columnIdImpuesto.AllowDBNull = false;
                this.columnIdImpuesto.Unique = true;
                this.columnUltimaModificacion.ReadOnly = true;
            }
            
            public tsy_ImpuestosRow Newtsy_ImpuestosRow() {
                return ((tsy_ImpuestosRow)(this.NewRow()));
            }
            
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder) {
                return new tsy_ImpuestosRow(builder);
            }
            
            protected override System.Type GetRowType() {
                return typeof(tsy_ImpuestosRow);
            }
            
            protected override void OnRowChanged(DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.tsy_ImpuestosRowChanged != null)) {
                    this.tsy_ImpuestosRowChanged(this, new tsy_ImpuestosRowChangeEvent(((tsy_ImpuestosRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowChanging(DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.tsy_ImpuestosRowChanging != null)) {
                    this.tsy_ImpuestosRowChanging(this, new tsy_ImpuestosRowChangeEvent(((tsy_ImpuestosRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleted(DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.tsy_ImpuestosRowDeleted != null)) {
                    this.tsy_ImpuestosRowDeleted(this, new tsy_ImpuestosRowChangeEvent(((tsy_ImpuestosRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleting(DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.tsy_ImpuestosRowDeleting != null)) {
                    this.tsy_ImpuestosRowDeleting(this, new tsy_ImpuestosRowChangeEvent(((tsy_ImpuestosRow)(e.Row)), e.Action));
                }
            }
            
            public void Removetsy_ImpuestosRow(tsy_ImpuestosRow row) {
                this.Rows.Remove(row);
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class tsy_ImpuestosRow : DataRow {
            
            private tsy_ImpuestosDataTable tabletsy_Impuestos;
            
            internal tsy_ImpuestosRow(DataRowBuilder rb) : 
                    base(rb) {
                this.tabletsy_Impuestos = ((tsy_ImpuestosDataTable)(this.Table));
            }
            
            public string IdImpuesto {
                get {
                    return ((string)(this[this.tabletsy_Impuestos.IdImpuestoColumn]));
                }
                set {
                    this[this.tabletsy_Impuestos.IdImpuestoColumn] = value;
                }
            }
            
            public string Descripcion {
                get {
                    try {
                        return ((string)(this[this.tabletsy_Impuestos.DescripcionColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletsy_Impuestos.DescripcionColumn] = value;
                }
            }
            
            public string IdTipoDeConcepto {
                get {
                    try {
                        return ((string)(this[this.tabletsy_Impuestos.IdTipoDeConceptoColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletsy_Impuestos.IdTipoDeConceptoColumn] = value;
                }
            }
            
            public string FormulaDeCalculo {
                get {
                    try {
                        return ((string)(this[this.tabletsy_Impuestos.FormulaDeCalculoColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletsy_Impuestos.FormulaDeCalculoColumn] = value;
                }
            }
            
            public string MetodoDeComparacion {
                get {
                    try {
                        return ((string)(this[this.tabletsy_Impuestos.MetodoDeComparacionColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletsy_Impuestos.MetodoDeComparacionColumn] = value;
                }
            }
            
            public bool Activo {
                get {
                    try {
                        return ((bool)(this[this.tabletsy_Impuestos.ActivoColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletsy_Impuestos.ActivoColumn] = value;
                }
            }
            
            public System.DateTime FechaCreacion {
                get {
                    try {
                        return ((System.DateTime)(this[this.tabletsy_Impuestos.FechaCreacionColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletsy_Impuestos.FechaCreacionColumn] = value;
                }
            }
            
            public long IdConexionCreacion {
                get {
                    try {
                        return ((long)(this[this.tabletsy_Impuestos.IdConexionCreacionColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletsy_Impuestos.IdConexionCreacionColumn] = value;
                }
            }
            
            public System.Byte[] UltimaModificacion {
                get {
                    try {
                        return ((System.Byte[])(this[this.tabletsy_Impuestos.UltimaModificacionColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletsy_Impuestos.UltimaModificacionColumn] = value;
                }
            }
            
            public long IdConexionUltimaModificacion {
                get {
                    try {
                        return ((long)(this[this.tabletsy_Impuestos.IdConexionUltimaModificacionColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletsy_Impuestos.IdConexionUltimaModificacionColumn] = value;
                }
            }
            
            public long IdReservado {
                get {
                    try {
                        return ((long)(this[this.tabletsy_Impuestos.IdReservadoColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletsy_Impuestos.IdReservadoColumn] = value;
                }
            }
            
            public System.Guid RowId {
                get {
                    try {
                        return ((System.Guid)(this[this.tabletsy_Impuestos.RowIdColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletsy_Impuestos.RowIdColumn] = value;
                }
            }
            
            public long IdEmpresa {
                get {
                    try {
                        return ((long)(this[this.tabletsy_Impuestos.IdEmpresaColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletsy_Impuestos.IdEmpresaColumn] = value;
                }
            }
            
            public long IdSucursal {
                get {
                    try {
                        return ((long)(this[this.tabletsy_Impuestos.IdSucursalColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletsy_Impuestos.IdSucursalColumn] = value;
                }
            }
            
            public bool IsDescripcionNull() {
                return this.IsNull(this.tabletsy_Impuestos.DescripcionColumn);
            }
            
            public void SetDescripcionNull() {
                this[this.tabletsy_Impuestos.DescripcionColumn] = System.Convert.DBNull;
            }
            
            public bool IsIdTipoDeConceptoNull() {
                return this.IsNull(this.tabletsy_Impuestos.IdTipoDeConceptoColumn);
            }
            
            public void SetIdTipoDeConceptoNull() {
                this[this.tabletsy_Impuestos.IdTipoDeConceptoColumn] = System.Convert.DBNull;
            }
            
            public bool IsFormulaDeCalculoNull() {
                return this.IsNull(this.tabletsy_Impuestos.FormulaDeCalculoColumn);
            }
            
            public void SetFormulaDeCalculoNull() {
                this[this.tabletsy_Impuestos.FormulaDeCalculoColumn] = System.Convert.DBNull;
            }
            
            public bool IsMetodoDeComparacionNull() {
                return this.IsNull(this.tabletsy_Impuestos.MetodoDeComparacionColumn);
            }
            
            public void SetMetodoDeComparacionNull() {
                this[this.tabletsy_Impuestos.MetodoDeComparacionColumn] = System.Convert.DBNull;
            }
            
            public bool IsActivoNull() {
                return this.IsNull(this.tabletsy_Impuestos.ActivoColumn);
            }
            
            public void SetActivoNull() {
                this[this.tabletsy_Impuestos.ActivoColumn] = System.Convert.DBNull;
            }
            
            public bool IsFechaCreacionNull() {
                return this.IsNull(this.tabletsy_Impuestos.FechaCreacionColumn);
            }
            
            public void SetFechaCreacionNull() {
                this[this.tabletsy_Impuestos.FechaCreacionColumn] = System.Convert.DBNull;
            }
            
            public bool IsIdConexionCreacionNull() {
                return this.IsNull(this.tabletsy_Impuestos.IdConexionCreacionColumn);
            }
            
            public void SetIdConexionCreacionNull() {
                this[this.tabletsy_Impuestos.IdConexionCreacionColumn] = System.Convert.DBNull;
            }
            
            public bool IsUltimaModificacionNull() {
                return this.IsNull(this.tabletsy_Impuestos.UltimaModificacionColumn);
            }
            
            public void SetUltimaModificacionNull() {
                this[this.tabletsy_Impuestos.UltimaModificacionColumn] = System.Convert.DBNull;
            }
            
            public bool IsIdConexionUltimaModificacionNull() {
                return this.IsNull(this.tabletsy_Impuestos.IdConexionUltimaModificacionColumn);
            }
            
            public void SetIdConexionUltimaModificacionNull() {
                this[this.tabletsy_Impuestos.IdConexionUltimaModificacionColumn] = System.Convert.DBNull;
            }
            
            public bool IsIdReservadoNull() {
                return this.IsNull(this.tabletsy_Impuestos.IdReservadoColumn);
            }
            
            public void SetIdReservadoNull() {
                this[this.tabletsy_Impuestos.IdReservadoColumn] = System.Convert.DBNull;
            }
            
            public bool IsRowIdNull() {
                return this.IsNull(this.tabletsy_Impuestos.RowIdColumn);
            }
            
            public void SetRowIdNull() {
                this[this.tabletsy_Impuestos.RowIdColumn] = System.Convert.DBNull;
            }
            
            public bool IsIdEmpresaNull() {
                return this.IsNull(this.tabletsy_Impuestos.IdEmpresaColumn);
            }
            
            public void SetIdEmpresaNull() {
                this[this.tabletsy_Impuestos.IdEmpresaColumn] = System.Convert.DBNull;
            }
            
            public bool IsIdSucursalNull() {
                return this.IsNull(this.tabletsy_Impuestos.IdSucursalColumn);
            }
            
            public void SetIdSucursalNull() {
                this[this.tabletsy_Impuestos.IdSucursalColumn] = System.Convert.DBNull;
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class tsy_ImpuestosRowChangeEvent : EventArgs {
            
            private tsy_ImpuestosRow eventRow;
            
            private DataRowAction eventAction;
            
            public tsy_ImpuestosRowChangeEvent(tsy_ImpuestosRow row, DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            public tsy_ImpuestosRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            public DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
