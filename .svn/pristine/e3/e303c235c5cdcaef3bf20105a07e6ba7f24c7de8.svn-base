//------------------------------------------------------------------------------
// <autogenerated>
//     This code was generated by a tool.
//     Runtime Version: 1.1.4322.573
//
//     Changes to this file may cause incorrect behavior and will be lost if 
//     the code is regenerated.
// </autogenerated>
//------------------------------------------------------------------------------

namespace mz.erp.commontypes.data {
    using System;
    using System.Data;
    using System.Xml;
    using System.Runtime.Serialization;
    
    
    [Serializable()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Diagnostics.DebuggerStepThrough()]
    [System.ComponentModel.ToolboxItem(true)]
    public class tfi_MovimientosDeCajaExDataset : DataSet {
        
        private Pr_tfi_GetComprobantesTesoreriaDataTable tablePr_tfi_GetComprobantesTesoreria;
        
        private tfi_PagosMovimientosCajasDataTable tabletfi_PagosMovimientosCajas;
        
        private tfi_ValoresDataTable tabletfi_Valores;
        
        private tfi_ValoresVariablesAuxiliaresDataTable tabletfi_ValoresVariablesAuxiliares;
        
        private Pr_tfi_CotizacionesMoneda_GetCotizacionActualDataTable tablePr_tfi_CotizacionesMoneda_GetCotizacionActual;
        
        private tfi_MovimientosDeCajaDataTable tabletfi_MovimientosDeCaja;
        
        private tsh_TipoAceptacionDataTable tabletsh_TipoAceptacion;
        
        private DataRelation relationtfi_MovimientosDeCajatfi_PagosMovimientosCajas;
        
        private DataRelation relationtfi_Valorestfi_PagosMovimientosCajas;
        
        private DataRelation relationtfi_Valorestfi_ValoresVariablesAuxiliares;
        
        public tfi_MovimientosDeCajaExDataset() {
            this.InitClass();
            System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            this.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        protected tfi_MovimientosDeCajaExDataset(SerializationInfo info, StreamingContext context) {
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((strSchema != null)) {
                DataSet ds = new DataSet();
                ds.ReadXmlSchema(new XmlTextReader(new System.IO.StringReader(strSchema)));
                if ((ds.Tables["Pr_tfi_GetComprobantesTesoreria"] != null)) {
                    this.Tables.Add(new Pr_tfi_GetComprobantesTesoreriaDataTable(ds.Tables["Pr_tfi_GetComprobantesTesoreria"]));
                }
                if ((ds.Tables["tfi_PagosMovimientosCajas"] != null)) {
                    this.Tables.Add(new tfi_PagosMovimientosCajasDataTable(ds.Tables["tfi_PagosMovimientosCajas"]));
                }
                if ((ds.Tables["tfi_Valores"] != null)) {
                    this.Tables.Add(new tfi_ValoresDataTable(ds.Tables["tfi_Valores"]));
                }
                if ((ds.Tables["tfi_ValoresVariablesAuxiliares"] != null)) {
                    this.Tables.Add(new tfi_ValoresVariablesAuxiliaresDataTable(ds.Tables["tfi_ValoresVariablesAuxiliares"]));
                }
                if ((ds.Tables["Pr_tfi_CotizacionesMoneda_GetCotizacionActual"] != null)) {
                    this.Tables.Add(new Pr_tfi_CotizacionesMoneda_GetCotizacionActualDataTable(ds.Tables["Pr_tfi_CotizacionesMoneda_GetCotizacionActual"]));
                }
                if ((ds.Tables["tfi_MovimientosDeCaja"] != null)) {
                    this.Tables.Add(new tfi_MovimientosDeCajaDataTable(ds.Tables["tfi_MovimientosDeCaja"]));
                }
                if ((ds.Tables["tsh_TipoAceptacion"] != null)) {
                    this.Tables.Add(new tsh_TipoAceptacionDataTable(ds.Tables["tsh_TipoAceptacion"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.InitClass();
            }
            this.GetSerializationData(info, context);
            System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            this.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public Pr_tfi_GetComprobantesTesoreriaDataTable Pr_tfi_GetComprobantesTesoreria {
            get {
                return this.tablePr_tfi_GetComprobantesTesoreria;
            }
        }
        
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public tfi_PagosMovimientosCajasDataTable tfi_PagosMovimientosCajas {
            get {
                return this.tabletfi_PagosMovimientosCajas;
            }
        }
        
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public tfi_ValoresDataTable tfi_Valores {
            get {
                return this.tabletfi_Valores;
            }
        }
        
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public tfi_ValoresVariablesAuxiliaresDataTable tfi_ValoresVariablesAuxiliares {
            get {
                return this.tabletfi_ValoresVariablesAuxiliares;
            }
        }
        
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public Pr_tfi_CotizacionesMoneda_GetCotizacionActualDataTable Pr_tfi_CotizacionesMoneda_GetCotizacionActual {
            get {
                return this.tablePr_tfi_CotizacionesMoneda_GetCotizacionActual;
            }
        }
        
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public tfi_MovimientosDeCajaDataTable tfi_MovimientosDeCaja {
            get {
                return this.tabletfi_MovimientosDeCaja;
            }
        }
        
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public tsh_TipoAceptacionDataTable tsh_TipoAceptacion {
            get {
                return this.tabletsh_TipoAceptacion;
            }
        }
        
        public override DataSet Clone() {
            tfi_MovimientosDeCajaExDataset cln = ((tfi_MovimientosDeCajaExDataset)(base.Clone()));
            cln.InitVars();
            return cln;
        }
        
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        protected override void ReadXmlSerializable(XmlReader reader) {
            this.Reset();
            DataSet ds = new DataSet();
            ds.ReadXml(reader);
            if ((ds.Tables["Pr_tfi_GetComprobantesTesoreria"] != null)) {
                this.Tables.Add(new Pr_tfi_GetComprobantesTesoreriaDataTable(ds.Tables["Pr_tfi_GetComprobantesTesoreria"]));
            }
            if ((ds.Tables["tfi_PagosMovimientosCajas"] != null)) {
                this.Tables.Add(new tfi_PagosMovimientosCajasDataTable(ds.Tables["tfi_PagosMovimientosCajas"]));
            }
            if ((ds.Tables["tfi_Valores"] != null)) {
                this.Tables.Add(new tfi_ValoresDataTable(ds.Tables["tfi_Valores"]));
            }
            if ((ds.Tables["tfi_ValoresVariablesAuxiliares"] != null)) {
                this.Tables.Add(new tfi_ValoresVariablesAuxiliaresDataTable(ds.Tables["tfi_ValoresVariablesAuxiliares"]));
            }
            if ((ds.Tables["Pr_tfi_CotizacionesMoneda_GetCotizacionActual"] != null)) {
                this.Tables.Add(new Pr_tfi_CotizacionesMoneda_GetCotizacionActualDataTable(ds.Tables["Pr_tfi_CotizacionesMoneda_GetCotizacionActual"]));
            }
            if ((ds.Tables["tfi_MovimientosDeCaja"] != null)) {
                this.Tables.Add(new tfi_MovimientosDeCajaDataTable(ds.Tables["tfi_MovimientosDeCaja"]));
            }
            if ((ds.Tables["tsh_TipoAceptacion"] != null)) {
                this.Tables.Add(new tsh_TipoAceptacionDataTable(ds.Tables["tsh_TipoAceptacion"]));
            }
            this.DataSetName = ds.DataSetName;
            this.Prefix = ds.Prefix;
            this.Namespace = ds.Namespace;
            this.Locale = ds.Locale;
            this.CaseSensitive = ds.CaseSensitive;
            this.EnforceConstraints = ds.EnforceConstraints;
            this.Merge(ds, false, System.Data.MissingSchemaAction.Add);
            this.InitVars();
        }
        
        protected override System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            System.IO.MemoryStream stream = new System.IO.MemoryStream();
            this.WriteXmlSchema(new XmlTextWriter(stream, null));
            stream.Position = 0;
            return System.Xml.Schema.XmlSchema.Read(new XmlTextReader(stream), null);
        }
        
        internal void InitVars() {
            this.tablePr_tfi_GetComprobantesTesoreria = ((Pr_tfi_GetComprobantesTesoreriaDataTable)(this.Tables["Pr_tfi_GetComprobantesTesoreria"]));
            if ((this.tablePr_tfi_GetComprobantesTesoreria != null)) {
                this.tablePr_tfi_GetComprobantesTesoreria.InitVars();
            }
            this.tabletfi_PagosMovimientosCajas = ((tfi_PagosMovimientosCajasDataTable)(this.Tables["tfi_PagosMovimientosCajas"]));
            if ((this.tabletfi_PagosMovimientosCajas != null)) {
                this.tabletfi_PagosMovimientosCajas.InitVars();
            }
            this.tabletfi_Valores = ((tfi_ValoresDataTable)(this.Tables["tfi_Valores"]));
            if ((this.tabletfi_Valores != null)) {
                this.tabletfi_Valores.InitVars();
            }
            this.tabletfi_ValoresVariablesAuxiliares = ((tfi_ValoresVariablesAuxiliaresDataTable)(this.Tables["tfi_ValoresVariablesAuxiliares"]));
            if ((this.tabletfi_ValoresVariablesAuxiliares != null)) {
                this.tabletfi_ValoresVariablesAuxiliares.InitVars();
            }
            this.tablePr_tfi_CotizacionesMoneda_GetCotizacionActual = ((Pr_tfi_CotizacionesMoneda_GetCotizacionActualDataTable)(this.Tables["Pr_tfi_CotizacionesMoneda_GetCotizacionActual"]));
            if ((this.tablePr_tfi_CotizacionesMoneda_GetCotizacionActual != null)) {
                this.tablePr_tfi_CotizacionesMoneda_GetCotizacionActual.InitVars();
            }
            this.tabletfi_MovimientosDeCaja = ((tfi_MovimientosDeCajaDataTable)(this.Tables["tfi_MovimientosDeCaja"]));
            if ((this.tabletfi_MovimientosDeCaja != null)) {
                this.tabletfi_MovimientosDeCaja.InitVars();
            }
            this.tabletsh_TipoAceptacion = ((tsh_TipoAceptacionDataTable)(this.Tables["tsh_TipoAceptacion"]));
            if ((this.tabletsh_TipoAceptacion != null)) {
                this.tabletsh_TipoAceptacion.InitVars();
            }
            this.relationtfi_MovimientosDeCajatfi_PagosMovimientosCajas = this.Relations["tfi_MovimientosDeCajatfi_PagosMovimientosCajas"];
            this.relationtfi_Valorestfi_PagosMovimientosCajas = this.Relations["tfi_Valorestfi_PagosMovimientosCajas"];
            this.relationtfi_Valorestfi_ValoresVariablesAuxiliares = this.Relations["tfi_Valorestfi_ValoresVariablesAuxiliares"];
        }
        
        private void InitClass() {
            this.DataSetName = "tfi_MovimientosDeCajaExDataset";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/tfi_MovimientosDeCajaEx.xsd";
            this.Locale = new System.Globalization.CultureInfo("en-US");
            this.CaseSensitive = false;
            this.EnforceConstraints = true;
            this.tablePr_tfi_GetComprobantesTesoreria = new Pr_tfi_GetComprobantesTesoreriaDataTable();
            this.Tables.Add(this.tablePr_tfi_GetComprobantesTesoreria);
            this.tabletfi_PagosMovimientosCajas = new tfi_PagosMovimientosCajasDataTable();
            this.Tables.Add(this.tabletfi_PagosMovimientosCajas);
            this.tabletfi_Valores = new tfi_ValoresDataTable();
            this.Tables.Add(this.tabletfi_Valores);
            this.tabletfi_ValoresVariablesAuxiliares = new tfi_ValoresVariablesAuxiliaresDataTable();
            this.Tables.Add(this.tabletfi_ValoresVariablesAuxiliares);
            this.tablePr_tfi_CotizacionesMoneda_GetCotizacionActual = new Pr_tfi_CotizacionesMoneda_GetCotizacionActualDataTable();
            this.Tables.Add(this.tablePr_tfi_CotizacionesMoneda_GetCotizacionActual);
            this.tabletfi_MovimientosDeCaja = new tfi_MovimientosDeCajaDataTable();
            this.Tables.Add(this.tabletfi_MovimientosDeCaja);
            this.tabletsh_TipoAceptacion = new tsh_TipoAceptacionDataTable();
            this.Tables.Add(this.tabletsh_TipoAceptacion);
            ForeignKeyConstraint fkc;
            fkc = new ForeignKeyConstraint("tfi_MovimientosDeCajatfi_PagosMovimientosCajas", new DataColumn[] {
                        this.tabletfi_MovimientosDeCaja.IdMovimientoColumn}, new DataColumn[] {
                        this.tabletfi_PagosMovimientosCajas.IdMovimientoColumn});
            this.tabletfi_PagosMovimientosCajas.Constraints.Add(fkc);
            fkc.AcceptRejectRule = System.Data.AcceptRejectRule.None;
            fkc.DeleteRule = System.Data.Rule.Cascade;
            fkc.UpdateRule = System.Data.Rule.Cascade;
            fkc = new ForeignKeyConstraint("tfi_Valorestfi_PagosMovimientosCajas", new DataColumn[] {
                        this.tabletfi_Valores.IdValorColumn}, new DataColumn[] {
                        this.tabletfi_PagosMovimientosCajas.IdValorColumn});
            this.tabletfi_PagosMovimientosCajas.Constraints.Add(fkc);
            fkc.AcceptRejectRule = System.Data.AcceptRejectRule.None;
            fkc.DeleteRule = System.Data.Rule.Cascade;
            fkc.UpdateRule = System.Data.Rule.Cascade;
            fkc = new ForeignKeyConstraint("tfi_Valorestfi_ValoresVariablesAuxiliares", new DataColumn[] {
                        this.tabletfi_Valores.IdValorColumn}, new DataColumn[] {
                        this.tabletfi_ValoresVariablesAuxiliares.IdValorVariableColumn});
            this.tabletfi_ValoresVariablesAuxiliares.Constraints.Add(fkc);
            fkc.AcceptRejectRule = System.Data.AcceptRejectRule.None;
            fkc.DeleteRule = System.Data.Rule.Cascade;
            fkc.UpdateRule = System.Data.Rule.Cascade;
            this.relationtfi_MovimientosDeCajatfi_PagosMovimientosCajas = new DataRelation("tfi_MovimientosDeCajatfi_PagosMovimientosCajas", new DataColumn[] {
                        this.tabletfi_MovimientosDeCaja.IdMovimientoColumn}, new DataColumn[] {
                        this.tabletfi_PagosMovimientosCajas.IdMovimientoColumn}, false);
            this.Relations.Add(this.relationtfi_MovimientosDeCajatfi_PagosMovimientosCajas);
            this.relationtfi_Valorestfi_PagosMovimientosCajas = new DataRelation("tfi_Valorestfi_PagosMovimientosCajas", new DataColumn[] {
                        this.tabletfi_Valores.IdValorColumn}, new DataColumn[] {
                        this.tabletfi_PagosMovimientosCajas.IdValorColumn}, false);
            this.Relations.Add(this.relationtfi_Valorestfi_PagosMovimientosCajas);
            this.relationtfi_Valorestfi_ValoresVariablesAuxiliares = new DataRelation("tfi_Valorestfi_ValoresVariablesAuxiliares", new DataColumn[] {
                        this.tabletfi_Valores.IdValorColumn}, new DataColumn[] {
                        this.tabletfi_ValoresVariablesAuxiliares.IdValorVariableColumn}, false);
            this.Relations.Add(this.relationtfi_Valorestfi_ValoresVariablesAuxiliares);
        }
        
        private bool ShouldSerializePr_tfi_GetComprobantesTesoreria() {
            return false;
        }
        
        private bool ShouldSerializetfi_PagosMovimientosCajas() {
            return false;
        }
        
        private bool ShouldSerializetfi_Valores() {
            return false;
        }
        
        private bool ShouldSerializetfi_ValoresVariablesAuxiliares() {
            return false;
        }
        
        private bool ShouldSerializePr_tfi_CotizacionesMoneda_GetCotizacionActual() {
            return false;
        }
        
        private bool ShouldSerializetfi_MovimientosDeCaja() {
            return false;
        }
        
        private bool ShouldSerializetsh_TipoAceptacion() {
            return false;
        }
        
        private void SchemaChanged(object sender, System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        public delegate void Pr_tfi_GetComprobantesTesoreriaRowChangeEventHandler(object sender, Pr_tfi_GetComprobantesTesoreriaRowChangeEvent e);
        
        public delegate void tfi_PagosMovimientosCajasRowChangeEventHandler(object sender, tfi_PagosMovimientosCajasRowChangeEvent e);
        
        public delegate void tfi_ValoresRowChangeEventHandler(object sender, tfi_ValoresRowChangeEvent e);
        
        public delegate void tfi_ValoresVariablesAuxiliaresRowChangeEventHandler(object sender, tfi_ValoresVariablesAuxiliaresRowChangeEvent e);
        
        public delegate void Pr_tfi_CotizacionesMoneda_GetCotizacionActualRowChangeEventHandler(object sender, Pr_tfi_CotizacionesMoneda_GetCotizacionActualRowChangeEvent e);
        
        public delegate void tfi_MovimientosDeCajaRowChangeEventHandler(object sender, tfi_MovimientosDeCajaRowChangeEvent e);
        
        public delegate void tsh_TipoAceptacionRowChangeEventHandler(object sender, tsh_TipoAceptacionRowChangeEvent e);
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class Pr_tfi_GetComprobantesTesoreriaDataTable : DataTable, System.Collections.IEnumerable {
            
            private DataColumn columnIdTDCompTesoreria;
            
            private DataColumn columnDescripcion;
            
            private DataColumn columnAgrupado;
            
            internal Pr_tfi_GetComprobantesTesoreriaDataTable() : 
                    base("Pr_tfi_GetComprobantesTesoreria") {
                this.InitClass();
            }
            
            internal Pr_tfi_GetComprobantesTesoreriaDataTable(DataTable table) : 
                    base(table.TableName) {
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
                this.DisplayExpression = table.DisplayExpression;
            }
            
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            internal DataColumn IdTDCompTesoreriaColumn {
                get {
                    return this.columnIdTDCompTesoreria;
                }
            }
            
            internal DataColumn DescripcionColumn {
                get {
                    return this.columnDescripcion;
                }
            }
            
            internal DataColumn AgrupadoColumn {
                get {
                    return this.columnAgrupado;
                }
            }
            
            public Pr_tfi_GetComprobantesTesoreriaRow this[int index] {
                get {
                    return ((Pr_tfi_GetComprobantesTesoreriaRow)(this.Rows[index]));
                }
            }
            
            public event Pr_tfi_GetComprobantesTesoreriaRowChangeEventHandler Pr_tfi_GetComprobantesTesoreriaRowChanged;
            
            public event Pr_tfi_GetComprobantesTesoreriaRowChangeEventHandler Pr_tfi_GetComprobantesTesoreriaRowChanging;
            
            public event Pr_tfi_GetComprobantesTesoreriaRowChangeEventHandler Pr_tfi_GetComprobantesTesoreriaRowDeleted;
            
            public event Pr_tfi_GetComprobantesTesoreriaRowChangeEventHandler Pr_tfi_GetComprobantesTesoreriaRowDeleting;
            
            public void AddPr_tfi_GetComprobantesTesoreriaRow(Pr_tfi_GetComprobantesTesoreriaRow row) {
                this.Rows.Add(row);
            }
            
            public Pr_tfi_GetComprobantesTesoreriaRow AddPr_tfi_GetComprobantesTesoreriaRow(string IdTDCompTesoreria, string Descripcion, bool Agrupado) {
                Pr_tfi_GetComprobantesTesoreriaRow rowPr_tfi_GetComprobantesTesoreriaRow = ((Pr_tfi_GetComprobantesTesoreriaRow)(this.NewRow()));
                rowPr_tfi_GetComprobantesTesoreriaRow.ItemArray = new object[] {
                        IdTDCompTesoreria,
                        Descripcion,
                        Agrupado};
                this.Rows.Add(rowPr_tfi_GetComprobantesTesoreriaRow);
                return rowPr_tfi_GetComprobantesTesoreriaRow;
            }
            
            public System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            public override DataTable Clone() {
                Pr_tfi_GetComprobantesTesoreriaDataTable cln = ((Pr_tfi_GetComprobantesTesoreriaDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            protected override DataTable CreateInstance() {
                return new Pr_tfi_GetComprobantesTesoreriaDataTable();
            }
            
            internal void InitVars() {
                this.columnIdTDCompTesoreria = this.Columns["IdTDCompTesoreria"];
                this.columnDescripcion = this.Columns["Descripcion"];
                this.columnAgrupado = this.Columns["Agrupado"];
            }
            
            private void InitClass() {
                this.columnIdTDCompTesoreria = new DataColumn("IdTDCompTesoreria", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdTDCompTesoreria);
                this.columnDescripcion = new DataColumn("Descripcion", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnDescripcion);
                this.columnAgrupado = new DataColumn("Agrupado", typeof(bool), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnAgrupado);
                this.columnIdTDCompTesoreria.ReadOnly = true;
                this.columnDescripcion.ReadOnly = true;
            }
            
            public Pr_tfi_GetComprobantesTesoreriaRow NewPr_tfi_GetComprobantesTesoreriaRow() {
                return ((Pr_tfi_GetComprobantesTesoreriaRow)(this.NewRow()));
            }
            
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder) {
                return new Pr_tfi_GetComprobantesTesoreriaRow(builder);
            }
            
            protected override System.Type GetRowType() {
                return typeof(Pr_tfi_GetComprobantesTesoreriaRow);
            }
            
            protected override void OnRowChanged(DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.Pr_tfi_GetComprobantesTesoreriaRowChanged != null)) {
                    this.Pr_tfi_GetComprobantesTesoreriaRowChanged(this, new Pr_tfi_GetComprobantesTesoreriaRowChangeEvent(((Pr_tfi_GetComprobantesTesoreriaRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowChanging(DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.Pr_tfi_GetComprobantesTesoreriaRowChanging != null)) {
                    this.Pr_tfi_GetComprobantesTesoreriaRowChanging(this, new Pr_tfi_GetComprobantesTesoreriaRowChangeEvent(((Pr_tfi_GetComprobantesTesoreriaRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleted(DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.Pr_tfi_GetComprobantesTesoreriaRowDeleted != null)) {
                    this.Pr_tfi_GetComprobantesTesoreriaRowDeleted(this, new Pr_tfi_GetComprobantesTesoreriaRowChangeEvent(((Pr_tfi_GetComprobantesTesoreriaRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleting(DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.Pr_tfi_GetComprobantesTesoreriaRowDeleting != null)) {
                    this.Pr_tfi_GetComprobantesTesoreriaRowDeleting(this, new Pr_tfi_GetComprobantesTesoreriaRowChangeEvent(((Pr_tfi_GetComprobantesTesoreriaRow)(e.Row)), e.Action));
                }
            }
            
            public void RemovePr_tfi_GetComprobantesTesoreriaRow(Pr_tfi_GetComprobantesTesoreriaRow row) {
                this.Rows.Remove(row);
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class Pr_tfi_GetComprobantesTesoreriaRow : DataRow {
            
            private Pr_tfi_GetComprobantesTesoreriaDataTable tablePr_tfi_GetComprobantesTesoreria;
            
            internal Pr_tfi_GetComprobantesTesoreriaRow(DataRowBuilder rb) : 
                    base(rb) {
                this.tablePr_tfi_GetComprobantesTesoreria = ((Pr_tfi_GetComprobantesTesoreriaDataTable)(this.Table));
            }
            
            public string IdTDCompTesoreria {
                get {
                    try {
                        return ((string)(this[this.tablePr_tfi_GetComprobantesTesoreria.IdTDCompTesoreriaColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tablePr_tfi_GetComprobantesTesoreria.IdTDCompTesoreriaColumn] = value;
                }
            }
            
            public string Descripcion {
                get {
                    try {
                        return ((string)(this[this.tablePr_tfi_GetComprobantesTesoreria.DescripcionColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tablePr_tfi_GetComprobantesTesoreria.DescripcionColumn] = value;
                }
            }
            
            public bool Agrupado {
                get {
                    try {
                        return ((bool)(this[this.tablePr_tfi_GetComprobantesTesoreria.AgrupadoColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tablePr_tfi_GetComprobantesTesoreria.AgrupadoColumn] = value;
                }
            }
            
            public bool IsIdTDCompTesoreriaNull() {
                return this.IsNull(this.tablePr_tfi_GetComprobantesTesoreria.IdTDCompTesoreriaColumn);
            }
            
            public void SetIdTDCompTesoreriaNull() {
                this[this.tablePr_tfi_GetComprobantesTesoreria.IdTDCompTesoreriaColumn] = System.Convert.DBNull;
            }
            
            public bool IsDescripcionNull() {
                return this.IsNull(this.tablePr_tfi_GetComprobantesTesoreria.DescripcionColumn);
            }
            
            public void SetDescripcionNull() {
                this[this.tablePr_tfi_GetComprobantesTesoreria.DescripcionColumn] = System.Convert.DBNull;
            }
            
            public bool IsAgrupadoNull() {
                return this.IsNull(this.tablePr_tfi_GetComprobantesTesoreria.AgrupadoColumn);
            }
            
            public void SetAgrupadoNull() {
                this[this.tablePr_tfi_GetComprobantesTesoreria.AgrupadoColumn] = System.Convert.DBNull;
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class Pr_tfi_GetComprobantesTesoreriaRowChangeEvent : EventArgs {
            
            private Pr_tfi_GetComprobantesTesoreriaRow eventRow;
            
            private DataRowAction eventAction;
            
            public Pr_tfi_GetComprobantesTesoreriaRowChangeEvent(Pr_tfi_GetComprobantesTesoreriaRow row, DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            public Pr_tfi_GetComprobantesTesoreriaRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            public DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class tfi_PagosMovimientosCajasDataTable : DataTable, System.Collections.IEnumerable {
            
            private DataColumn columnIdMovimiento;
            
            private DataColumn columnIdEmpresa;
            
            private DataColumn columnIdSucursal;
            
            private DataColumn columnIdInstanciaCaja;
            
            private DataColumn columnIdTipoDeMovimiento;
            
            private DataColumn columnNumero;
            
            private DataColumn columnIdValor;
            
            private DataColumn columnFechaCreacion;
            
            private DataColumn columnIdConexionCreacion;
            
            private DataColumn columnUltimaModificacion;
            
            private DataColumn columnIdConexionUltimaModificacion;
            
            private DataColumn columnIdReservado;
            
            private DataColumn columnRowId;
            
            internal tfi_PagosMovimientosCajasDataTable() : 
                    base("tfi_PagosMovimientosCajas") {
                this.InitClass();
            }
            
            internal tfi_PagosMovimientosCajasDataTable(DataTable table) : 
                    base(table.TableName) {
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
                this.DisplayExpression = table.DisplayExpression;
            }
            
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            internal DataColumn IdMovimientoColumn {
                get {
                    return this.columnIdMovimiento;
                }
            }
            
            internal DataColumn IdEmpresaColumn {
                get {
                    return this.columnIdEmpresa;
                }
            }
            
            internal DataColumn IdSucursalColumn {
                get {
                    return this.columnIdSucursal;
                }
            }
            
            internal DataColumn IdInstanciaCajaColumn {
                get {
                    return this.columnIdInstanciaCaja;
                }
            }
            
            internal DataColumn IdTipoDeMovimientoColumn {
                get {
                    return this.columnIdTipoDeMovimiento;
                }
            }
            
            internal DataColumn NumeroColumn {
                get {
                    return this.columnNumero;
                }
            }
            
            internal DataColumn IdValorColumn {
                get {
                    return this.columnIdValor;
                }
            }
            
            internal DataColumn FechaCreacionColumn {
                get {
                    return this.columnFechaCreacion;
                }
            }
            
            internal DataColumn IdConexionCreacionColumn {
                get {
                    return this.columnIdConexionCreacion;
                }
            }
            
            internal DataColumn UltimaModificacionColumn {
                get {
                    return this.columnUltimaModificacion;
                }
            }
            
            internal DataColumn IdConexionUltimaModificacionColumn {
                get {
                    return this.columnIdConexionUltimaModificacion;
                }
            }
            
            internal DataColumn IdReservadoColumn {
                get {
                    return this.columnIdReservado;
                }
            }
            
            internal DataColumn RowIdColumn {
                get {
                    return this.columnRowId;
                }
            }
            
            public tfi_PagosMovimientosCajasRow this[int index] {
                get {
                    return ((tfi_PagosMovimientosCajasRow)(this.Rows[index]));
                }
            }
            
            public event tfi_PagosMovimientosCajasRowChangeEventHandler tfi_PagosMovimientosCajasRowChanged;
            
            public event tfi_PagosMovimientosCajasRowChangeEventHandler tfi_PagosMovimientosCajasRowChanging;
            
            public event tfi_PagosMovimientosCajasRowChangeEventHandler tfi_PagosMovimientosCajasRowDeleted;
            
            public event tfi_PagosMovimientosCajasRowChangeEventHandler tfi_PagosMovimientosCajasRowDeleting;
            
            public void Addtfi_PagosMovimientosCajasRow(tfi_PagosMovimientosCajasRow row) {
                this.Rows.Add(row);
            }
            
            public tfi_PagosMovimientosCajasRow Addtfi_PagosMovimientosCajasRow(tfi_MovimientosDeCajaRow parenttfi_MovimientosDeCajaRowBytfi_MovimientosDeCajatfi_PagosMovimientosCajas, string IdEmpresa, string IdSucursal, string IdInstanciaCaja, string IdTipoDeMovimiento, string Numero, tfi_ValoresRow parenttfi_ValoresRowBytfi_Valorestfi_PagosMovimientosCajas, System.DateTime FechaCreacion, long IdConexionCreacion, System.Byte[] UltimaModificacion, long IdConexionUltimaModificacion, long IdReservado, System.Guid RowId) {
                tfi_PagosMovimientosCajasRow rowtfi_PagosMovimientosCajasRow = ((tfi_PagosMovimientosCajasRow)(this.NewRow()));
                rowtfi_PagosMovimientosCajasRow.ItemArray = new object[] {
                        parenttfi_MovimientosDeCajaRowBytfi_MovimientosDeCajatfi_PagosMovimientosCajas[0],
                        IdEmpresa,
                        IdSucursal,
                        IdInstanciaCaja,
                        IdTipoDeMovimiento,
                        Numero,
                        parenttfi_ValoresRowBytfi_Valorestfi_PagosMovimientosCajas[0],
                        FechaCreacion,
                        IdConexionCreacion,
                        UltimaModificacion,
                        IdConexionUltimaModificacion,
                        IdReservado,
                        RowId};
                this.Rows.Add(rowtfi_PagosMovimientosCajasRow);
                return rowtfi_PagosMovimientosCajasRow;
            }
            
            public tfi_PagosMovimientosCajasRow FindByIdMovimientoIdValor(string IdMovimiento, string IdValor) {
                return ((tfi_PagosMovimientosCajasRow)(this.Rows.Find(new object[] {
                            IdMovimiento,
                            IdValor})));
            }
            
            public System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            public override DataTable Clone() {
                tfi_PagosMovimientosCajasDataTable cln = ((tfi_PagosMovimientosCajasDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            protected override DataTable CreateInstance() {
                return new tfi_PagosMovimientosCajasDataTable();
            }
            
            internal void InitVars() {
                this.columnIdMovimiento = this.Columns["IdMovimiento"];
                this.columnIdEmpresa = this.Columns["IdEmpresa"];
                this.columnIdSucursal = this.Columns["IdSucursal"];
                this.columnIdInstanciaCaja = this.Columns["IdInstanciaCaja"];
                this.columnIdTipoDeMovimiento = this.Columns["IdTipoDeMovimiento"];
                this.columnNumero = this.Columns["Numero"];
                this.columnIdValor = this.Columns["IdValor"];
                this.columnFechaCreacion = this.Columns["FechaCreacion"];
                this.columnIdConexionCreacion = this.Columns["IdConexionCreacion"];
                this.columnUltimaModificacion = this.Columns["UltimaModificacion"];
                this.columnIdConexionUltimaModificacion = this.Columns["IdConexionUltimaModificacion"];
                this.columnIdReservado = this.Columns["IdReservado"];
                this.columnRowId = this.Columns["RowId"];
            }
            
            private void InitClass() {
                this.columnIdMovimiento = new DataColumn("IdMovimiento", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdMovimiento);
                this.columnIdEmpresa = new DataColumn("IdEmpresa", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdEmpresa);
                this.columnIdSucursal = new DataColumn("IdSucursal", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdSucursal);
                this.columnIdInstanciaCaja = new DataColumn("IdInstanciaCaja", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdInstanciaCaja);
                this.columnIdTipoDeMovimiento = new DataColumn("IdTipoDeMovimiento", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdTipoDeMovimiento);
                this.columnNumero = new DataColumn("Numero", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnNumero);
                this.columnIdValor = new DataColumn("IdValor", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdValor);
                this.columnFechaCreacion = new DataColumn("FechaCreacion", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnFechaCreacion);
                this.columnIdConexionCreacion = new DataColumn("IdConexionCreacion", typeof(long), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdConexionCreacion);
                this.columnUltimaModificacion = new DataColumn("UltimaModificacion", typeof(System.Byte[]), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnUltimaModificacion);
                this.columnIdConexionUltimaModificacion = new DataColumn("IdConexionUltimaModificacion", typeof(long), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdConexionUltimaModificacion);
                this.columnIdReservado = new DataColumn("IdReservado", typeof(long), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdReservado);
                this.columnRowId = new DataColumn("RowId", typeof(System.Guid), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnRowId);
                this.Constraints.Add(new UniqueConstraint("tfi_MovimientosDeCajaExDatasetKey2", new DataColumn[] {
                                this.columnIdMovimiento,
                                this.columnIdValor}, true));
                this.columnIdMovimiento.AllowDBNull = false;
                this.columnIdValor.AllowDBNull = false;
                this.columnUltimaModificacion.ReadOnly = true;
            }
            
            public tfi_PagosMovimientosCajasRow Newtfi_PagosMovimientosCajasRow() {
                return ((tfi_PagosMovimientosCajasRow)(this.NewRow()));
            }
            
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder) {
                return new tfi_PagosMovimientosCajasRow(builder);
            }
            
            protected override System.Type GetRowType() {
                return typeof(tfi_PagosMovimientosCajasRow);
            }
            
            protected override void OnRowChanged(DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.tfi_PagosMovimientosCajasRowChanged != null)) {
                    this.tfi_PagosMovimientosCajasRowChanged(this, new tfi_PagosMovimientosCajasRowChangeEvent(((tfi_PagosMovimientosCajasRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowChanging(DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.tfi_PagosMovimientosCajasRowChanging != null)) {
                    this.tfi_PagosMovimientosCajasRowChanging(this, new tfi_PagosMovimientosCajasRowChangeEvent(((tfi_PagosMovimientosCajasRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleted(DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.tfi_PagosMovimientosCajasRowDeleted != null)) {
                    this.tfi_PagosMovimientosCajasRowDeleted(this, new tfi_PagosMovimientosCajasRowChangeEvent(((tfi_PagosMovimientosCajasRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleting(DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.tfi_PagosMovimientosCajasRowDeleting != null)) {
                    this.tfi_PagosMovimientosCajasRowDeleting(this, new tfi_PagosMovimientosCajasRowChangeEvent(((tfi_PagosMovimientosCajasRow)(e.Row)), e.Action));
                }
            }
            
            public void Removetfi_PagosMovimientosCajasRow(tfi_PagosMovimientosCajasRow row) {
                this.Rows.Remove(row);
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class tfi_PagosMovimientosCajasRow : DataRow {
            
            private tfi_PagosMovimientosCajasDataTable tabletfi_PagosMovimientosCajas;
            
            internal tfi_PagosMovimientosCajasRow(DataRowBuilder rb) : 
                    base(rb) {
                this.tabletfi_PagosMovimientosCajas = ((tfi_PagosMovimientosCajasDataTable)(this.Table));
            }
            
            public string IdMovimiento {
                get {
                    return ((string)(this[this.tabletfi_PagosMovimientosCajas.IdMovimientoColumn]));
                }
                set {
                    this[this.tabletfi_PagosMovimientosCajas.IdMovimientoColumn] = value;
                }
            }
            
            public string IdEmpresa {
                get {
                    try {
                        return ((string)(this[this.tabletfi_PagosMovimientosCajas.IdEmpresaColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletfi_PagosMovimientosCajas.IdEmpresaColumn] = value;
                }
            }
            
            public string IdSucursal {
                get {
                    try {
                        return ((string)(this[this.tabletfi_PagosMovimientosCajas.IdSucursalColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletfi_PagosMovimientosCajas.IdSucursalColumn] = value;
                }
            }
            
            public string IdInstanciaCaja {
                get {
                    try {
                        return ((string)(this[this.tabletfi_PagosMovimientosCajas.IdInstanciaCajaColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletfi_PagosMovimientosCajas.IdInstanciaCajaColumn] = value;
                }
            }
            
            public string IdTipoDeMovimiento {
                get {
                    try {
                        return ((string)(this[this.tabletfi_PagosMovimientosCajas.IdTipoDeMovimientoColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletfi_PagosMovimientosCajas.IdTipoDeMovimientoColumn] = value;
                }
            }
            
            public string Numero {
                get {
                    try {
                        return ((string)(this[this.tabletfi_PagosMovimientosCajas.NumeroColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletfi_PagosMovimientosCajas.NumeroColumn] = value;
                }
            }
            
            public string IdValor {
                get {
                    return ((string)(this[this.tabletfi_PagosMovimientosCajas.IdValorColumn]));
                }
                set {
                    this[this.tabletfi_PagosMovimientosCajas.IdValorColumn] = value;
                }
            }
            
            public System.DateTime FechaCreacion {
                get {
                    try {
                        return ((System.DateTime)(this[this.tabletfi_PagosMovimientosCajas.FechaCreacionColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletfi_PagosMovimientosCajas.FechaCreacionColumn] = value;
                }
            }
            
            public long IdConexionCreacion {
                get {
                    try {
                        return ((long)(this[this.tabletfi_PagosMovimientosCajas.IdConexionCreacionColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletfi_PagosMovimientosCajas.IdConexionCreacionColumn] = value;
                }
            }
            
            public System.Byte[] UltimaModificacion {
                get {
                    try {
                        return ((System.Byte[])(this[this.tabletfi_PagosMovimientosCajas.UltimaModificacionColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletfi_PagosMovimientosCajas.UltimaModificacionColumn] = value;
                }
            }
            
            public long IdConexionUltimaModificacion {
                get {
                    try {
                        return ((long)(this[this.tabletfi_PagosMovimientosCajas.IdConexionUltimaModificacionColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletfi_PagosMovimientosCajas.IdConexionUltimaModificacionColumn] = value;
                }
            }
            
            public long IdReservado {
                get {
                    try {
                        return ((long)(this[this.tabletfi_PagosMovimientosCajas.IdReservadoColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletfi_PagosMovimientosCajas.IdReservadoColumn] = value;
                }
            }
            
            public System.Guid RowId {
                get {
                    try {
                        return ((System.Guid)(this[this.tabletfi_PagosMovimientosCajas.RowIdColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletfi_PagosMovimientosCajas.RowIdColumn] = value;
                }
            }
            
            public tfi_MovimientosDeCajaRow tfi_MovimientosDeCajaRow {
                get {
                    return ((tfi_MovimientosDeCajaRow)(this.GetParentRow(this.Table.ParentRelations["tfi_MovimientosDeCajatfi_PagosMovimientosCajas"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["tfi_MovimientosDeCajatfi_PagosMovimientosCajas"]);
                }
            }
            
            public tfi_ValoresRow tfi_ValoresRow {
                get {
                    return ((tfi_ValoresRow)(this.GetParentRow(this.Table.ParentRelations["tfi_Valorestfi_PagosMovimientosCajas"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["tfi_Valorestfi_PagosMovimientosCajas"]);
                }
            }
            
            public bool IsIdEmpresaNull() {
                return this.IsNull(this.tabletfi_PagosMovimientosCajas.IdEmpresaColumn);
            }
            
            public void SetIdEmpresaNull() {
                this[this.tabletfi_PagosMovimientosCajas.IdEmpresaColumn] = System.Convert.DBNull;
            }
            
            public bool IsIdSucursalNull() {
                return this.IsNull(this.tabletfi_PagosMovimientosCajas.IdSucursalColumn);
            }
            
            public void SetIdSucursalNull() {
                this[this.tabletfi_PagosMovimientosCajas.IdSucursalColumn] = System.Convert.DBNull;
            }
            
            public bool IsIdInstanciaCajaNull() {
                return this.IsNull(this.tabletfi_PagosMovimientosCajas.IdInstanciaCajaColumn);
            }
            
            public void SetIdInstanciaCajaNull() {
                this[this.tabletfi_PagosMovimientosCajas.IdInstanciaCajaColumn] = System.Convert.DBNull;
            }
            
            public bool IsIdTipoDeMovimientoNull() {
                return this.IsNull(this.tabletfi_PagosMovimientosCajas.IdTipoDeMovimientoColumn);
            }
            
            public void SetIdTipoDeMovimientoNull() {
                this[this.tabletfi_PagosMovimientosCajas.IdTipoDeMovimientoColumn] = System.Convert.DBNull;
            }
            
            public bool IsNumeroNull() {
                return this.IsNull(this.tabletfi_PagosMovimientosCajas.NumeroColumn);
            }
            
            public void SetNumeroNull() {
                this[this.tabletfi_PagosMovimientosCajas.NumeroColumn] = System.Convert.DBNull;
            }
            
            public bool IsFechaCreacionNull() {
                return this.IsNull(this.tabletfi_PagosMovimientosCajas.FechaCreacionColumn);
            }
            
            public void SetFechaCreacionNull() {
                this[this.tabletfi_PagosMovimientosCajas.FechaCreacionColumn] = System.Convert.DBNull;
            }
            
            public bool IsIdConexionCreacionNull() {
                return this.IsNull(this.tabletfi_PagosMovimientosCajas.IdConexionCreacionColumn);
            }
            
            public void SetIdConexionCreacionNull() {
                this[this.tabletfi_PagosMovimientosCajas.IdConexionCreacionColumn] = System.Convert.DBNull;
            }
            
            public bool IsUltimaModificacionNull() {
                return this.IsNull(this.tabletfi_PagosMovimientosCajas.UltimaModificacionColumn);
            }
            
            public void SetUltimaModificacionNull() {
                this[this.tabletfi_PagosMovimientosCajas.UltimaModificacionColumn] = System.Convert.DBNull;
            }
            
            public bool IsIdConexionUltimaModificacionNull() {
                return this.IsNull(this.tabletfi_PagosMovimientosCajas.IdConexionUltimaModificacionColumn);
            }
            
            public void SetIdConexionUltimaModificacionNull() {
                this[this.tabletfi_PagosMovimientosCajas.IdConexionUltimaModificacionColumn] = System.Convert.DBNull;
            }
            
            public bool IsIdReservadoNull() {
                return this.IsNull(this.tabletfi_PagosMovimientosCajas.IdReservadoColumn);
            }
            
            public void SetIdReservadoNull() {
                this[this.tabletfi_PagosMovimientosCajas.IdReservadoColumn] = System.Convert.DBNull;
            }
            
            public bool IsRowIdNull() {
                return this.IsNull(this.tabletfi_PagosMovimientosCajas.RowIdColumn);
            }
            
            public void SetRowIdNull() {
                this[this.tabletfi_PagosMovimientosCajas.RowIdColumn] = System.Convert.DBNull;
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class tfi_PagosMovimientosCajasRowChangeEvent : EventArgs {
            
            private tfi_PagosMovimientosCajasRow eventRow;
            
            private DataRowAction eventAction;
            
            public tfi_PagosMovimientosCajasRowChangeEvent(tfi_PagosMovimientosCajasRow row, DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            public tfi_PagosMovimientosCajasRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            public DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class tfi_ValoresDataTable : DataTable, System.Collections.IEnumerable {
            
            private DataColumn columnIdValor;
            
            private DataColumn columnIdTDCompTesoreria;
            
            private DataColumn columnNumero;
            
            private DataColumn columnIdEntidad;
            
            private DataColumn columnFecha;
            
            private DataColumn columnFechaVencimiento;
            
            private DataColumn columnValor;
            
            private DataColumn columnIdMoneda;
            
            private DataColumn columnIdCotizacionMoneda;
            
            private DataColumn columnFechaCreacion;
            
            private DataColumn columnIdConexionCreacion;
            
            private DataColumn columnUltimaModificacion;
            
            private DataColumn columnIdConexionUltimaModificacion;
            
            private DataColumn columnIdReservado;
            
            private DataColumn columnRowId;
            
            private DataColumn columnIdEmpresa;
            
            private DataColumn columnIdSucursal;
            
            internal tfi_ValoresDataTable() : 
                    base("tfi_Valores") {
                this.InitClass();
            }
            
            internal tfi_ValoresDataTable(DataTable table) : 
                    base(table.TableName) {
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
                this.DisplayExpression = table.DisplayExpression;
            }
            
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            internal DataColumn IdValorColumn {
                get {
                    return this.columnIdValor;
                }
            }
            
            internal DataColumn IdTDCompTesoreriaColumn {
                get {
                    return this.columnIdTDCompTesoreria;
                }
            }
            
            internal DataColumn NumeroColumn {
                get {
                    return this.columnNumero;
                }
            }
            
            internal DataColumn IdEntidadColumn {
                get {
                    return this.columnIdEntidad;
                }
            }
            
            internal DataColumn FechaColumn {
                get {
                    return this.columnFecha;
                }
            }
            
            internal DataColumn FechaVencimientoColumn {
                get {
                    return this.columnFechaVencimiento;
                }
            }
            
            internal DataColumn ValorColumn {
                get {
                    return this.columnValor;
                }
            }
            
            internal DataColumn IdMonedaColumn {
                get {
                    return this.columnIdMoneda;
                }
            }
            
            internal DataColumn IdCotizacionMonedaColumn {
                get {
                    return this.columnIdCotizacionMoneda;
                }
            }
            
            internal DataColumn FechaCreacionColumn {
                get {
                    return this.columnFechaCreacion;
                }
            }
            
            internal DataColumn IdConexionCreacionColumn {
                get {
                    return this.columnIdConexionCreacion;
                }
            }
            
            internal DataColumn UltimaModificacionColumn {
                get {
                    return this.columnUltimaModificacion;
                }
            }
            
            internal DataColumn IdConexionUltimaModificacionColumn {
                get {
                    return this.columnIdConexionUltimaModificacion;
                }
            }
            
            internal DataColumn IdReservadoColumn {
                get {
                    return this.columnIdReservado;
                }
            }
            
            internal DataColumn RowIdColumn {
                get {
                    return this.columnRowId;
                }
            }
            
            internal DataColumn IdEmpresaColumn {
                get {
                    return this.columnIdEmpresa;
                }
            }
            
            internal DataColumn IdSucursalColumn {
                get {
                    return this.columnIdSucursal;
                }
            }
            
            public tfi_ValoresRow this[int index] {
                get {
                    return ((tfi_ValoresRow)(this.Rows[index]));
                }
            }
            
            public event tfi_ValoresRowChangeEventHandler tfi_ValoresRowChanged;
            
            public event tfi_ValoresRowChangeEventHandler tfi_ValoresRowChanging;
            
            public event tfi_ValoresRowChangeEventHandler tfi_ValoresRowDeleted;
            
            public event tfi_ValoresRowChangeEventHandler tfi_ValoresRowDeleting;
            
            public void Addtfi_ValoresRow(tfi_ValoresRow row) {
                this.Rows.Add(row);
            }
            
            public tfi_ValoresRow Addtfi_ValoresRow(
                        string IdValor, 
                        string IdTDCompTesoreria, 
                        string Numero, 
                        string IdEntidad, 
                        System.DateTime Fecha, 
                        System.DateTime FechaVencimiento, 
                        System.Decimal Valor, 
                        string IdMoneda, 
                        string IdCotizacionMoneda, 
                        System.DateTime FechaCreacion, 
                        long IdConexionCreacion, 
                        System.Byte[] UltimaModificacion, 
                        long IdConexionUltimaModificacion, 
                        long IdReservado, 
                        System.Guid RowId, 
                        long IdEmpresa, 
                        long IdSucursal) {
                tfi_ValoresRow rowtfi_ValoresRow = ((tfi_ValoresRow)(this.NewRow()));
                rowtfi_ValoresRow.ItemArray = new object[] {
                        IdValor,
                        IdTDCompTesoreria,
                        Numero,
                        IdEntidad,
                        Fecha,
                        FechaVencimiento,
                        Valor,
                        IdMoneda,
                        IdCotizacionMoneda,
                        FechaCreacion,
                        IdConexionCreacion,
                        UltimaModificacion,
                        IdConexionUltimaModificacion,
                        IdReservado,
                        RowId,
                        IdEmpresa,
                        IdSucursal};
                this.Rows.Add(rowtfi_ValoresRow);
                return rowtfi_ValoresRow;
            }
            
            public tfi_ValoresRow FindByIdValor(string IdValor) {
                return ((tfi_ValoresRow)(this.Rows.Find(new object[] {
                            IdValor})));
            }
            
            public System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            public override DataTable Clone() {
                tfi_ValoresDataTable cln = ((tfi_ValoresDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            protected override DataTable CreateInstance() {
                return new tfi_ValoresDataTable();
            }
            
            internal void InitVars() {
                this.columnIdValor = this.Columns["IdValor"];
                this.columnIdTDCompTesoreria = this.Columns["IdTDCompTesoreria"];
                this.columnNumero = this.Columns["Numero"];
                this.columnIdEntidad = this.Columns["IdEntidad"];
                this.columnFecha = this.Columns["Fecha"];
                this.columnFechaVencimiento = this.Columns["FechaVencimiento"];
                this.columnValor = this.Columns["Valor"];
                this.columnIdMoneda = this.Columns["IdMoneda"];
                this.columnIdCotizacionMoneda = this.Columns["IdCotizacionMoneda"];
                this.columnFechaCreacion = this.Columns["FechaCreacion"];
                this.columnIdConexionCreacion = this.Columns["IdConexionCreacion"];
                this.columnUltimaModificacion = this.Columns["UltimaModificacion"];
                this.columnIdConexionUltimaModificacion = this.Columns["IdConexionUltimaModificacion"];
                this.columnIdReservado = this.Columns["IdReservado"];
                this.columnRowId = this.Columns["RowId"];
                this.columnIdEmpresa = this.Columns["IdEmpresa"];
                this.columnIdSucursal = this.Columns["IdSucursal"];
            }
            
            private void InitClass() {
                this.columnIdValor = new DataColumn("IdValor", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdValor);
                this.columnIdTDCompTesoreria = new DataColumn("IdTDCompTesoreria", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdTDCompTesoreria);
                this.columnNumero = new DataColumn("Numero", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnNumero);
                this.columnIdEntidad = new DataColumn("IdEntidad", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdEntidad);
                this.columnFecha = new DataColumn("Fecha", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnFecha);
                this.columnFechaVencimiento = new DataColumn("FechaVencimiento", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnFechaVencimiento);
                this.columnValor = new DataColumn("Valor", typeof(System.Decimal), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnValor);
                this.columnIdMoneda = new DataColumn("IdMoneda", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdMoneda);
                this.columnIdCotizacionMoneda = new DataColumn("IdCotizacionMoneda", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdCotizacionMoneda);
                this.columnFechaCreacion = new DataColumn("FechaCreacion", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnFechaCreacion);
                this.columnIdConexionCreacion = new DataColumn("IdConexionCreacion", typeof(long), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdConexionCreacion);
                this.columnUltimaModificacion = new DataColumn("UltimaModificacion", typeof(System.Byte[]), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnUltimaModificacion);
                this.columnIdConexionUltimaModificacion = new DataColumn("IdConexionUltimaModificacion", typeof(long), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdConexionUltimaModificacion);
                this.columnIdReservado = new DataColumn("IdReservado", typeof(long), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdReservado);
                this.columnRowId = new DataColumn("RowId", typeof(System.Guid), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnRowId);
                this.columnIdEmpresa = new DataColumn("IdEmpresa", typeof(long), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdEmpresa);
                this.columnIdSucursal = new DataColumn("IdSucursal", typeof(long), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdSucursal);
                this.Constraints.Add(new UniqueConstraint("tfi_MovimientosDeCajaExDatasetKey3", new DataColumn[] {
                                this.columnIdValor}, true));
                this.columnIdValor.AllowDBNull = false;
                this.columnIdValor.Unique = true;
                this.columnIdTDCompTesoreria.AllowDBNull = false;
                this.columnUltimaModificacion.ReadOnly = true;
            }
            
            public tfi_ValoresRow Newtfi_ValoresRow() {
                return ((tfi_ValoresRow)(this.NewRow()));
            }
            
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder) {
                return new tfi_ValoresRow(builder);
            }
            
            protected override System.Type GetRowType() {
                return typeof(tfi_ValoresRow);
            }
            
            protected override void OnRowChanged(DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.tfi_ValoresRowChanged != null)) {
                    this.tfi_ValoresRowChanged(this, new tfi_ValoresRowChangeEvent(((tfi_ValoresRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowChanging(DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.tfi_ValoresRowChanging != null)) {
                    this.tfi_ValoresRowChanging(this, new tfi_ValoresRowChangeEvent(((tfi_ValoresRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleted(DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.tfi_ValoresRowDeleted != null)) {
                    this.tfi_ValoresRowDeleted(this, new tfi_ValoresRowChangeEvent(((tfi_ValoresRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleting(DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.tfi_ValoresRowDeleting != null)) {
                    this.tfi_ValoresRowDeleting(this, new tfi_ValoresRowChangeEvent(((tfi_ValoresRow)(e.Row)), e.Action));
                }
            }
            
            public void Removetfi_ValoresRow(tfi_ValoresRow row) {
                this.Rows.Remove(row);
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class tfi_ValoresRow : DataRow {
            
            private tfi_ValoresDataTable tabletfi_Valores;
            
            internal tfi_ValoresRow(DataRowBuilder rb) : 
                    base(rb) {
                this.tabletfi_Valores = ((tfi_ValoresDataTable)(this.Table));
            }
            
            public string IdValor {
                get {
                    return ((string)(this[this.tabletfi_Valores.IdValorColumn]));
                }
                set {
                    this[this.tabletfi_Valores.IdValorColumn] = value;
                }
            }
            
            public string IdTDCompTesoreria {
                get {
                    return ((string)(this[this.tabletfi_Valores.IdTDCompTesoreriaColumn]));
                }
                set {
                    this[this.tabletfi_Valores.IdTDCompTesoreriaColumn] = value;
                }
            }
            
            public string Numero {
                get {
                    try {
                        return ((string)(this[this.tabletfi_Valores.NumeroColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletfi_Valores.NumeroColumn] = value;
                }
            }
            
            public string IdEntidad {
                get {
                    try {
                        return ((string)(this[this.tabletfi_Valores.IdEntidadColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletfi_Valores.IdEntidadColumn] = value;
                }
            }
            
            public System.DateTime Fecha {
                get {
                    try {
                        return ((System.DateTime)(this[this.tabletfi_Valores.FechaColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletfi_Valores.FechaColumn] = value;
                }
            }
            
            public System.DateTime FechaVencimiento {
                get {
                    try {
                        return ((System.DateTime)(this[this.tabletfi_Valores.FechaVencimientoColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletfi_Valores.FechaVencimientoColumn] = value;
                }
            }
            
            public System.Decimal Valor {
                get {
                    try {
                        return ((System.Decimal)(this[this.tabletfi_Valores.ValorColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletfi_Valores.ValorColumn] = value;
                }
            }
            
            public string IdMoneda {
                get {
                    try {
                        return ((string)(this[this.tabletfi_Valores.IdMonedaColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletfi_Valores.IdMonedaColumn] = value;
                }
            }
            
            public string IdCotizacionMoneda {
                get {
                    try {
                        return ((string)(this[this.tabletfi_Valores.IdCotizacionMonedaColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletfi_Valores.IdCotizacionMonedaColumn] = value;
                }
            }
            
            public System.DateTime FechaCreacion {
                get {
                    try {
                        return ((System.DateTime)(this[this.tabletfi_Valores.FechaCreacionColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletfi_Valores.FechaCreacionColumn] = value;
                }
            }
            
            public long IdConexionCreacion {
                get {
                    try {
                        return ((long)(this[this.tabletfi_Valores.IdConexionCreacionColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletfi_Valores.IdConexionCreacionColumn] = value;
                }
            }
            
            public System.Byte[] UltimaModificacion {
                get {
                    try {
                        return ((System.Byte[])(this[this.tabletfi_Valores.UltimaModificacionColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletfi_Valores.UltimaModificacionColumn] = value;
                }
            }
            
            public long IdConexionUltimaModificacion {
                get {
                    try {
                        return ((long)(this[this.tabletfi_Valores.IdConexionUltimaModificacionColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletfi_Valores.IdConexionUltimaModificacionColumn] = value;
                }
            }
            
            public long IdReservado {
                get {
                    try {
                        return ((long)(this[this.tabletfi_Valores.IdReservadoColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletfi_Valores.IdReservadoColumn] = value;
                }
            }
            
            public System.Guid RowId {
                get {
                    try {
                        return ((System.Guid)(this[this.tabletfi_Valores.RowIdColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletfi_Valores.RowIdColumn] = value;
                }
            }
            
            public long IdEmpresa {
                get {
                    try {
                        return ((long)(this[this.tabletfi_Valores.IdEmpresaColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletfi_Valores.IdEmpresaColumn] = value;
                }
            }
            
            public long IdSucursal {
                get {
                    try {
                        return ((long)(this[this.tabletfi_Valores.IdSucursalColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletfi_Valores.IdSucursalColumn] = value;
                }
            }
            
            public bool IsNumeroNull() {
                return this.IsNull(this.tabletfi_Valores.NumeroColumn);
            }
            
            public void SetNumeroNull() {
                this[this.tabletfi_Valores.NumeroColumn] = System.Convert.DBNull;
            }
            
            public bool IsIdEntidadNull() {
                return this.IsNull(this.tabletfi_Valores.IdEntidadColumn);
            }
            
            public void SetIdEntidadNull() {
                this[this.tabletfi_Valores.IdEntidadColumn] = System.Convert.DBNull;
            }
            
            public bool IsFechaNull() {
                return this.IsNull(this.tabletfi_Valores.FechaColumn);
            }
            
            public void SetFechaNull() {
                this[this.tabletfi_Valores.FechaColumn] = System.Convert.DBNull;
            }
            
            public bool IsFechaVencimientoNull() {
                return this.IsNull(this.tabletfi_Valores.FechaVencimientoColumn);
            }
            
            public void SetFechaVencimientoNull() {
                this[this.tabletfi_Valores.FechaVencimientoColumn] = System.Convert.DBNull;
            }
            
            public bool IsValorNull() {
                return this.IsNull(this.tabletfi_Valores.ValorColumn);
            }
            
            public void SetValorNull() {
                this[this.tabletfi_Valores.ValorColumn] = System.Convert.DBNull;
            }
            
            public bool IsIdMonedaNull() {
                return this.IsNull(this.tabletfi_Valores.IdMonedaColumn);
            }
            
            public void SetIdMonedaNull() {
                this[this.tabletfi_Valores.IdMonedaColumn] = System.Convert.DBNull;
            }
            
            public bool IsIdCotizacionMonedaNull() {
                return this.IsNull(this.tabletfi_Valores.IdCotizacionMonedaColumn);
            }
            
            public void SetIdCotizacionMonedaNull() {
                this[this.tabletfi_Valores.IdCotizacionMonedaColumn] = System.Convert.DBNull;
            }
            
            public bool IsFechaCreacionNull() {
                return this.IsNull(this.tabletfi_Valores.FechaCreacionColumn);
            }
            
            public void SetFechaCreacionNull() {
                this[this.tabletfi_Valores.FechaCreacionColumn] = System.Convert.DBNull;
            }
            
            public bool IsIdConexionCreacionNull() {
                return this.IsNull(this.tabletfi_Valores.IdConexionCreacionColumn);
            }
            
            public void SetIdConexionCreacionNull() {
                this[this.tabletfi_Valores.IdConexionCreacionColumn] = System.Convert.DBNull;
            }
            
            public bool IsUltimaModificacionNull() {
                return this.IsNull(this.tabletfi_Valores.UltimaModificacionColumn);
            }
            
            public void SetUltimaModificacionNull() {
                this[this.tabletfi_Valores.UltimaModificacionColumn] = System.Convert.DBNull;
            }
            
            public bool IsIdConexionUltimaModificacionNull() {
                return this.IsNull(this.tabletfi_Valores.IdConexionUltimaModificacionColumn);
            }
            
            public void SetIdConexionUltimaModificacionNull() {
                this[this.tabletfi_Valores.IdConexionUltimaModificacionColumn] = System.Convert.DBNull;
            }
            
            public bool IsIdReservadoNull() {
                return this.IsNull(this.tabletfi_Valores.IdReservadoColumn);
            }
            
            public void SetIdReservadoNull() {
                this[this.tabletfi_Valores.IdReservadoColumn] = System.Convert.DBNull;
            }
            
            public bool IsRowIdNull() {
                return this.IsNull(this.tabletfi_Valores.RowIdColumn);
            }
            
            public void SetRowIdNull() {
                this[this.tabletfi_Valores.RowIdColumn] = System.Convert.DBNull;
            }
            
            public bool IsIdEmpresaNull() {
                return this.IsNull(this.tabletfi_Valores.IdEmpresaColumn);
            }
            
            public void SetIdEmpresaNull() {
                this[this.tabletfi_Valores.IdEmpresaColumn] = System.Convert.DBNull;
            }
            
            public bool IsIdSucursalNull() {
                return this.IsNull(this.tabletfi_Valores.IdSucursalColumn);
            }
            
            public void SetIdSucursalNull() {
                this[this.tabletfi_Valores.IdSucursalColumn] = System.Convert.DBNull;
            }
            
            public tfi_PagosMovimientosCajasRow[] Gettfi_PagosMovimientosCajasRows() {
                return ((tfi_PagosMovimientosCajasRow[])(this.GetChildRows(this.Table.ChildRelations["tfi_Valorestfi_PagosMovimientosCajas"])));
            }
            
            public tfi_ValoresVariablesAuxiliaresRow[] Gettfi_ValoresVariablesAuxiliaresRows() {
                return ((tfi_ValoresVariablesAuxiliaresRow[])(this.GetChildRows(this.Table.ChildRelations["tfi_Valorestfi_ValoresVariablesAuxiliares"])));
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class tfi_ValoresRowChangeEvent : EventArgs {
            
            private tfi_ValoresRow eventRow;
            
            private DataRowAction eventAction;
            
            public tfi_ValoresRowChangeEvent(tfi_ValoresRow row, DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            public tfi_ValoresRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            public DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class tfi_ValoresVariablesAuxiliaresDataTable : DataTable, System.Collections.IEnumerable {
            
            private DataColumn columnIdValorVariable;
            
            private DataColumn columnIdVariableAuxiliarTDCompTesoreria;
            
            private DataColumn columnValor;
            
            private DataColumn columnFechaCreacion;
            
            private DataColumn columnIdConexionCreacion;
            
            private DataColumn columnUltimaModificacion;
            
            private DataColumn columnIdConexionUltimaModificacion;
            
            private DataColumn columnIdReservado;
            
            private DataColumn columnRowId;
            
            private DataColumn columnIdEmpresa;
            
            private DataColumn columnIdSucursal;
            
            internal tfi_ValoresVariablesAuxiliaresDataTable() : 
                    base("tfi_ValoresVariablesAuxiliares") {
                this.InitClass();
            }
            
            internal tfi_ValoresVariablesAuxiliaresDataTable(DataTable table) : 
                    base(table.TableName) {
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
                this.DisplayExpression = table.DisplayExpression;
            }
            
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            internal DataColumn IdValorVariableColumn {
                get {
                    return this.columnIdValorVariable;
                }
            }
            
            internal DataColumn IdVariableAuxiliarTDCompTesoreriaColumn {
                get {
                    return this.columnIdVariableAuxiliarTDCompTesoreria;
                }
            }
            
            internal DataColumn ValorColumn {
                get {
                    return this.columnValor;
                }
            }
            
            internal DataColumn FechaCreacionColumn {
                get {
                    return this.columnFechaCreacion;
                }
            }
            
            internal DataColumn IdConexionCreacionColumn {
                get {
                    return this.columnIdConexionCreacion;
                }
            }
            
            internal DataColumn UltimaModificacionColumn {
                get {
                    return this.columnUltimaModificacion;
                }
            }
            
            internal DataColumn IdConexionUltimaModificacionColumn {
                get {
                    return this.columnIdConexionUltimaModificacion;
                }
            }
            
            internal DataColumn IdReservadoColumn {
                get {
                    return this.columnIdReservado;
                }
            }
            
            internal DataColumn RowIdColumn {
                get {
                    return this.columnRowId;
                }
            }
            
            internal DataColumn IdEmpresaColumn {
                get {
                    return this.columnIdEmpresa;
                }
            }
            
            internal DataColumn IdSucursalColumn {
                get {
                    return this.columnIdSucursal;
                }
            }
            
            public tfi_ValoresVariablesAuxiliaresRow this[int index] {
                get {
                    return ((tfi_ValoresVariablesAuxiliaresRow)(this.Rows[index]));
                }
            }
            
            public event tfi_ValoresVariablesAuxiliaresRowChangeEventHandler tfi_ValoresVariablesAuxiliaresRowChanged;
            
            public event tfi_ValoresVariablesAuxiliaresRowChangeEventHandler tfi_ValoresVariablesAuxiliaresRowChanging;
            
            public event tfi_ValoresVariablesAuxiliaresRowChangeEventHandler tfi_ValoresVariablesAuxiliaresRowDeleted;
            
            public event tfi_ValoresVariablesAuxiliaresRowChangeEventHandler tfi_ValoresVariablesAuxiliaresRowDeleting;
            
            public void Addtfi_ValoresVariablesAuxiliaresRow(tfi_ValoresVariablesAuxiliaresRow row) {
                this.Rows.Add(row);
            }
            
            public tfi_ValoresVariablesAuxiliaresRow Addtfi_ValoresVariablesAuxiliaresRow(tfi_ValoresRow parenttfi_ValoresRowBytfi_Valorestfi_ValoresVariablesAuxiliares, string IdVariableAuxiliarTDCompTesoreria, string Valor, System.DateTime FechaCreacion, long IdConexionCreacion, System.Byte[] UltimaModificacion, long IdConexionUltimaModificacion, long IdReservado, System.Guid RowId, long IdEmpresa, long IdSucursal) {
                tfi_ValoresVariablesAuxiliaresRow rowtfi_ValoresVariablesAuxiliaresRow = ((tfi_ValoresVariablesAuxiliaresRow)(this.NewRow()));
                rowtfi_ValoresVariablesAuxiliaresRow.ItemArray = new object[] {
                        parenttfi_ValoresRowBytfi_Valorestfi_ValoresVariablesAuxiliares[0],
                        IdVariableAuxiliarTDCompTesoreria,
                        Valor,
                        FechaCreacion,
                        IdConexionCreacion,
                        UltimaModificacion,
                        IdConexionUltimaModificacion,
                        IdReservado,
                        RowId,
                        IdEmpresa,
                        IdSucursal};
                this.Rows.Add(rowtfi_ValoresVariablesAuxiliaresRow);
                return rowtfi_ValoresVariablesAuxiliaresRow;
            }
            
            public tfi_ValoresVariablesAuxiliaresRow FindByIdValorVariableIdVariableAuxiliarTDCompTesoreria(string IdValorVariable, string IdVariableAuxiliarTDCompTesoreria) {
                return ((tfi_ValoresVariablesAuxiliaresRow)(this.Rows.Find(new object[] {
                            IdValorVariable,
                            IdVariableAuxiliarTDCompTesoreria})));
            }
            
            public System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            public override DataTable Clone() {
                tfi_ValoresVariablesAuxiliaresDataTable cln = ((tfi_ValoresVariablesAuxiliaresDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            protected override DataTable CreateInstance() {
                return new tfi_ValoresVariablesAuxiliaresDataTable();
            }
            
            internal void InitVars() {
                this.columnIdValorVariable = this.Columns["IdValorVariable"];
                this.columnIdVariableAuxiliarTDCompTesoreria = this.Columns["IdVariableAuxiliarTDCompTesoreria"];
                this.columnValor = this.Columns["Valor"];
                this.columnFechaCreacion = this.Columns["FechaCreacion"];
                this.columnIdConexionCreacion = this.Columns["IdConexionCreacion"];
                this.columnUltimaModificacion = this.Columns["UltimaModificacion"];
                this.columnIdConexionUltimaModificacion = this.Columns["IdConexionUltimaModificacion"];
                this.columnIdReservado = this.Columns["IdReservado"];
                this.columnRowId = this.Columns["RowId"];
                this.columnIdEmpresa = this.Columns["IdEmpresa"];
                this.columnIdSucursal = this.Columns["IdSucursal"];
            }
            
            private void InitClass() {
                this.columnIdValorVariable = new DataColumn("IdValorVariable", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdValorVariable);
                this.columnIdVariableAuxiliarTDCompTesoreria = new DataColumn("IdVariableAuxiliarTDCompTesoreria", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdVariableAuxiliarTDCompTesoreria);
                this.columnValor = new DataColumn("Valor", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnValor);
                this.columnFechaCreacion = new DataColumn("FechaCreacion", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnFechaCreacion);
                this.columnIdConexionCreacion = new DataColumn("IdConexionCreacion", typeof(long), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdConexionCreacion);
                this.columnUltimaModificacion = new DataColumn("UltimaModificacion", typeof(System.Byte[]), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnUltimaModificacion);
                this.columnIdConexionUltimaModificacion = new DataColumn("IdConexionUltimaModificacion", typeof(long), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdConexionUltimaModificacion);
                this.columnIdReservado = new DataColumn("IdReservado", typeof(long), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdReservado);
                this.columnRowId = new DataColumn("RowId", typeof(System.Guid), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnRowId);
                this.columnIdEmpresa = new DataColumn("IdEmpresa", typeof(long), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdEmpresa);
                this.columnIdSucursal = new DataColumn("IdSucursal", typeof(long), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdSucursal);
                this.Constraints.Add(new UniqueConstraint("tfi_MovimientosDeCajaExDatasetKey4", new DataColumn[] {
                                this.columnIdValorVariable,
                                this.columnIdVariableAuxiliarTDCompTesoreria}, true));
                this.columnIdValorVariable.AllowDBNull = false;
                this.columnIdVariableAuxiliarTDCompTesoreria.AllowDBNull = false;
                this.columnValor.AllowDBNull = false;
                this.columnUltimaModificacion.ReadOnly = true;
            }
            
            public tfi_ValoresVariablesAuxiliaresRow Newtfi_ValoresVariablesAuxiliaresRow() {
                return ((tfi_ValoresVariablesAuxiliaresRow)(this.NewRow()));
            }
            
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder) {
                return new tfi_ValoresVariablesAuxiliaresRow(builder);
            }
            
            protected override System.Type GetRowType() {
                return typeof(tfi_ValoresVariablesAuxiliaresRow);
            }
            
            protected override void OnRowChanged(DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.tfi_ValoresVariablesAuxiliaresRowChanged != null)) {
                    this.tfi_ValoresVariablesAuxiliaresRowChanged(this, new tfi_ValoresVariablesAuxiliaresRowChangeEvent(((tfi_ValoresVariablesAuxiliaresRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowChanging(DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.tfi_ValoresVariablesAuxiliaresRowChanging != null)) {
                    this.tfi_ValoresVariablesAuxiliaresRowChanging(this, new tfi_ValoresVariablesAuxiliaresRowChangeEvent(((tfi_ValoresVariablesAuxiliaresRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleted(DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.tfi_ValoresVariablesAuxiliaresRowDeleted != null)) {
                    this.tfi_ValoresVariablesAuxiliaresRowDeleted(this, new tfi_ValoresVariablesAuxiliaresRowChangeEvent(((tfi_ValoresVariablesAuxiliaresRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleting(DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.tfi_ValoresVariablesAuxiliaresRowDeleting != null)) {
                    this.tfi_ValoresVariablesAuxiliaresRowDeleting(this, new tfi_ValoresVariablesAuxiliaresRowChangeEvent(((tfi_ValoresVariablesAuxiliaresRow)(e.Row)), e.Action));
                }
            }
            
            public void Removetfi_ValoresVariablesAuxiliaresRow(tfi_ValoresVariablesAuxiliaresRow row) {
                this.Rows.Remove(row);
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class tfi_ValoresVariablesAuxiliaresRow : DataRow {
            
            private tfi_ValoresVariablesAuxiliaresDataTable tabletfi_ValoresVariablesAuxiliares;
            
            internal tfi_ValoresVariablesAuxiliaresRow(DataRowBuilder rb) : 
                    base(rb) {
                this.tabletfi_ValoresVariablesAuxiliares = ((tfi_ValoresVariablesAuxiliaresDataTable)(this.Table));
            }
            
            public string IdValorVariable {
                get {
                    return ((string)(this[this.tabletfi_ValoresVariablesAuxiliares.IdValorVariableColumn]));
                }
                set {
                    this[this.tabletfi_ValoresVariablesAuxiliares.IdValorVariableColumn] = value;
                }
            }
            
            public string IdVariableAuxiliarTDCompTesoreria {
                get {
                    return ((string)(this[this.tabletfi_ValoresVariablesAuxiliares.IdVariableAuxiliarTDCompTesoreriaColumn]));
                }
                set {
                    this[this.tabletfi_ValoresVariablesAuxiliares.IdVariableAuxiliarTDCompTesoreriaColumn] = value;
                }
            }
            
            public string Valor {
                get {
                    return ((string)(this[this.tabletfi_ValoresVariablesAuxiliares.ValorColumn]));
                }
                set {
                    this[this.tabletfi_ValoresVariablesAuxiliares.ValorColumn] = value;
                }
            }
            
            public System.DateTime FechaCreacion {
                get {
                    try {
                        return ((System.DateTime)(this[this.tabletfi_ValoresVariablesAuxiliares.FechaCreacionColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletfi_ValoresVariablesAuxiliares.FechaCreacionColumn] = value;
                }
            }
            
            public long IdConexionCreacion {
                get {
                    try {
                        return ((long)(this[this.tabletfi_ValoresVariablesAuxiliares.IdConexionCreacionColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletfi_ValoresVariablesAuxiliares.IdConexionCreacionColumn] = value;
                }
            }
            
            public System.Byte[] UltimaModificacion {
                get {
                    try {
                        return ((System.Byte[])(this[this.tabletfi_ValoresVariablesAuxiliares.UltimaModificacionColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletfi_ValoresVariablesAuxiliares.UltimaModificacionColumn] = value;
                }
            }
            
            public long IdConexionUltimaModificacion {
                get {
                    try {
                        return ((long)(this[this.tabletfi_ValoresVariablesAuxiliares.IdConexionUltimaModificacionColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletfi_ValoresVariablesAuxiliares.IdConexionUltimaModificacionColumn] = value;
                }
            }
            
            public long IdReservado {
                get {
                    try {
                        return ((long)(this[this.tabletfi_ValoresVariablesAuxiliares.IdReservadoColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletfi_ValoresVariablesAuxiliares.IdReservadoColumn] = value;
                }
            }
            
            public System.Guid RowId {
                get {
                    try {
                        return ((System.Guid)(this[this.tabletfi_ValoresVariablesAuxiliares.RowIdColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletfi_ValoresVariablesAuxiliares.RowIdColumn] = value;
                }
            }
            
            public long IdEmpresa {
                get {
                    try {
                        return ((long)(this[this.tabletfi_ValoresVariablesAuxiliares.IdEmpresaColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletfi_ValoresVariablesAuxiliares.IdEmpresaColumn] = value;
                }
            }
            
            public long IdSucursal {
                get {
                    try {
                        return ((long)(this[this.tabletfi_ValoresVariablesAuxiliares.IdSucursalColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletfi_ValoresVariablesAuxiliares.IdSucursalColumn] = value;
                }
            }
            
            public tfi_ValoresRow tfi_ValoresRow {
                get {
                    return ((tfi_ValoresRow)(this.GetParentRow(this.Table.ParentRelations["tfi_Valorestfi_ValoresVariablesAuxiliares"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["tfi_Valorestfi_ValoresVariablesAuxiliares"]);
                }
            }
            
            public bool IsFechaCreacionNull() {
                return this.IsNull(this.tabletfi_ValoresVariablesAuxiliares.FechaCreacionColumn);
            }
            
            public void SetFechaCreacionNull() {
                this[this.tabletfi_ValoresVariablesAuxiliares.FechaCreacionColumn] = System.Convert.DBNull;
            }
            
            public bool IsIdConexionCreacionNull() {
                return this.IsNull(this.tabletfi_ValoresVariablesAuxiliares.IdConexionCreacionColumn);
            }
            
            public void SetIdConexionCreacionNull() {
                this[this.tabletfi_ValoresVariablesAuxiliares.IdConexionCreacionColumn] = System.Convert.DBNull;
            }
            
            public bool IsUltimaModificacionNull() {
                return this.IsNull(this.tabletfi_ValoresVariablesAuxiliares.UltimaModificacionColumn);
            }
            
            public void SetUltimaModificacionNull() {
                this[this.tabletfi_ValoresVariablesAuxiliares.UltimaModificacionColumn] = System.Convert.DBNull;
            }
            
            public bool IsIdConexionUltimaModificacionNull() {
                return this.IsNull(this.tabletfi_ValoresVariablesAuxiliares.IdConexionUltimaModificacionColumn);
            }
            
            public void SetIdConexionUltimaModificacionNull() {
                this[this.tabletfi_ValoresVariablesAuxiliares.IdConexionUltimaModificacionColumn] = System.Convert.DBNull;
            }
            
            public bool IsIdReservadoNull() {
                return this.IsNull(this.tabletfi_ValoresVariablesAuxiliares.IdReservadoColumn);
            }
            
            public void SetIdReservadoNull() {
                this[this.tabletfi_ValoresVariablesAuxiliares.IdReservadoColumn] = System.Convert.DBNull;
            }
            
            public bool IsRowIdNull() {
                return this.IsNull(this.tabletfi_ValoresVariablesAuxiliares.RowIdColumn);
            }
            
            public void SetRowIdNull() {
                this[this.tabletfi_ValoresVariablesAuxiliares.RowIdColumn] = System.Convert.DBNull;
            }
            
            public bool IsIdEmpresaNull() {
                return this.IsNull(this.tabletfi_ValoresVariablesAuxiliares.IdEmpresaColumn);
            }
            
            public void SetIdEmpresaNull() {
                this[this.tabletfi_ValoresVariablesAuxiliares.IdEmpresaColumn] = System.Convert.DBNull;
            }
            
            public bool IsIdSucursalNull() {
                return this.IsNull(this.tabletfi_ValoresVariablesAuxiliares.IdSucursalColumn);
            }
            
            public void SetIdSucursalNull() {
                this[this.tabletfi_ValoresVariablesAuxiliares.IdSucursalColumn] = System.Convert.DBNull;
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class tfi_ValoresVariablesAuxiliaresRowChangeEvent : EventArgs {
            
            private tfi_ValoresVariablesAuxiliaresRow eventRow;
            
            private DataRowAction eventAction;
            
            public tfi_ValoresVariablesAuxiliaresRowChangeEvent(tfi_ValoresVariablesAuxiliaresRow row, DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            public tfi_ValoresVariablesAuxiliaresRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            public DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class Pr_tfi_CotizacionesMoneda_GetCotizacionActualDataTable : DataTable, System.Collections.IEnumerable {
            
            private DataColumn columnIdCotizacionMoneda;
            
            private DataColumn columnIdMonedaOrigen;
            
            private DataColumn columnMoneda_Origen;
            
            private DataColumn columnIdMonedaDestino;
            
            private DataColumn columnMoneda_Destino;
            
            private DataColumn columnFechaDeCambioInicio;
            
            private DataColumn columnFunete_de_Cambio;
            
            private DataColumn columnIdFuenteDeCambio;
            
            private DataColumn columnValor;
            
            internal Pr_tfi_CotizacionesMoneda_GetCotizacionActualDataTable() : 
                    base("Pr_tfi_CotizacionesMoneda_GetCotizacionActual") {
                this.InitClass();
            }
            
            internal Pr_tfi_CotizacionesMoneda_GetCotizacionActualDataTable(DataTable table) : 
                    base(table.TableName) {
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
                this.DisplayExpression = table.DisplayExpression;
            }
            
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            internal DataColumn IdCotizacionMonedaColumn {
                get {
                    return this.columnIdCotizacionMoneda;
                }
            }
            
            internal DataColumn IdMonedaOrigenColumn {
                get {
                    return this.columnIdMonedaOrigen;
                }
            }
            
            internal DataColumn Moneda_OrigenColumn {
                get {
                    return this.columnMoneda_Origen;
                }
            }
            
            internal DataColumn IdMonedaDestinoColumn {
                get {
                    return this.columnIdMonedaDestino;
                }
            }
            
            internal DataColumn Moneda_DestinoColumn {
                get {
                    return this.columnMoneda_Destino;
                }
            }
            
            internal DataColumn FechaDeCambioInicioColumn {
                get {
                    return this.columnFechaDeCambioInicio;
                }
            }
            
            internal DataColumn Funete_de_CambioColumn {
                get {
                    return this.columnFunete_de_Cambio;
                }
            }
            
            internal DataColumn IdFuenteDeCambioColumn {
                get {
                    return this.columnIdFuenteDeCambio;
                }
            }
            
            internal DataColumn ValorColumn {
                get {
                    return this.columnValor;
                }
            }
            
            public Pr_tfi_CotizacionesMoneda_GetCotizacionActualRow this[int index] {
                get {
                    return ((Pr_tfi_CotizacionesMoneda_GetCotizacionActualRow)(this.Rows[index]));
                }
            }
            
            public event Pr_tfi_CotizacionesMoneda_GetCotizacionActualRowChangeEventHandler Pr_tfi_CotizacionesMoneda_GetCotizacionActualRowChanged;
            
            public event Pr_tfi_CotizacionesMoneda_GetCotizacionActualRowChangeEventHandler Pr_tfi_CotizacionesMoneda_GetCotizacionActualRowChanging;
            
            public event Pr_tfi_CotizacionesMoneda_GetCotizacionActualRowChangeEventHandler Pr_tfi_CotizacionesMoneda_GetCotizacionActualRowDeleted;
            
            public event Pr_tfi_CotizacionesMoneda_GetCotizacionActualRowChangeEventHandler Pr_tfi_CotizacionesMoneda_GetCotizacionActualRowDeleting;
            
            public void AddPr_tfi_CotizacionesMoneda_GetCotizacionActualRow(Pr_tfi_CotizacionesMoneda_GetCotizacionActualRow row) {
                this.Rows.Add(row);
            }
            
            public Pr_tfi_CotizacionesMoneda_GetCotizacionActualRow AddPr_tfi_CotizacionesMoneda_GetCotizacionActualRow(string IdCotizacionMoneda, string IdMonedaOrigen, string Moneda_Origen, string IdMonedaDestino, string Moneda_Destino, System.DateTime FechaDeCambioInicio, string Funete_de_Cambio, string IdFuenteDeCambio, System.Decimal Valor) {
                Pr_tfi_CotizacionesMoneda_GetCotizacionActualRow rowPr_tfi_CotizacionesMoneda_GetCotizacionActualRow = ((Pr_tfi_CotizacionesMoneda_GetCotizacionActualRow)(this.NewRow()));
                rowPr_tfi_CotizacionesMoneda_GetCotizacionActualRow.ItemArray = new object[] {
                        IdCotizacionMoneda,
                        IdMonedaOrigen,
                        Moneda_Origen,
                        IdMonedaDestino,
                        Moneda_Destino,
                        FechaDeCambioInicio,
                        Funete_de_Cambio,
                        IdFuenteDeCambio,
                        Valor};
                this.Rows.Add(rowPr_tfi_CotizacionesMoneda_GetCotizacionActualRow);
                return rowPr_tfi_CotizacionesMoneda_GetCotizacionActualRow;
            }
            
            public System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            public override DataTable Clone() {
                Pr_tfi_CotizacionesMoneda_GetCotizacionActualDataTable cln = ((Pr_tfi_CotizacionesMoneda_GetCotizacionActualDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            protected override DataTable CreateInstance() {
                return new Pr_tfi_CotizacionesMoneda_GetCotizacionActualDataTable();
            }
            
            internal void InitVars() {
                this.columnIdCotizacionMoneda = this.Columns["IdCotizacionMoneda"];
                this.columnIdMonedaOrigen = this.Columns["IdMonedaOrigen"];
                this.columnMoneda_Origen = this.Columns["Moneda Origen"];
                this.columnIdMonedaDestino = this.Columns["IdMonedaDestino"];
                this.columnMoneda_Destino = this.Columns["Moneda Destino"];
                this.columnFechaDeCambioInicio = this.Columns["FechaDeCambioInicio"];
                this.columnFunete_de_Cambio = this.Columns["Funete de Cambio"];
                this.columnIdFuenteDeCambio = this.Columns["IdFuenteDeCambio"];
                this.columnValor = this.Columns["Valor"];
            }
            
            private void InitClass() {
                this.columnIdCotizacionMoneda = new DataColumn("IdCotizacionMoneda", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdCotizacionMoneda);
                this.columnIdMonedaOrigen = new DataColumn("IdMonedaOrigen", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdMonedaOrigen);
                this.columnMoneda_Origen = new DataColumn("Moneda Origen", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnMoneda_Origen);
                this.columnIdMonedaDestino = new DataColumn("IdMonedaDestino", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdMonedaDestino);
                this.columnMoneda_Destino = new DataColumn("Moneda Destino", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnMoneda_Destino);
                this.columnFechaDeCambioInicio = new DataColumn("FechaDeCambioInicio", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnFechaDeCambioInicio);
                this.columnFunete_de_Cambio = new DataColumn("Funete de Cambio", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnFunete_de_Cambio);
                this.columnIdFuenteDeCambio = new DataColumn("IdFuenteDeCambio", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdFuenteDeCambio);
                this.columnValor = new DataColumn("Valor", typeof(System.Decimal), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnValor);
                this.columnIdCotizacionMoneda.AllowDBNull = false;
                this.columnIdMonedaOrigen.AllowDBNull = false;
                this.columnMoneda_Origen.AllowDBNull = false;
                this.columnIdMonedaDestino.AllowDBNull = false;
                this.columnMoneda_Destino.AllowDBNull = false;
                this.columnFechaDeCambioInicio.AllowDBNull = false;
                this.columnFunete_de_Cambio.AllowDBNull = false;
                this.columnIdFuenteDeCambio.AllowDBNull = false;
            }
            
            public Pr_tfi_CotizacionesMoneda_GetCotizacionActualRow NewPr_tfi_CotizacionesMoneda_GetCotizacionActualRow() {
                return ((Pr_tfi_CotizacionesMoneda_GetCotizacionActualRow)(this.NewRow()));
            }
            
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder) {
                return new Pr_tfi_CotizacionesMoneda_GetCotizacionActualRow(builder);
            }
            
            protected override System.Type GetRowType() {
                return typeof(Pr_tfi_CotizacionesMoneda_GetCotizacionActualRow);
            }
            
            protected override void OnRowChanged(DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.Pr_tfi_CotizacionesMoneda_GetCotizacionActualRowChanged != null)) {
                    this.Pr_tfi_CotizacionesMoneda_GetCotizacionActualRowChanged(this, new Pr_tfi_CotizacionesMoneda_GetCotizacionActualRowChangeEvent(((Pr_tfi_CotizacionesMoneda_GetCotizacionActualRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowChanging(DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.Pr_tfi_CotizacionesMoneda_GetCotizacionActualRowChanging != null)) {
                    this.Pr_tfi_CotizacionesMoneda_GetCotizacionActualRowChanging(this, new Pr_tfi_CotizacionesMoneda_GetCotizacionActualRowChangeEvent(((Pr_tfi_CotizacionesMoneda_GetCotizacionActualRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleted(DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.Pr_tfi_CotizacionesMoneda_GetCotizacionActualRowDeleted != null)) {
                    this.Pr_tfi_CotizacionesMoneda_GetCotizacionActualRowDeleted(this, new Pr_tfi_CotizacionesMoneda_GetCotizacionActualRowChangeEvent(((Pr_tfi_CotizacionesMoneda_GetCotizacionActualRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleting(DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.Pr_tfi_CotizacionesMoneda_GetCotizacionActualRowDeleting != null)) {
                    this.Pr_tfi_CotizacionesMoneda_GetCotizacionActualRowDeleting(this, new Pr_tfi_CotizacionesMoneda_GetCotizacionActualRowChangeEvent(((Pr_tfi_CotizacionesMoneda_GetCotizacionActualRow)(e.Row)), e.Action));
                }
            }
            
            public void RemovePr_tfi_CotizacionesMoneda_GetCotizacionActualRow(Pr_tfi_CotizacionesMoneda_GetCotizacionActualRow row) {
                this.Rows.Remove(row);
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class Pr_tfi_CotizacionesMoneda_GetCotizacionActualRow : DataRow {
            
            private Pr_tfi_CotizacionesMoneda_GetCotizacionActualDataTable tablePr_tfi_CotizacionesMoneda_GetCotizacionActual;
            
            internal Pr_tfi_CotizacionesMoneda_GetCotizacionActualRow(DataRowBuilder rb) : 
                    base(rb) {
                this.tablePr_tfi_CotizacionesMoneda_GetCotizacionActual = ((Pr_tfi_CotizacionesMoneda_GetCotizacionActualDataTable)(this.Table));
            }
            
            public string IdCotizacionMoneda {
                get {
                    return ((string)(this[this.tablePr_tfi_CotizacionesMoneda_GetCotizacionActual.IdCotizacionMonedaColumn]));
                }
                set {
                    this[this.tablePr_tfi_CotizacionesMoneda_GetCotizacionActual.IdCotizacionMonedaColumn] = value;
                }
            }
            
            public string IdMonedaOrigen {
                get {
                    return ((string)(this[this.tablePr_tfi_CotizacionesMoneda_GetCotizacionActual.IdMonedaOrigenColumn]));
                }
                set {
                    this[this.tablePr_tfi_CotizacionesMoneda_GetCotizacionActual.IdMonedaOrigenColumn] = value;
                }
            }
            
            public string Moneda_Origen {
                get {
                    return ((string)(this[this.tablePr_tfi_CotizacionesMoneda_GetCotizacionActual.Moneda_OrigenColumn]));
                }
                set {
                    this[this.tablePr_tfi_CotizacionesMoneda_GetCotizacionActual.Moneda_OrigenColumn] = value;
                }
            }
            
            public string IdMonedaDestino {
                get {
                    return ((string)(this[this.tablePr_tfi_CotizacionesMoneda_GetCotizacionActual.IdMonedaDestinoColumn]));
                }
                set {
                    this[this.tablePr_tfi_CotizacionesMoneda_GetCotizacionActual.IdMonedaDestinoColumn] = value;
                }
            }
            
            public string Moneda_Destino {
                get {
                    return ((string)(this[this.tablePr_tfi_CotizacionesMoneda_GetCotizacionActual.Moneda_DestinoColumn]));
                }
                set {
                    this[this.tablePr_tfi_CotizacionesMoneda_GetCotizacionActual.Moneda_DestinoColumn] = value;
                }
            }
            
            public System.DateTime FechaDeCambioInicio {
                get {
                    return ((System.DateTime)(this[this.tablePr_tfi_CotizacionesMoneda_GetCotizacionActual.FechaDeCambioInicioColumn]));
                }
                set {
                    this[this.tablePr_tfi_CotizacionesMoneda_GetCotizacionActual.FechaDeCambioInicioColumn] = value;
                }
            }
            
            public string Funete_de_Cambio {
                get {
                    return ((string)(this[this.tablePr_tfi_CotizacionesMoneda_GetCotizacionActual.Funete_de_CambioColumn]));
                }
                set {
                    this[this.tablePr_tfi_CotizacionesMoneda_GetCotizacionActual.Funete_de_CambioColumn] = value;
                }
            }
            
            public string IdFuenteDeCambio {
                get {
                    return ((string)(this[this.tablePr_tfi_CotizacionesMoneda_GetCotizacionActual.IdFuenteDeCambioColumn]));
                }
                set {
                    this[this.tablePr_tfi_CotizacionesMoneda_GetCotizacionActual.IdFuenteDeCambioColumn] = value;
                }
            }
            
            public System.Decimal Valor {
                get {
                    try {
                        return ((System.Decimal)(this[this.tablePr_tfi_CotizacionesMoneda_GetCotizacionActual.ValorColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tablePr_tfi_CotizacionesMoneda_GetCotizacionActual.ValorColumn] = value;
                }
            }
            
            public bool IsValorNull() {
                return this.IsNull(this.tablePr_tfi_CotizacionesMoneda_GetCotizacionActual.ValorColumn);
            }
            
            public void SetValorNull() {
                this[this.tablePr_tfi_CotizacionesMoneda_GetCotizacionActual.ValorColumn] = System.Convert.DBNull;
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class Pr_tfi_CotizacionesMoneda_GetCotizacionActualRowChangeEvent : EventArgs {
            
            private Pr_tfi_CotizacionesMoneda_GetCotizacionActualRow eventRow;
            
            private DataRowAction eventAction;
            
            public Pr_tfi_CotizacionesMoneda_GetCotizacionActualRowChangeEvent(Pr_tfi_CotizacionesMoneda_GetCotizacionActualRow row, DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            public Pr_tfi_CotizacionesMoneda_GetCotizacionActualRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            public DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class tfi_MovimientosDeCajaDataTable : DataTable, System.Collections.IEnumerable {
            
            private DataColumn columnIdMovimiento;
            
            private DataColumn columnIdEmpresa;
            
            private DataColumn columnIdSucursal;
            
            private DataColumn columnIdInstanciaCaja;
            
            private DataColumn columnIdTipoDeMovimiento;
            
            private DataColumn columnIdSubTipoMovimiento;
            
            private DataColumn columnTipoComprobante;
            
            private DataColumn columnNumero;
            
            private DataColumn columnFecha;
            
            private DataColumn columnObservaciones;
            
            private DataColumn columnIdResponsable;
            
            private DataColumn columnTotal;
            
            private DataColumn columnIdMonedaCierre;
            
            private DataColumn columnIdCotizacionCierre;
            
            private DataColumn columnIdAceptacion;
            
            private DataColumn columnFechaCreacion;
            
            private DataColumn columnIdConexionCreacion;
            
            private DataColumn columnUltimaModificacion;
            
            private DataColumn columnIdConexionUltimaModificacion;
            
            private DataColumn columnIdReservado;
            
            private DataColumn columnRowId;
            
            internal tfi_MovimientosDeCajaDataTable() : 
                    base("tfi_MovimientosDeCaja") {
                this.InitClass();
            }
            
            internal tfi_MovimientosDeCajaDataTable(DataTable table) : 
                    base(table.TableName) {
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
                this.DisplayExpression = table.DisplayExpression;
            }
            
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            internal DataColumn IdMovimientoColumn {
                get {
                    return this.columnIdMovimiento;
                }
            }
            
            internal DataColumn IdEmpresaColumn {
                get {
                    return this.columnIdEmpresa;
                }
            }
            
            internal DataColumn IdSucursalColumn {
                get {
                    return this.columnIdSucursal;
                }
            }
            
            internal DataColumn IdInstanciaCajaColumn {
                get {
                    return this.columnIdInstanciaCaja;
                }
            }
            
            internal DataColumn IdTipoDeMovimientoColumn {
                get {
                    return this.columnIdTipoDeMovimiento;
                }
            }
            
            internal DataColumn IdSubTipoMovimientoColumn {
                get {
                    return this.columnIdSubTipoMovimiento;
                }
            }
            
            internal DataColumn TipoComprobanteColumn {
                get {
                    return this.columnTipoComprobante;
                }
            }
            
            internal DataColumn NumeroColumn {
                get {
                    return this.columnNumero;
                }
            }
            
            internal DataColumn FechaColumn {
                get {
                    return this.columnFecha;
                }
            }
            
            internal DataColumn ObservacionesColumn {
                get {
                    return this.columnObservaciones;
                }
            }
            
            internal DataColumn IdResponsableColumn {
                get {
                    return this.columnIdResponsable;
                }
            }
            
            internal DataColumn TotalColumn {
                get {
                    return this.columnTotal;
                }
            }
            
            internal DataColumn IdMonedaCierreColumn {
                get {
                    return this.columnIdMonedaCierre;
                }
            }
            
            internal DataColumn IdCotizacionCierreColumn {
                get {
                    return this.columnIdCotizacionCierre;
                }
            }
            
            internal DataColumn IdAceptacionColumn {
                get {
                    return this.columnIdAceptacion;
                }
            }
            
            internal DataColumn FechaCreacionColumn {
                get {
                    return this.columnFechaCreacion;
                }
            }
            
            internal DataColumn IdConexionCreacionColumn {
                get {
                    return this.columnIdConexionCreacion;
                }
            }
            
            internal DataColumn UltimaModificacionColumn {
                get {
                    return this.columnUltimaModificacion;
                }
            }
            
            internal DataColumn IdConexionUltimaModificacionColumn {
                get {
                    return this.columnIdConexionUltimaModificacion;
                }
            }
            
            internal DataColumn IdReservadoColumn {
                get {
                    return this.columnIdReservado;
                }
            }
            
            internal DataColumn RowIdColumn {
                get {
                    return this.columnRowId;
                }
            }
            
            public tfi_MovimientosDeCajaRow this[int index] {
                get {
                    return ((tfi_MovimientosDeCajaRow)(this.Rows[index]));
                }
            }
            
            public event tfi_MovimientosDeCajaRowChangeEventHandler tfi_MovimientosDeCajaRowChanged;
            
            public event tfi_MovimientosDeCajaRowChangeEventHandler tfi_MovimientosDeCajaRowChanging;
            
            public event tfi_MovimientosDeCajaRowChangeEventHandler tfi_MovimientosDeCajaRowDeleted;
            
            public event tfi_MovimientosDeCajaRowChangeEventHandler tfi_MovimientosDeCajaRowDeleting;
            
            public void Addtfi_MovimientosDeCajaRow(tfi_MovimientosDeCajaRow row) {
                this.Rows.Add(row);
            }
            
            public tfi_MovimientosDeCajaRow Addtfi_MovimientosDeCajaRow(
                        string IdMovimiento, 
                        long IdEmpresa, 
                        long IdSucursal, 
                        string IdInstanciaCaja, 
                        string IdTipoDeMovimiento, 
                        string IdSubTipoMovimiento, 
                        string TipoComprobante, 
                        string Numero, 
                        System.DateTime Fecha, 
                        string Observaciones, 
                        string IdResponsable, 
                        System.Decimal Total, 
                        string IdMonedaCierre, 
                        string IdCotizacionCierre, 
                        string IdAceptacion, 
                        System.DateTime FechaCreacion, 
                        long IdConexionCreacion, 
                        System.Byte[] UltimaModificacion, 
                        long IdConexionUltimaModificacion, 
                        long IdReservado, 
                        System.Guid RowId) {
                tfi_MovimientosDeCajaRow rowtfi_MovimientosDeCajaRow = ((tfi_MovimientosDeCajaRow)(this.NewRow()));
                rowtfi_MovimientosDeCajaRow.ItemArray = new object[] {
                        IdMovimiento,
                        IdEmpresa,
                        IdSucursal,
                        IdInstanciaCaja,
                        IdTipoDeMovimiento,
                        IdSubTipoMovimiento,
                        TipoComprobante,
                        Numero,
                        Fecha,
                        Observaciones,
                        IdResponsable,
                        Total,
                        IdMonedaCierre,
                        IdCotizacionCierre,
                        IdAceptacion,
                        FechaCreacion,
                        IdConexionCreacion,
                        UltimaModificacion,
                        IdConexionUltimaModificacion,
                        IdReservado,
                        RowId};
                this.Rows.Add(rowtfi_MovimientosDeCajaRow);
                return rowtfi_MovimientosDeCajaRow;
            }
            
            public tfi_MovimientosDeCajaRow FindByIdMovimiento(string IdMovimiento) {
                return ((tfi_MovimientosDeCajaRow)(this.Rows.Find(new object[] {
                            IdMovimiento})));
            }
            
            public System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            public override DataTable Clone() {
                tfi_MovimientosDeCajaDataTable cln = ((tfi_MovimientosDeCajaDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            protected override DataTable CreateInstance() {
                return new tfi_MovimientosDeCajaDataTable();
            }
            
            internal void InitVars() {
                this.columnIdMovimiento = this.Columns["IdMovimiento"];
                this.columnIdEmpresa = this.Columns["IdEmpresa"];
                this.columnIdSucursal = this.Columns["IdSucursal"];
                this.columnIdInstanciaCaja = this.Columns["IdInstanciaCaja"];
                this.columnIdTipoDeMovimiento = this.Columns["IdTipoDeMovimiento"];
                this.columnIdSubTipoMovimiento = this.Columns["IdSubTipoMovimiento"];
                this.columnTipoComprobante = this.Columns["TipoComprobante"];
                this.columnNumero = this.Columns["Numero"];
                this.columnFecha = this.Columns["Fecha"];
                this.columnObservaciones = this.Columns["Observaciones"];
                this.columnIdResponsable = this.Columns["IdResponsable"];
                this.columnTotal = this.Columns["Total"];
                this.columnIdMonedaCierre = this.Columns["IdMonedaCierre"];
                this.columnIdCotizacionCierre = this.Columns["IdCotizacionCierre"];
                this.columnIdAceptacion = this.Columns["IdAceptacion"];
                this.columnFechaCreacion = this.Columns["FechaCreacion"];
                this.columnIdConexionCreacion = this.Columns["IdConexionCreacion"];
                this.columnUltimaModificacion = this.Columns["UltimaModificacion"];
                this.columnIdConexionUltimaModificacion = this.Columns["IdConexionUltimaModificacion"];
                this.columnIdReservado = this.Columns["IdReservado"];
                this.columnRowId = this.Columns["RowId"];
            }
            
            private void InitClass() {
                this.columnIdMovimiento = new DataColumn("IdMovimiento", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdMovimiento);
                this.columnIdEmpresa = new DataColumn("IdEmpresa", typeof(long), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdEmpresa);
                this.columnIdSucursal = new DataColumn("IdSucursal", typeof(long), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdSucursal);
                this.columnIdInstanciaCaja = new DataColumn("IdInstanciaCaja", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdInstanciaCaja);
                this.columnIdTipoDeMovimiento = new DataColumn("IdTipoDeMovimiento", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdTipoDeMovimiento);
                this.columnIdSubTipoMovimiento = new DataColumn("IdSubTipoMovimiento", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdSubTipoMovimiento);
                this.columnTipoComprobante = new DataColumn("TipoComprobante", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnTipoComprobante);
                this.columnNumero = new DataColumn("Numero", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnNumero);
                this.columnFecha = new DataColumn("Fecha", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnFecha);
                this.columnObservaciones = new DataColumn("Observaciones", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnObservaciones);
                this.columnIdResponsable = new DataColumn("IdResponsable", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdResponsable);
                this.columnTotal = new DataColumn("Total", typeof(System.Decimal), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnTotal);
                this.columnIdMonedaCierre = new DataColumn("IdMonedaCierre", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdMonedaCierre);
                this.columnIdCotizacionCierre = new DataColumn("IdCotizacionCierre", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdCotizacionCierre);
                this.columnIdAceptacion = new DataColumn("IdAceptacion", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdAceptacion);
                this.columnFechaCreacion = new DataColumn("FechaCreacion", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnFechaCreacion);
                this.columnIdConexionCreacion = new DataColumn("IdConexionCreacion", typeof(long), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdConexionCreacion);
                this.columnUltimaModificacion = new DataColumn("UltimaModificacion", typeof(System.Byte[]), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnUltimaModificacion);
                this.columnIdConexionUltimaModificacion = new DataColumn("IdConexionUltimaModificacion", typeof(long), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdConexionUltimaModificacion);
                this.columnIdReservado = new DataColumn("IdReservado", typeof(long), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdReservado);
                this.columnRowId = new DataColumn("RowId", typeof(System.Guid), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnRowId);
                this.Constraints.Add(new UniqueConstraint("tfi_MovimientosDeCajaExDatasetKey1", new DataColumn[] {
                                this.columnIdMovimiento}, true));
                this.columnIdMovimiento.AllowDBNull = false;
                this.columnIdMovimiento.Unique = true;
                this.columnUltimaModificacion.ReadOnly = true;
            }
            
            public tfi_MovimientosDeCajaRow Newtfi_MovimientosDeCajaRow() {
                return ((tfi_MovimientosDeCajaRow)(this.NewRow()));
            }
            
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder) {
                return new tfi_MovimientosDeCajaRow(builder);
            }
            
            protected override System.Type GetRowType() {
                return typeof(tfi_MovimientosDeCajaRow);
            }
            
            protected override void OnRowChanged(DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.tfi_MovimientosDeCajaRowChanged != null)) {
                    this.tfi_MovimientosDeCajaRowChanged(this, new tfi_MovimientosDeCajaRowChangeEvent(((tfi_MovimientosDeCajaRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowChanging(DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.tfi_MovimientosDeCajaRowChanging != null)) {
                    this.tfi_MovimientosDeCajaRowChanging(this, new tfi_MovimientosDeCajaRowChangeEvent(((tfi_MovimientosDeCajaRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleted(DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.tfi_MovimientosDeCajaRowDeleted != null)) {
                    this.tfi_MovimientosDeCajaRowDeleted(this, new tfi_MovimientosDeCajaRowChangeEvent(((tfi_MovimientosDeCajaRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleting(DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.tfi_MovimientosDeCajaRowDeleting != null)) {
                    this.tfi_MovimientosDeCajaRowDeleting(this, new tfi_MovimientosDeCajaRowChangeEvent(((tfi_MovimientosDeCajaRow)(e.Row)), e.Action));
                }
            }
            
            public void Removetfi_MovimientosDeCajaRow(tfi_MovimientosDeCajaRow row) {
                this.Rows.Remove(row);
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class tfi_MovimientosDeCajaRow : DataRow {
            
            private tfi_MovimientosDeCajaDataTable tabletfi_MovimientosDeCaja;
            
            internal tfi_MovimientosDeCajaRow(DataRowBuilder rb) : 
                    base(rb) {
                this.tabletfi_MovimientosDeCaja = ((tfi_MovimientosDeCajaDataTable)(this.Table));
            }
            
            public string IdMovimiento {
                get {
                    return ((string)(this[this.tabletfi_MovimientosDeCaja.IdMovimientoColumn]));
                }
                set {
                    this[this.tabletfi_MovimientosDeCaja.IdMovimientoColumn] = value;
                }
            }
            
            public long IdEmpresa {
                get {
                    try {
                        return ((long)(this[this.tabletfi_MovimientosDeCaja.IdEmpresaColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletfi_MovimientosDeCaja.IdEmpresaColumn] = value;
                }
            }
            
            public long IdSucursal {
                get {
                    try {
                        return ((long)(this[this.tabletfi_MovimientosDeCaja.IdSucursalColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletfi_MovimientosDeCaja.IdSucursalColumn] = value;
                }
            }
            
            public string IdInstanciaCaja {
                get {
                    try {
                        return ((string)(this[this.tabletfi_MovimientosDeCaja.IdInstanciaCajaColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletfi_MovimientosDeCaja.IdInstanciaCajaColumn] = value;
                }
            }
            
            public string IdTipoDeMovimiento {
                get {
                    try {
                        return ((string)(this[this.tabletfi_MovimientosDeCaja.IdTipoDeMovimientoColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletfi_MovimientosDeCaja.IdTipoDeMovimientoColumn] = value;
                }
            }
            
            public string IdSubTipoMovimiento {
                get {
                    try {
                        return ((string)(this[this.tabletfi_MovimientosDeCaja.IdSubTipoMovimientoColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletfi_MovimientosDeCaja.IdSubTipoMovimientoColumn] = value;
                }
            }
            
            public string TipoComprobante {
                get {
                    try {
                        return ((string)(this[this.tabletfi_MovimientosDeCaja.TipoComprobanteColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletfi_MovimientosDeCaja.TipoComprobanteColumn] = value;
                }
            }
            
            public string Numero {
                get {
                    try {
                        return ((string)(this[this.tabletfi_MovimientosDeCaja.NumeroColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletfi_MovimientosDeCaja.NumeroColumn] = value;
                }
            }
            
            public System.DateTime Fecha {
                get {
                    try {
                        return ((System.DateTime)(this[this.tabletfi_MovimientosDeCaja.FechaColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletfi_MovimientosDeCaja.FechaColumn] = value;
                }
            }
            
            public string Observaciones {
                get {
                    try {
                        return ((string)(this[this.tabletfi_MovimientosDeCaja.ObservacionesColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletfi_MovimientosDeCaja.ObservacionesColumn] = value;
                }
            }
            
            public string IdResponsable {
                get {
                    try {
                        return ((string)(this[this.tabletfi_MovimientosDeCaja.IdResponsableColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletfi_MovimientosDeCaja.IdResponsableColumn] = value;
                }
            }
            
            public System.Decimal Total {
                get {
                    try {
                        return ((System.Decimal)(this[this.tabletfi_MovimientosDeCaja.TotalColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletfi_MovimientosDeCaja.TotalColumn] = value;
                }
            }
            
            public string IdMonedaCierre {
                get {
                    try {
                        return ((string)(this[this.tabletfi_MovimientosDeCaja.IdMonedaCierreColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletfi_MovimientosDeCaja.IdMonedaCierreColumn] = value;
                }
            }
            
            public string IdCotizacionCierre {
                get {
                    try {
                        return ((string)(this[this.tabletfi_MovimientosDeCaja.IdCotizacionCierreColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletfi_MovimientosDeCaja.IdCotizacionCierreColumn] = value;
                }
            }
            
            public string IdAceptacion {
                get {
                    try {
                        return ((string)(this[this.tabletfi_MovimientosDeCaja.IdAceptacionColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletfi_MovimientosDeCaja.IdAceptacionColumn] = value;
                }
            }
            
            public System.DateTime FechaCreacion {
                get {
                    try {
                        return ((System.DateTime)(this[this.tabletfi_MovimientosDeCaja.FechaCreacionColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletfi_MovimientosDeCaja.FechaCreacionColumn] = value;
                }
            }
            
            public long IdConexionCreacion {
                get {
                    try {
                        return ((long)(this[this.tabletfi_MovimientosDeCaja.IdConexionCreacionColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletfi_MovimientosDeCaja.IdConexionCreacionColumn] = value;
                }
            }
            
            public System.Byte[] UltimaModificacion {
                get {
                    try {
                        return ((System.Byte[])(this[this.tabletfi_MovimientosDeCaja.UltimaModificacionColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletfi_MovimientosDeCaja.UltimaModificacionColumn] = value;
                }
            }
            
            public long IdConexionUltimaModificacion {
                get {
                    try {
                        return ((long)(this[this.tabletfi_MovimientosDeCaja.IdConexionUltimaModificacionColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletfi_MovimientosDeCaja.IdConexionUltimaModificacionColumn] = value;
                }
            }
            
            public long IdReservado {
                get {
                    try {
                        return ((long)(this[this.tabletfi_MovimientosDeCaja.IdReservadoColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletfi_MovimientosDeCaja.IdReservadoColumn] = value;
                }
            }
            
            public System.Guid RowId {
                get {
                    try {
                        return ((System.Guid)(this[this.tabletfi_MovimientosDeCaja.RowIdColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletfi_MovimientosDeCaja.RowIdColumn] = value;
                }
            }
            
            public bool IsIdEmpresaNull() {
                return this.IsNull(this.tabletfi_MovimientosDeCaja.IdEmpresaColumn);
            }
            
            public void SetIdEmpresaNull() {
                this[this.tabletfi_MovimientosDeCaja.IdEmpresaColumn] = System.Convert.DBNull;
            }
            
            public bool IsIdSucursalNull() {
                return this.IsNull(this.tabletfi_MovimientosDeCaja.IdSucursalColumn);
            }
            
            public void SetIdSucursalNull() {
                this[this.tabletfi_MovimientosDeCaja.IdSucursalColumn] = System.Convert.DBNull;
            }
            
            public bool IsIdInstanciaCajaNull() {
                return this.IsNull(this.tabletfi_MovimientosDeCaja.IdInstanciaCajaColumn);
            }
            
            public void SetIdInstanciaCajaNull() {
                this[this.tabletfi_MovimientosDeCaja.IdInstanciaCajaColumn] = System.Convert.DBNull;
            }
            
            public bool IsIdTipoDeMovimientoNull() {
                return this.IsNull(this.tabletfi_MovimientosDeCaja.IdTipoDeMovimientoColumn);
            }
            
            public void SetIdTipoDeMovimientoNull() {
                this[this.tabletfi_MovimientosDeCaja.IdTipoDeMovimientoColumn] = System.Convert.DBNull;
            }
            
            public bool IsIdSubTipoMovimientoNull() {
                return this.IsNull(this.tabletfi_MovimientosDeCaja.IdSubTipoMovimientoColumn);
            }
            
            public void SetIdSubTipoMovimientoNull() {
                this[this.tabletfi_MovimientosDeCaja.IdSubTipoMovimientoColumn] = System.Convert.DBNull;
            }
            
            public bool IsTipoComprobanteNull() {
                return this.IsNull(this.tabletfi_MovimientosDeCaja.TipoComprobanteColumn);
            }
            
            public void SetTipoComprobanteNull() {
                this[this.tabletfi_MovimientosDeCaja.TipoComprobanteColumn] = System.Convert.DBNull;
            }
            
            public bool IsNumeroNull() {
                return this.IsNull(this.tabletfi_MovimientosDeCaja.NumeroColumn);
            }
            
            public void SetNumeroNull() {
                this[this.tabletfi_MovimientosDeCaja.NumeroColumn] = System.Convert.DBNull;
            }
            
            public bool IsFechaNull() {
                return this.IsNull(this.tabletfi_MovimientosDeCaja.FechaColumn);
            }
            
            public void SetFechaNull() {
                this[this.tabletfi_MovimientosDeCaja.FechaColumn] = System.Convert.DBNull;
            }
            
            public bool IsObservacionesNull() {
                return this.IsNull(this.tabletfi_MovimientosDeCaja.ObservacionesColumn);
            }
            
            public void SetObservacionesNull() {
                this[this.tabletfi_MovimientosDeCaja.ObservacionesColumn] = System.Convert.DBNull;
            }
            
            public bool IsIdResponsableNull() {
                return this.IsNull(this.tabletfi_MovimientosDeCaja.IdResponsableColumn);
            }
            
            public void SetIdResponsableNull() {
                this[this.tabletfi_MovimientosDeCaja.IdResponsableColumn] = System.Convert.DBNull;
            }
            
            public bool IsTotalNull() {
                return this.IsNull(this.tabletfi_MovimientosDeCaja.TotalColumn);
            }
            
            public void SetTotalNull() {
                this[this.tabletfi_MovimientosDeCaja.TotalColumn] = System.Convert.DBNull;
            }
            
            public bool IsIdMonedaCierreNull() {
                return this.IsNull(this.tabletfi_MovimientosDeCaja.IdMonedaCierreColumn);
            }
            
            public void SetIdMonedaCierreNull() {
                this[this.tabletfi_MovimientosDeCaja.IdMonedaCierreColumn] = System.Convert.DBNull;
            }
            
            public bool IsIdCotizacionCierreNull() {
                return this.IsNull(this.tabletfi_MovimientosDeCaja.IdCotizacionCierreColumn);
            }
            
            public void SetIdCotizacionCierreNull() {
                this[this.tabletfi_MovimientosDeCaja.IdCotizacionCierreColumn] = System.Convert.DBNull;
            }
            
            public bool IsIdAceptacionNull() {
                return this.IsNull(this.tabletfi_MovimientosDeCaja.IdAceptacionColumn);
            }
            
            public void SetIdAceptacionNull() {
                this[this.tabletfi_MovimientosDeCaja.IdAceptacionColumn] = System.Convert.DBNull;
            }
            
            public bool IsFechaCreacionNull() {
                return this.IsNull(this.tabletfi_MovimientosDeCaja.FechaCreacionColumn);
            }
            
            public void SetFechaCreacionNull() {
                this[this.tabletfi_MovimientosDeCaja.FechaCreacionColumn] = System.Convert.DBNull;
            }
            
            public bool IsIdConexionCreacionNull() {
                return this.IsNull(this.tabletfi_MovimientosDeCaja.IdConexionCreacionColumn);
            }
            
            public void SetIdConexionCreacionNull() {
                this[this.tabletfi_MovimientosDeCaja.IdConexionCreacionColumn] = System.Convert.DBNull;
            }
            
            public bool IsUltimaModificacionNull() {
                return this.IsNull(this.tabletfi_MovimientosDeCaja.UltimaModificacionColumn);
            }
            
            public void SetUltimaModificacionNull() {
                this[this.tabletfi_MovimientosDeCaja.UltimaModificacionColumn] = System.Convert.DBNull;
            }
            
            public bool IsIdConexionUltimaModificacionNull() {
                return this.IsNull(this.tabletfi_MovimientosDeCaja.IdConexionUltimaModificacionColumn);
            }
            
            public void SetIdConexionUltimaModificacionNull() {
                this[this.tabletfi_MovimientosDeCaja.IdConexionUltimaModificacionColumn] = System.Convert.DBNull;
            }
            
            public bool IsIdReservadoNull() {
                return this.IsNull(this.tabletfi_MovimientosDeCaja.IdReservadoColumn);
            }
            
            public void SetIdReservadoNull() {
                this[this.tabletfi_MovimientosDeCaja.IdReservadoColumn] = System.Convert.DBNull;
            }
            
            public bool IsRowIdNull() {
                return this.IsNull(this.tabletfi_MovimientosDeCaja.RowIdColumn);
            }
            
            public void SetRowIdNull() {
                this[this.tabletfi_MovimientosDeCaja.RowIdColumn] = System.Convert.DBNull;
            }
            
            public tfi_PagosMovimientosCajasRow[] Gettfi_PagosMovimientosCajasRows() {
                return ((tfi_PagosMovimientosCajasRow[])(this.GetChildRows(this.Table.ChildRelations["tfi_MovimientosDeCajatfi_PagosMovimientosCajas"])));
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class tfi_MovimientosDeCajaRowChangeEvent : EventArgs {
            
            private tfi_MovimientosDeCajaRow eventRow;
            
            private DataRowAction eventAction;
            
            public tfi_MovimientosDeCajaRowChangeEvent(tfi_MovimientosDeCajaRow row, DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            public tfi_MovimientosDeCajaRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            public DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class tsh_TipoAceptacionDataTable : DataTable, System.Collections.IEnumerable {
            
            private DataColumn columnIdTipoAceptacion;
            
            private DataColumn columnDescripcion;
            
            private DataColumn columnAux1;
            
            private DataColumn columnAux2;
            
            private DataColumn columnFechaCreacion;
            
            private DataColumn columnIdConexionCreacion;
            
            private DataColumn columnUltimaModificacion;
            
            private DataColumn columnIdConexionUltimaModificacion;
            
            private DataColumn columnIdReservado;
            
            private DataColumn columnRowId;
            
            internal tsh_TipoAceptacionDataTable() : 
                    base("tsh_TipoAceptacion") {
                this.InitClass();
            }
            
            internal tsh_TipoAceptacionDataTable(DataTable table) : 
                    base(table.TableName) {
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
                this.DisplayExpression = table.DisplayExpression;
            }
            
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            internal DataColumn IdTipoAceptacionColumn {
                get {
                    return this.columnIdTipoAceptacion;
                }
            }
            
            internal DataColumn DescripcionColumn {
                get {
                    return this.columnDescripcion;
                }
            }
            
            internal DataColumn Aux1Column {
                get {
                    return this.columnAux1;
                }
            }
            
            internal DataColumn Aux2Column {
                get {
                    return this.columnAux2;
                }
            }
            
            internal DataColumn FechaCreacionColumn {
                get {
                    return this.columnFechaCreacion;
                }
            }
            
            internal DataColumn IdConexionCreacionColumn {
                get {
                    return this.columnIdConexionCreacion;
                }
            }
            
            internal DataColumn UltimaModificacionColumn {
                get {
                    return this.columnUltimaModificacion;
                }
            }
            
            internal DataColumn IdConexionUltimaModificacionColumn {
                get {
                    return this.columnIdConexionUltimaModificacion;
                }
            }
            
            internal DataColumn IdReservadoColumn {
                get {
                    return this.columnIdReservado;
                }
            }
            
            internal DataColumn RowIdColumn {
                get {
                    return this.columnRowId;
                }
            }
            
            public tsh_TipoAceptacionRow this[int index] {
                get {
                    return ((tsh_TipoAceptacionRow)(this.Rows[index]));
                }
            }
            
            public event tsh_TipoAceptacionRowChangeEventHandler tsh_TipoAceptacionRowChanged;
            
            public event tsh_TipoAceptacionRowChangeEventHandler tsh_TipoAceptacionRowChanging;
            
            public event tsh_TipoAceptacionRowChangeEventHandler tsh_TipoAceptacionRowDeleted;
            
            public event tsh_TipoAceptacionRowChangeEventHandler tsh_TipoAceptacionRowDeleting;
            
            public void Addtsh_TipoAceptacionRow(tsh_TipoAceptacionRow row) {
                this.Rows.Add(row);
            }
            
            public tsh_TipoAceptacionRow Addtsh_TipoAceptacionRow(string IdTipoAceptacion, string Descripcion, string Aux1, string Aux2, System.DateTime FechaCreacion, long IdConexionCreacion, System.Byte[] UltimaModificacion, long IdConexionUltimaModificacion, long IdReservado, System.Guid RowId) {
                tsh_TipoAceptacionRow rowtsh_TipoAceptacionRow = ((tsh_TipoAceptacionRow)(this.NewRow()));
                rowtsh_TipoAceptacionRow.ItemArray = new object[] {
                        IdTipoAceptacion,
                        Descripcion,
                        Aux1,
                        Aux2,
                        FechaCreacion,
                        IdConexionCreacion,
                        UltimaModificacion,
                        IdConexionUltimaModificacion,
                        IdReservado,
                        RowId};
                this.Rows.Add(rowtsh_TipoAceptacionRow);
                return rowtsh_TipoAceptacionRow;
            }
            
            public tsh_TipoAceptacionRow FindByIdTipoAceptacion(string IdTipoAceptacion) {
                return ((tsh_TipoAceptacionRow)(this.Rows.Find(new object[] {
                            IdTipoAceptacion})));
            }
            
            public System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            public override DataTable Clone() {
                tsh_TipoAceptacionDataTable cln = ((tsh_TipoAceptacionDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            protected override DataTable CreateInstance() {
                return new tsh_TipoAceptacionDataTable();
            }
            
            internal void InitVars() {
                this.columnIdTipoAceptacion = this.Columns["IdTipoAceptacion"];
                this.columnDescripcion = this.Columns["Descripcion"];
                this.columnAux1 = this.Columns["Aux1"];
                this.columnAux2 = this.Columns["Aux2"];
                this.columnFechaCreacion = this.Columns["FechaCreacion"];
                this.columnIdConexionCreacion = this.Columns["IdConexionCreacion"];
                this.columnUltimaModificacion = this.Columns["UltimaModificacion"];
                this.columnIdConexionUltimaModificacion = this.Columns["IdConexionUltimaModificacion"];
                this.columnIdReservado = this.Columns["IdReservado"];
                this.columnRowId = this.Columns["RowId"];
            }
            
            private void InitClass() {
                this.columnIdTipoAceptacion = new DataColumn("IdTipoAceptacion", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdTipoAceptacion);
                this.columnDescripcion = new DataColumn("Descripcion", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnDescripcion);
                this.columnAux1 = new DataColumn("Aux1", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnAux1);
                this.columnAux2 = new DataColumn("Aux2", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnAux2);
                this.columnFechaCreacion = new DataColumn("FechaCreacion", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnFechaCreacion);
                this.columnIdConexionCreacion = new DataColumn("IdConexionCreacion", typeof(long), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdConexionCreacion);
                this.columnUltimaModificacion = new DataColumn("UltimaModificacion", typeof(System.Byte[]), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnUltimaModificacion);
                this.columnIdConexionUltimaModificacion = new DataColumn("IdConexionUltimaModificacion", typeof(long), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdConexionUltimaModificacion);
                this.columnIdReservado = new DataColumn("IdReservado", typeof(long), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdReservado);
                this.columnRowId = new DataColumn("RowId", typeof(System.Guid), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnRowId);
                this.Constraints.Add(new UniqueConstraint("tfi_MovimientosDeCajaExDatasetKey5", new DataColumn[] {
                                this.columnIdTipoAceptacion}, true));
                this.columnIdTipoAceptacion.AllowDBNull = false;
                this.columnIdTipoAceptacion.Unique = true;
                this.columnDescripcion.AllowDBNull = false;
                this.columnAux1.AllowDBNull = false;
                this.columnAux2.AllowDBNull = false;
                this.columnUltimaModificacion.ReadOnly = true;
            }
            
            public tsh_TipoAceptacionRow Newtsh_TipoAceptacionRow() {
                return ((tsh_TipoAceptacionRow)(this.NewRow()));
            }
            
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder) {
                return new tsh_TipoAceptacionRow(builder);
            }
            
            protected override System.Type GetRowType() {
                return typeof(tsh_TipoAceptacionRow);
            }
            
            protected override void OnRowChanged(DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.tsh_TipoAceptacionRowChanged != null)) {
                    this.tsh_TipoAceptacionRowChanged(this, new tsh_TipoAceptacionRowChangeEvent(((tsh_TipoAceptacionRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowChanging(DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.tsh_TipoAceptacionRowChanging != null)) {
                    this.tsh_TipoAceptacionRowChanging(this, new tsh_TipoAceptacionRowChangeEvent(((tsh_TipoAceptacionRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleted(DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.tsh_TipoAceptacionRowDeleted != null)) {
                    this.tsh_TipoAceptacionRowDeleted(this, new tsh_TipoAceptacionRowChangeEvent(((tsh_TipoAceptacionRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleting(DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.tsh_TipoAceptacionRowDeleting != null)) {
                    this.tsh_TipoAceptacionRowDeleting(this, new tsh_TipoAceptacionRowChangeEvent(((tsh_TipoAceptacionRow)(e.Row)), e.Action));
                }
            }
            
            public void Removetsh_TipoAceptacionRow(tsh_TipoAceptacionRow row) {
                this.Rows.Remove(row);
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class tsh_TipoAceptacionRow : DataRow {
            
            private tsh_TipoAceptacionDataTable tabletsh_TipoAceptacion;
            
            internal tsh_TipoAceptacionRow(DataRowBuilder rb) : 
                    base(rb) {
                this.tabletsh_TipoAceptacion = ((tsh_TipoAceptacionDataTable)(this.Table));
            }
            
            public string IdTipoAceptacion {
                get {
                    return ((string)(this[this.tabletsh_TipoAceptacion.IdTipoAceptacionColumn]));
                }
                set {
                    this[this.tabletsh_TipoAceptacion.IdTipoAceptacionColumn] = value;
                }
            }
            
            public string Descripcion {
                get {
                    return ((string)(this[this.tabletsh_TipoAceptacion.DescripcionColumn]));
                }
                set {
                    this[this.tabletsh_TipoAceptacion.DescripcionColumn] = value;
                }
            }
            
            public string Aux1 {
                get {
                    return ((string)(this[this.tabletsh_TipoAceptacion.Aux1Column]));
                }
                set {
                    this[this.tabletsh_TipoAceptacion.Aux1Column] = value;
                }
            }
            
            public string Aux2 {
                get {
                    return ((string)(this[this.tabletsh_TipoAceptacion.Aux2Column]));
                }
                set {
                    this[this.tabletsh_TipoAceptacion.Aux2Column] = value;
                }
            }
            
            public System.DateTime FechaCreacion {
                get {
                    try {
                        return ((System.DateTime)(this[this.tabletsh_TipoAceptacion.FechaCreacionColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletsh_TipoAceptacion.FechaCreacionColumn] = value;
                }
            }
            
            public long IdConexionCreacion {
                get {
                    try {
                        return ((long)(this[this.tabletsh_TipoAceptacion.IdConexionCreacionColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletsh_TipoAceptacion.IdConexionCreacionColumn] = value;
                }
            }
            
            public System.Byte[] UltimaModificacion {
                get {
                    try {
                        return ((System.Byte[])(this[this.tabletsh_TipoAceptacion.UltimaModificacionColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletsh_TipoAceptacion.UltimaModificacionColumn] = value;
                }
            }
            
            public long IdConexionUltimaModificacion {
                get {
                    try {
                        return ((long)(this[this.tabletsh_TipoAceptacion.IdConexionUltimaModificacionColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletsh_TipoAceptacion.IdConexionUltimaModificacionColumn] = value;
                }
            }
            
            public long IdReservado {
                get {
                    try {
                        return ((long)(this[this.tabletsh_TipoAceptacion.IdReservadoColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletsh_TipoAceptacion.IdReservadoColumn] = value;
                }
            }
            
            public System.Guid RowId {
                get {
                    try {
                        return ((System.Guid)(this[this.tabletsh_TipoAceptacion.RowIdColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletsh_TipoAceptacion.RowIdColumn] = value;
                }
            }
            
            public bool IsFechaCreacionNull() {
                return this.IsNull(this.tabletsh_TipoAceptacion.FechaCreacionColumn);
            }
            
            public void SetFechaCreacionNull() {
                this[this.tabletsh_TipoAceptacion.FechaCreacionColumn] = System.Convert.DBNull;
            }
            
            public bool IsIdConexionCreacionNull() {
                return this.IsNull(this.tabletsh_TipoAceptacion.IdConexionCreacionColumn);
            }
            
            public void SetIdConexionCreacionNull() {
                this[this.tabletsh_TipoAceptacion.IdConexionCreacionColumn] = System.Convert.DBNull;
            }
            
            public bool IsUltimaModificacionNull() {
                return this.IsNull(this.tabletsh_TipoAceptacion.UltimaModificacionColumn);
            }
            
            public void SetUltimaModificacionNull() {
                this[this.tabletsh_TipoAceptacion.UltimaModificacionColumn] = System.Convert.DBNull;
            }
            
            public bool IsIdConexionUltimaModificacionNull() {
                return this.IsNull(this.tabletsh_TipoAceptacion.IdConexionUltimaModificacionColumn);
            }
            
            public void SetIdConexionUltimaModificacionNull() {
                this[this.tabletsh_TipoAceptacion.IdConexionUltimaModificacionColumn] = System.Convert.DBNull;
            }
            
            public bool IsIdReservadoNull() {
                return this.IsNull(this.tabletsh_TipoAceptacion.IdReservadoColumn);
            }
            
            public void SetIdReservadoNull() {
                this[this.tabletsh_TipoAceptacion.IdReservadoColumn] = System.Convert.DBNull;
            }
            
            public bool IsRowIdNull() {
                return this.IsNull(this.tabletsh_TipoAceptacion.RowIdColumn);
            }
            
            public void SetRowIdNull() {
                this[this.tabletsh_TipoAceptacion.RowIdColumn] = System.Convert.DBNull;
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class tsh_TipoAceptacionRowChangeEvent : EventArgs {
            
            private tsh_TipoAceptacionRow eventRow;
            
            private DataRowAction eventAction;
            
            public tsh_TipoAceptacionRowChangeEvent(tsh_TipoAceptacionRow row, DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            public tsh_TipoAceptacionRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            public DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
