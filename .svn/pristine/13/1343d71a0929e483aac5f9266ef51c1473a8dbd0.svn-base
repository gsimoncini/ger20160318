//------------------------------------------------------------------------------
// <autogenerated>
//     This code was generated by a tool.
//     Runtime Version: 1.1.4322.573
//
//     Changes to this file may cause incorrect behavior and will be lost if 
//     the code is regenerated.
// </autogenerated>
//------------------------------------------------------------------------------

namespace mz.erp.commontypes.data {
    using System;
    using System.Data;
    using System.Xml;
    using System.Runtime.Serialization;
    
    
    [Serializable()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Diagnostics.DebuggerStepThrough()]
    [System.ComponentModel.ToolboxItem(true)]
    public class RecursosElementosNavegacionIdiomasDataset : DataSet {
        
        private RecursosElementosNavegacionIdiomasDataTable tableRecursosElementosNavegacionIdiomas;
        
        public RecursosElementosNavegacionIdiomasDataset() {
            this.InitClass();
            System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            this.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        protected RecursosElementosNavegacionIdiomasDataset(SerializationInfo info, StreamingContext context) {
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((strSchema != null)) {
                DataSet ds = new DataSet();
                ds.ReadXmlSchema(new XmlTextReader(new System.IO.StringReader(strSchema)));
                if ((ds.Tables["RecursosElementosNavegacionIdiomas"] != null)) {
                    this.Tables.Add(new RecursosElementosNavegacionIdiomasDataTable(ds.Tables["RecursosElementosNavegacionIdiomas"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.InitClass();
            }
            this.GetSerializationData(info, context);
            System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            this.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public RecursosElementosNavegacionIdiomasDataTable RecursosElementosNavegacionIdiomas {
            get {
                return this.tableRecursosElementosNavegacionIdiomas;
            }
        }
        
        public override DataSet Clone() {
            RecursosElementosNavegacionIdiomasDataset cln = ((RecursosElementosNavegacionIdiomasDataset)(base.Clone()));
            cln.InitVars();
            return cln;
        }
        
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        protected override void ReadXmlSerializable(XmlReader reader) {
            this.Reset();
            DataSet ds = new DataSet();
            ds.ReadXml(reader);
            if ((ds.Tables["RecursosElementosNavegacionIdiomas"] != null)) {
                this.Tables.Add(new RecursosElementosNavegacionIdiomasDataTable(ds.Tables["RecursosElementosNavegacionIdiomas"]));
            }
            this.DataSetName = ds.DataSetName;
            this.Prefix = ds.Prefix;
            this.Namespace = ds.Namespace;
            this.Locale = ds.Locale;
            this.CaseSensitive = ds.CaseSensitive;
            this.EnforceConstraints = ds.EnforceConstraints;
            this.Merge(ds, false, System.Data.MissingSchemaAction.Add);
            this.InitVars();
        }
        
        protected override System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            System.IO.MemoryStream stream = new System.IO.MemoryStream();
            this.WriteXmlSchema(new XmlTextWriter(stream, null));
            stream.Position = 0;
            return System.Xml.Schema.XmlSchema.Read(new XmlTextReader(stream), null);
        }
        
        internal void InitVars() {
            this.tableRecursosElementosNavegacionIdiomas = ((RecursosElementosNavegacionIdiomasDataTable)(this.Tables["RecursosElementosNavegacionIdiomas"]));
            if ((this.tableRecursosElementosNavegacionIdiomas != null)) {
                this.tableRecursosElementosNavegacionIdiomas.InitVars();
            }
        }
        
        private void InitClass() {
            this.DataSetName = "RecursosElementosNavegacionIdiomasDataset";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/RecursosElementosNavegacionIdiomasDataset.xsd";
            this.Locale = new System.Globalization.CultureInfo("en-US");
            this.CaseSensitive = false;
            this.EnforceConstraints = true;
            this.tableRecursosElementosNavegacionIdiomas = new RecursosElementosNavegacionIdiomasDataTable();
            this.Tables.Add(this.tableRecursosElementosNavegacionIdiomas);
        }
        
        private bool ShouldSerializeRecursosElementosNavegacionIdiomas() {
            return false;
        }
        
        private void SchemaChanged(object sender, System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        public delegate void RecursosElementosNavegacionIdiomasRowChangeEventHandler(object sender, RecursosElementosNavegacionIdiomasRowChangeEvent e);
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class RecursosElementosNavegacionIdiomasDataTable : DataTable, System.Collections.IEnumerable {
            
            private DataColumn columnidElementoNavegacion;
            
            private DataColumn columnidIdioma;
            
            private DataColumn columnidTipoRecurso;
            
            private DataColumn columnValor;
            
            internal RecursosElementosNavegacionIdiomasDataTable() : 
                    base("RecursosElementosNavegacionIdiomas") {
                this.InitClass();
            }
            
            internal RecursosElementosNavegacionIdiomasDataTable(DataTable table) : 
                    base(table.TableName) {
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
                this.DisplayExpression = table.DisplayExpression;
            }
            
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            internal DataColumn idElementoNavegacionColumn {
                get {
                    return this.columnidElementoNavegacion;
                }
            }
            
            internal DataColumn idIdiomaColumn {
                get {
                    return this.columnidIdioma;
                }
            }
            
            internal DataColumn idTipoRecursoColumn {
                get {
                    return this.columnidTipoRecurso;
                }
            }
            
            internal DataColumn ValorColumn {
                get {
                    return this.columnValor;
                }
            }
            
            public RecursosElementosNavegacionIdiomasRow this[int index] {
                get {
                    return ((RecursosElementosNavegacionIdiomasRow)(this.Rows[index]));
                }
            }
            
            public event RecursosElementosNavegacionIdiomasRowChangeEventHandler RecursosElementosNavegacionIdiomasRowChanged;
            
            public event RecursosElementosNavegacionIdiomasRowChangeEventHandler RecursosElementosNavegacionIdiomasRowChanging;
            
            public event RecursosElementosNavegacionIdiomasRowChangeEventHandler RecursosElementosNavegacionIdiomasRowDeleted;
            
            public event RecursosElementosNavegacionIdiomasRowChangeEventHandler RecursosElementosNavegacionIdiomasRowDeleting;
            
            public void AddRecursosElementosNavegacionIdiomasRow(RecursosElementosNavegacionIdiomasRow row) {
                this.Rows.Add(row);
            }
            
            public RecursosElementosNavegacionIdiomasRow AddRecursosElementosNavegacionIdiomasRow(long idElementoNavegacion, long idIdioma, long idTipoRecurso, string Valor) {
                RecursosElementosNavegacionIdiomasRow rowRecursosElementosNavegacionIdiomasRow = ((RecursosElementosNavegacionIdiomasRow)(this.NewRow()));
                rowRecursosElementosNavegacionIdiomasRow.ItemArray = new object[] {
                        idElementoNavegacion,
                        idIdioma,
                        idTipoRecurso,
                        Valor};
                this.Rows.Add(rowRecursosElementosNavegacionIdiomasRow);
                return rowRecursosElementosNavegacionIdiomasRow;
            }
            
            public RecursosElementosNavegacionIdiomasRow FindByidElementoNavegacionidIdiomaidTipoRecurso(long idElementoNavegacion, long idIdioma, long idTipoRecurso) {
                return ((RecursosElementosNavegacionIdiomasRow)(this.Rows.Find(new object[] {
                            idElementoNavegacion,
                            idIdioma,
                            idTipoRecurso})));
            }
            
            public System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            public override DataTable Clone() {
                RecursosElementosNavegacionIdiomasDataTable cln = ((RecursosElementosNavegacionIdiomasDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            protected override DataTable CreateInstance() {
                return new RecursosElementosNavegacionIdiomasDataTable();
            }
            
            internal void InitVars() {
                this.columnidElementoNavegacion = this.Columns["idElementoNavegacion"];
                this.columnidIdioma = this.Columns["idIdioma"];
                this.columnidTipoRecurso = this.Columns["idTipoRecurso"];
                this.columnValor = this.Columns["Valor"];
            }
            
            private void InitClass() {
                this.columnidElementoNavegacion = new DataColumn("idElementoNavegacion", typeof(long), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnidElementoNavegacion);
                this.columnidIdioma = new DataColumn("idIdioma", typeof(long), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnidIdioma);
                this.columnidTipoRecurso = new DataColumn("idTipoRecurso", typeof(long), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnidTipoRecurso);
                this.columnValor = new DataColumn("Valor", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnValor);
                this.Constraints.Add(new UniqueConstraint("RecursosElementosNavegacionIdiomasDatasetKey1", new DataColumn[] {
                                this.columnidElementoNavegacion,
                                this.columnidIdioma,
                                this.columnidTipoRecurso}, true));
                this.columnidElementoNavegacion.AllowDBNull = false;
                this.columnidIdioma.AllowDBNull = false;
                this.columnidTipoRecurso.AllowDBNull = false;
            }
            
            public RecursosElementosNavegacionIdiomasRow NewRecursosElementosNavegacionIdiomasRow() {
                return ((RecursosElementosNavegacionIdiomasRow)(this.NewRow()));
            }
            
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder) {
                return new RecursosElementosNavegacionIdiomasRow(builder);
            }
            
            protected override System.Type GetRowType() {
                return typeof(RecursosElementosNavegacionIdiomasRow);
            }
            
            protected override void OnRowChanged(DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.RecursosElementosNavegacionIdiomasRowChanged != null)) {
                    this.RecursosElementosNavegacionIdiomasRowChanged(this, new RecursosElementosNavegacionIdiomasRowChangeEvent(((RecursosElementosNavegacionIdiomasRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowChanging(DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.RecursosElementosNavegacionIdiomasRowChanging != null)) {
                    this.RecursosElementosNavegacionIdiomasRowChanging(this, new RecursosElementosNavegacionIdiomasRowChangeEvent(((RecursosElementosNavegacionIdiomasRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleted(DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.RecursosElementosNavegacionIdiomasRowDeleted != null)) {
                    this.RecursosElementosNavegacionIdiomasRowDeleted(this, new RecursosElementosNavegacionIdiomasRowChangeEvent(((RecursosElementosNavegacionIdiomasRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleting(DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.RecursosElementosNavegacionIdiomasRowDeleting != null)) {
                    this.RecursosElementosNavegacionIdiomasRowDeleting(this, new RecursosElementosNavegacionIdiomasRowChangeEvent(((RecursosElementosNavegacionIdiomasRow)(e.Row)), e.Action));
                }
            }
            
            public void RemoveRecursosElementosNavegacionIdiomasRow(RecursosElementosNavegacionIdiomasRow row) {
                this.Rows.Remove(row);
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class RecursosElementosNavegacionIdiomasRow : DataRow {
            
            private RecursosElementosNavegacionIdiomasDataTable tableRecursosElementosNavegacionIdiomas;
            
            internal RecursosElementosNavegacionIdiomasRow(DataRowBuilder rb) : 
                    base(rb) {
                this.tableRecursosElementosNavegacionIdiomas = ((RecursosElementosNavegacionIdiomasDataTable)(this.Table));
            }
            
            public long idElementoNavegacion {
                get {
                    return ((long)(this[this.tableRecursosElementosNavegacionIdiomas.idElementoNavegacionColumn]));
                }
                set {
                    this[this.tableRecursosElementosNavegacionIdiomas.idElementoNavegacionColumn] = value;
                }
            }
            
            public long idIdioma {
                get {
                    return ((long)(this[this.tableRecursosElementosNavegacionIdiomas.idIdiomaColumn]));
                }
                set {
                    this[this.tableRecursosElementosNavegacionIdiomas.idIdiomaColumn] = value;
                }
            }
            
            public long idTipoRecurso {
                get {
                    return ((long)(this[this.tableRecursosElementosNavegacionIdiomas.idTipoRecursoColumn]));
                }
                set {
                    this[this.tableRecursosElementosNavegacionIdiomas.idTipoRecursoColumn] = value;
                }
            }
            
            public string Valor {
                get {
                    try {
                        return ((string)(this[this.tableRecursosElementosNavegacionIdiomas.ValorColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableRecursosElementosNavegacionIdiomas.ValorColumn] = value;
                }
            }
            
            public bool IsValorNull() {
                return this.IsNull(this.tableRecursosElementosNavegacionIdiomas.ValorColumn);
            }
            
            public void SetValorNull() {
                this[this.tableRecursosElementosNavegacionIdiomas.ValorColumn] = System.Convert.DBNull;
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class RecursosElementosNavegacionIdiomasRowChangeEvent : EventArgs {
            
            private RecursosElementosNavegacionIdiomasRow eventRow;
            
            private DataRowAction eventAction;
            
            public RecursosElementosNavegacionIdiomasRowChangeEvent(RecursosElementosNavegacionIdiomasRow row, DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            public RecursosElementosNavegacionIdiomasRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            public DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
