//------------------------------------------------------------------------------
// <autogenerated>
//     This code was generated by a tool.
//     Runtime Version: 1.1.4322.2032
//
//     Changes to this file may cause incorrect behavior and will be lost if 
//     the code is regenerated.
// </autogenerated>
//------------------------------------------------------------------------------

namespace mz.erp.commontypes.data {
    using System;
    using System.Data;
    using System.Xml;
    using System.Runtime.Serialization;
    
    
    [Serializable()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Diagnostics.DebuggerStepThrough()]
    [System.ComponentModel.ToolboxItem(true)]
    public class sy_ValidacionesDataset : DataSet {
        
        private sy_ValidacionesDataTable tablesy_Validaciones;
        
        public sy_ValidacionesDataset() {
            this.InitClass();
            System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            this.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        protected sy_ValidacionesDataset(SerializationInfo info, StreamingContext context) {
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((strSchema != null)) {
                DataSet ds = new DataSet();
                ds.ReadXmlSchema(new XmlTextReader(new System.IO.StringReader(strSchema)));
                if ((ds.Tables["sy_Validaciones"] != null)) {
                    this.Tables.Add(new sy_ValidacionesDataTable(ds.Tables["sy_Validaciones"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.InitClass();
            }
            this.GetSerializationData(info, context);
            System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            this.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public sy_ValidacionesDataTable sy_Validaciones {
            get {
                return this.tablesy_Validaciones;
            }
        }
        
        public override DataSet Clone() {
            sy_ValidacionesDataset cln = ((sy_ValidacionesDataset)(base.Clone()));
            cln.InitVars();
            return cln;
        }
        
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        protected override void ReadXmlSerializable(XmlReader reader) {
            this.Reset();
            DataSet ds = new DataSet();
            ds.ReadXml(reader);
            if ((ds.Tables["sy_Validaciones"] != null)) {
                this.Tables.Add(new sy_ValidacionesDataTable(ds.Tables["sy_Validaciones"]));
            }
            this.DataSetName = ds.DataSetName;
            this.Prefix = ds.Prefix;
            this.Namespace = ds.Namespace;
            this.Locale = ds.Locale;
            this.CaseSensitive = ds.CaseSensitive;
            this.EnforceConstraints = ds.EnforceConstraints;
            this.Merge(ds, false, System.Data.MissingSchemaAction.Add);
            this.InitVars();
        }
        
        protected override System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            System.IO.MemoryStream stream = new System.IO.MemoryStream();
            this.WriteXmlSchema(new XmlTextWriter(stream, null));
            stream.Position = 0;
            return System.Xml.Schema.XmlSchema.Read(new XmlTextReader(stream), null);
        }
        
        internal void InitVars() {
            this.tablesy_Validaciones = ((sy_ValidacionesDataTable)(this.Tables["sy_Validaciones"]));
            if ((this.tablesy_Validaciones != null)) {
                this.tablesy_Validaciones.InitVars();
            }
        }
        
        private void InitClass() {
            this.DataSetName = "sy_ValidacionesDataset";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/sy_Validaciones.xsd";
            this.Locale = new System.Globalization.CultureInfo("en-US");
            this.CaseSensitive = false;
            this.EnforceConstraints = true;
            this.tablesy_Validaciones = new sy_ValidacionesDataTable();
            this.Tables.Add(this.tablesy_Validaciones);
        }
        
        private bool ShouldSerializesy_Validaciones() {
            return false;
        }
        
        private void SchemaChanged(object sender, System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        public delegate void sy_ValidacionesRowChangeEventHandler(object sender, sy_ValidacionesRowChangeEvent e);
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class sy_ValidacionesDataTable : DataTable, System.Collections.IEnumerable {
            
            private DataColumn columnIdValidacion;
            
            private DataColumn columnIdProceso;
            
            private DataColumn columnIdTarea;
            
            private DataColumn columnFormulario;
            
            private DataColumn columnValidacion;
            
            private DataColumn columnTitulo;
            
            private DataColumn columnMensaje;
            
            private DataColumn columnTipoMensaje;
            
            private DataColumn columnPerfiles;
            
            private DataColumn columnBotones;
            
            private DataColumn columnFechaInicio;
            
            private DataColumn columnFechaFin;
            
            private DataColumn columnActivo;
            
            private DataColumn columnCampoAuxiliar1;
            
            private DataColumn columnCampoAuxiliar2;
            
            private DataColumn columnCampoAuxiliar3;
            
            private DataColumn columnIdSucursal;
            
            private DataColumn columnIdEmpresa;
            
            internal sy_ValidacionesDataTable() : 
                    base("sy_Validaciones") {
                this.InitClass();
            }
            
            internal sy_ValidacionesDataTable(DataTable table) : 
                    base(table.TableName) {
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
                this.DisplayExpression = table.DisplayExpression;
            }
            
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            internal DataColumn IdValidacionColumn {
                get {
                    return this.columnIdValidacion;
                }
            }
            
            internal DataColumn IdProcesoColumn {
                get {
                    return this.columnIdProceso;
                }
            }
            
            internal DataColumn IdTareaColumn {
                get {
                    return this.columnIdTarea;
                }
            }
            
            internal DataColumn FormularioColumn {
                get {
                    return this.columnFormulario;
                }
            }
            
            internal DataColumn ValidacionColumn {
                get {
                    return this.columnValidacion;
                }
            }
            
            internal DataColumn TituloColumn {
                get {
                    return this.columnTitulo;
                }
            }
            
            internal DataColumn MensajeColumn {
                get {
                    return this.columnMensaje;
                }
            }
            
            internal DataColumn TipoMensajeColumn {
                get {
                    return this.columnTipoMensaje;
                }
            }
            
            internal DataColumn PerfilesColumn {
                get {
                    return this.columnPerfiles;
                }
            }
            
            internal DataColumn BotonesColumn {
                get {
                    return this.columnBotones;
                }
            }
            
            internal DataColumn FechaInicioColumn {
                get {
                    return this.columnFechaInicio;
                }
            }
            
            internal DataColumn FechaFinColumn {
                get {
                    return this.columnFechaFin;
                }
            }
            
            internal DataColumn ActivoColumn {
                get {
                    return this.columnActivo;
                }
            }
            
            internal DataColumn CampoAuxiliar1Column {
                get {
                    return this.columnCampoAuxiliar1;
                }
            }
            
            internal DataColumn CampoAuxiliar2Column {
                get {
                    return this.columnCampoAuxiliar2;
                }
            }
            
            internal DataColumn CampoAuxiliar3Column {
                get {
                    return this.columnCampoAuxiliar3;
                }
            }
            
            internal DataColumn IdSucursalColumn {
                get {
                    return this.columnIdSucursal;
                }
            }
            
            internal DataColumn IdEmpresaColumn {
                get {
                    return this.columnIdEmpresa;
                }
            }
            
            public sy_ValidacionesRow this[int index] {
                get {
                    return ((sy_ValidacionesRow)(this.Rows[index]));
                }
            }
            
            public event sy_ValidacionesRowChangeEventHandler sy_ValidacionesRowChanged;
            
            public event sy_ValidacionesRowChangeEventHandler sy_ValidacionesRowChanging;
            
            public event sy_ValidacionesRowChangeEventHandler sy_ValidacionesRowDeleted;
            
            public event sy_ValidacionesRowChangeEventHandler sy_ValidacionesRowDeleting;
            
            public void Addsy_ValidacionesRow(sy_ValidacionesRow row) {
                this.Rows.Add(row);
            }
            
            public sy_ValidacionesRow Addsy_ValidacionesRow(
                        string IdValidacion, 
                        long IdProceso, 
                        long IdTarea, 
                        string Formulario, 
                        string Validacion, 
                        string Titulo, 
                        string Mensaje, 
                        string TipoMensaje, 
                        string Perfiles, 
                        string Botones, 
                        System.DateTime FechaInicio, 
                        System.DateTime FechaFin, 
                        bool Activo, 
                        string CampoAuxiliar1, 
                        string CampoAuxiliar2, 
                        string CampoAuxiliar3, 
                        long IdSucursal, 
                        long IdEmpresa) {
                sy_ValidacionesRow rowsy_ValidacionesRow = ((sy_ValidacionesRow)(this.NewRow()));
                rowsy_ValidacionesRow.ItemArray = new object[] {
                        IdValidacion,
                        IdProceso,
                        IdTarea,
                        Formulario,
                        Validacion,
                        Titulo,
                        Mensaje,
                        TipoMensaje,
                        Perfiles,
                        Botones,
                        FechaInicio,
                        FechaFin,
                        Activo,
                        CampoAuxiliar1,
                        CampoAuxiliar2,
                        CampoAuxiliar3,
                        IdSucursal,
                        IdEmpresa};
                this.Rows.Add(rowsy_ValidacionesRow);
                return rowsy_ValidacionesRow;
            }
            
            public sy_ValidacionesRow FindByIdValidacion(string IdValidacion) {
                return ((sy_ValidacionesRow)(this.Rows.Find(new object[] {
                            IdValidacion})));
            }
            
            public System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            public override DataTable Clone() {
                sy_ValidacionesDataTable cln = ((sy_ValidacionesDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            protected override DataTable CreateInstance() {
                return new sy_ValidacionesDataTable();
            }
            
            internal void InitVars() {
                this.columnIdValidacion = this.Columns["IdValidacion"];
                this.columnIdProceso = this.Columns["IdProceso"];
                this.columnIdTarea = this.Columns["IdTarea"];
                this.columnFormulario = this.Columns["Formulario"];
                this.columnValidacion = this.Columns["Validacion"];
                this.columnTitulo = this.Columns["Titulo"];
                this.columnMensaje = this.Columns["Mensaje"];
                this.columnTipoMensaje = this.Columns["TipoMensaje"];
                this.columnPerfiles = this.Columns["Perfiles"];
                this.columnBotones = this.Columns["Botones"];
                this.columnFechaInicio = this.Columns["FechaInicio"];
                this.columnFechaFin = this.Columns["FechaFin"];
                this.columnActivo = this.Columns["Activo"];
                this.columnCampoAuxiliar1 = this.Columns["CampoAuxiliar1"];
                this.columnCampoAuxiliar2 = this.Columns["CampoAuxiliar2"];
                this.columnCampoAuxiliar3 = this.Columns["CampoAuxiliar3"];
                this.columnIdSucursal = this.Columns["IdSucursal"];
                this.columnIdEmpresa = this.Columns["IdEmpresa"];
            }
            
            private void InitClass() {
                this.columnIdValidacion = new DataColumn("IdValidacion", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdValidacion);
                this.columnIdProceso = new DataColumn("IdProceso", typeof(long), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdProceso);
                this.columnIdTarea = new DataColumn("IdTarea", typeof(long), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdTarea);
                this.columnFormulario = new DataColumn("Formulario", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnFormulario);
                this.columnValidacion = new DataColumn("Validacion", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnValidacion);
                this.columnTitulo = new DataColumn("Titulo", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnTitulo);
                this.columnMensaje = new DataColumn("Mensaje", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnMensaje);
                this.columnTipoMensaje = new DataColumn("TipoMensaje", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnTipoMensaje);
                this.columnPerfiles = new DataColumn("Perfiles", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnPerfiles);
                this.columnBotones = new DataColumn("Botones", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnBotones);
                this.columnFechaInicio = new DataColumn("FechaInicio", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnFechaInicio);
                this.columnFechaFin = new DataColumn("FechaFin", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnFechaFin);
                this.columnActivo = new DataColumn("Activo", typeof(bool), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnActivo);
                this.columnCampoAuxiliar1 = new DataColumn("CampoAuxiliar1", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnCampoAuxiliar1);
                this.columnCampoAuxiliar2 = new DataColumn("CampoAuxiliar2", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnCampoAuxiliar2);
                this.columnCampoAuxiliar3 = new DataColumn("CampoAuxiliar3", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnCampoAuxiliar3);
                this.columnIdSucursal = new DataColumn("IdSucursal", typeof(long), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdSucursal);
                this.columnIdEmpresa = new DataColumn("IdEmpresa", typeof(long), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdEmpresa);
                this.Constraints.Add(new UniqueConstraint("sy_ValidacionesDatasetKey1", new DataColumn[] {
                                this.columnIdValidacion}, true));
                this.columnIdValidacion.AllowDBNull = false;
                this.columnIdValidacion.Unique = true;
            }
            
            public sy_ValidacionesRow Newsy_ValidacionesRow() {
                return ((sy_ValidacionesRow)(this.NewRow()));
            }
            
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder) {
                return new sy_ValidacionesRow(builder);
            }
            
            protected override System.Type GetRowType() {
                return typeof(sy_ValidacionesRow);
            }
            
            protected override void OnRowChanged(DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.sy_ValidacionesRowChanged != null)) {
                    this.sy_ValidacionesRowChanged(this, new sy_ValidacionesRowChangeEvent(((sy_ValidacionesRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowChanging(DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.sy_ValidacionesRowChanging != null)) {
                    this.sy_ValidacionesRowChanging(this, new sy_ValidacionesRowChangeEvent(((sy_ValidacionesRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleted(DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.sy_ValidacionesRowDeleted != null)) {
                    this.sy_ValidacionesRowDeleted(this, new sy_ValidacionesRowChangeEvent(((sy_ValidacionesRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleting(DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.sy_ValidacionesRowDeleting != null)) {
                    this.sy_ValidacionesRowDeleting(this, new sy_ValidacionesRowChangeEvent(((sy_ValidacionesRow)(e.Row)), e.Action));
                }
            }
            
            public void Removesy_ValidacionesRow(sy_ValidacionesRow row) {
                this.Rows.Remove(row);
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class sy_ValidacionesRow : DataRow {
            
            private sy_ValidacionesDataTable tablesy_Validaciones;
            
            internal sy_ValidacionesRow(DataRowBuilder rb) : 
                    base(rb) {
                this.tablesy_Validaciones = ((sy_ValidacionesDataTable)(this.Table));
            }
            
            public string IdValidacion {
                get {
                    return ((string)(this[this.tablesy_Validaciones.IdValidacionColumn]));
                }
                set {
                    this[this.tablesy_Validaciones.IdValidacionColumn] = value;
                }
            }
            
            public long IdProceso {
                get {
                    try {
                        return ((long)(this[this.tablesy_Validaciones.IdProcesoColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tablesy_Validaciones.IdProcesoColumn] = value;
                }
            }
            
            public long IdTarea {
                get {
                    try {
                        return ((long)(this[this.tablesy_Validaciones.IdTareaColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tablesy_Validaciones.IdTareaColumn] = value;
                }
            }
            
            public string Formulario {
                get {
                    try {
                        return ((string)(this[this.tablesy_Validaciones.FormularioColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tablesy_Validaciones.FormularioColumn] = value;
                }
            }
            
            public string Validacion {
                get {
                    try {
                        return ((string)(this[this.tablesy_Validaciones.ValidacionColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tablesy_Validaciones.ValidacionColumn] = value;
                }
            }
            
            public string Titulo {
                get {
                    try {
                        return ((string)(this[this.tablesy_Validaciones.TituloColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tablesy_Validaciones.TituloColumn] = value;
                }
            }
            
            public string Mensaje {
                get {
                    try {
                        return ((string)(this[this.tablesy_Validaciones.MensajeColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tablesy_Validaciones.MensajeColumn] = value;
                }
            }
            
            public string TipoMensaje {
                get {
                    try {
                        return ((string)(this[this.tablesy_Validaciones.TipoMensajeColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tablesy_Validaciones.TipoMensajeColumn] = value;
                }
            }
            
            public string Perfiles {
                get {
                    try {
                        return ((string)(this[this.tablesy_Validaciones.PerfilesColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tablesy_Validaciones.PerfilesColumn] = value;
                }
            }
            
            public string Botones {
                get {
                    try {
                        return ((string)(this[this.tablesy_Validaciones.BotonesColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tablesy_Validaciones.BotonesColumn] = value;
                }
            }
            
            public System.DateTime FechaInicio {
                get {
                    try {
                        return ((System.DateTime)(this[this.tablesy_Validaciones.FechaInicioColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tablesy_Validaciones.FechaInicioColumn] = value;
                }
            }
            
            public System.DateTime FechaFin {
                get {
                    try {
                        return ((System.DateTime)(this[this.tablesy_Validaciones.FechaFinColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tablesy_Validaciones.FechaFinColumn] = value;
                }
            }
            
            public bool Activo {
                get {
                    try {
                        return ((bool)(this[this.tablesy_Validaciones.ActivoColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tablesy_Validaciones.ActivoColumn] = value;
                }
            }
            
            public string CampoAuxiliar1 {
                get {
                    try {
                        return ((string)(this[this.tablesy_Validaciones.CampoAuxiliar1Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tablesy_Validaciones.CampoAuxiliar1Column] = value;
                }
            }
            
            public string CampoAuxiliar2 {
                get {
                    try {
                        return ((string)(this[this.tablesy_Validaciones.CampoAuxiliar2Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tablesy_Validaciones.CampoAuxiliar2Column] = value;
                }
            }
            
            public string CampoAuxiliar3 {
                get {
                    try {
                        return ((string)(this[this.tablesy_Validaciones.CampoAuxiliar3Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tablesy_Validaciones.CampoAuxiliar3Column] = value;
                }
            }
            
            public long IdSucursal {
                get {
                    try {
                        return ((long)(this[this.tablesy_Validaciones.IdSucursalColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tablesy_Validaciones.IdSucursalColumn] = value;
                }
            }
            
            public long IdEmpresa {
                get {
                    try {
                        return ((long)(this[this.tablesy_Validaciones.IdEmpresaColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tablesy_Validaciones.IdEmpresaColumn] = value;
                }
            }
            
            public bool IsIdProcesoNull() {
                return this.IsNull(this.tablesy_Validaciones.IdProcesoColumn);
            }
            
            public void SetIdProcesoNull() {
                this[this.tablesy_Validaciones.IdProcesoColumn] = System.Convert.DBNull;
            }
            
            public bool IsIdTareaNull() {
                return this.IsNull(this.tablesy_Validaciones.IdTareaColumn);
            }
            
            public void SetIdTareaNull() {
                this[this.tablesy_Validaciones.IdTareaColumn] = System.Convert.DBNull;
            }
            
            public bool IsFormularioNull() {
                return this.IsNull(this.tablesy_Validaciones.FormularioColumn);
            }
            
            public void SetFormularioNull() {
                this[this.tablesy_Validaciones.FormularioColumn] = System.Convert.DBNull;
            }
            
            public bool IsValidacionNull() {
                return this.IsNull(this.tablesy_Validaciones.ValidacionColumn);
            }
            
            public void SetValidacionNull() {
                this[this.tablesy_Validaciones.ValidacionColumn] = System.Convert.DBNull;
            }
            
            public bool IsTituloNull() {
                return this.IsNull(this.tablesy_Validaciones.TituloColumn);
            }
            
            public void SetTituloNull() {
                this[this.tablesy_Validaciones.TituloColumn] = System.Convert.DBNull;
            }
            
            public bool IsMensajeNull() {
                return this.IsNull(this.tablesy_Validaciones.MensajeColumn);
            }
            
            public void SetMensajeNull() {
                this[this.tablesy_Validaciones.MensajeColumn] = System.Convert.DBNull;
            }
            
            public bool IsTipoMensajeNull() {
                return this.IsNull(this.tablesy_Validaciones.TipoMensajeColumn);
            }
            
            public void SetTipoMensajeNull() {
                this[this.tablesy_Validaciones.TipoMensajeColumn] = System.Convert.DBNull;
            }
            
            public bool IsPerfilesNull() {
                return this.IsNull(this.tablesy_Validaciones.PerfilesColumn);
            }
            
            public void SetPerfilesNull() {
                this[this.tablesy_Validaciones.PerfilesColumn] = System.Convert.DBNull;
            }
            
            public bool IsBotonesNull() {
                return this.IsNull(this.tablesy_Validaciones.BotonesColumn);
            }
            
            public void SetBotonesNull() {
                this[this.tablesy_Validaciones.BotonesColumn] = System.Convert.DBNull;
            }
            
            public bool IsFechaInicioNull() {
                return this.IsNull(this.tablesy_Validaciones.FechaInicioColumn);
            }
            
            public void SetFechaInicioNull() {
                this[this.tablesy_Validaciones.FechaInicioColumn] = System.Convert.DBNull;
            }
            
            public bool IsFechaFinNull() {
                return this.IsNull(this.tablesy_Validaciones.FechaFinColumn);
            }
            
            public void SetFechaFinNull() {
                this[this.tablesy_Validaciones.FechaFinColumn] = System.Convert.DBNull;
            }
            
            public bool IsActivoNull() {
                return this.IsNull(this.tablesy_Validaciones.ActivoColumn);
            }
            
            public void SetActivoNull() {
                this[this.tablesy_Validaciones.ActivoColumn] = System.Convert.DBNull;
            }
            
            public bool IsCampoAuxiliar1Null() {
                return this.IsNull(this.tablesy_Validaciones.CampoAuxiliar1Column);
            }
            
            public void SetCampoAuxiliar1Null() {
                this[this.tablesy_Validaciones.CampoAuxiliar1Column] = System.Convert.DBNull;
            }
            
            public bool IsCampoAuxiliar2Null() {
                return this.IsNull(this.tablesy_Validaciones.CampoAuxiliar2Column);
            }
            
            public void SetCampoAuxiliar2Null() {
                this[this.tablesy_Validaciones.CampoAuxiliar2Column] = System.Convert.DBNull;
            }
            
            public bool IsCampoAuxiliar3Null() {
                return this.IsNull(this.tablesy_Validaciones.CampoAuxiliar3Column);
            }
            
            public void SetCampoAuxiliar3Null() {
                this[this.tablesy_Validaciones.CampoAuxiliar3Column] = System.Convert.DBNull;
            }
            
            public bool IsIdSucursalNull() {
                return this.IsNull(this.tablesy_Validaciones.IdSucursalColumn);
            }
            
            public void SetIdSucursalNull() {
                this[this.tablesy_Validaciones.IdSucursalColumn] = System.Convert.DBNull;
            }
            
            public bool IsIdEmpresaNull() {
                return this.IsNull(this.tablesy_Validaciones.IdEmpresaColumn);
            }
            
            public void SetIdEmpresaNull() {
                this[this.tablesy_Validaciones.IdEmpresaColumn] = System.Convert.DBNull;
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class sy_ValidacionesRowChangeEvent : EventArgs {
            
            private sy_ValidacionesRow eventRow;
            
            private DataRowAction eventAction;
            
            public sy_ValidacionesRowChangeEvent(sy_ValidacionesRow row, DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            public sy_ValidacionesRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            public DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
