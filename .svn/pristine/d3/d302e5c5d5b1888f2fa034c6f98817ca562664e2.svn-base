//------------------------------------------------------------------------------
// <autogenerated>
//     This code was generated by a tool.
//     Runtime Version: 1.1.4322.2032
//
//     Changes to this file may cause incorrect behavior and will be lost if 
//     the code is regenerated.
// </autogenerated>
//------------------------------------------------------------------------------

namespace mz.erp.commontypes.data {
    using System;
    using System.Data;
    using System.Xml;
    using System.Runtime.Serialization;
    
    
    [Serializable()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Diagnostics.DebuggerStepThrough()]
    [System.ComponentModel.ToolboxItem(true)]
    public class tpu_ComprobantesCompraDataset : DataSet {
        
        private tpu_ComprobantesCompraDataTable tabletpu_ComprobantesCompra;
        
        public tpu_ComprobantesCompraDataset() {
            this.InitClass();
            System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            this.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        protected tpu_ComprobantesCompraDataset(SerializationInfo info, StreamingContext context) {
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((strSchema != null)) {
                DataSet ds = new DataSet();
                ds.ReadXmlSchema(new XmlTextReader(new System.IO.StringReader(strSchema)));
                if ((ds.Tables["tpu_ComprobantesCompra"] != null)) {
                    this.Tables.Add(new tpu_ComprobantesCompraDataTable(ds.Tables["tpu_ComprobantesCompra"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.InitClass();
            }
            this.GetSerializationData(info, context);
            System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            this.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public tpu_ComprobantesCompraDataTable tpu_ComprobantesCompra {
            get {
                return this.tabletpu_ComprobantesCompra;
            }
        }
        
        public override DataSet Clone() {
            tpu_ComprobantesCompraDataset cln = ((tpu_ComprobantesCompraDataset)(base.Clone()));
            cln.InitVars();
            return cln;
        }
        
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        protected override void ReadXmlSerializable(XmlReader reader) {
            this.Reset();
            DataSet ds = new DataSet();
            ds.ReadXml(reader);
            if ((ds.Tables["tpu_ComprobantesCompra"] != null)) {
                this.Tables.Add(new tpu_ComprobantesCompraDataTable(ds.Tables["tpu_ComprobantesCompra"]));
            }
            this.DataSetName = ds.DataSetName;
            this.Prefix = ds.Prefix;
            this.Namespace = ds.Namespace;
            this.Locale = ds.Locale;
            this.CaseSensitive = ds.CaseSensitive;
            this.EnforceConstraints = ds.EnforceConstraints;
            this.Merge(ds, false, System.Data.MissingSchemaAction.Add);
            this.InitVars();
        }
        
        protected override System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            System.IO.MemoryStream stream = new System.IO.MemoryStream();
            this.WriteXmlSchema(new XmlTextWriter(stream, null));
            stream.Position = 0;
            return System.Xml.Schema.XmlSchema.Read(new XmlTextReader(stream), null);
        }
        
        internal void InitVars() {
            this.tabletpu_ComprobantesCompra = ((tpu_ComprobantesCompraDataTable)(this.Tables["tpu_ComprobantesCompra"]));
            if ((this.tabletpu_ComprobantesCompra != null)) {
                this.tabletpu_ComprobantesCompra.InitVars();
            }
        }
        
        private void InitClass() {
            this.DataSetName = "tpu_ComprobantesCompraDataset";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/tpu_ComprobantesCompra.xsd";
            this.Locale = new System.Globalization.CultureInfo("en-US");
            this.CaseSensitive = false;
            this.EnforceConstraints = true;
            this.tabletpu_ComprobantesCompra = new tpu_ComprobantesCompraDataTable();
            this.Tables.Add(this.tabletpu_ComprobantesCompra);
        }
        
        private bool ShouldSerializetpu_ComprobantesCompra() {
            return false;
        }
        
        private void SchemaChanged(object sender, System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        public delegate void tpu_ComprobantesCompraRowChangeEventHandler(object sender, tpu_ComprobantesCompraRowChangeEvent e);
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class tpu_ComprobantesCompraDataTable : DataTable, System.Collections.IEnumerable {
            
            private DataColumn columnIdComprobanteCompra;
            
            private DataColumn columnIdProveedor;
            
            private DataColumn columnFecha;
            
            private DataColumn columnTipo;
            
            private DataColumn columnNumero;
            
            private DataColumn columnComentario;
            
            private DataColumn columnFechaIngreso;
            
            private DataColumn columnPeriodoFiscal;
            
            private DataColumn columnNetoBruto;
            
            private DataColumn columnDescuento;
            
            private DataColumn columnSubtotalNeto;
            
            private DataColumn columnIvaInscripto;
            
            private DataColumn columnMontosNoGravados;
            
            private DataColumn columnPrecepcionIB;
            
            private DataColumn columnPrecepcionGanancias;
            
            private DataColumn columnPercepcionIva;
            
            private DataColumn columnImpuestosInternos;
            
            private DataColumn columnTotalGeneral;
            
            private DataColumn columnDescuentoGlobal;
            
            private DataColumn columnTotal;
            
            private DataColumn columnFechaVencimiento;
            
            private DataColumn columnFechaCreacion;
            
            private DataColumn columnIdConexionCreacion;
            
            private DataColumn columnUltimaModificacion;
            
            private DataColumn columnIdConexionUltimaModificacion;
            
            private DataColumn columnIdReservado;
            
            private DataColumn columnRowId;
            
            private DataColumn columnIdSucursal;
            
            private DataColumn columnIdEmpresa;
            
            internal tpu_ComprobantesCompraDataTable() : 
                    base("tpu_ComprobantesCompra") {
                this.InitClass();
            }
            
            internal tpu_ComprobantesCompraDataTable(DataTable table) : 
                    base(table.TableName) {
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
                this.DisplayExpression = table.DisplayExpression;
            }
            
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            internal DataColumn IdComprobanteCompraColumn {
                get {
                    return this.columnIdComprobanteCompra;
                }
            }
            
            internal DataColumn IdProveedorColumn {
                get {
                    return this.columnIdProveedor;
                }
            }
            
            internal DataColumn FechaColumn {
                get {
                    return this.columnFecha;
                }
            }
            
            internal DataColumn TipoColumn {
                get {
                    return this.columnTipo;
                }
            }
            
            internal DataColumn NumeroColumn {
                get {
                    return this.columnNumero;
                }
            }
            
            internal DataColumn ComentarioColumn {
                get {
                    return this.columnComentario;
                }
            }
            
            internal DataColumn FechaIngresoColumn {
                get {
                    return this.columnFechaIngreso;
                }
            }
            
            internal DataColumn PeriodoFiscalColumn {
                get {
                    return this.columnPeriodoFiscal;
                }
            }
            
            internal DataColumn NetoBrutoColumn {
                get {
                    return this.columnNetoBruto;
                }
            }
            
            internal DataColumn DescuentoColumn {
                get {
                    return this.columnDescuento;
                }
            }
            
            internal DataColumn SubtotalNetoColumn {
                get {
                    return this.columnSubtotalNeto;
                }
            }
            
            internal DataColumn IvaInscriptoColumn {
                get {
                    return this.columnIvaInscripto;
                }
            }
            
            internal DataColumn MontosNoGravadosColumn {
                get {
                    return this.columnMontosNoGravados;
                }
            }
            
            internal DataColumn PrecepcionIBColumn {
                get {
                    return this.columnPrecepcionIB;
                }
            }
            
            internal DataColumn PrecepcionGananciasColumn {
                get {
                    return this.columnPrecepcionGanancias;
                }
            }
            
            internal DataColumn PercepcionIvaColumn {
                get {
                    return this.columnPercepcionIva;
                }
            }
            
            internal DataColumn ImpuestosInternosColumn {
                get {
                    return this.columnImpuestosInternos;
                }
            }
            
            internal DataColumn TotalGeneralColumn {
                get {
                    return this.columnTotalGeneral;
                }
            }
            
            internal DataColumn DescuentoGlobalColumn {
                get {
                    return this.columnDescuentoGlobal;
                }
            }
            
            internal DataColumn TotalColumn {
                get {
                    return this.columnTotal;
                }
            }
            
            internal DataColumn FechaVencimientoColumn {
                get {
                    return this.columnFechaVencimiento;
                }
            }
            
            internal DataColumn FechaCreacionColumn {
                get {
                    return this.columnFechaCreacion;
                }
            }
            
            internal DataColumn IdConexionCreacionColumn {
                get {
                    return this.columnIdConexionCreacion;
                }
            }
            
            internal DataColumn UltimaModificacionColumn {
                get {
                    return this.columnUltimaModificacion;
                }
            }
            
            internal DataColumn IdConexionUltimaModificacionColumn {
                get {
                    return this.columnIdConexionUltimaModificacion;
                }
            }
            
            internal DataColumn IdReservadoColumn {
                get {
                    return this.columnIdReservado;
                }
            }
            
            internal DataColumn RowIdColumn {
                get {
                    return this.columnRowId;
                }
            }
            
            internal DataColumn IdSucursalColumn {
                get {
                    return this.columnIdSucursal;
                }
            }
            
            internal DataColumn IdEmpresaColumn {
                get {
                    return this.columnIdEmpresa;
                }
            }
            
            public tpu_ComprobantesCompraRow this[int index] {
                get {
                    return ((tpu_ComprobantesCompraRow)(this.Rows[index]));
                }
            }
            
            public event tpu_ComprobantesCompraRowChangeEventHandler tpu_ComprobantesCompraRowChanged;
            
            public event tpu_ComprobantesCompraRowChangeEventHandler tpu_ComprobantesCompraRowChanging;
            
            public event tpu_ComprobantesCompraRowChangeEventHandler tpu_ComprobantesCompraRowDeleted;
            
            public event tpu_ComprobantesCompraRowChangeEventHandler tpu_ComprobantesCompraRowDeleting;
            
            public void Addtpu_ComprobantesCompraRow(tpu_ComprobantesCompraRow row) {
                this.Rows.Add(row);
            }
            
            public tpu_ComprobantesCompraRow Addtpu_ComprobantesCompraRow(
                        long IdComprobanteCompra, 
                        long IdProveedor, 
                        System.DateTime Fecha, 
                        string Tipo, 
                        string Numero, 
                        string Comentario, 
                        System.DateTime FechaIngreso, 
                        string PeriodoFiscal, 
                        System.Decimal NetoBruto, 
                        System.Decimal Descuento, 
                        System.Decimal SubtotalNeto, 
                        System.Decimal IvaInscripto, 
                        System.Decimal MontosNoGravados, 
                        System.Decimal PrecepcionIB, 
                        System.Decimal PrecepcionGanancias, 
                        System.Decimal PercepcionIva, 
                        System.Decimal ImpuestosInternos, 
                        System.Decimal TotalGeneral, 
                        System.Decimal DescuentoGlobal, 
                        System.Decimal Total, 
                        System.DateTime FechaVencimiento, 
                        System.DateTime FechaCreacion, 
                        long IdConexionCreacion, 
                        System.Byte[] UltimaModificacion, 
                        long IdConexionUltimaModificacion, 
                        long IdReservado, 
                        System.Guid RowId, 
                        long IdSucursal, 
                        long IdEmpresa) {
                tpu_ComprobantesCompraRow rowtpu_ComprobantesCompraRow = ((tpu_ComprobantesCompraRow)(this.NewRow()));
                rowtpu_ComprobantesCompraRow.ItemArray = new object[] {
                        IdComprobanteCompra,
                        IdProveedor,
                        Fecha,
                        Tipo,
                        Numero,
                        Comentario,
                        FechaIngreso,
                        PeriodoFiscal,
                        NetoBruto,
                        Descuento,
                        SubtotalNeto,
                        IvaInscripto,
                        MontosNoGravados,
                        PrecepcionIB,
                        PrecepcionGanancias,
                        PercepcionIva,
                        ImpuestosInternos,
                        TotalGeneral,
                        DescuentoGlobal,
                        Total,
                        FechaVencimiento,
                        FechaCreacion,
                        IdConexionCreacion,
                        UltimaModificacion,
                        IdConexionUltimaModificacion,
                        IdReservado,
                        RowId,
                        IdSucursal,
                        IdEmpresa};
                this.Rows.Add(rowtpu_ComprobantesCompraRow);
                return rowtpu_ComprobantesCompraRow;
            }
            
            public tpu_ComprobantesCompraRow FindByIdComprobanteCompra(long IdComprobanteCompra) {
                return ((tpu_ComprobantesCompraRow)(this.Rows.Find(new object[] {
                            IdComprobanteCompra})));
            }
            
            public System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            public override DataTable Clone() {
                tpu_ComprobantesCompraDataTable cln = ((tpu_ComprobantesCompraDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            protected override DataTable CreateInstance() {
                return new tpu_ComprobantesCompraDataTable();
            }
            
            internal void InitVars() {
                this.columnIdComprobanteCompra = this.Columns["IdComprobanteCompra"];
                this.columnIdProveedor = this.Columns["IdProveedor"];
                this.columnFecha = this.Columns["Fecha"];
                this.columnTipo = this.Columns["Tipo"];
                this.columnNumero = this.Columns["Numero"];
                this.columnComentario = this.Columns["Comentario"];
                this.columnFechaIngreso = this.Columns["FechaIngreso"];
                this.columnPeriodoFiscal = this.Columns["PeriodoFiscal"];
                this.columnNetoBruto = this.Columns["NetoBruto"];
                this.columnDescuento = this.Columns["Descuento"];
                this.columnSubtotalNeto = this.Columns["SubtotalNeto"];
                this.columnIvaInscripto = this.Columns["IvaInscripto"];
                this.columnMontosNoGravados = this.Columns["MontosNoGravados"];
                this.columnPrecepcionIB = this.Columns["PrecepcionIB"];
                this.columnPrecepcionGanancias = this.Columns["PrecepcionGanancias"];
                this.columnPercepcionIva = this.Columns["PercepcionIva"];
                this.columnImpuestosInternos = this.Columns["ImpuestosInternos"];
                this.columnTotalGeneral = this.Columns["TotalGeneral"];
                this.columnDescuentoGlobal = this.Columns["DescuentoGlobal"];
                this.columnTotal = this.Columns["Total"];
                this.columnFechaVencimiento = this.Columns["FechaVencimiento"];
                this.columnFechaCreacion = this.Columns["FechaCreacion"];
                this.columnIdConexionCreacion = this.Columns["IdConexionCreacion"];
                this.columnUltimaModificacion = this.Columns["UltimaModificacion"];
                this.columnIdConexionUltimaModificacion = this.Columns["IdConexionUltimaModificacion"];
                this.columnIdReservado = this.Columns["IdReservado"];
                this.columnRowId = this.Columns["RowId"];
                this.columnIdSucursal = this.Columns["IdSucursal"];
                this.columnIdEmpresa = this.Columns["IdEmpresa"];
            }
            
            private void InitClass() {
                this.columnIdComprobanteCompra = new DataColumn("IdComprobanteCompra", typeof(long), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdComprobanteCompra);
                this.columnIdProveedor = new DataColumn("IdProveedor", typeof(long), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdProveedor);
                this.columnFecha = new DataColumn("Fecha", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnFecha);
                this.columnTipo = new DataColumn("Tipo", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnTipo);
                this.columnNumero = new DataColumn("Numero", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnNumero);
                this.columnComentario = new DataColumn("Comentario", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnComentario);
                this.columnFechaIngreso = new DataColumn("FechaIngreso", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnFechaIngreso);
                this.columnPeriodoFiscal = new DataColumn("PeriodoFiscal", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnPeriodoFiscal);
                this.columnNetoBruto = new DataColumn("NetoBruto", typeof(System.Decimal), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnNetoBruto);
                this.columnDescuento = new DataColumn("Descuento", typeof(System.Decimal), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnDescuento);
                this.columnSubtotalNeto = new DataColumn("SubtotalNeto", typeof(System.Decimal), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnSubtotalNeto);
                this.columnIvaInscripto = new DataColumn("IvaInscripto", typeof(System.Decimal), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIvaInscripto);
                this.columnMontosNoGravados = new DataColumn("MontosNoGravados", typeof(System.Decimal), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnMontosNoGravados);
                this.columnPrecepcionIB = new DataColumn("PrecepcionIB", typeof(System.Decimal), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnPrecepcionIB);
                this.columnPrecepcionGanancias = new DataColumn("PrecepcionGanancias", typeof(System.Decimal), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnPrecepcionGanancias);
                this.columnPercepcionIva = new DataColumn("PercepcionIva", typeof(System.Decimal), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnPercepcionIva);
                this.columnImpuestosInternos = new DataColumn("ImpuestosInternos", typeof(System.Decimal), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnImpuestosInternos);
                this.columnTotalGeneral = new DataColumn("TotalGeneral", typeof(System.Decimal), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnTotalGeneral);
                this.columnDescuentoGlobal = new DataColumn("DescuentoGlobal", typeof(System.Decimal), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnDescuentoGlobal);
                this.columnTotal = new DataColumn("Total", typeof(System.Decimal), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnTotal);
                this.columnFechaVencimiento = new DataColumn("FechaVencimiento", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnFechaVencimiento);
                this.columnFechaCreacion = new DataColumn("FechaCreacion", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnFechaCreacion);
                this.columnIdConexionCreacion = new DataColumn("IdConexionCreacion", typeof(long), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdConexionCreacion);
                this.columnUltimaModificacion = new DataColumn("UltimaModificacion", typeof(System.Byte[]), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnUltimaModificacion);
                this.columnIdConexionUltimaModificacion = new DataColumn("IdConexionUltimaModificacion", typeof(long), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdConexionUltimaModificacion);
                this.columnIdReservado = new DataColumn("IdReservado", typeof(long), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdReservado);
                this.columnRowId = new DataColumn("RowId", typeof(System.Guid), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnRowId);
                this.columnIdSucursal = new DataColumn("IdSucursal", typeof(long), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdSucursal);
                this.columnIdEmpresa = new DataColumn("IdEmpresa", typeof(long), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdEmpresa);
                this.Constraints.Add(new UniqueConstraint("tpu_ComprobantesCompraKey1", new DataColumn[] {
                                this.columnIdComprobanteCompra}, true));
                this.columnIdComprobanteCompra.AllowDBNull = false;
                this.columnIdComprobanteCompra.Unique = true;
                this.columnIdProveedor.AllowDBNull = false;
                this.columnFecha.AllowDBNull = false;
                this.columnTipo.AllowDBNull = false;
                this.columnNumero.AllowDBNull = false;
                this.columnUltimaModificacion.ReadOnly = true;
            }
            
            public tpu_ComprobantesCompraRow Newtpu_ComprobantesCompraRow() {
                return ((tpu_ComprobantesCompraRow)(this.NewRow()));
            }
            
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder) {
                return new tpu_ComprobantesCompraRow(builder);
            }
            
            protected override System.Type GetRowType() {
                return typeof(tpu_ComprobantesCompraRow);
            }
            
            protected override void OnRowChanged(DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.tpu_ComprobantesCompraRowChanged != null)) {
                    this.tpu_ComprobantesCompraRowChanged(this, new tpu_ComprobantesCompraRowChangeEvent(((tpu_ComprobantesCompraRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowChanging(DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.tpu_ComprobantesCompraRowChanging != null)) {
                    this.tpu_ComprobantesCompraRowChanging(this, new tpu_ComprobantesCompraRowChangeEvent(((tpu_ComprobantesCompraRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleted(DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.tpu_ComprobantesCompraRowDeleted != null)) {
                    this.tpu_ComprobantesCompraRowDeleted(this, new tpu_ComprobantesCompraRowChangeEvent(((tpu_ComprobantesCompraRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleting(DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.tpu_ComprobantesCompraRowDeleting != null)) {
                    this.tpu_ComprobantesCompraRowDeleting(this, new tpu_ComprobantesCompraRowChangeEvent(((tpu_ComprobantesCompraRow)(e.Row)), e.Action));
                }
            }
            
            public void Removetpu_ComprobantesCompraRow(tpu_ComprobantesCompraRow row) {
                this.Rows.Remove(row);
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class tpu_ComprobantesCompraRow : DataRow {
            
            private tpu_ComprobantesCompraDataTable tabletpu_ComprobantesCompra;
            
            internal tpu_ComprobantesCompraRow(DataRowBuilder rb) : 
                    base(rb) {
                this.tabletpu_ComprobantesCompra = ((tpu_ComprobantesCompraDataTable)(this.Table));
            }
            
            public long IdComprobanteCompra {
                get {
                    return ((long)(this[this.tabletpu_ComprobantesCompra.IdComprobanteCompraColumn]));
                }
                set {
                    this[this.tabletpu_ComprobantesCompra.IdComprobanteCompraColumn] = value;
                }
            }
            
            public long IdProveedor {
                get {
                    return ((long)(this[this.tabletpu_ComprobantesCompra.IdProveedorColumn]));
                }
                set {
                    this[this.tabletpu_ComprobantesCompra.IdProveedorColumn] = value;
                }
            }
            
            public System.DateTime Fecha {
                get {
                    return ((System.DateTime)(this[this.tabletpu_ComprobantesCompra.FechaColumn]));
                }
                set {
                    this[this.tabletpu_ComprobantesCompra.FechaColumn] = value;
                }
            }
            
            public string Tipo {
                get {
                    return ((string)(this[this.tabletpu_ComprobantesCompra.TipoColumn]));
                }
                set {
                    this[this.tabletpu_ComprobantesCompra.TipoColumn] = value;
                }
            }
            
            public string Numero {
                get {
                    return ((string)(this[this.tabletpu_ComprobantesCompra.NumeroColumn]));
                }
                set {
                    this[this.tabletpu_ComprobantesCompra.NumeroColumn] = value;
                }
            }
            
            public string Comentario {
                get {
                    try {
                        return ((string)(this[this.tabletpu_ComprobantesCompra.ComentarioColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletpu_ComprobantesCompra.ComentarioColumn] = value;
                }
            }
            
            public System.DateTime FechaIngreso {
                get {
                    try {
                        return ((System.DateTime)(this[this.tabletpu_ComprobantesCompra.FechaIngresoColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletpu_ComprobantesCompra.FechaIngresoColumn] = value;
                }
            }
            
            public string PeriodoFiscal {
                get {
                    try {
                        return ((string)(this[this.tabletpu_ComprobantesCompra.PeriodoFiscalColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletpu_ComprobantesCompra.PeriodoFiscalColumn] = value;
                }
            }
            
            public System.Decimal NetoBruto {
                get {
                    try {
                        return ((System.Decimal)(this[this.tabletpu_ComprobantesCompra.NetoBrutoColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletpu_ComprobantesCompra.NetoBrutoColumn] = value;
                }
            }
            
            public System.Decimal Descuento {
                get {
                    try {
                        return ((System.Decimal)(this[this.tabletpu_ComprobantesCompra.DescuentoColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletpu_ComprobantesCompra.DescuentoColumn] = value;
                }
            }
            
            public System.Decimal SubtotalNeto {
                get {
                    try {
                        return ((System.Decimal)(this[this.tabletpu_ComprobantesCompra.SubtotalNetoColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletpu_ComprobantesCompra.SubtotalNetoColumn] = value;
                }
            }
            
            public System.Decimal IvaInscripto {
                get {
                    try {
                        return ((System.Decimal)(this[this.tabletpu_ComprobantesCompra.IvaInscriptoColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletpu_ComprobantesCompra.IvaInscriptoColumn] = value;
                }
            }
            
            public System.Decimal MontosNoGravados {
                get {
                    try {
                        return ((System.Decimal)(this[this.tabletpu_ComprobantesCompra.MontosNoGravadosColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletpu_ComprobantesCompra.MontosNoGravadosColumn] = value;
                }
            }
            
            public System.Decimal PrecepcionIB {
                get {
                    try {
                        return ((System.Decimal)(this[this.tabletpu_ComprobantesCompra.PrecepcionIBColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletpu_ComprobantesCompra.PrecepcionIBColumn] = value;
                }
            }
            
            public System.Decimal PrecepcionGanancias {
                get {
                    try {
                        return ((System.Decimal)(this[this.tabletpu_ComprobantesCompra.PrecepcionGananciasColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletpu_ComprobantesCompra.PrecepcionGananciasColumn] = value;
                }
            }
            
            public System.Decimal PercepcionIva {
                get {
                    try {
                        return ((System.Decimal)(this[this.tabletpu_ComprobantesCompra.PercepcionIvaColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletpu_ComprobantesCompra.PercepcionIvaColumn] = value;
                }
            }
            
            public System.Decimal ImpuestosInternos {
                get {
                    try {
                        return ((System.Decimal)(this[this.tabletpu_ComprobantesCompra.ImpuestosInternosColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletpu_ComprobantesCompra.ImpuestosInternosColumn] = value;
                }
            }
            
            public System.Decimal TotalGeneral {
                get {
                    try {
                        return ((System.Decimal)(this[this.tabletpu_ComprobantesCompra.TotalGeneralColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletpu_ComprobantesCompra.TotalGeneralColumn] = value;
                }
            }
            
            public System.Decimal DescuentoGlobal {
                get {
                    try {
                        return ((System.Decimal)(this[this.tabletpu_ComprobantesCompra.DescuentoGlobalColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletpu_ComprobantesCompra.DescuentoGlobalColumn] = value;
                }
            }
            
            public System.Decimal Total {
                get {
                    try {
                        return ((System.Decimal)(this[this.tabletpu_ComprobantesCompra.TotalColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletpu_ComprobantesCompra.TotalColumn] = value;
                }
            }
            
            public System.DateTime FechaVencimiento {
                get {
                    try {
                        return ((System.DateTime)(this[this.tabletpu_ComprobantesCompra.FechaVencimientoColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletpu_ComprobantesCompra.FechaVencimientoColumn] = value;
                }
            }
            
            public System.DateTime FechaCreacion {
                get {
                    try {
                        return ((System.DateTime)(this[this.tabletpu_ComprobantesCompra.FechaCreacionColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletpu_ComprobantesCompra.FechaCreacionColumn] = value;
                }
            }
            
            public long IdConexionCreacion {
                get {
                    try {
                        return ((long)(this[this.tabletpu_ComprobantesCompra.IdConexionCreacionColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletpu_ComprobantesCompra.IdConexionCreacionColumn] = value;
                }
            }
            
            public System.Byte[] UltimaModificacion {
                get {
                    try {
                        return ((System.Byte[])(this[this.tabletpu_ComprobantesCompra.UltimaModificacionColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletpu_ComprobantesCompra.UltimaModificacionColumn] = value;
                }
            }
            
            public long IdConexionUltimaModificacion {
                get {
                    try {
                        return ((long)(this[this.tabletpu_ComprobantesCompra.IdConexionUltimaModificacionColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletpu_ComprobantesCompra.IdConexionUltimaModificacionColumn] = value;
                }
            }
            
            public long IdReservado {
                get {
                    try {
                        return ((long)(this[this.tabletpu_ComprobantesCompra.IdReservadoColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletpu_ComprobantesCompra.IdReservadoColumn] = value;
                }
            }
            
            public System.Guid RowId {
                get {
                    try {
                        return ((System.Guid)(this[this.tabletpu_ComprobantesCompra.RowIdColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletpu_ComprobantesCompra.RowIdColumn] = value;
                }
            }
            
            public long IdSucursal {
                get {
                    try {
                        return ((long)(this[this.tabletpu_ComprobantesCompra.IdSucursalColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletpu_ComprobantesCompra.IdSucursalColumn] = value;
                }
            }
            
            public long IdEmpresa {
                get {
                    try {
                        return ((long)(this[this.tabletpu_ComprobantesCompra.IdEmpresaColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletpu_ComprobantesCompra.IdEmpresaColumn] = value;
                }
            }
            
            public bool IsComentarioNull() {
                return this.IsNull(this.tabletpu_ComprobantesCompra.ComentarioColumn);
            }
            
            public void SetComentarioNull() {
                this[this.tabletpu_ComprobantesCompra.ComentarioColumn] = System.Convert.DBNull;
            }
            
            public bool IsFechaIngresoNull() {
                return this.IsNull(this.tabletpu_ComprobantesCompra.FechaIngresoColumn);
            }
            
            public void SetFechaIngresoNull() {
                this[this.tabletpu_ComprobantesCompra.FechaIngresoColumn] = System.Convert.DBNull;
            }
            
            public bool IsPeriodoFiscalNull() {
                return this.IsNull(this.tabletpu_ComprobantesCompra.PeriodoFiscalColumn);
            }
            
            public void SetPeriodoFiscalNull() {
                this[this.tabletpu_ComprobantesCompra.PeriodoFiscalColumn] = System.Convert.DBNull;
            }
            
            public bool IsNetoBrutoNull() {
                return this.IsNull(this.tabletpu_ComprobantesCompra.NetoBrutoColumn);
            }
            
            public void SetNetoBrutoNull() {
                this[this.tabletpu_ComprobantesCompra.NetoBrutoColumn] = System.Convert.DBNull;
            }
            
            public bool IsDescuentoNull() {
                return this.IsNull(this.tabletpu_ComprobantesCompra.DescuentoColumn);
            }
            
            public void SetDescuentoNull() {
                this[this.tabletpu_ComprobantesCompra.DescuentoColumn] = System.Convert.DBNull;
            }
            
            public bool IsSubtotalNetoNull() {
                return this.IsNull(this.tabletpu_ComprobantesCompra.SubtotalNetoColumn);
            }
            
            public void SetSubtotalNetoNull() {
                this[this.tabletpu_ComprobantesCompra.SubtotalNetoColumn] = System.Convert.DBNull;
            }
            
            public bool IsIvaInscriptoNull() {
                return this.IsNull(this.tabletpu_ComprobantesCompra.IvaInscriptoColumn);
            }
            
            public void SetIvaInscriptoNull() {
                this[this.tabletpu_ComprobantesCompra.IvaInscriptoColumn] = System.Convert.DBNull;
            }
            
            public bool IsMontosNoGravadosNull() {
                return this.IsNull(this.tabletpu_ComprobantesCompra.MontosNoGravadosColumn);
            }
            
            public void SetMontosNoGravadosNull() {
                this[this.tabletpu_ComprobantesCompra.MontosNoGravadosColumn] = System.Convert.DBNull;
            }
            
            public bool IsPrecepcionIBNull() {
                return this.IsNull(this.tabletpu_ComprobantesCompra.PrecepcionIBColumn);
            }
            
            public void SetPrecepcionIBNull() {
                this[this.tabletpu_ComprobantesCompra.PrecepcionIBColumn] = System.Convert.DBNull;
            }
            
            public bool IsPrecepcionGananciasNull() {
                return this.IsNull(this.tabletpu_ComprobantesCompra.PrecepcionGananciasColumn);
            }
            
            public void SetPrecepcionGananciasNull() {
                this[this.tabletpu_ComprobantesCompra.PrecepcionGananciasColumn] = System.Convert.DBNull;
            }
            
            public bool IsPercepcionIvaNull() {
                return this.IsNull(this.tabletpu_ComprobantesCompra.PercepcionIvaColumn);
            }
            
            public void SetPercepcionIvaNull() {
                this[this.tabletpu_ComprobantesCompra.PercepcionIvaColumn] = System.Convert.DBNull;
            }
            
            public bool IsImpuestosInternosNull() {
                return this.IsNull(this.tabletpu_ComprobantesCompra.ImpuestosInternosColumn);
            }
            
            public void SetImpuestosInternosNull() {
                this[this.tabletpu_ComprobantesCompra.ImpuestosInternosColumn] = System.Convert.DBNull;
            }
            
            public bool IsTotalGeneralNull() {
                return this.IsNull(this.tabletpu_ComprobantesCompra.TotalGeneralColumn);
            }
            
            public void SetTotalGeneralNull() {
                this[this.tabletpu_ComprobantesCompra.TotalGeneralColumn] = System.Convert.DBNull;
            }
            
            public bool IsDescuentoGlobalNull() {
                return this.IsNull(this.tabletpu_ComprobantesCompra.DescuentoGlobalColumn);
            }
            
            public void SetDescuentoGlobalNull() {
                this[this.tabletpu_ComprobantesCompra.DescuentoGlobalColumn] = System.Convert.DBNull;
            }
            
            public bool IsTotalNull() {
                return this.IsNull(this.tabletpu_ComprobantesCompra.TotalColumn);
            }
            
            public void SetTotalNull() {
                this[this.tabletpu_ComprobantesCompra.TotalColumn] = System.Convert.DBNull;
            }
            
            public bool IsFechaVencimientoNull() {
                return this.IsNull(this.tabletpu_ComprobantesCompra.FechaVencimientoColumn);
            }
            
            public void SetFechaVencimientoNull() {
                this[this.tabletpu_ComprobantesCompra.FechaVencimientoColumn] = System.Convert.DBNull;
            }
            
            public bool IsFechaCreacionNull() {
                return this.IsNull(this.tabletpu_ComprobantesCompra.FechaCreacionColumn);
            }
            
            public void SetFechaCreacionNull() {
                this[this.tabletpu_ComprobantesCompra.FechaCreacionColumn] = System.Convert.DBNull;
            }
            
            public bool IsIdConexionCreacionNull() {
                return this.IsNull(this.tabletpu_ComprobantesCompra.IdConexionCreacionColumn);
            }
            
            public void SetIdConexionCreacionNull() {
                this[this.tabletpu_ComprobantesCompra.IdConexionCreacionColumn] = System.Convert.DBNull;
            }
            
            public bool IsUltimaModificacionNull() {
                return this.IsNull(this.tabletpu_ComprobantesCompra.UltimaModificacionColumn);
            }
            
            public void SetUltimaModificacionNull() {
                this[this.tabletpu_ComprobantesCompra.UltimaModificacionColumn] = System.Convert.DBNull;
            }
            
            public bool IsIdConexionUltimaModificacionNull() {
                return this.IsNull(this.tabletpu_ComprobantesCompra.IdConexionUltimaModificacionColumn);
            }
            
            public void SetIdConexionUltimaModificacionNull() {
                this[this.tabletpu_ComprobantesCompra.IdConexionUltimaModificacionColumn] = System.Convert.DBNull;
            }
            
            public bool IsIdReservadoNull() {
                return this.IsNull(this.tabletpu_ComprobantesCompra.IdReservadoColumn);
            }
            
            public void SetIdReservadoNull() {
                this[this.tabletpu_ComprobantesCompra.IdReservadoColumn] = System.Convert.DBNull;
            }
            
            public bool IsRowIdNull() {
                return this.IsNull(this.tabletpu_ComprobantesCompra.RowIdColumn);
            }
            
            public void SetRowIdNull() {
                this[this.tabletpu_ComprobantesCompra.RowIdColumn] = System.Convert.DBNull;
            }
            
            public bool IsIdSucursalNull() {
                return this.IsNull(this.tabletpu_ComprobantesCompra.IdSucursalColumn);
            }
            
            public void SetIdSucursalNull() {
                this[this.tabletpu_ComprobantesCompra.IdSucursalColumn] = System.Convert.DBNull;
            }
            
            public bool IsIdEmpresaNull() {
                return this.IsNull(this.tabletpu_ComprobantesCompra.IdEmpresaColumn);
            }
            
            public void SetIdEmpresaNull() {
                this[this.tabletpu_ComprobantesCompra.IdEmpresaColumn] = System.Convert.DBNull;
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class tpu_ComprobantesCompraRowChangeEvent : EventArgs {
            
            private tpu_ComprobantesCompraRow eventRow;
            
            private DataRowAction eventAction;
            
            public tpu_ComprobantesCompraRowChangeEvent(tpu_ComprobantesCompraRow row, DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            public tpu_ComprobantesCompraRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            public DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
