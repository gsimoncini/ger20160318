//------------------------------------------------------------------------------
// <autogenerated>
//     This code was generated by a tool.
//     Runtime Version: 1.1.4322.573
//
//     Changes to this file may cause incorrect behavior and will be lost if 
//     the code is regenerated.
// </autogenerated>
//------------------------------------------------------------------------------

namespace mz.erp.commontypes.data {
    using System;
    using System.Data;
    using System.Xml;
    using System.Runtime.Serialization;
    
    
    [Serializable()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Diagnostics.DebuggerStepThrough()]
    [System.ComponentModel.ToolboxItem(true)]
    public class tfi_MovimientosDeCajaDataset : DataSet {
        
        private tfi_MovimientosDeCajaDataTable tabletfi_MovimientosDeCaja;
        
        public tfi_MovimientosDeCajaDataset() {
            this.InitClass();
            System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            this.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        protected tfi_MovimientosDeCajaDataset(SerializationInfo info, StreamingContext context) {
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((strSchema != null)) {
                DataSet ds = new DataSet();
                ds.ReadXmlSchema(new XmlTextReader(new System.IO.StringReader(strSchema)));
                if ((ds.Tables["tfi_MovimientosDeCaja"] != null)) {
                    this.Tables.Add(new tfi_MovimientosDeCajaDataTable(ds.Tables["tfi_MovimientosDeCaja"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.InitClass();
            }
            this.GetSerializationData(info, context);
            System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            this.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public tfi_MovimientosDeCajaDataTable tfi_MovimientosDeCaja {
            get {
                return this.tabletfi_MovimientosDeCaja;
            }
        }
        
        public override DataSet Clone() {
            tfi_MovimientosDeCajaDataset cln = ((tfi_MovimientosDeCajaDataset)(base.Clone()));
            cln.InitVars();
            return cln;
        }
        
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        protected override void ReadXmlSerializable(XmlReader reader) {
            this.Reset();
            DataSet ds = new DataSet();
            ds.ReadXml(reader);
            if ((ds.Tables["tfi_MovimientosDeCaja"] != null)) {
                this.Tables.Add(new tfi_MovimientosDeCajaDataTable(ds.Tables["tfi_MovimientosDeCaja"]));
            }
            this.DataSetName = ds.DataSetName;
            this.Prefix = ds.Prefix;
            this.Namespace = ds.Namespace;
            this.Locale = ds.Locale;
            this.CaseSensitive = ds.CaseSensitive;
            this.EnforceConstraints = ds.EnforceConstraints;
            this.Merge(ds, false, System.Data.MissingSchemaAction.Add);
            this.InitVars();
        }
        
        protected override System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            System.IO.MemoryStream stream = new System.IO.MemoryStream();
            this.WriteXmlSchema(new XmlTextWriter(stream, null));
            stream.Position = 0;
            return System.Xml.Schema.XmlSchema.Read(new XmlTextReader(stream), null);
        }
        
        internal void InitVars() {
            this.tabletfi_MovimientosDeCaja = ((tfi_MovimientosDeCajaDataTable)(this.Tables["tfi_MovimientosDeCaja"]));
            if ((this.tabletfi_MovimientosDeCaja != null)) {
                this.tabletfi_MovimientosDeCaja.InitVars();
            }
        }
        
        private void InitClass() {
            this.DataSetName = "tfi_MovimientosDeCajaDataset";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/tfi_MovimientosDeCaja.xsd";
            this.Locale = new System.Globalization.CultureInfo("en-US");
            this.CaseSensitive = false;
            this.EnforceConstraints = true;
            this.tabletfi_MovimientosDeCaja = new tfi_MovimientosDeCajaDataTable();
            this.Tables.Add(this.tabletfi_MovimientosDeCaja);
        }
        
        private bool ShouldSerializetfi_MovimientosDeCaja() {
            return false;
        }
        
        private void SchemaChanged(object sender, System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        public delegate void tfi_MovimientosDeCajaRowChangeEventHandler(object sender, tfi_MovimientosDeCajaRowChangeEvent e);
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class tfi_MovimientosDeCajaDataTable : DataTable, System.Collections.IEnumerable {
            
            private DataColumn columnIdMovimiento;
            
            private DataColumn columnIdEmpresa;
            
            private DataColumn columnIdSucursal;
            
            private DataColumn columnIdInstanciaCaja;
            
            private DataColumn columnIdTipoDeMovimiento;
            
            private DataColumn columnIdSubTipoMovimiento;
            
            private DataColumn columnTipoComprobante;
            
            private DataColumn columnNumero;
            
            private DataColumn columnFecha;
            
            private DataColumn columnObservaciones;
            
            private DataColumn columnIdResponsable;
            
            private DataColumn columnTotal;
            
            private DataColumn columnIdMonedaCierre;
            
            private DataColumn columnIdCotizacionCierre;
            
            private DataColumn columnIdAceptacion;
            
            private DataColumn columnFechaCreacion;
            
            private DataColumn columnIdConexionCreacion;
            
            private DataColumn columnUltimaModificacion;
            
            private DataColumn columnIdConexionUltimaModificacion;
            
            private DataColumn columnIdReservado;
            
            private DataColumn columnRowId;
            
            internal tfi_MovimientosDeCajaDataTable() : 
                    base("tfi_MovimientosDeCaja") {
                this.InitClass();
            }
            
            internal tfi_MovimientosDeCajaDataTable(DataTable table) : 
                    base(table.TableName) {
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
                this.DisplayExpression = table.DisplayExpression;
            }
            
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            internal DataColumn IdMovimientoColumn {
                get {
                    return this.columnIdMovimiento;
                }
            }
            
            internal DataColumn IdEmpresaColumn {
                get {
                    return this.columnIdEmpresa;
                }
            }
            
            internal DataColumn IdSucursalColumn {
                get {
                    return this.columnIdSucursal;
                }
            }
            
            internal DataColumn IdInstanciaCajaColumn {
                get {
                    return this.columnIdInstanciaCaja;
                }
            }
            
            internal DataColumn IdTipoDeMovimientoColumn {
                get {
                    return this.columnIdTipoDeMovimiento;
                }
            }
            
            internal DataColumn IdSubTipoMovimientoColumn {
                get {
                    return this.columnIdSubTipoMovimiento;
                }
            }
            
            internal DataColumn TipoComprobanteColumn {
                get {
                    return this.columnTipoComprobante;
                }
            }
            
            internal DataColumn NumeroColumn {
                get {
                    return this.columnNumero;
                }
            }
            
            internal DataColumn FechaColumn {
                get {
                    return this.columnFecha;
                }
            }
            
            internal DataColumn ObservacionesColumn {
                get {
                    return this.columnObservaciones;
                }
            }
            
            internal DataColumn IdResponsableColumn {
                get {
                    return this.columnIdResponsable;
                }
            }
            
            internal DataColumn TotalColumn {
                get {
                    return this.columnTotal;
                }
            }
            
            internal DataColumn IdMonedaCierreColumn {
                get {
                    return this.columnIdMonedaCierre;
                }
            }
            
            internal DataColumn IdCotizacionCierreColumn {
                get {
                    return this.columnIdCotizacionCierre;
                }
            }
            
            internal DataColumn IdAceptacionColumn {
                get {
                    return this.columnIdAceptacion;
                }
            }
            
            internal DataColumn FechaCreacionColumn {
                get {
                    return this.columnFechaCreacion;
                }
            }
            
            internal DataColumn IdConexionCreacionColumn {
                get {
                    return this.columnIdConexionCreacion;
                }
            }
            
            internal DataColumn UltimaModificacionColumn {
                get {
                    return this.columnUltimaModificacion;
                }
            }
            
            internal DataColumn IdConexionUltimaModificacionColumn {
                get {
                    return this.columnIdConexionUltimaModificacion;
                }
            }
            
            internal DataColumn IdReservadoColumn {
                get {
                    return this.columnIdReservado;
                }
            }
            
            internal DataColumn RowIdColumn {
                get {
                    return this.columnRowId;
                }
            }
            
            public tfi_MovimientosDeCajaRow this[int index] {
                get {
                    return ((tfi_MovimientosDeCajaRow)(this.Rows[index]));
                }
            }
            
            public event tfi_MovimientosDeCajaRowChangeEventHandler tfi_MovimientosDeCajaRowChanged;
            
            public event tfi_MovimientosDeCajaRowChangeEventHandler tfi_MovimientosDeCajaRowChanging;
            
            public event tfi_MovimientosDeCajaRowChangeEventHandler tfi_MovimientosDeCajaRowDeleted;
            
            public event tfi_MovimientosDeCajaRowChangeEventHandler tfi_MovimientosDeCajaRowDeleting;
            
            public void Addtfi_MovimientosDeCajaRow(tfi_MovimientosDeCajaRow row) {
                this.Rows.Add(row);
            }
            
            public tfi_MovimientosDeCajaRow Addtfi_MovimientosDeCajaRow(
                        string IdMovimiento, 
                        long IdEmpresa, 
                        long IdSucursal, 
                        string IdInstanciaCaja, 
                        string IdTipoDeMovimiento, 
                        string IdSubTipoMovimiento, 
                        string TipoComprobante, 
                        string Numero, 
                        System.DateTime Fecha, 
                        string Observaciones, 
                        string IdResponsable, 
                        System.Decimal Total, 
                        string IdMonedaCierre, 
                        string IdCotizacionCierre, 
                        string IdAceptacion, 
                        System.DateTime FechaCreacion, 
                        long IdConexionCreacion, 
                        System.Byte[] UltimaModificacion, 
                        long IdConexionUltimaModificacion, 
                        long IdReservado, 
                        System.Guid RowId) {
                tfi_MovimientosDeCajaRow rowtfi_MovimientosDeCajaRow = ((tfi_MovimientosDeCajaRow)(this.NewRow()));
                rowtfi_MovimientosDeCajaRow.ItemArray = new object[] {
                        IdMovimiento,
                        IdEmpresa,
                        IdSucursal,
                        IdInstanciaCaja,
                        IdTipoDeMovimiento,
                        IdSubTipoMovimiento,
                        TipoComprobante,
                        Numero,
                        Fecha,
                        Observaciones,
                        IdResponsable,
                        Total,
                        IdMonedaCierre,
                        IdCotizacionCierre,
                        IdAceptacion,
                        FechaCreacion,
                        IdConexionCreacion,
                        UltimaModificacion,
                        IdConexionUltimaModificacion,
                        IdReservado,
                        RowId};
                this.Rows.Add(rowtfi_MovimientosDeCajaRow);
                return rowtfi_MovimientosDeCajaRow;
            }
            
            public tfi_MovimientosDeCajaRow FindByIdMovimiento(string IdMovimiento) {
                return ((tfi_MovimientosDeCajaRow)(this.Rows.Find(new object[] {
                            IdMovimiento})));
            }
            
            public System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            public override DataTable Clone() {
                tfi_MovimientosDeCajaDataTable cln = ((tfi_MovimientosDeCajaDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            protected override DataTable CreateInstance() {
                return new tfi_MovimientosDeCajaDataTable();
            }
            
            internal void InitVars() {
                this.columnIdMovimiento = this.Columns["IdMovimiento"];
                this.columnIdEmpresa = this.Columns["IdEmpresa"];
                this.columnIdSucursal = this.Columns["IdSucursal"];
                this.columnIdInstanciaCaja = this.Columns["IdInstanciaCaja"];
                this.columnIdTipoDeMovimiento = this.Columns["IdTipoDeMovimiento"];
                this.columnIdSubTipoMovimiento = this.Columns["IdSubTipoMovimiento"];
                this.columnTipoComprobante = this.Columns["TipoComprobante"];
                this.columnNumero = this.Columns["Numero"];
                this.columnFecha = this.Columns["Fecha"];
                this.columnObservaciones = this.Columns["Observaciones"];
                this.columnIdResponsable = this.Columns["IdResponsable"];
                this.columnTotal = this.Columns["Total"];
                this.columnIdMonedaCierre = this.Columns["IdMonedaCierre"];
                this.columnIdCotizacionCierre = this.Columns["IdCotizacionCierre"];
                this.columnIdAceptacion = this.Columns["IdAceptacion"];
                this.columnFechaCreacion = this.Columns["FechaCreacion"];
                this.columnIdConexionCreacion = this.Columns["IdConexionCreacion"];
                this.columnUltimaModificacion = this.Columns["UltimaModificacion"];
                this.columnIdConexionUltimaModificacion = this.Columns["IdConexionUltimaModificacion"];
                this.columnIdReservado = this.Columns["IdReservado"];
                this.columnRowId = this.Columns["RowId"];
            }
            
            private void InitClass() {
                this.columnIdMovimiento = new DataColumn("IdMovimiento", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdMovimiento);
                this.columnIdEmpresa = new DataColumn("IdEmpresa", typeof(long), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdEmpresa);
                this.columnIdSucursal = new DataColumn("IdSucursal", typeof(long), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdSucursal);
                this.columnIdInstanciaCaja = new DataColumn("IdInstanciaCaja", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdInstanciaCaja);
                this.columnIdTipoDeMovimiento = new DataColumn("IdTipoDeMovimiento", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdTipoDeMovimiento);
                this.columnIdSubTipoMovimiento = new DataColumn("IdSubTipoMovimiento", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdSubTipoMovimiento);
                this.columnTipoComprobante = new DataColumn("TipoComprobante", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnTipoComprobante);
                this.columnNumero = new DataColumn("Numero", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnNumero);
                this.columnFecha = new DataColumn("Fecha", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnFecha);
                this.columnObservaciones = new DataColumn("Observaciones", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnObservaciones);
                this.columnIdResponsable = new DataColumn("IdResponsable", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdResponsable);
                this.columnTotal = new DataColumn("Total", typeof(System.Decimal), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnTotal);
                this.columnIdMonedaCierre = new DataColumn("IdMonedaCierre", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdMonedaCierre);
                this.columnIdCotizacionCierre = new DataColumn("IdCotizacionCierre", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdCotizacionCierre);
                this.columnIdAceptacion = new DataColumn("IdAceptacion", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdAceptacion);
                this.columnFechaCreacion = new DataColumn("FechaCreacion", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnFechaCreacion);
                this.columnIdConexionCreacion = new DataColumn("IdConexionCreacion", typeof(long), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdConexionCreacion);
                this.columnUltimaModificacion = new DataColumn("UltimaModificacion", typeof(System.Byte[]), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnUltimaModificacion);
                this.columnIdConexionUltimaModificacion = new DataColumn("IdConexionUltimaModificacion", typeof(long), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdConexionUltimaModificacion);
                this.columnIdReservado = new DataColumn("IdReservado", typeof(long), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdReservado);
                this.columnRowId = new DataColumn("RowId", typeof(System.Guid), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnRowId);
                this.Constraints.Add(new UniqueConstraint("tfi_MovimientosDeCajaDatasetKey1", new DataColumn[] {
                                this.columnIdMovimiento}, true));
                this.columnIdMovimiento.AllowDBNull = false;
                this.columnIdMovimiento.Unique = true;
                this.columnUltimaModificacion.ReadOnly = true;
            }
            
            public tfi_MovimientosDeCajaRow Newtfi_MovimientosDeCajaRow() {
                return ((tfi_MovimientosDeCajaRow)(this.NewRow()));
            }
            
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder) {
                return new tfi_MovimientosDeCajaRow(builder);
            }
            
            protected override System.Type GetRowType() {
                return typeof(tfi_MovimientosDeCajaRow);
            }
            
            protected override void OnRowChanged(DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.tfi_MovimientosDeCajaRowChanged != null)) {
                    this.tfi_MovimientosDeCajaRowChanged(this, new tfi_MovimientosDeCajaRowChangeEvent(((tfi_MovimientosDeCajaRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowChanging(DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.tfi_MovimientosDeCajaRowChanging != null)) {
                    this.tfi_MovimientosDeCajaRowChanging(this, new tfi_MovimientosDeCajaRowChangeEvent(((tfi_MovimientosDeCajaRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleted(DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.tfi_MovimientosDeCajaRowDeleted != null)) {
                    this.tfi_MovimientosDeCajaRowDeleted(this, new tfi_MovimientosDeCajaRowChangeEvent(((tfi_MovimientosDeCajaRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleting(DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.tfi_MovimientosDeCajaRowDeleting != null)) {
                    this.tfi_MovimientosDeCajaRowDeleting(this, new tfi_MovimientosDeCajaRowChangeEvent(((tfi_MovimientosDeCajaRow)(e.Row)), e.Action));
                }
            }
            
            public void Removetfi_MovimientosDeCajaRow(tfi_MovimientosDeCajaRow row) {
                this.Rows.Remove(row);
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class tfi_MovimientosDeCajaRow : DataRow {
            
            private tfi_MovimientosDeCajaDataTable tabletfi_MovimientosDeCaja;
            
            internal tfi_MovimientosDeCajaRow(DataRowBuilder rb) : 
                    base(rb) {
                this.tabletfi_MovimientosDeCaja = ((tfi_MovimientosDeCajaDataTable)(this.Table));
            }
            
            public string IdMovimiento {
                get {
                    return ((string)(this[this.tabletfi_MovimientosDeCaja.IdMovimientoColumn]));
                }
                set {
                    this[this.tabletfi_MovimientosDeCaja.IdMovimientoColumn] = value;
                }
            }
            
            public long IdEmpresa {
                get {
                    try {
                        return ((long)(this[this.tabletfi_MovimientosDeCaja.IdEmpresaColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletfi_MovimientosDeCaja.IdEmpresaColumn] = value;
                }
            }
            
            public long IdSucursal {
                get {
                    try {
                        return ((long)(this[this.tabletfi_MovimientosDeCaja.IdSucursalColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletfi_MovimientosDeCaja.IdSucursalColumn] = value;
                }
            }
            
            public string IdInstanciaCaja {
                get {
                    try {
                        return ((string)(this[this.tabletfi_MovimientosDeCaja.IdInstanciaCajaColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletfi_MovimientosDeCaja.IdInstanciaCajaColumn] = value;
                }
            }
            
            public string IdTipoDeMovimiento {
                get {
                    try {
                        return ((string)(this[this.tabletfi_MovimientosDeCaja.IdTipoDeMovimientoColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletfi_MovimientosDeCaja.IdTipoDeMovimientoColumn] = value;
                }
            }
            
            public string IdSubTipoMovimiento {
                get {
                    try {
                        return ((string)(this[this.tabletfi_MovimientosDeCaja.IdSubTipoMovimientoColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletfi_MovimientosDeCaja.IdSubTipoMovimientoColumn] = value;
                }
            }
            
            public string TipoComprobante {
                get {
                    try {
                        return ((string)(this[this.tabletfi_MovimientosDeCaja.TipoComprobanteColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletfi_MovimientosDeCaja.TipoComprobanteColumn] = value;
                }
            }
            
            public string Numero {
                get {
                    try {
                        return ((string)(this[this.tabletfi_MovimientosDeCaja.NumeroColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletfi_MovimientosDeCaja.NumeroColumn] = value;
                }
            }
            
            public System.DateTime Fecha {
                get {
                    try {
                        return ((System.DateTime)(this[this.tabletfi_MovimientosDeCaja.FechaColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletfi_MovimientosDeCaja.FechaColumn] = value;
                }
            }
            
            public string Observaciones {
                get {
                    try {
                        return ((string)(this[this.tabletfi_MovimientosDeCaja.ObservacionesColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletfi_MovimientosDeCaja.ObservacionesColumn] = value;
                }
            }
            
            public string IdResponsable {
                get {
                    try {
                        return ((string)(this[this.tabletfi_MovimientosDeCaja.IdResponsableColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletfi_MovimientosDeCaja.IdResponsableColumn] = value;
                }
            }
            
            public System.Decimal Total {
                get {
                    try {
                        return ((System.Decimal)(this[this.tabletfi_MovimientosDeCaja.TotalColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletfi_MovimientosDeCaja.TotalColumn] = value;
                }
            }
            
            public string IdMonedaCierre {
                get {
                    try {
                        return ((string)(this[this.tabletfi_MovimientosDeCaja.IdMonedaCierreColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletfi_MovimientosDeCaja.IdMonedaCierreColumn] = value;
                }
            }
            
            public string IdCotizacionCierre {
                get {
                    try {
                        return ((string)(this[this.tabletfi_MovimientosDeCaja.IdCotizacionCierreColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletfi_MovimientosDeCaja.IdCotizacionCierreColumn] = value;
                }
            }
            
            public string IdAceptacion {
                get {
                    try {
                        return ((string)(this[this.tabletfi_MovimientosDeCaja.IdAceptacionColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletfi_MovimientosDeCaja.IdAceptacionColumn] = value;
                }
            }
            
            public System.DateTime FechaCreacion {
                get {
                    try {
                        return ((System.DateTime)(this[this.tabletfi_MovimientosDeCaja.FechaCreacionColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletfi_MovimientosDeCaja.FechaCreacionColumn] = value;
                }
            }
            
            public long IdConexionCreacion {
                get {
                    try {
                        return ((long)(this[this.tabletfi_MovimientosDeCaja.IdConexionCreacionColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletfi_MovimientosDeCaja.IdConexionCreacionColumn] = value;
                }
            }
            
            public System.Byte[] UltimaModificacion {
                get {
                    try {
                        return ((System.Byte[])(this[this.tabletfi_MovimientosDeCaja.UltimaModificacionColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletfi_MovimientosDeCaja.UltimaModificacionColumn] = value;
                }
            }
            
            public long IdConexionUltimaModificacion {
                get {
                    try {
                        return ((long)(this[this.tabletfi_MovimientosDeCaja.IdConexionUltimaModificacionColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletfi_MovimientosDeCaja.IdConexionUltimaModificacionColumn] = value;
                }
            }
            
            public long IdReservado {
                get {
                    try {
                        return ((long)(this[this.tabletfi_MovimientosDeCaja.IdReservadoColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletfi_MovimientosDeCaja.IdReservadoColumn] = value;
                }
            }
            
            public System.Guid RowId {
                get {
                    try {
                        return ((System.Guid)(this[this.tabletfi_MovimientosDeCaja.RowIdColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletfi_MovimientosDeCaja.RowIdColumn] = value;
                }
            }
            
            public bool IsIdEmpresaNull() {
                return this.IsNull(this.tabletfi_MovimientosDeCaja.IdEmpresaColumn);
            }
            
            public void SetIdEmpresaNull() {
                this[this.tabletfi_MovimientosDeCaja.IdEmpresaColumn] = System.Convert.DBNull;
            }
            
            public bool IsIdSucursalNull() {
                return this.IsNull(this.tabletfi_MovimientosDeCaja.IdSucursalColumn);
            }
            
            public void SetIdSucursalNull() {
                this[this.tabletfi_MovimientosDeCaja.IdSucursalColumn] = System.Convert.DBNull;
            }
            
            public bool IsIdInstanciaCajaNull() {
                return this.IsNull(this.tabletfi_MovimientosDeCaja.IdInstanciaCajaColumn);
            }
            
            public void SetIdInstanciaCajaNull() {
                this[this.tabletfi_MovimientosDeCaja.IdInstanciaCajaColumn] = System.Convert.DBNull;
            }
            
            public bool IsIdTipoDeMovimientoNull() {
                return this.IsNull(this.tabletfi_MovimientosDeCaja.IdTipoDeMovimientoColumn);
            }
            
            public void SetIdTipoDeMovimientoNull() {
                this[this.tabletfi_MovimientosDeCaja.IdTipoDeMovimientoColumn] = System.Convert.DBNull;
            }
            
            public bool IsIdSubTipoMovimientoNull() {
                return this.IsNull(this.tabletfi_MovimientosDeCaja.IdSubTipoMovimientoColumn);
            }
            
            public void SetIdSubTipoMovimientoNull() {
                this[this.tabletfi_MovimientosDeCaja.IdSubTipoMovimientoColumn] = System.Convert.DBNull;
            }
            
            public bool IsTipoComprobanteNull() {
                return this.IsNull(this.tabletfi_MovimientosDeCaja.TipoComprobanteColumn);
            }
            
            public void SetTipoComprobanteNull() {
                this[this.tabletfi_MovimientosDeCaja.TipoComprobanteColumn] = System.Convert.DBNull;
            }
            
            public bool IsNumeroNull() {
                return this.IsNull(this.tabletfi_MovimientosDeCaja.NumeroColumn);
            }
            
            public void SetNumeroNull() {
                this[this.tabletfi_MovimientosDeCaja.NumeroColumn] = System.Convert.DBNull;
            }
            
            public bool IsFechaNull() {
                return this.IsNull(this.tabletfi_MovimientosDeCaja.FechaColumn);
            }
            
            public void SetFechaNull() {
                this[this.tabletfi_MovimientosDeCaja.FechaColumn] = System.Convert.DBNull;
            }
            
            public bool IsObservacionesNull() {
                return this.IsNull(this.tabletfi_MovimientosDeCaja.ObservacionesColumn);
            }
            
            public void SetObservacionesNull() {
                this[this.tabletfi_MovimientosDeCaja.ObservacionesColumn] = System.Convert.DBNull;
            }
            
            public bool IsIdResponsableNull() {
                return this.IsNull(this.tabletfi_MovimientosDeCaja.IdResponsableColumn);
            }
            
            public void SetIdResponsableNull() {
                this[this.tabletfi_MovimientosDeCaja.IdResponsableColumn] = System.Convert.DBNull;
            }
            
            public bool IsTotalNull() {
                return this.IsNull(this.tabletfi_MovimientosDeCaja.TotalColumn);
            }
            
            public void SetTotalNull() {
                this[this.tabletfi_MovimientosDeCaja.TotalColumn] = System.Convert.DBNull;
            }
            
            public bool IsIdMonedaCierreNull() {
                return this.IsNull(this.tabletfi_MovimientosDeCaja.IdMonedaCierreColumn);
            }
            
            public void SetIdMonedaCierreNull() {
                this[this.tabletfi_MovimientosDeCaja.IdMonedaCierreColumn] = System.Convert.DBNull;
            }
            
            public bool IsIdCotizacionCierreNull() {
                return this.IsNull(this.tabletfi_MovimientosDeCaja.IdCotizacionCierreColumn);
            }
            
            public void SetIdCotizacionCierreNull() {
                this[this.tabletfi_MovimientosDeCaja.IdCotizacionCierreColumn] = System.Convert.DBNull;
            }
            
            public bool IsIdAceptacionNull() {
                return this.IsNull(this.tabletfi_MovimientosDeCaja.IdAceptacionColumn);
            }
            
            public void SetIdAceptacionNull() {
                this[this.tabletfi_MovimientosDeCaja.IdAceptacionColumn] = System.Convert.DBNull;
            }
            
            public bool IsFechaCreacionNull() {
                return this.IsNull(this.tabletfi_MovimientosDeCaja.FechaCreacionColumn);
            }
            
            public void SetFechaCreacionNull() {
                this[this.tabletfi_MovimientosDeCaja.FechaCreacionColumn] = System.Convert.DBNull;
            }
            
            public bool IsIdConexionCreacionNull() {
                return this.IsNull(this.tabletfi_MovimientosDeCaja.IdConexionCreacionColumn);
            }
            
            public void SetIdConexionCreacionNull() {
                this[this.tabletfi_MovimientosDeCaja.IdConexionCreacionColumn] = System.Convert.DBNull;
            }
            
            public bool IsUltimaModificacionNull() {
                return this.IsNull(this.tabletfi_MovimientosDeCaja.UltimaModificacionColumn);
            }
            
            public void SetUltimaModificacionNull() {
                this[this.tabletfi_MovimientosDeCaja.UltimaModificacionColumn] = System.Convert.DBNull;
            }
            
            public bool IsIdConexionUltimaModificacionNull() {
                return this.IsNull(this.tabletfi_MovimientosDeCaja.IdConexionUltimaModificacionColumn);
            }
            
            public void SetIdConexionUltimaModificacionNull() {
                this[this.tabletfi_MovimientosDeCaja.IdConexionUltimaModificacionColumn] = System.Convert.DBNull;
            }
            
            public bool IsIdReservadoNull() {
                return this.IsNull(this.tabletfi_MovimientosDeCaja.IdReservadoColumn);
            }
            
            public void SetIdReservadoNull() {
                this[this.tabletfi_MovimientosDeCaja.IdReservadoColumn] = System.Convert.DBNull;
            }
            
            public bool IsRowIdNull() {
                return this.IsNull(this.tabletfi_MovimientosDeCaja.RowIdColumn);
            }
            
            public void SetRowIdNull() {
                this[this.tabletfi_MovimientosDeCaja.RowIdColumn] = System.Convert.DBNull;
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class tfi_MovimientosDeCajaRowChangeEvent : EventArgs {
            
            private tfi_MovimientosDeCajaRow eventRow;
            
            private DataRowAction eventAction;
            
            public tfi_MovimientosDeCajaRowChangeEvent(tfi_MovimientosDeCajaRow row, DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            public tfi_MovimientosDeCajaRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            public DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
