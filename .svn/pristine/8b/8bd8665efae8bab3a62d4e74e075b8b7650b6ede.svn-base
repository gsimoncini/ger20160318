//------------------------------------------------------------------------------
// <autogenerated>
//     This code was generated by a tool.
//     Runtime Version: 1.1.4322.2407
//
//     Changes to this file may cause incorrect behavior and will be lost if 
//     the code is regenerated.
// </autogenerated>
//------------------------------------------------------------------------------

namespace mz.erp.commontypes.data {
    using System;
    using System.Data;
    using System.Xml;
    using System.Runtime.Serialization;
    
    
    [Serializable()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Diagnostics.DebuggerStepThrough()]
    [System.ComponentModel.ToolboxItem(true)]
    public class tcs_DomiciliosExDataset : DataSet {
        
        private tcs_DomiciliosDataTable tabletcs_Domicilios;
        
        public tcs_DomiciliosExDataset() {
            this.InitClass();
            System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            this.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        protected tcs_DomiciliosExDataset(SerializationInfo info, StreamingContext context) {
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((strSchema != null)) {
                DataSet ds = new DataSet();
                ds.ReadXmlSchema(new XmlTextReader(new System.IO.StringReader(strSchema)));
                if ((ds.Tables["tcs_Domicilios"] != null)) {
                    this.Tables.Add(new tcs_DomiciliosDataTable(ds.Tables["tcs_Domicilios"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.InitClass();
            }
            this.GetSerializationData(info, context);
            System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            this.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public tcs_DomiciliosDataTable tcs_Domicilios {
            get {
                return this.tabletcs_Domicilios;
            }
        }
        
        public override DataSet Clone() {
            tcs_DomiciliosExDataset cln = ((tcs_DomiciliosExDataset)(base.Clone()));
            cln.InitVars();
            return cln;
        }
        
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        protected override void ReadXmlSerializable(XmlReader reader) {
            this.Reset();
            DataSet ds = new DataSet();
            ds.ReadXml(reader);
            if ((ds.Tables["tcs_Domicilios"] != null)) {
                this.Tables.Add(new tcs_DomiciliosDataTable(ds.Tables["tcs_Domicilios"]));
            }
            this.DataSetName = ds.DataSetName;
            this.Prefix = ds.Prefix;
            this.Namespace = ds.Namespace;
            this.Locale = ds.Locale;
            this.CaseSensitive = ds.CaseSensitive;
            this.EnforceConstraints = ds.EnforceConstraints;
            this.Merge(ds, false, System.Data.MissingSchemaAction.Add);
            this.InitVars();
        }
        
        protected override System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            System.IO.MemoryStream stream = new System.IO.MemoryStream();
            this.WriteXmlSchema(new XmlTextWriter(stream, null));
            stream.Position = 0;
            return System.Xml.Schema.XmlSchema.Read(new XmlTextReader(stream), null);
        }
        
        internal void InitVars() {
            this.tabletcs_Domicilios = ((tcs_DomiciliosDataTable)(this.Tables["tcs_Domicilios"]));
            if ((this.tabletcs_Domicilios != null)) {
                this.tabletcs_Domicilios.InitVars();
            }
        }
        
        private void InitClass() {
            this.DataSetName = "tcs_DomiciliosExDataset";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/tcs_DomiciliosEx.xsd";
            this.Locale = new System.Globalization.CultureInfo("en-US");
            this.CaseSensitive = false;
            this.EnforceConstraints = true;
            this.tabletcs_Domicilios = new tcs_DomiciliosDataTable();
            this.Tables.Add(this.tabletcs_Domicilios);
        }
        
        private bool ShouldSerializetcs_Domicilios() {
            return false;
        }
        
        private void SchemaChanged(object sender, System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        public delegate void tcs_DomiciliosRowChangeEventHandler(object sender, tcs_DomiciliosRowChangeEvent e);
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class tcs_DomiciliosDataTable : DataTable, System.Collections.IEnumerable {
            
            private DataColumn columnIdDomicilio;
            
            private DataColumn columnIdTipoDomicilio;
            
            private DataColumn columnCalle;
            
            private DataColumn columnNumero;
            
            private DataColumn columnSector;
            
            private DataColumn columnTorre;
            
            private DataColumn columnPiso;
            
            private DataColumn columnDepartamento;
            
            private DataColumn columnManzana;
            
            private DataColumn columnCodigoPostal;
            
            private DataColumn columnIdLocalidad;
            
            private DataColumn columnPartido;
            
            private DataColumn columnIdProvincia;
            
            private DataColumn columnIdPais;
            
            private DataColumn columnIdResponsable;
            
            private DataColumn columnTelefono;
            
            private DataColumn columnFechaCreacion;
            
            private DataColumn columnIdConexionCreacion;
            
            private DataColumn columnUltimaModificacion;
            
            private DataColumn columnIdConexionUltimaModificacion;
            
            private DataColumn columnIdReservado;
            
            private DataColumn columnRowId;
            
            private DataColumn columnIdEmpresa;
            
            private DataColumn columnIdSucursal;
            
            internal tcs_DomiciliosDataTable() : 
                    base("tcs_Domicilios") {
                this.InitClass();
            }
            
            internal tcs_DomiciliosDataTable(DataTable table) : 
                    base(table.TableName) {
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
                this.DisplayExpression = table.DisplayExpression;
            }
            
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            internal DataColumn IdDomicilioColumn {
                get {
                    return this.columnIdDomicilio;
                }
            }
            
            internal DataColumn IdTipoDomicilioColumn {
                get {
                    return this.columnIdTipoDomicilio;
                }
            }
            
            internal DataColumn CalleColumn {
                get {
                    return this.columnCalle;
                }
            }
            
            internal DataColumn NumeroColumn {
                get {
                    return this.columnNumero;
                }
            }
            
            internal DataColumn SectorColumn {
                get {
                    return this.columnSector;
                }
            }
            
            internal DataColumn TorreColumn {
                get {
                    return this.columnTorre;
                }
            }
            
            internal DataColumn PisoColumn {
                get {
                    return this.columnPiso;
                }
            }
            
            internal DataColumn DepartamentoColumn {
                get {
                    return this.columnDepartamento;
                }
            }
            
            internal DataColumn ManzanaColumn {
                get {
                    return this.columnManzana;
                }
            }
            
            internal DataColumn CodigoPostalColumn {
                get {
                    return this.columnCodigoPostal;
                }
            }
            
            internal DataColumn IdLocalidadColumn {
                get {
                    return this.columnIdLocalidad;
                }
            }
            
            internal DataColumn PartidoColumn {
                get {
                    return this.columnPartido;
                }
            }
            
            internal DataColumn IdProvinciaColumn {
                get {
                    return this.columnIdProvincia;
                }
            }
            
            internal DataColumn IdPaisColumn {
                get {
                    return this.columnIdPais;
                }
            }
            
            internal DataColumn IdResponsableColumn {
                get {
                    return this.columnIdResponsable;
                }
            }
            
            internal DataColumn TelefonoColumn {
                get {
                    return this.columnTelefono;
                }
            }
            
            internal DataColumn FechaCreacionColumn {
                get {
                    return this.columnFechaCreacion;
                }
            }
            
            internal DataColumn IdConexionCreacionColumn {
                get {
                    return this.columnIdConexionCreacion;
                }
            }
            
            internal DataColumn UltimaModificacionColumn {
                get {
                    return this.columnUltimaModificacion;
                }
            }
            
            internal DataColumn IdConexionUltimaModificacionColumn {
                get {
                    return this.columnIdConexionUltimaModificacion;
                }
            }
            
            internal DataColumn IdReservadoColumn {
                get {
                    return this.columnIdReservado;
                }
            }
            
            internal DataColumn RowIdColumn {
                get {
                    return this.columnRowId;
                }
            }
            
            internal DataColumn IdEmpresaColumn {
                get {
                    return this.columnIdEmpresa;
                }
            }
            
            internal DataColumn IdSucursalColumn {
                get {
                    return this.columnIdSucursal;
                }
            }
            
            public tcs_DomiciliosRow this[int index] {
                get {
                    return ((tcs_DomiciliosRow)(this.Rows[index]));
                }
            }
            
            public event tcs_DomiciliosRowChangeEventHandler tcs_DomiciliosRowChanged;
            
            public event tcs_DomiciliosRowChangeEventHandler tcs_DomiciliosRowChanging;
            
            public event tcs_DomiciliosRowChangeEventHandler tcs_DomiciliosRowDeleted;
            
            public event tcs_DomiciliosRowChangeEventHandler tcs_DomiciliosRowDeleting;
            
            public void Addtcs_DomiciliosRow(tcs_DomiciliosRow row) {
                this.Rows.Add(row);
            }
            
            public tcs_DomiciliosRow Addtcs_DomiciliosRow(
                        string IdDomicilio, 
                        long IdTipoDomicilio, 
                        string Calle, 
                        string Numero, 
                        string Sector, 
                        string Torre, 
                        string Piso, 
                        string Departamento, 
                        string Manzana, 
                        string CodigoPostal, 
                        string IdLocalidad, 
                        string Partido, 
                        long IdProvincia, 
                        long IdPais, 
                        string IdResponsable, 
                        string Telefono, 
                        System.DateTime FechaCreacion, 
                        long IdConexionCreacion, 
                        System.Byte[] UltimaModificacion, 
                        long IdConexionUltimaModificacion, 
                        long IdReservado, 
                        System.Guid RowId, 
                        long IdEmpresa, 
                        long IdSucursal) {
                tcs_DomiciliosRow rowtcs_DomiciliosRow = ((tcs_DomiciliosRow)(this.NewRow()));
                rowtcs_DomiciliosRow.ItemArray = new object[] {
                        IdDomicilio,
                        IdTipoDomicilio,
                        Calle,
                        Numero,
                        Sector,
                        Torre,
                        Piso,
                        Departamento,
                        Manzana,
                        CodigoPostal,
                        IdLocalidad,
                        Partido,
                        IdProvincia,
                        IdPais,
                        IdResponsable,
                        Telefono,
                        FechaCreacion,
                        IdConexionCreacion,
                        UltimaModificacion,
                        IdConexionUltimaModificacion,
                        IdReservado,
                        RowId,
                        IdEmpresa,
                        IdSucursal};
                this.Rows.Add(rowtcs_DomiciliosRow);
                return rowtcs_DomiciliosRow;
            }
            
            public tcs_DomiciliosRow FindByIdDomicilio(string IdDomicilio) {
                return ((tcs_DomiciliosRow)(this.Rows.Find(new object[] {
                            IdDomicilio})));
            }
            
            public System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            public override DataTable Clone() {
                tcs_DomiciliosDataTable cln = ((tcs_DomiciliosDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            protected override DataTable CreateInstance() {
                return new tcs_DomiciliosDataTable();
            }
            
            internal void InitVars() {
                this.columnIdDomicilio = this.Columns["IdDomicilio"];
                this.columnIdTipoDomicilio = this.Columns["IdTipoDomicilio"];
                this.columnCalle = this.Columns["Calle"];
                this.columnNumero = this.Columns["Numero"];
                this.columnSector = this.Columns["Sector"];
                this.columnTorre = this.Columns["Torre"];
                this.columnPiso = this.Columns["Piso"];
                this.columnDepartamento = this.Columns["Departamento"];
                this.columnManzana = this.Columns["Manzana"];
                this.columnCodigoPostal = this.Columns["CodigoPostal"];
                this.columnIdLocalidad = this.Columns["IdLocalidad"];
                this.columnPartido = this.Columns["Partido"];
                this.columnIdProvincia = this.Columns["IdProvincia"];
                this.columnIdPais = this.Columns["IdPais"];
                this.columnIdResponsable = this.Columns["IdResponsable"];
                this.columnTelefono = this.Columns["Telefono"];
                this.columnFechaCreacion = this.Columns["FechaCreacion"];
                this.columnIdConexionCreacion = this.Columns["IdConexionCreacion"];
                this.columnUltimaModificacion = this.Columns["UltimaModificacion"];
                this.columnIdConexionUltimaModificacion = this.Columns["IdConexionUltimaModificacion"];
                this.columnIdReservado = this.Columns["IdReservado"];
                this.columnRowId = this.Columns["RowId"];
                this.columnIdEmpresa = this.Columns["IdEmpresa"];
                this.columnIdSucursal = this.Columns["IdSucursal"];
            }
            
            private void InitClass() {
                this.columnIdDomicilio = new DataColumn("IdDomicilio", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdDomicilio);
                this.columnIdTipoDomicilio = new DataColumn("IdTipoDomicilio", typeof(long), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdTipoDomicilio);
                this.columnCalle = new DataColumn("Calle", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnCalle);
                this.columnNumero = new DataColumn("Numero", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnNumero);
                this.columnSector = new DataColumn("Sector", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnSector);
                this.columnTorre = new DataColumn("Torre", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnTorre);
                this.columnPiso = new DataColumn("Piso", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnPiso);
                this.columnDepartamento = new DataColumn("Departamento", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnDepartamento);
                this.columnManzana = new DataColumn("Manzana", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnManzana);
                this.columnCodigoPostal = new DataColumn("CodigoPostal", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnCodigoPostal);
                this.columnIdLocalidad = new DataColumn("IdLocalidad", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdLocalidad);
                this.columnPartido = new DataColumn("Partido", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnPartido);
                this.columnIdProvincia = new DataColumn("IdProvincia", typeof(long), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdProvincia);
                this.columnIdPais = new DataColumn("IdPais", typeof(long), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdPais);
                this.columnIdResponsable = new DataColumn("IdResponsable", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdResponsable);
                this.columnTelefono = new DataColumn("Telefono", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnTelefono);
                this.columnFechaCreacion = new DataColumn("FechaCreacion", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnFechaCreacion);
                this.columnIdConexionCreacion = new DataColumn("IdConexionCreacion", typeof(long), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdConexionCreacion);
                this.columnUltimaModificacion = new DataColumn("UltimaModificacion", typeof(System.Byte[]), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnUltimaModificacion);
                this.columnIdConexionUltimaModificacion = new DataColumn("IdConexionUltimaModificacion", typeof(long), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdConexionUltimaModificacion);
                this.columnIdReservado = new DataColumn("IdReservado", typeof(long), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdReservado);
                this.columnRowId = new DataColumn("RowId", typeof(System.Guid), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnRowId);
                this.columnIdEmpresa = new DataColumn("IdEmpresa", typeof(long), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdEmpresa);
                this.columnIdSucursal = new DataColumn("IdSucursal", typeof(long), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdSucursal);
                this.Constraints.Add(new UniqueConstraint("tcs_DomiciliosExDatasetKey1", new DataColumn[] {
                                this.columnIdDomicilio}, true));
                this.columnIdDomicilio.AllowDBNull = false;
                this.columnIdDomicilio.Unique = true;
                this.columnIdTipoDomicilio.AllowDBNull = false;
                this.columnUltimaModificacion.ReadOnly = true;
            }
            
            public tcs_DomiciliosRow Newtcs_DomiciliosRow() {
                return ((tcs_DomiciliosRow)(this.NewRow()));
            }
            
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder) {
                return new tcs_DomiciliosRow(builder);
            }
            
            protected override System.Type GetRowType() {
                return typeof(tcs_DomiciliosRow);
            }
            
            protected override void OnRowChanged(DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.tcs_DomiciliosRowChanged != null)) {
                    this.tcs_DomiciliosRowChanged(this, new tcs_DomiciliosRowChangeEvent(((tcs_DomiciliosRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowChanging(DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.tcs_DomiciliosRowChanging != null)) {
                    this.tcs_DomiciliosRowChanging(this, new tcs_DomiciliosRowChangeEvent(((tcs_DomiciliosRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleted(DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.tcs_DomiciliosRowDeleted != null)) {
                    this.tcs_DomiciliosRowDeleted(this, new tcs_DomiciliosRowChangeEvent(((tcs_DomiciliosRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleting(DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.tcs_DomiciliosRowDeleting != null)) {
                    this.tcs_DomiciliosRowDeleting(this, new tcs_DomiciliosRowChangeEvent(((tcs_DomiciliosRow)(e.Row)), e.Action));
                }
            }
            
            public void Removetcs_DomiciliosRow(tcs_DomiciliosRow row) {
                this.Rows.Remove(row);
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class tcs_DomiciliosRow : DataRow {
            
            private tcs_DomiciliosDataTable tabletcs_Domicilios;
            
            internal tcs_DomiciliosRow(DataRowBuilder rb) : 
                    base(rb) {
                this.tabletcs_Domicilios = ((tcs_DomiciliosDataTable)(this.Table));
            }
            
            public string IdDomicilio {
                get {
                    return ((string)(this[this.tabletcs_Domicilios.IdDomicilioColumn]));
                }
                set {
                    this[this.tabletcs_Domicilios.IdDomicilioColumn] = value;
                }
            }
            
            public long IdTipoDomicilio {
                get {
                    return ((long)(this[this.tabletcs_Domicilios.IdTipoDomicilioColumn]));
                }
                set {
                    this[this.tabletcs_Domicilios.IdTipoDomicilioColumn] = value;
                }
            }
            
            public string Calle {
                get {
                    try {
                        return ((string)(this[this.tabletcs_Domicilios.CalleColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletcs_Domicilios.CalleColumn] = value;
                }
            }
            
            public string Numero {
                get {
                    try {
                        return ((string)(this[this.tabletcs_Domicilios.NumeroColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletcs_Domicilios.NumeroColumn] = value;
                }
            }
            
            public string Sector {
                get {
                    try {
                        return ((string)(this[this.tabletcs_Domicilios.SectorColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletcs_Domicilios.SectorColumn] = value;
                }
            }
            
            public string Torre {
                get {
                    try {
                        return ((string)(this[this.tabletcs_Domicilios.TorreColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletcs_Domicilios.TorreColumn] = value;
                }
            }
            
            public string Piso {
                get {
                    try {
                        return ((string)(this[this.tabletcs_Domicilios.PisoColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletcs_Domicilios.PisoColumn] = value;
                }
            }
            
            public string Departamento {
                get {
                    try {
                        return ((string)(this[this.tabletcs_Domicilios.DepartamentoColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletcs_Domicilios.DepartamentoColumn] = value;
                }
            }
            
            public string Manzana {
                get {
                    try {
                        return ((string)(this[this.tabletcs_Domicilios.ManzanaColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletcs_Domicilios.ManzanaColumn] = value;
                }
            }
            
            public string CodigoPostal {
                get {
                    try {
                        return ((string)(this[this.tabletcs_Domicilios.CodigoPostalColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletcs_Domicilios.CodigoPostalColumn] = value;
                }
            }
            
            public string IdLocalidad {
                get {
                    try {
                        return ((string)(this[this.tabletcs_Domicilios.IdLocalidadColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletcs_Domicilios.IdLocalidadColumn] = value;
                }
            }
            
            public string Partido {
                get {
                    try {
                        return ((string)(this[this.tabletcs_Domicilios.PartidoColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletcs_Domicilios.PartidoColumn] = value;
                }
            }
            
            public long IdProvincia {
                get {
                    try {
                        return ((long)(this[this.tabletcs_Domicilios.IdProvinciaColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletcs_Domicilios.IdProvinciaColumn] = value;
                }
            }
            
            public long IdPais {
                get {
                    try {
                        return ((long)(this[this.tabletcs_Domicilios.IdPaisColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletcs_Domicilios.IdPaisColumn] = value;
                }
            }
            
            public string IdResponsable {
                get {
                    try {
                        return ((string)(this[this.tabletcs_Domicilios.IdResponsableColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletcs_Domicilios.IdResponsableColumn] = value;
                }
            }
            
            public string Telefono {
                get {
                    try {
                        return ((string)(this[this.tabletcs_Domicilios.TelefonoColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletcs_Domicilios.TelefonoColumn] = value;
                }
            }
            
            public System.DateTime FechaCreacion {
                get {
                    try {
                        return ((System.DateTime)(this[this.tabletcs_Domicilios.FechaCreacionColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletcs_Domicilios.FechaCreacionColumn] = value;
                }
            }
            
            public long IdConexionCreacion {
                get {
                    try {
                        return ((long)(this[this.tabletcs_Domicilios.IdConexionCreacionColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletcs_Domicilios.IdConexionCreacionColumn] = value;
                }
            }
            
            public System.Byte[] UltimaModificacion {
                get {
                    try {
                        return ((System.Byte[])(this[this.tabletcs_Domicilios.UltimaModificacionColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletcs_Domicilios.UltimaModificacionColumn] = value;
                }
            }
            
            public long IdConexionUltimaModificacion {
                get {
                    try {
                        return ((long)(this[this.tabletcs_Domicilios.IdConexionUltimaModificacionColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletcs_Domicilios.IdConexionUltimaModificacionColumn] = value;
                }
            }
            
            public long IdReservado {
                get {
                    try {
                        return ((long)(this[this.tabletcs_Domicilios.IdReservadoColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletcs_Domicilios.IdReservadoColumn] = value;
                }
            }
            
            public System.Guid RowId {
                get {
                    try {
                        return ((System.Guid)(this[this.tabletcs_Domicilios.RowIdColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletcs_Domicilios.RowIdColumn] = value;
                }
            }
            
            public long IdEmpresa {
                get {
                    try {
                        return ((long)(this[this.tabletcs_Domicilios.IdEmpresaColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletcs_Domicilios.IdEmpresaColumn] = value;
                }
            }
            
            public long IdSucursal {
                get {
                    try {
                        return ((long)(this[this.tabletcs_Domicilios.IdSucursalColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletcs_Domicilios.IdSucursalColumn] = value;
                }
            }
            
            public bool IsCalleNull() {
                return this.IsNull(this.tabletcs_Domicilios.CalleColumn);
            }
            
            public void SetCalleNull() {
                this[this.tabletcs_Domicilios.CalleColumn] = System.Convert.DBNull;
            }
            
            public bool IsNumeroNull() {
                return this.IsNull(this.tabletcs_Domicilios.NumeroColumn);
            }
            
            public void SetNumeroNull() {
                this[this.tabletcs_Domicilios.NumeroColumn] = System.Convert.DBNull;
            }
            
            public bool IsSectorNull() {
                return this.IsNull(this.tabletcs_Domicilios.SectorColumn);
            }
            
            public void SetSectorNull() {
                this[this.tabletcs_Domicilios.SectorColumn] = System.Convert.DBNull;
            }
            
            public bool IsTorreNull() {
                return this.IsNull(this.tabletcs_Domicilios.TorreColumn);
            }
            
            public void SetTorreNull() {
                this[this.tabletcs_Domicilios.TorreColumn] = System.Convert.DBNull;
            }
            
            public bool IsPisoNull() {
                return this.IsNull(this.tabletcs_Domicilios.PisoColumn);
            }
            
            public void SetPisoNull() {
                this[this.tabletcs_Domicilios.PisoColumn] = System.Convert.DBNull;
            }
            
            public bool IsDepartamentoNull() {
                return this.IsNull(this.tabletcs_Domicilios.DepartamentoColumn);
            }
            
            public void SetDepartamentoNull() {
                this[this.tabletcs_Domicilios.DepartamentoColumn] = System.Convert.DBNull;
            }
            
            public bool IsManzanaNull() {
                return this.IsNull(this.tabletcs_Domicilios.ManzanaColumn);
            }
            
            public void SetManzanaNull() {
                this[this.tabletcs_Domicilios.ManzanaColumn] = System.Convert.DBNull;
            }
            
            public bool IsCodigoPostalNull() {
                return this.IsNull(this.tabletcs_Domicilios.CodigoPostalColumn);
            }
            
            public void SetCodigoPostalNull() {
                this[this.tabletcs_Domicilios.CodigoPostalColumn] = System.Convert.DBNull;
            }
            
            public bool IsIdLocalidadNull() {
                return this.IsNull(this.tabletcs_Domicilios.IdLocalidadColumn);
            }
            
            public void SetIdLocalidadNull() {
                this[this.tabletcs_Domicilios.IdLocalidadColumn] = System.Convert.DBNull;
            }
            
            public bool IsPartidoNull() {
                return this.IsNull(this.tabletcs_Domicilios.PartidoColumn);
            }
            
            public void SetPartidoNull() {
                this[this.tabletcs_Domicilios.PartidoColumn] = System.Convert.DBNull;
            }
            
            public bool IsIdProvinciaNull() {
                return this.IsNull(this.tabletcs_Domicilios.IdProvinciaColumn);
            }
            
            public void SetIdProvinciaNull() {
                this[this.tabletcs_Domicilios.IdProvinciaColumn] = System.Convert.DBNull;
            }
            
            public bool IsIdPaisNull() {
                return this.IsNull(this.tabletcs_Domicilios.IdPaisColumn);
            }
            
            public void SetIdPaisNull() {
                this[this.tabletcs_Domicilios.IdPaisColumn] = System.Convert.DBNull;
            }
            
            public bool IsIdResponsableNull() {
                return this.IsNull(this.tabletcs_Domicilios.IdResponsableColumn);
            }
            
            public void SetIdResponsableNull() {
                this[this.tabletcs_Domicilios.IdResponsableColumn] = System.Convert.DBNull;
            }
            
            public bool IsTelefonoNull() {
                return this.IsNull(this.tabletcs_Domicilios.TelefonoColumn);
            }
            
            public void SetTelefonoNull() {
                this[this.tabletcs_Domicilios.TelefonoColumn] = System.Convert.DBNull;
            }
            
            public bool IsFechaCreacionNull() {
                return this.IsNull(this.tabletcs_Domicilios.FechaCreacionColumn);
            }
            
            public void SetFechaCreacionNull() {
                this[this.tabletcs_Domicilios.FechaCreacionColumn] = System.Convert.DBNull;
            }
            
            public bool IsIdConexionCreacionNull() {
                return this.IsNull(this.tabletcs_Domicilios.IdConexionCreacionColumn);
            }
            
            public void SetIdConexionCreacionNull() {
                this[this.tabletcs_Domicilios.IdConexionCreacionColumn] = System.Convert.DBNull;
            }
            
            public bool IsUltimaModificacionNull() {
                return this.IsNull(this.tabletcs_Domicilios.UltimaModificacionColumn);
            }
            
            public void SetUltimaModificacionNull() {
                this[this.tabletcs_Domicilios.UltimaModificacionColumn] = System.Convert.DBNull;
            }
            
            public bool IsIdConexionUltimaModificacionNull() {
                return this.IsNull(this.tabletcs_Domicilios.IdConexionUltimaModificacionColumn);
            }
            
            public void SetIdConexionUltimaModificacionNull() {
                this[this.tabletcs_Domicilios.IdConexionUltimaModificacionColumn] = System.Convert.DBNull;
            }
            
            public bool IsIdReservadoNull() {
                return this.IsNull(this.tabletcs_Domicilios.IdReservadoColumn);
            }
            
            public void SetIdReservadoNull() {
                this[this.tabletcs_Domicilios.IdReservadoColumn] = System.Convert.DBNull;
            }
            
            public bool IsRowIdNull() {
                return this.IsNull(this.tabletcs_Domicilios.RowIdColumn);
            }
            
            public void SetRowIdNull() {
                this[this.tabletcs_Domicilios.RowIdColumn] = System.Convert.DBNull;
            }
            
            public bool IsIdEmpresaNull() {
                return this.IsNull(this.tabletcs_Domicilios.IdEmpresaColumn);
            }
            
            public void SetIdEmpresaNull() {
                this[this.tabletcs_Domicilios.IdEmpresaColumn] = System.Convert.DBNull;
            }
            
            public bool IsIdSucursalNull() {
                return this.IsNull(this.tabletcs_Domicilios.IdSucursalColumn);
            }
            
            public void SetIdSucursalNull() {
                this[this.tabletcs_Domicilios.IdSucursalColumn] = System.Convert.DBNull;
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class tcs_DomiciliosRowChangeEvent : EventArgs {
            
            private tcs_DomiciliosRow eventRow;
            
            private DataRowAction eventAction;
            
            public tcs_DomiciliosRowChangeEvent(tcs_DomiciliosRow row, DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            public tcs_DomiciliosRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            public DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
