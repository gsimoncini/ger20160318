//------------------------------------------------------------------------------
// <autogenerated>
//     This code was generated by a tool.
//     Runtime Version: 1.1.4322.573
//
//     Changes to this file may cause incorrect behavior and will be lost if 
//     the code is regenerated.
// </autogenerated>
//------------------------------------------------------------------------------

namespace mz.erp.commontypes.data {
    using System;
    using System.Data;
    using System.Xml;
    using System.Runtime.Serialization;
    
    
    [Serializable()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Diagnostics.DebuggerStepThrough()]
    [System.ComponentModel.ToolboxItem(true)]
    public class sy_ConexionExDataset : DataSet {
        
        private sy_ConexionDataTable tablesy_Conexion;
        
        public sy_ConexionExDataset() {
            this.InitClass();
            System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            this.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        protected sy_ConexionExDataset(SerializationInfo info, StreamingContext context) {
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((strSchema != null)) {
                DataSet ds = new DataSet();
                ds.ReadXmlSchema(new XmlTextReader(new System.IO.StringReader(strSchema)));
                if ((ds.Tables["sy_Conexion"] != null)) {
                    this.Tables.Add(new sy_ConexionDataTable(ds.Tables["sy_Conexion"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.InitClass();
            }
            this.GetSerializationData(info, context);
            System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            this.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public sy_ConexionDataTable sy_Conexion {
            get {
                return this.tablesy_Conexion;
            }
        }
        
        public override DataSet Clone() {
            sy_ConexionExDataset cln = ((sy_ConexionExDataset)(base.Clone()));
            cln.InitVars();
            return cln;
        }
        
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        protected override void ReadXmlSerializable(XmlReader reader) {
            this.Reset();
            DataSet ds = new DataSet();
            ds.ReadXml(reader);
            if ((ds.Tables["sy_Conexion"] != null)) {
                this.Tables.Add(new sy_ConexionDataTable(ds.Tables["sy_Conexion"]));
            }
            this.DataSetName = ds.DataSetName;
            this.Prefix = ds.Prefix;
            this.Namespace = ds.Namespace;
            this.Locale = ds.Locale;
            this.CaseSensitive = ds.CaseSensitive;
            this.EnforceConstraints = ds.EnforceConstraints;
            this.Merge(ds, false, System.Data.MissingSchemaAction.Add);
            this.InitVars();
        }
        
        protected override System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            System.IO.MemoryStream stream = new System.IO.MemoryStream();
            this.WriteXmlSchema(new XmlTextWriter(stream, null));
            stream.Position = 0;
            return System.Xml.Schema.XmlSchema.Read(new XmlTextReader(stream), null);
        }
        
        internal void InitVars() {
            this.tablesy_Conexion = ((sy_ConexionDataTable)(this.Tables["sy_Conexion"]));
            if ((this.tablesy_Conexion != null)) {
                this.tablesy_Conexion.InitVars();
            }
        }
        
        private void InitClass() {
            this.DataSetName = "sy_ConexionExDataset";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/sy_ConexionEx.xsd";
            this.Locale = new System.Globalization.CultureInfo("en-US");
            this.CaseSensitive = false;
            this.EnforceConstraints = true;
            this.tablesy_Conexion = new sy_ConexionDataTable();
            this.Tables.Add(this.tablesy_Conexion);
        }
        
        private bool ShouldSerializesy_Conexion() {
            return false;
        }
        
        private void SchemaChanged(object sender, System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        public delegate void sy_ConexionRowChangeEventHandler(object sender, sy_ConexionRowChangeEvent e);
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class sy_ConexionDataTable : DataTable, System.Collections.IEnumerable {
            
            private DataColumn columnIdConexion;
            
            private DataColumn columnIdUsuario;
            
            private DataColumn columnIdPerfil;
            
            private DataColumn columnIdEmpresa;
            
            private DataColumn columnIdPuesto;
            
            private DataColumn columnFechaInicio;
            
            private DataColumn columnFechaFinal;
            
            private DataColumn columnIntentosFallidosConexion;
            
            private DataColumn columnFechaCreacion;
            
            private DataColumn columnIdConexionCreacion;
            
            private DataColumn columnUltimaModificacion;
            
            private DataColumn columnIdConexionUltimaModificacion;
            
            private DataColumn columnRowId;
            
            internal sy_ConexionDataTable() : 
                    base("sy_Conexion") {
                this.InitClass();
            }
            
            internal sy_ConexionDataTable(DataTable table) : 
                    base(table.TableName) {
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
                this.DisplayExpression = table.DisplayExpression;
            }
            
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            internal DataColumn IdConexionColumn {
                get {
                    return this.columnIdConexion;
                }
            }
            
            internal DataColumn IdUsuarioColumn {
                get {
                    return this.columnIdUsuario;
                }
            }
            
            internal DataColumn IdPerfilColumn {
                get {
                    return this.columnIdPerfil;
                }
            }
            
            internal DataColumn IdEmpresaColumn {
                get {
                    return this.columnIdEmpresa;
                }
            }
            
            internal DataColumn IdPuestoColumn {
                get {
                    return this.columnIdPuesto;
                }
            }
            
            internal DataColumn FechaInicioColumn {
                get {
                    return this.columnFechaInicio;
                }
            }
            
            internal DataColumn FechaFinalColumn {
                get {
                    return this.columnFechaFinal;
                }
            }
            
            internal DataColumn IntentosFallidosConexionColumn {
                get {
                    return this.columnIntentosFallidosConexion;
                }
            }
            
            internal DataColumn FechaCreacionColumn {
                get {
                    return this.columnFechaCreacion;
                }
            }
            
            internal DataColumn IdConexionCreacionColumn {
                get {
                    return this.columnIdConexionCreacion;
                }
            }
            
            internal DataColumn UltimaModificacionColumn {
                get {
                    return this.columnUltimaModificacion;
                }
            }
            
            internal DataColumn IdConexionUltimaModificacionColumn {
                get {
                    return this.columnIdConexionUltimaModificacion;
                }
            }
            
            internal DataColumn RowIdColumn {
                get {
                    return this.columnRowId;
                }
            }
            
            public sy_ConexionRow this[int index] {
                get {
                    return ((sy_ConexionRow)(this.Rows[index]));
                }
            }
            
            public event sy_ConexionRowChangeEventHandler sy_ConexionRowChanged;
            
            public event sy_ConexionRowChangeEventHandler sy_ConexionRowChanging;
            
            public event sy_ConexionRowChangeEventHandler sy_ConexionRowDeleted;
            
            public event sy_ConexionRowChangeEventHandler sy_ConexionRowDeleting;
            
            public void Addsy_ConexionRow(sy_ConexionRow row) {
                this.Rows.Add(row);
            }
            
            public sy_ConexionRow Addsy_ConexionRow(long IdConexion, string IdUsuario, long IdPerfil, long IdEmpresa, long IdPuesto, System.DateTime FechaInicio, System.DateTime FechaFinal, short IntentosFallidosConexion, System.DateTime FechaCreacion, long IdConexionCreacion, System.Byte[] UltimaModificacion, long IdConexionUltimaModificacion, System.Guid RowId) {
                sy_ConexionRow rowsy_ConexionRow = ((sy_ConexionRow)(this.NewRow()));
                rowsy_ConexionRow.ItemArray = new object[] {
                        IdConexion,
                        IdUsuario,
                        IdPerfil,
                        IdEmpresa,
                        IdPuesto,
                        FechaInicio,
                        FechaFinal,
                        IntentosFallidosConexion,
                        FechaCreacion,
                        IdConexionCreacion,
                        UltimaModificacion,
                        IdConexionUltimaModificacion,
                        RowId};
                this.Rows.Add(rowsy_ConexionRow);
                return rowsy_ConexionRow;
            }
            
            public sy_ConexionRow FindByIdConexion(long IdConexion) {
                return ((sy_ConexionRow)(this.Rows.Find(new object[] {
                            IdConexion})));
            }
            
            public System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            public override DataTable Clone() {
                sy_ConexionDataTable cln = ((sy_ConexionDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            protected override DataTable CreateInstance() {
                return new sy_ConexionDataTable();
            }
            
            internal void InitVars() {
                this.columnIdConexion = this.Columns["IdConexion"];
                this.columnIdUsuario = this.Columns["IdUsuario"];
                this.columnIdPerfil = this.Columns["IdPerfil"];
                this.columnIdEmpresa = this.Columns["IdEmpresa"];
                this.columnIdPuesto = this.Columns["IdPuesto"];
                this.columnFechaInicio = this.Columns["FechaInicio"];
                this.columnFechaFinal = this.Columns["FechaFinal"];
                this.columnIntentosFallidosConexion = this.Columns["IntentosFallidosConexion"];
                this.columnFechaCreacion = this.Columns["FechaCreacion"];
                this.columnIdConexionCreacion = this.Columns["IdConexionCreacion"];
                this.columnUltimaModificacion = this.Columns["UltimaModificacion"];
                this.columnIdConexionUltimaModificacion = this.Columns["IdConexionUltimaModificacion"];
                this.columnRowId = this.Columns["RowId"];
            }
            
            private void InitClass() {
                this.columnIdConexion = new DataColumn("IdConexion", typeof(long), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdConexion);
                this.columnIdUsuario = new DataColumn("IdUsuario", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdUsuario);
                this.columnIdPerfil = new DataColumn("IdPerfil", typeof(long), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdPerfil);
                this.columnIdEmpresa = new DataColumn("IdEmpresa", typeof(long), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdEmpresa);
                this.columnIdPuesto = new DataColumn("IdPuesto", typeof(long), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdPuesto);
                this.columnFechaInicio = new DataColumn("FechaInicio", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnFechaInicio);
                this.columnFechaFinal = new DataColumn("FechaFinal", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnFechaFinal);
                this.columnIntentosFallidosConexion = new DataColumn("IntentosFallidosConexion", typeof(short), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIntentosFallidosConexion);
                this.columnFechaCreacion = new DataColumn("FechaCreacion", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnFechaCreacion);
                this.columnIdConexionCreacion = new DataColumn("IdConexionCreacion", typeof(long), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdConexionCreacion);
                this.columnUltimaModificacion = new DataColumn("UltimaModificacion", typeof(System.Byte[]), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnUltimaModificacion);
                this.columnIdConexionUltimaModificacion = new DataColumn("IdConexionUltimaModificacion", typeof(long), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdConexionUltimaModificacion);
                this.columnRowId = new DataColumn("RowId", typeof(System.Guid), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnRowId);
                this.Constraints.Add(new UniqueConstraint("sy_ConexionExDatasetKey1", new DataColumn[] {
                                this.columnIdConexion}, true));
                this.columnIdConexion.AllowDBNull = false;
                this.columnIdConexion.Unique = true;
                this.columnIdUsuario.AllowDBNull = false;
                this.columnIdPerfil.AllowDBNull = false;
                this.columnIdEmpresa.AllowDBNull = false;
                this.columnIdPuesto.AllowDBNull = false;
                this.columnFechaInicio.AllowDBNull = false;
                this.columnFechaCreacion.AllowDBNull = false;
                this.columnIdConexionCreacion.AllowDBNull = false;
                this.columnUltimaModificacion.ReadOnly = true;
            }
            
            public sy_ConexionRow Newsy_ConexionRow() {
                return ((sy_ConexionRow)(this.NewRow()));
            }
            
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder) {
                return new sy_ConexionRow(builder);
            }
            
            protected override System.Type GetRowType() {
                return typeof(sy_ConexionRow);
            }
            
            protected override void OnRowChanged(DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.sy_ConexionRowChanged != null)) {
                    this.sy_ConexionRowChanged(this, new sy_ConexionRowChangeEvent(((sy_ConexionRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowChanging(DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.sy_ConexionRowChanging != null)) {
                    this.sy_ConexionRowChanging(this, new sy_ConexionRowChangeEvent(((sy_ConexionRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleted(DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.sy_ConexionRowDeleted != null)) {
                    this.sy_ConexionRowDeleted(this, new sy_ConexionRowChangeEvent(((sy_ConexionRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleting(DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.sy_ConexionRowDeleting != null)) {
                    this.sy_ConexionRowDeleting(this, new sy_ConexionRowChangeEvent(((sy_ConexionRow)(e.Row)), e.Action));
                }
            }
            
            public void Removesy_ConexionRow(sy_ConexionRow row) {
                this.Rows.Remove(row);
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class sy_ConexionRow : DataRow {
            
            private sy_ConexionDataTable tablesy_Conexion;
            
            internal sy_ConexionRow(DataRowBuilder rb) : 
                    base(rb) {
                this.tablesy_Conexion = ((sy_ConexionDataTable)(this.Table));
            }
            
            public long IdConexion {
                get {
                    return ((long)(this[this.tablesy_Conexion.IdConexionColumn]));
                }
                set {
                    this[this.tablesy_Conexion.IdConexionColumn] = value;
                }
            }
            
            public string IdUsuario {
                get {
                    return ((string)(this[this.tablesy_Conexion.IdUsuarioColumn]));
                }
                set {
                    this[this.tablesy_Conexion.IdUsuarioColumn] = value;
                }
            }
            
            public long IdPerfil {
                get {
                    return ((long)(this[this.tablesy_Conexion.IdPerfilColumn]));
                }
                set {
                    this[this.tablesy_Conexion.IdPerfilColumn] = value;
                }
            }
            
            public long IdEmpresa {
                get {
                    return ((long)(this[this.tablesy_Conexion.IdEmpresaColumn]));
                }
                set {
                    this[this.tablesy_Conexion.IdEmpresaColumn] = value;
                }
            }
            
            public long IdPuesto {
                get {
                    return ((long)(this[this.tablesy_Conexion.IdPuestoColumn]));
                }
                set {
                    this[this.tablesy_Conexion.IdPuestoColumn] = value;
                }
            }
            
            public System.DateTime FechaInicio {
                get {
                    return ((System.DateTime)(this[this.tablesy_Conexion.FechaInicioColumn]));
                }
                set {
                    this[this.tablesy_Conexion.FechaInicioColumn] = value;
                }
            }
            
            public System.DateTime FechaFinal {
                get {
                    try {
                        return ((System.DateTime)(this[this.tablesy_Conexion.FechaFinalColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tablesy_Conexion.FechaFinalColumn] = value;
                }
            }
            
            public short IntentosFallidosConexion {
                get {
                    try {
                        return ((short)(this[this.tablesy_Conexion.IntentosFallidosConexionColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tablesy_Conexion.IntentosFallidosConexionColumn] = value;
                }
            }
            
            public System.DateTime FechaCreacion {
                get {
                    return ((System.DateTime)(this[this.tablesy_Conexion.FechaCreacionColumn]));
                }
                set {
                    this[this.tablesy_Conexion.FechaCreacionColumn] = value;
                }
            }
            
            public long IdConexionCreacion {
                get {
                    return ((long)(this[this.tablesy_Conexion.IdConexionCreacionColumn]));
                }
                set {
                    this[this.tablesy_Conexion.IdConexionCreacionColumn] = value;
                }
            }
            
            public System.Byte[] UltimaModificacion {
                get {
                    try {
                        return ((System.Byte[])(this[this.tablesy_Conexion.UltimaModificacionColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tablesy_Conexion.UltimaModificacionColumn] = value;
                }
            }
            
            public long IdConexionUltimaModificacion {
                get {
                    try {
                        return ((long)(this[this.tablesy_Conexion.IdConexionUltimaModificacionColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tablesy_Conexion.IdConexionUltimaModificacionColumn] = value;
                }
            }
            
            public System.Guid RowId {
                get {
                    try {
                        return ((System.Guid)(this[this.tablesy_Conexion.RowIdColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tablesy_Conexion.RowIdColumn] = value;
                }
            }
            
            public bool IsFechaFinalNull() {
                return this.IsNull(this.tablesy_Conexion.FechaFinalColumn);
            }
            
            public void SetFechaFinalNull() {
                this[this.tablesy_Conexion.FechaFinalColumn] = System.Convert.DBNull;
            }
            
            public bool IsIntentosFallidosConexionNull() {
                return this.IsNull(this.tablesy_Conexion.IntentosFallidosConexionColumn);
            }
            
            public void SetIntentosFallidosConexionNull() {
                this[this.tablesy_Conexion.IntentosFallidosConexionColumn] = System.Convert.DBNull;
            }
            
            public bool IsUltimaModificacionNull() {
                return this.IsNull(this.tablesy_Conexion.UltimaModificacionColumn);
            }
            
            public void SetUltimaModificacionNull() {
                this[this.tablesy_Conexion.UltimaModificacionColumn] = System.Convert.DBNull;
            }
            
            public bool IsIdConexionUltimaModificacionNull() {
                return this.IsNull(this.tablesy_Conexion.IdConexionUltimaModificacionColumn);
            }
            
            public void SetIdConexionUltimaModificacionNull() {
                this[this.tablesy_Conexion.IdConexionUltimaModificacionColumn] = System.Convert.DBNull;
            }
            
            public bool IsRowIdNull() {
                return this.IsNull(this.tablesy_Conexion.RowIdColumn);
            }
            
            public void SetRowIdNull() {
                this[this.tablesy_Conexion.RowIdColumn] = System.Convert.DBNull;
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class sy_ConexionRowChangeEvent : EventArgs {
            
            private sy_ConexionRow eventRow;
            
            private DataRowAction eventAction;
            
            public sy_ConexionRowChangeEvent(sy_ConexionRow row, DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            public sy_ConexionRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            public DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
