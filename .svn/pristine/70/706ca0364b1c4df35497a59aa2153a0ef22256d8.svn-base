//------------------------------------------------------------------------------
// <autogenerated>
//     This code was generated by a tool.
//     Runtime Version: 1.1.4322.573
//
//     Changes to this file may cause incorrect behavior and will be lost if 
//     the code is regenerated.
// </autogenerated>
//------------------------------------------------------------------------------

namespace mz.erp.commontypes.data {
    using System;
    using System.Data;
    using System.Xml;
    using System.Runtime.Serialization;
    
    
    [Serializable()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Diagnostics.DebuggerStepThrough()]
    [System.ComponentModel.ToolboxItem(true)]
    public class tsa_CuentasObservacionesDataset : DataSet {
        
        private tsa_CuentasObservacionesDataTable tabletsa_CuentasObservaciones;
        
        public tsa_CuentasObservacionesDataset() {
            this.InitClass();
            System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            this.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        protected tsa_CuentasObservacionesDataset(SerializationInfo info, StreamingContext context) {
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((strSchema != null)) {
                DataSet ds = new DataSet();
                ds.ReadXmlSchema(new XmlTextReader(new System.IO.StringReader(strSchema)));
                if ((ds.Tables["tsa_CuentasObservaciones"] != null)) {
                    this.Tables.Add(new tsa_CuentasObservacionesDataTable(ds.Tables["tsa_CuentasObservaciones"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.InitClass();
            }
            this.GetSerializationData(info, context);
            System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            this.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public tsa_CuentasObservacionesDataTable tsa_CuentasObservaciones {
            get {
                return this.tabletsa_CuentasObservaciones;
            }
        }
        
        public override DataSet Clone() {
            tsa_CuentasObservacionesDataset cln = ((tsa_CuentasObservacionesDataset)(base.Clone()));
            cln.InitVars();
            return cln;
        }
        
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        protected override void ReadXmlSerializable(XmlReader reader) {
            this.Reset();
            DataSet ds = new DataSet();
            ds.ReadXml(reader);
            if ((ds.Tables["tsa_CuentasObservaciones"] != null)) {
                this.Tables.Add(new tsa_CuentasObservacionesDataTable(ds.Tables["tsa_CuentasObservaciones"]));
            }
            this.DataSetName = ds.DataSetName;
            this.Prefix = ds.Prefix;
            this.Namespace = ds.Namespace;
            this.Locale = ds.Locale;
            this.CaseSensitive = ds.CaseSensitive;
            this.EnforceConstraints = ds.EnforceConstraints;
            this.Merge(ds, false, System.Data.MissingSchemaAction.Add);
            this.InitVars();
        }
        
        protected override System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            System.IO.MemoryStream stream = new System.IO.MemoryStream();
            this.WriteXmlSchema(new XmlTextWriter(stream, null));
            stream.Position = 0;
            return System.Xml.Schema.XmlSchema.Read(new XmlTextReader(stream), null);
        }
        
        internal void InitVars() {
            this.tabletsa_CuentasObservaciones = ((tsa_CuentasObservacionesDataTable)(this.Tables["tsa_CuentasObservaciones"]));
            if ((this.tabletsa_CuentasObservaciones != null)) {
                this.tabletsa_CuentasObservaciones.InitVars();
            }
        }
        
        private void InitClass() {
            this.DataSetName = "tsa_CuentasObservacionesDataset";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/tsa_CuentasObservaciones.xsd";
            this.Locale = new System.Globalization.CultureInfo("en-US");
            this.CaseSensitive = false;
            this.EnforceConstraints = true;
            this.tabletsa_CuentasObservaciones = new tsa_CuentasObservacionesDataTable();
            this.Tables.Add(this.tabletsa_CuentasObservaciones);
        }
        
        private bool ShouldSerializetsa_CuentasObservaciones() {
            return false;
        }
        
        private void SchemaChanged(object sender, System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        public delegate void tsa_CuentasObservacionesRowChangeEventHandler(object sender, tsa_CuentasObservacionesRowChangeEvent e);
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class tsa_CuentasObservacionesDataTable : DataTable, System.Collections.IEnumerable {
            
            private DataColumn columnIdCuentaObservacion;
            
            private DataColumn columnIdCuenta;
            
            private DataColumn columnTitulo;
            
            private DataColumn columnObservacion;
            
            private DataColumn columnIdResponsable;
            
            private DataColumn columnFecha;
            
            private DataColumn columnIdCuentaObservacionTipo;
            
            private DataColumn columnIdCuentaObservacionSubTipo;
            
            private DataColumn columnIdCuentaObservacionEstado;
            
            private DataColumn columnFechaCreacion;
            
            private DataColumn columnActivo;
            
            private DataColumn columnIdConexionCreacion;
            
            private DataColumn columnUltimaModificacion;
            
            private DataColumn columnIdConexionUltimaModificacion;
            
            private DataColumn columnIdReservado;
            
            private DataColumn columnRowId;
            
            private DataColumn columnIdSucursal;
            
            private DataColumn columnIdEmpresa;
            
            private DataColumn columnFechaVencimiento;
            
            private DataColumn columnFechaAviso;
            
            internal tsa_CuentasObservacionesDataTable() : 
                    base("tsa_CuentasObservaciones") {
                this.InitClass();
            }
            
            internal tsa_CuentasObservacionesDataTable(DataTable table) : 
                    base(table.TableName) {
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
                this.DisplayExpression = table.DisplayExpression;
            }
            
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            internal DataColumn IdCuentaObservacionColumn {
                get {
                    return this.columnIdCuentaObservacion;
                }
            }
            
            internal DataColumn IdCuentaColumn {
                get {
                    return this.columnIdCuenta;
                }
            }
            
            internal DataColumn TituloColumn {
                get {
                    return this.columnTitulo;
                }
            }
            
            internal DataColumn ObservacionColumn {
                get {
                    return this.columnObservacion;
                }
            }
            
            internal DataColumn IdResponsableColumn {
                get {
                    return this.columnIdResponsable;
                }
            }
            
            internal DataColumn FechaColumn {
                get {
                    return this.columnFecha;
                }
            }
            
            internal DataColumn IdCuentaObservacionTipoColumn {
                get {
                    return this.columnIdCuentaObservacionTipo;
                }
            }
            
            internal DataColumn IdCuentaObservacionSubTipoColumn {
                get {
                    return this.columnIdCuentaObservacionSubTipo;
                }
            }
            
            internal DataColumn IdCuentaObservacionEstadoColumn {
                get {
                    return this.columnIdCuentaObservacionEstado;
                }
            }
            
            internal DataColumn FechaCreacionColumn {
                get {
                    return this.columnFechaCreacion;
                }
            }
            
            internal DataColumn ActivoColumn {
                get {
                    return this.columnActivo;
                }
            }
            
            internal DataColumn IdConexionCreacionColumn {
                get {
                    return this.columnIdConexionCreacion;
                }
            }
            
            internal DataColumn UltimaModificacionColumn {
                get {
                    return this.columnUltimaModificacion;
                }
            }
            
            internal DataColumn IdConexionUltimaModificacionColumn {
                get {
                    return this.columnIdConexionUltimaModificacion;
                }
            }
            
            internal DataColumn IdReservadoColumn {
                get {
                    return this.columnIdReservado;
                }
            }
            
            internal DataColumn RowIdColumn {
                get {
                    return this.columnRowId;
                }
            }
            
            internal DataColumn IdSucursalColumn {
                get {
                    return this.columnIdSucursal;
                }
            }
            
            internal DataColumn IdEmpresaColumn {
                get {
                    return this.columnIdEmpresa;
                }
            }
            
            internal DataColumn FechaVencimientoColumn {
                get {
                    return this.columnFechaVencimiento;
                }
            }
            
            internal DataColumn FechaAvisoColumn {
                get {
                    return this.columnFechaAviso;
                }
            }
            
            public tsa_CuentasObservacionesRow this[int index] {
                get {
                    return ((tsa_CuentasObservacionesRow)(this.Rows[index]));
                }
            }
            
            public event tsa_CuentasObservacionesRowChangeEventHandler tsa_CuentasObservacionesRowChanged;
            
            public event tsa_CuentasObservacionesRowChangeEventHandler tsa_CuentasObservacionesRowChanging;
            
            public event tsa_CuentasObservacionesRowChangeEventHandler tsa_CuentasObservacionesRowDeleted;
            
            public event tsa_CuentasObservacionesRowChangeEventHandler tsa_CuentasObservacionesRowDeleting;
            
            public void Addtsa_CuentasObservacionesRow(tsa_CuentasObservacionesRow row) {
                this.Rows.Add(row);
            }
            
            public tsa_CuentasObservacionesRow Addtsa_CuentasObservacionesRow(
                        string IdCuentaObservacion, 
                        string IdCuenta, 
                        string Titulo, 
                        string Observacion, 
                        string IdResponsable, 
                        System.DateTime Fecha, 
                        string IdCuentaObservacionTipo, 
                        string IdCuentaObservacionSubTipo, 
                        string IdCuentaObservacionEstado, 
                        System.DateTime FechaCreacion, 
                        bool Activo, 
                        long IdConexionCreacion, 
                        System.Byte[] UltimaModificacion, 
                        long IdConexionUltimaModificacion, 
                        long IdReservado, 
                        System.Guid RowId, 
                        long IdSucursal, 
                        long IdEmpresa, 
                        System.DateTime FechaVencimiento, 
                        System.DateTime FechaAviso) {
                tsa_CuentasObservacionesRow rowtsa_CuentasObservacionesRow = ((tsa_CuentasObservacionesRow)(this.NewRow()));
                rowtsa_CuentasObservacionesRow.ItemArray = new object[] {
                        IdCuentaObservacion,
                        IdCuenta,
                        Titulo,
                        Observacion,
                        IdResponsable,
                        Fecha,
                        IdCuentaObservacionTipo,
                        IdCuentaObservacionSubTipo,
                        IdCuentaObservacionEstado,
                        FechaCreacion,
                        Activo,
                        IdConexionCreacion,
                        UltimaModificacion,
                        IdConexionUltimaModificacion,
                        IdReservado,
                        RowId,
                        IdSucursal,
                        IdEmpresa,
                        FechaVencimiento,
                        FechaAviso};
                this.Rows.Add(rowtsa_CuentasObservacionesRow);
                return rowtsa_CuentasObservacionesRow;
            }
            
            public tsa_CuentasObservacionesRow FindByIdCuentaObservacion(string IdCuentaObservacion) {
                return ((tsa_CuentasObservacionesRow)(this.Rows.Find(new object[] {
                            IdCuentaObservacion})));
            }
            
            public System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            public override DataTable Clone() {
                tsa_CuentasObservacionesDataTable cln = ((tsa_CuentasObservacionesDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            protected override DataTable CreateInstance() {
                return new tsa_CuentasObservacionesDataTable();
            }
            
            internal void InitVars() {
                this.columnIdCuentaObservacion = this.Columns["IdCuentaObservacion"];
                this.columnIdCuenta = this.Columns["IdCuenta"];
                this.columnTitulo = this.Columns["Titulo"];
                this.columnObservacion = this.Columns["Observacion"];
                this.columnIdResponsable = this.Columns["IdResponsable"];
                this.columnFecha = this.Columns["Fecha"];
                this.columnIdCuentaObservacionTipo = this.Columns["IdCuentaObservacionTipo"];
                this.columnIdCuentaObservacionSubTipo = this.Columns["IdCuentaObservacionSubTipo"];
                this.columnIdCuentaObservacionEstado = this.Columns["IdCuentaObservacionEstado"];
                this.columnFechaCreacion = this.Columns["FechaCreacion"];
                this.columnActivo = this.Columns["Activo"];
                this.columnIdConexionCreacion = this.Columns["IdConexionCreacion"];
                this.columnUltimaModificacion = this.Columns["UltimaModificacion"];
                this.columnIdConexionUltimaModificacion = this.Columns["IdConexionUltimaModificacion"];
                this.columnIdReservado = this.Columns["IdReservado"];
                this.columnRowId = this.Columns["RowId"];
                this.columnIdSucursal = this.Columns["IdSucursal"];
                this.columnIdEmpresa = this.Columns["IdEmpresa"];
                this.columnFechaVencimiento = this.Columns["FechaVencimiento"];
                this.columnFechaAviso = this.Columns["FechaAviso"];
            }
            
            private void InitClass() {
                this.columnIdCuentaObservacion = new DataColumn("IdCuentaObservacion", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdCuentaObservacion);
                this.columnIdCuenta = new DataColumn("IdCuenta", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdCuenta);
                this.columnTitulo = new DataColumn("Titulo", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnTitulo);
                this.columnObservacion = new DataColumn("Observacion", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnObservacion);
                this.columnIdResponsable = new DataColumn("IdResponsable", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdResponsable);
                this.columnFecha = new DataColumn("Fecha", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnFecha);
                this.columnIdCuentaObservacionTipo = new DataColumn("IdCuentaObservacionTipo", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdCuentaObservacionTipo);
                this.columnIdCuentaObservacionSubTipo = new DataColumn("IdCuentaObservacionSubTipo", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdCuentaObservacionSubTipo);
                this.columnIdCuentaObservacionEstado = new DataColumn("IdCuentaObservacionEstado", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdCuentaObservacionEstado);
                this.columnFechaCreacion = new DataColumn("FechaCreacion", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnFechaCreacion);
                this.columnActivo = new DataColumn("Activo", typeof(bool), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnActivo);
                this.columnIdConexionCreacion = new DataColumn("IdConexionCreacion", typeof(long), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdConexionCreacion);
                this.columnUltimaModificacion = new DataColumn("UltimaModificacion", typeof(System.Byte[]), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnUltimaModificacion);
                this.columnIdConexionUltimaModificacion = new DataColumn("IdConexionUltimaModificacion", typeof(long), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdConexionUltimaModificacion);
                this.columnIdReservado = new DataColumn("IdReservado", typeof(long), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdReservado);
                this.columnRowId = new DataColumn("RowId", typeof(System.Guid), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnRowId);
                this.columnIdSucursal = new DataColumn("IdSucursal", typeof(long), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdSucursal);
                this.columnIdEmpresa = new DataColumn("IdEmpresa", typeof(long), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdEmpresa);
                this.columnFechaVencimiento = new DataColumn("FechaVencimiento", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnFechaVencimiento);
                this.columnFechaAviso = new DataColumn("FechaAviso", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnFechaAviso);
                this.Constraints.Add(new UniqueConstraint("tsa_CuentasObservacionesKey1", new DataColumn[] {
                                this.columnIdCuentaObservacion}, true));
                this.columnIdCuentaObservacion.AllowDBNull = false;
                this.columnIdCuentaObservacion.Unique = true;
                this.columnIdCuenta.AllowDBNull = false;
                this.columnTitulo.AllowDBNull = false;
                this.columnObservacion.AllowDBNull = false;
                this.columnIdCuentaObservacionTipo.AllowDBNull = false;
                this.columnUltimaModificacion.ReadOnly = true;
            }
            
            public tsa_CuentasObservacionesRow Newtsa_CuentasObservacionesRow() {
                return ((tsa_CuentasObservacionesRow)(this.NewRow()));
            }
            
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder) {
                return new tsa_CuentasObservacionesRow(builder);
            }
            
            protected override System.Type GetRowType() {
                return typeof(tsa_CuentasObservacionesRow);
            }
            
            protected override void OnRowChanged(DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.tsa_CuentasObservacionesRowChanged != null)) {
                    this.tsa_CuentasObservacionesRowChanged(this, new tsa_CuentasObservacionesRowChangeEvent(((tsa_CuentasObservacionesRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowChanging(DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.tsa_CuentasObservacionesRowChanging != null)) {
                    this.tsa_CuentasObservacionesRowChanging(this, new tsa_CuentasObservacionesRowChangeEvent(((tsa_CuentasObservacionesRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleted(DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.tsa_CuentasObservacionesRowDeleted != null)) {
                    this.tsa_CuentasObservacionesRowDeleted(this, new tsa_CuentasObservacionesRowChangeEvent(((tsa_CuentasObservacionesRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleting(DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.tsa_CuentasObservacionesRowDeleting != null)) {
                    this.tsa_CuentasObservacionesRowDeleting(this, new tsa_CuentasObservacionesRowChangeEvent(((tsa_CuentasObservacionesRow)(e.Row)), e.Action));
                }
            }
            
            public void Removetsa_CuentasObservacionesRow(tsa_CuentasObservacionesRow row) {
                this.Rows.Remove(row);
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class tsa_CuentasObservacionesRow : DataRow {
            
            private tsa_CuentasObservacionesDataTable tabletsa_CuentasObservaciones;
            
            internal tsa_CuentasObservacionesRow(DataRowBuilder rb) : 
                    base(rb) {
                this.tabletsa_CuentasObservaciones = ((tsa_CuentasObservacionesDataTable)(this.Table));
            }
            
            public string IdCuentaObservacion {
                get {
                    return ((string)(this[this.tabletsa_CuentasObservaciones.IdCuentaObservacionColumn]));
                }
                set {
                    this[this.tabletsa_CuentasObservaciones.IdCuentaObservacionColumn] = value;
                }
            }
            
            public string IdCuenta {
                get {
                    return ((string)(this[this.tabletsa_CuentasObservaciones.IdCuentaColumn]));
                }
                set {
                    this[this.tabletsa_CuentasObservaciones.IdCuentaColumn] = value;
                }
            }
            
            public string Titulo {
                get {
                    return ((string)(this[this.tabletsa_CuentasObservaciones.TituloColumn]));
                }
                set {
                    this[this.tabletsa_CuentasObservaciones.TituloColumn] = value;
                }
            }
            
            public string Observacion {
                get {
                    return ((string)(this[this.tabletsa_CuentasObservaciones.ObservacionColumn]));
                }
                set {
                    this[this.tabletsa_CuentasObservaciones.ObservacionColumn] = value;
                }
            }
            
            public string IdResponsable {
                get {
                    try {
                        return ((string)(this[this.tabletsa_CuentasObservaciones.IdResponsableColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletsa_CuentasObservaciones.IdResponsableColumn] = value;
                }
            }
            
            public System.DateTime Fecha {
                get {
                    try {
                        return ((System.DateTime)(this[this.tabletsa_CuentasObservaciones.FechaColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletsa_CuentasObservaciones.FechaColumn] = value;
                }
            }
            
            public string IdCuentaObservacionTipo {
                get {
                    return ((string)(this[this.tabletsa_CuentasObservaciones.IdCuentaObservacionTipoColumn]));
                }
                set {
                    this[this.tabletsa_CuentasObservaciones.IdCuentaObservacionTipoColumn] = value;
                }
            }
            
            public string IdCuentaObservacionSubTipo {
                get {
                    try {
                        return ((string)(this[this.tabletsa_CuentasObservaciones.IdCuentaObservacionSubTipoColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletsa_CuentasObservaciones.IdCuentaObservacionSubTipoColumn] = value;
                }
            }
            
            public string IdCuentaObservacionEstado {
                get {
                    try {
                        return ((string)(this[this.tabletsa_CuentasObservaciones.IdCuentaObservacionEstadoColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletsa_CuentasObservaciones.IdCuentaObservacionEstadoColumn] = value;
                }
            }
            
            public System.DateTime FechaCreacion {
                get {
                    try {
                        return ((System.DateTime)(this[this.tabletsa_CuentasObservaciones.FechaCreacionColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletsa_CuentasObservaciones.FechaCreacionColumn] = value;
                }
            }
            
            public bool Activo {
                get {
                    try {
                        return ((bool)(this[this.tabletsa_CuentasObservaciones.ActivoColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletsa_CuentasObservaciones.ActivoColumn] = value;
                }
            }
            
            public long IdConexionCreacion {
                get {
                    try {
                        return ((long)(this[this.tabletsa_CuentasObservaciones.IdConexionCreacionColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletsa_CuentasObservaciones.IdConexionCreacionColumn] = value;
                }
            }
            
            public System.Byte[] UltimaModificacion {
                get {
                    try {
                        return ((System.Byte[])(this[this.tabletsa_CuentasObservaciones.UltimaModificacionColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletsa_CuentasObservaciones.UltimaModificacionColumn] = value;
                }
            }
            
            public long IdConexionUltimaModificacion {
                get {
                    try {
                        return ((long)(this[this.tabletsa_CuentasObservaciones.IdConexionUltimaModificacionColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletsa_CuentasObservaciones.IdConexionUltimaModificacionColumn] = value;
                }
            }
            
            public long IdReservado {
                get {
                    try {
                        return ((long)(this[this.tabletsa_CuentasObservaciones.IdReservadoColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletsa_CuentasObservaciones.IdReservadoColumn] = value;
                }
            }
            
            public System.Guid RowId {
                get {
                    try {
                        return ((System.Guid)(this[this.tabletsa_CuentasObservaciones.RowIdColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletsa_CuentasObservaciones.RowIdColumn] = value;
                }
            }
            
            public long IdSucursal {
                get {
                    try {
                        return ((long)(this[this.tabletsa_CuentasObservaciones.IdSucursalColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletsa_CuentasObservaciones.IdSucursalColumn] = value;
                }
            }
            
            public long IdEmpresa {
                get {
                    try {
                        return ((long)(this[this.tabletsa_CuentasObservaciones.IdEmpresaColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletsa_CuentasObservaciones.IdEmpresaColumn] = value;
                }
            }
            
            public System.DateTime FechaVencimiento {
                get {
                    try {
                        return ((System.DateTime)(this[this.tabletsa_CuentasObservaciones.FechaVencimientoColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletsa_CuentasObservaciones.FechaVencimientoColumn] = value;
                }
            }
            
            public System.DateTime FechaAviso {
                get {
                    try {
                        return ((System.DateTime)(this[this.tabletsa_CuentasObservaciones.FechaAvisoColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletsa_CuentasObservaciones.FechaAvisoColumn] = value;
                }
            }
            
            public bool IsIdResponsableNull() {
                return this.IsNull(this.tabletsa_CuentasObservaciones.IdResponsableColumn);
            }
            
            public void SetIdResponsableNull() {
                this[this.tabletsa_CuentasObservaciones.IdResponsableColumn] = System.Convert.DBNull;
            }
            
            public bool IsFechaNull() {
                return this.IsNull(this.tabletsa_CuentasObservaciones.FechaColumn);
            }
            
            public void SetFechaNull() {
                this[this.tabletsa_CuentasObservaciones.FechaColumn] = System.Convert.DBNull;
            }
            
            public bool IsIdCuentaObservacionSubTipoNull() {
                return this.IsNull(this.tabletsa_CuentasObservaciones.IdCuentaObservacionSubTipoColumn);
            }
            
            public void SetIdCuentaObservacionSubTipoNull() {
                this[this.tabletsa_CuentasObservaciones.IdCuentaObservacionSubTipoColumn] = System.Convert.DBNull;
            }
            
            public bool IsIdCuentaObservacionEstadoNull() {
                return this.IsNull(this.tabletsa_CuentasObservaciones.IdCuentaObservacionEstadoColumn);
            }
            
            public void SetIdCuentaObservacionEstadoNull() {
                this[this.tabletsa_CuentasObservaciones.IdCuentaObservacionEstadoColumn] = System.Convert.DBNull;
            }
            
            public bool IsFechaCreacionNull() {
                return this.IsNull(this.tabletsa_CuentasObservaciones.FechaCreacionColumn);
            }
            
            public void SetFechaCreacionNull() {
                this[this.tabletsa_CuentasObservaciones.FechaCreacionColumn] = System.Convert.DBNull;
            }
            
            public bool IsActivoNull() {
                return this.IsNull(this.tabletsa_CuentasObservaciones.ActivoColumn);
            }
            
            public void SetActivoNull() {
                this[this.tabletsa_CuentasObservaciones.ActivoColumn] = System.Convert.DBNull;
            }
            
            public bool IsIdConexionCreacionNull() {
                return this.IsNull(this.tabletsa_CuentasObservaciones.IdConexionCreacionColumn);
            }
            
            public void SetIdConexionCreacionNull() {
                this[this.tabletsa_CuentasObservaciones.IdConexionCreacionColumn] = System.Convert.DBNull;
            }
            
            public bool IsUltimaModificacionNull() {
                return this.IsNull(this.tabletsa_CuentasObservaciones.UltimaModificacionColumn);
            }
            
            public void SetUltimaModificacionNull() {
                this[this.tabletsa_CuentasObservaciones.UltimaModificacionColumn] = System.Convert.DBNull;
            }
            
            public bool IsIdConexionUltimaModificacionNull() {
                return this.IsNull(this.tabletsa_CuentasObservaciones.IdConexionUltimaModificacionColumn);
            }
            
            public void SetIdConexionUltimaModificacionNull() {
                this[this.tabletsa_CuentasObservaciones.IdConexionUltimaModificacionColumn] = System.Convert.DBNull;
            }
            
            public bool IsIdReservadoNull() {
                return this.IsNull(this.tabletsa_CuentasObservaciones.IdReservadoColumn);
            }
            
            public void SetIdReservadoNull() {
                this[this.tabletsa_CuentasObservaciones.IdReservadoColumn] = System.Convert.DBNull;
            }
            
            public bool IsRowIdNull() {
                return this.IsNull(this.tabletsa_CuentasObservaciones.RowIdColumn);
            }
            
            public void SetRowIdNull() {
                this[this.tabletsa_CuentasObservaciones.RowIdColumn] = System.Convert.DBNull;
            }
            
            public bool IsIdSucursalNull() {
                return this.IsNull(this.tabletsa_CuentasObservaciones.IdSucursalColumn);
            }
            
            public void SetIdSucursalNull() {
                this[this.tabletsa_CuentasObservaciones.IdSucursalColumn] = System.Convert.DBNull;
            }
            
            public bool IsIdEmpresaNull() {
                return this.IsNull(this.tabletsa_CuentasObservaciones.IdEmpresaColumn);
            }
            
            public void SetIdEmpresaNull() {
                this[this.tabletsa_CuentasObservaciones.IdEmpresaColumn] = System.Convert.DBNull;
            }
            
            public bool IsFechaVencimientoNull() {
                return this.IsNull(this.tabletsa_CuentasObservaciones.FechaVencimientoColumn);
            }
            
            public void SetFechaVencimientoNull() {
                this[this.tabletsa_CuentasObservaciones.FechaVencimientoColumn] = System.Convert.DBNull;
            }
            
            public bool IsFechaAvisoNull() {
                return this.IsNull(this.tabletsa_CuentasObservaciones.FechaAvisoColumn);
            }
            
            public void SetFechaAvisoNull() {
                this[this.tabletsa_CuentasObservaciones.FechaAvisoColumn] = System.Convert.DBNull;
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class tsa_CuentasObservacionesRowChangeEvent : EventArgs {
            
            private tsa_CuentasObservacionesRow eventRow;
            
            private DataRowAction eventAction;
            
            public tsa_CuentasObservacionesRowChangeEvent(tsa_CuentasObservacionesRow row, DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            public tsa_CuentasObservacionesRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            public DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
