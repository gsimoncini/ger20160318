//------------------------------------------------------------------------------
// <autogenerated>
//     This code was generated by a tool.
//     Runtime Version: 1.1.4322.573
//
//     Changes to this file may cause incorrect behavior and will be lost if 
//     the code is regenerated.
// </autogenerated>
//------------------------------------------------------------------------------

namespace mz.erp.commontypes.data {
    using System;
    using System.Data;
    using System.Xml;
    using System.Runtime.Serialization;
    
    
    [Serializable()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Diagnostics.DebuggerStepThrough()]
    [System.ComponentModel.ToolboxItem(true)]
    public class tfi_InstanciasCajaExDataset : DataSet {
        
        private tfi_CajasDataTable tabletfi_Cajas;
        
        private tfi_InstanciasCajaDataTable tabletfi_InstanciasCaja;
        
        private tfi_ResponsablesCajasDataTable tabletfi_ResponsablesCajas;
        
        private Pr_tfi_Cajas_GetByResponsableDataTable tablePr_tfi_Cajas_GetByResponsable;
        
        private Pr_tfi_InstanciasCaja_GetByResponsableDataTable tablePr_tfi_InstanciasCaja_GetByResponsable;
        
        private tfi_InstanciasCajaCierresDataTable tabletfi_InstanciasCajaCierres;
        
        private Pr_tfi_InstanciasCaja_CierreCajaDataTable tablePr_tfi_InstanciasCaja_CierreCaja;
        
        public tfi_InstanciasCajaExDataset() {
            this.InitClass();
            System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            this.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        protected tfi_InstanciasCajaExDataset(SerializationInfo info, StreamingContext context) {
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((strSchema != null)) {
                DataSet ds = new DataSet();
                ds.ReadXmlSchema(new XmlTextReader(new System.IO.StringReader(strSchema)));
                if ((ds.Tables["tfi_Cajas"] != null)) {
                    this.Tables.Add(new tfi_CajasDataTable(ds.Tables["tfi_Cajas"]));
                }
                if ((ds.Tables["tfi_InstanciasCaja"] != null)) {
                    this.Tables.Add(new tfi_InstanciasCajaDataTable(ds.Tables["tfi_InstanciasCaja"]));
                }
                if ((ds.Tables["tfi_ResponsablesCajas"] != null)) {
                    this.Tables.Add(new tfi_ResponsablesCajasDataTable(ds.Tables["tfi_ResponsablesCajas"]));
                }
                if ((ds.Tables["Pr_tfi_Cajas_GetByResponsable"] != null)) {
                    this.Tables.Add(new Pr_tfi_Cajas_GetByResponsableDataTable(ds.Tables["Pr_tfi_Cajas_GetByResponsable"]));
                }
                if ((ds.Tables["Pr_tfi_InstanciasCaja_GetByResponsable"] != null)) {
                    this.Tables.Add(new Pr_tfi_InstanciasCaja_GetByResponsableDataTable(ds.Tables["Pr_tfi_InstanciasCaja_GetByResponsable"]));
                }
                if ((ds.Tables["tfi_InstanciasCajaCierres"] != null)) {
                    this.Tables.Add(new tfi_InstanciasCajaCierresDataTable(ds.Tables["tfi_InstanciasCajaCierres"]));
                }
                if ((ds.Tables["Pr_tfi_InstanciasCaja_CierreCaja"] != null)) {
                    this.Tables.Add(new Pr_tfi_InstanciasCaja_CierreCajaDataTable(ds.Tables["Pr_tfi_InstanciasCaja_CierreCaja"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.InitClass();
            }
            this.GetSerializationData(info, context);
            System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            this.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public tfi_CajasDataTable tfi_Cajas {
            get {
                return this.tabletfi_Cajas;
            }
        }
        
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public tfi_InstanciasCajaDataTable tfi_InstanciasCaja {
            get {
                return this.tabletfi_InstanciasCaja;
            }
        }
        
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public tfi_ResponsablesCajasDataTable tfi_ResponsablesCajas {
            get {
                return this.tabletfi_ResponsablesCajas;
            }
        }
        
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public Pr_tfi_Cajas_GetByResponsableDataTable Pr_tfi_Cajas_GetByResponsable {
            get {
                return this.tablePr_tfi_Cajas_GetByResponsable;
            }
        }
        
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public Pr_tfi_InstanciasCaja_GetByResponsableDataTable Pr_tfi_InstanciasCaja_GetByResponsable {
            get {
                return this.tablePr_tfi_InstanciasCaja_GetByResponsable;
            }
        }
        
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public tfi_InstanciasCajaCierresDataTable tfi_InstanciasCajaCierres {
            get {
                return this.tabletfi_InstanciasCajaCierres;
            }
        }
        
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public Pr_tfi_InstanciasCaja_CierreCajaDataTable Pr_tfi_InstanciasCaja_CierreCaja {
            get {
                return this.tablePr_tfi_InstanciasCaja_CierreCaja;
            }
        }
        
        public override DataSet Clone() {
            tfi_InstanciasCajaExDataset cln = ((tfi_InstanciasCajaExDataset)(base.Clone()));
            cln.InitVars();
            return cln;
        }
        
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        protected override void ReadXmlSerializable(XmlReader reader) {
            this.Reset();
            DataSet ds = new DataSet();
            ds.ReadXml(reader);
            if ((ds.Tables["tfi_Cajas"] != null)) {
                this.Tables.Add(new tfi_CajasDataTable(ds.Tables["tfi_Cajas"]));
            }
            if ((ds.Tables["tfi_InstanciasCaja"] != null)) {
                this.Tables.Add(new tfi_InstanciasCajaDataTable(ds.Tables["tfi_InstanciasCaja"]));
            }
            if ((ds.Tables["tfi_ResponsablesCajas"] != null)) {
                this.Tables.Add(new tfi_ResponsablesCajasDataTable(ds.Tables["tfi_ResponsablesCajas"]));
            }
            if ((ds.Tables["Pr_tfi_Cajas_GetByResponsable"] != null)) {
                this.Tables.Add(new Pr_tfi_Cajas_GetByResponsableDataTable(ds.Tables["Pr_tfi_Cajas_GetByResponsable"]));
            }
            if ((ds.Tables["Pr_tfi_InstanciasCaja_GetByResponsable"] != null)) {
                this.Tables.Add(new Pr_tfi_InstanciasCaja_GetByResponsableDataTable(ds.Tables["Pr_tfi_InstanciasCaja_GetByResponsable"]));
            }
            if ((ds.Tables["tfi_InstanciasCajaCierres"] != null)) {
                this.Tables.Add(new tfi_InstanciasCajaCierresDataTable(ds.Tables["tfi_InstanciasCajaCierres"]));
            }
            if ((ds.Tables["Pr_tfi_InstanciasCaja_CierreCaja"] != null)) {
                this.Tables.Add(new Pr_tfi_InstanciasCaja_CierreCajaDataTable(ds.Tables["Pr_tfi_InstanciasCaja_CierreCaja"]));
            }
            this.DataSetName = ds.DataSetName;
            this.Prefix = ds.Prefix;
            this.Namespace = ds.Namespace;
            this.Locale = ds.Locale;
            this.CaseSensitive = ds.CaseSensitive;
            this.EnforceConstraints = ds.EnforceConstraints;
            this.Merge(ds, false, System.Data.MissingSchemaAction.Add);
            this.InitVars();
        }
        
        protected override System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            System.IO.MemoryStream stream = new System.IO.MemoryStream();
            this.WriteXmlSchema(new XmlTextWriter(stream, null));
            stream.Position = 0;
            return System.Xml.Schema.XmlSchema.Read(new XmlTextReader(stream), null);
        }
        
        internal void InitVars() {
            this.tabletfi_Cajas = ((tfi_CajasDataTable)(this.Tables["tfi_Cajas"]));
            if ((this.tabletfi_Cajas != null)) {
                this.tabletfi_Cajas.InitVars();
            }
            this.tabletfi_InstanciasCaja = ((tfi_InstanciasCajaDataTable)(this.Tables["tfi_InstanciasCaja"]));
            if ((this.tabletfi_InstanciasCaja != null)) {
                this.tabletfi_InstanciasCaja.InitVars();
            }
            this.tabletfi_ResponsablesCajas = ((tfi_ResponsablesCajasDataTable)(this.Tables["tfi_ResponsablesCajas"]));
            if ((this.tabletfi_ResponsablesCajas != null)) {
                this.tabletfi_ResponsablesCajas.InitVars();
            }
            this.tablePr_tfi_Cajas_GetByResponsable = ((Pr_tfi_Cajas_GetByResponsableDataTable)(this.Tables["Pr_tfi_Cajas_GetByResponsable"]));
            if ((this.tablePr_tfi_Cajas_GetByResponsable != null)) {
                this.tablePr_tfi_Cajas_GetByResponsable.InitVars();
            }
            this.tablePr_tfi_InstanciasCaja_GetByResponsable = ((Pr_tfi_InstanciasCaja_GetByResponsableDataTable)(this.Tables["Pr_tfi_InstanciasCaja_GetByResponsable"]));
            if ((this.tablePr_tfi_InstanciasCaja_GetByResponsable != null)) {
                this.tablePr_tfi_InstanciasCaja_GetByResponsable.InitVars();
            }
            this.tabletfi_InstanciasCajaCierres = ((tfi_InstanciasCajaCierresDataTable)(this.Tables["tfi_InstanciasCajaCierres"]));
            if ((this.tabletfi_InstanciasCajaCierres != null)) {
                this.tabletfi_InstanciasCajaCierres.InitVars();
            }
            this.tablePr_tfi_InstanciasCaja_CierreCaja = ((Pr_tfi_InstanciasCaja_CierreCajaDataTable)(this.Tables["Pr_tfi_InstanciasCaja_CierreCaja"]));
            if ((this.tablePr_tfi_InstanciasCaja_CierreCaja != null)) {
                this.tablePr_tfi_InstanciasCaja_CierreCaja.InitVars();
            }
        }
        
        private void InitClass() {
            this.DataSetName = "tfi_InstanciasCajaExDataset";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/tfi_InstanciasCajaEx.xsd";
            this.Locale = new System.Globalization.CultureInfo("en-US");
            this.CaseSensitive = false;
            this.EnforceConstraints = true;
            this.tabletfi_Cajas = new tfi_CajasDataTable();
            this.Tables.Add(this.tabletfi_Cajas);
            this.tabletfi_InstanciasCaja = new tfi_InstanciasCajaDataTable();
            this.Tables.Add(this.tabletfi_InstanciasCaja);
            this.tabletfi_ResponsablesCajas = new tfi_ResponsablesCajasDataTable();
            this.Tables.Add(this.tabletfi_ResponsablesCajas);
            this.tablePr_tfi_Cajas_GetByResponsable = new Pr_tfi_Cajas_GetByResponsableDataTable();
            this.Tables.Add(this.tablePr_tfi_Cajas_GetByResponsable);
            this.tablePr_tfi_InstanciasCaja_GetByResponsable = new Pr_tfi_InstanciasCaja_GetByResponsableDataTable();
            this.Tables.Add(this.tablePr_tfi_InstanciasCaja_GetByResponsable);
            this.tabletfi_InstanciasCajaCierres = new tfi_InstanciasCajaCierresDataTable();
            this.Tables.Add(this.tabletfi_InstanciasCajaCierres);
            this.tablePr_tfi_InstanciasCaja_CierreCaja = new Pr_tfi_InstanciasCaja_CierreCajaDataTable();
            this.Tables.Add(this.tablePr_tfi_InstanciasCaja_CierreCaja);
        }
        
        private bool ShouldSerializetfi_Cajas() {
            return false;
        }
        
        private bool ShouldSerializetfi_InstanciasCaja() {
            return false;
        }
        
        private bool ShouldSerializetfi_ResponsablesCajas() {
            return false;
        }
        
        private bool ShouldSerializePr_tfi_Cajas_GetByResponsable() {
            return false;
        }
        
        private bool ShouldSerializePr_tfi_InstanciasCaja_GetByResponsable() {
            return false;
        }
        
        private bool ShouldSerializetfi_InstanciasCajaCierres() {
            return false;
        }
        
        private bool ShouldSerializePr_tfi_InstanciasCaja_CierreCaja() {
            return false;
        }
        
        private void SchemaChanged(object sender, System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        public delegate void tfi_CajasRowChangeEventHandler(object sender, tfi_CajasRowChangeEvent e);
        
        public delegate void tfi_InstanciasCajaRowChangeEventHandler(object sender, tfi_InstanciasCajaRowChangeEvent e);
        
        public delegate void tfi_ResponsablesCajasRowChangeEventHandler(object sender, tfi_ResponsablesCajasRowChangeEvent e);
        
        public delegate void Pr_tfi_Cajas_GetByResponsableRowChangeEventHandler(object sender, Pr_tfi_Cajas_GetByResponsableRowChangeEvent e);
        
        public delegate void Pr_tfi_InstanciasCaja_GetByResponsableRowChangeEventHandler(object sender, Pr_tfi_InstanciasCaja_GetByResponsableRowChangeEvent e);
        
        public delegate void tfi_InstanciasCajaCierresRowChangeEventHandler(object sender, tfi_InstanciasCajaCierresRowChangeEvent e);
        
        public delegate void Pr_tfi_InstanciasCaja_CierreCajaRowChangeEventHandler(object sender, Pr_tfi_InstanciasCaja_CierreCajaRowChangeEvent e);
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class tfi_CajasDataTable : DataTable, System.Collections.IEnumerable {
            
            private DataColumn columnIdCaja;
            
            private DataColumn columnIdEmpresa;
            
            private DataColumn columnIdSucursal;
            
            private DataColumn columnDescripcion;
            
            private DataColumn columnFechaCreacion;
            
            private DataColumn columnIdConexionCreacion;
            
            private DataColumn columnUltimaModificacion;
            
            private DataColumn columnIdConexionUltimaModificacion;
            
            private DataColumn columnIdReservado;
            
            private DataColumn columnRowId;
            
            internal tfi_CajasDataTable() : 
                    base("tfi_Cajas") {
                this.InitClass();
            }
            
            internal tfi_CajasDataTable(DataTable table) : 
                    base(table.TableName) {
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
                this.DisplayExpression = table.DisplayExpression;
            }
            
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            internal DataColumn IdCajaColumn {
                get {
                    return this.columnIdCaja;
                }
            }
            
            internal DataColumn IdEmpresaColumn {
                get {
                    return this.columnIdEmpresa;
                }
            }
            
            internal DataColumn IdSucursalColumn {
                get {
                    return this.columnIdSucursal;
                }
            }
            
            internal DataColumn DescripcionColumn {
                get {
                    return this.columnDescripcion;
                }
            }
            
            internal DataColumn FechaCreacionColumn {
                get {
                    return this.columnFechaCreacion;
                }
            }
            
            internal DataColumn IdConexionCreacionColumn {
                get {
                    return this.columnIdConexionCreacion;
                }
            }
            
            internal DataColumn UltimaModificacionColumn {
                get {
                    return this.columnUltimaModificacion;
                }
            }
            
            internal DataColumn IdConexionUltimaModificacionColumn {
                get {
                    return this.columnIdConexionUltimaModificacion;
                }
            }
            
            internal DataColumn IdReservadoColumn {
                get {
                    return this.columnIdReservado;
                }
            }
            
            internal DataColumn RowIdColumn {
                get {
                    return this.columnRowId;
                }
            }
            
            public tfi_CajasRow this[int index] {
                get {
                    return ((tfi_CajasRow)(this.Rows[index]));
                }
            }
            
            public event tfi_CajasRowChangeEventHandler tfi_CajasRowChanged;
            
            public event tfi_CajasRowChangeEventHandler tfi_CajasRowChanging;
            
            public event tfi_CajasRowChangeEventHandler tfi_CajasRowDeleted;
            
            public event tfi_CajasRowChangeEventHandler tfi_CajasRowDeleting;
            
            public void Addtfi_CajasRow(tfi_CajasRow row) {
                this.Rows.Add(row);
            }
            
            public tfi_CajasRow Addtfi_CajasRow(string IdCaja, long IdEmpresa, long IdSucursal, string Descripcion, System.DateTime FechaCreacion, long IdConexionCreacion, System.Byte[] UltimaModificacion, long IdConexionUltimaModificacion, long IdReservado, System.Guid RowId) {
                tfi_CajasRow rowtfi_CajasRow = ((tfi_CajasRow)(this.NewRow()));
                rowtfi_CajasRow.ItemArray = new object[] {
                        IdCaja,
                        IdEmpresa,
                        IdSucursal,
                        Descripcion,
                        FechaCreacion,
                        IdConexionCreacion,
                        UltimaModificacion,
                        IdConexionUltimaModificacion,
                        IdReservado,
                        RowId};
                this.Rows.Add(rowtfi_CajasRow);
                return rowtfi_CajasRow;
            }
            
            public tfi_CajasRow FindByIdCaja(string IdCaja) {
                return ((tfi_CajasRow)(this.Rows.Find(new object[] {
                            IdCaja})));
            }
            
            public System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            public override DataTable Clone() {
                tfi_CajasDataTable cln = ((tfi_CajasDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            protected override DataTable CreateInstance() {
                return new tfi_CajasDataTable();
            }
            
            internal void InitVars() {
                this.columnIdCaja = this.Columns["IdCaja"];
                this.columnIdEmpresa = this.Columns["IdEmpresa"];
                this.columnIdSucursal = this.Columns["IdSucursal"];
                this.columnDescripcion = this.Columns["Descripcion"];
                this.columnFechaCreacion = this.Columns["FechaCreacion"];
                this.columnIdConexionCreacion = this.Columns["IdConexionCreacion"];
                this.columnUltimaModificacion = this.Columns["UltimaModificacion"];
                this.columnIdConexionUltimaModificacion = this.Columns["IdConexionUltimaModificacion"];
                this.columnIdReservado = this.Columns["IdReservado"];
                this.columnRowId = this.Columns["RowId"];
            }
            
            private void InitClass() {
                this.columnIdCaja = new DataColumn("IdCaja", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdCaja);
                this.columnIdEmpresa = new DataColumn("IdEmpresa", typeof(long), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdEmpresa);
                this.columnIdSucursal = new DataColumn("IdSucursal", typeof(long), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdSucursal);
                this.columnDescripcion = new DataColumn("Descripcion", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnDescripcion);
                this.columnFechaCreacion = new DataColumn("FechaCreacion", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnFechaCreacion);
                this.columnIdConexionCreacion = new DataColumn("IdConexionCreacion", typeof(long), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdConexionCreacion);
                this.columnUltimaModificacion = new DataColumn("UltimaModificacion", typeof(System.Byte[]), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnUltimaModificacion);
                this.columnIdConexionUltimaModificacion = new DataColumn("IdConexionUltimaModificacion", typeof(long), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdConexionUltimaModificacion);
                this.columnIdReservado = new DataColumn("IdReservado", typeof(long), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdReservado);
                this.columnRowId = new DataColumn("RowId", typeof(System.Guid), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnRowId);
                this.Constraints.Add(new UniqueConstraint("tfi_InstanciasCajaExKey1", new DataColumn[] {
                                this.columnIdCaja}, true));
                this.columnIdCaja.AllowDBNull = false;
                this.columnIdCaja.Unique = true;
                this.columnUltimaModificacion.ReadOnly = true;
            }
            
            public tfi_CajasRow Newtfi_CajasRow() {
                return ((tfi_CajasRow)(this.NewRow()));
            }
            
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder) {
                return new tfi_CajasRow(builder);
            }
            
            protected override System.Type GetRowType() {
                return typeof(tfi_CajasRow);
            }
            
            protected override void OnRowChanged(DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.tfi_CajasRowChanged != null)) {
                    this.tfi_CajasRowChanged(this, new tfi_CajasRowChangeEvent(((tfi_CajasRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowChanging(DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.tfi_CajasRowChanging != null)) {
                    this.tfi_CajasRowChanging(this, new tfi_CajasRowChangeEvent(((tfi_CajasRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleted(DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.tfi_CajasRowDeleted != null)) {
                    this.tfi_CajasRowDeleted(this, new tfi_CajasRowChangeEvent(((tfi_CajasRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleting(DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.tfi_CajasRowDeleting != null)) {
                    this.tfi_CajasRowDeleting(this, new tfi_CajasRowChangeEvent(((tfi_CajasRow)(e.Row)), e.Action));
                }
            }
            
            public void Removetfi_CajasRow(tfi_CajasRow row) {
                this.Rows.Remove(row);
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class tfi_CajasRow : DataRow {
            
            private tfi_CajasDataTable tabletfi_Cajas;
            
            internal tfi_CajasRow(DataRowBuilder rb) : 
                    base(rb) {
                this.tabletfi_Cajas = ((tfi_CajasDataTable)(this.Table));
            }
            
            public string IdCaja {
                get {
                    return ((string)(this[this.tabletfi_Cajas.IdCajaColumn]));
                }
                set {
                    this[this.tabletfi_Cajas.IdCajaColumn] = value;
                }
            }
            
            public long IdEmpresa {
                get {
                    try {
                        return ((long)(this[this.tabletfi_Cajas.IdEmpresaColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletfi_Cajas.IdEmpresaColumn] = value;
                }
            }
            
            public long IdSucursal {
                get {
                    try {
                        return ((long)(this[this.tabletfi_Cajas.IdSucursalColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletfi_Cajas.IdSucursalColumn] = value;
                }
            }
            
            public string Descripcion {
                get {
                    try {
                        return ((string)(this[this.tabletfi_Cajas.DescripcionColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletfi_Cajas.DescripcionColumn] = value;
                }
            }
            
            public System.DateTime FechaCreacion {
                get {
                    try {
                        return ((System.DateTime)(this[this.tabletfi_Cajas.FechaCreacionColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletfi_Cajas.FechaCreacionColumn] = value;
                }
            }
            
            public long IdConexionCreacion {
                get {
                    try {
                        return ((long)(this[this.tabletfi_Cajas.IdConexionCreacionColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletfi_Cajas.IdConexionCreacionColumn] = value;
                }
            }
            
            public System.Byte[] UltimaModificacion {
                get {
                    try {
                        return ((System.Byte[])(this[this.tabletfi_Cajas.UltimaModificacionColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletfi_Cajas.UltimaModificacionColumn] = value;
                }
            }
            
            public long IdConexionUltimaModificacion {
                get {
                    try {
                        return ((long)(this[this.tabletfi_Cajas.IdConexionUltimaModificacionColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletfi_Cajas.IdConexionUltimaModificacionColumn] = value;
                }
            }
            
            public long IdReservado {
                get {
                    try {
                        return ((long)(this[this.tabletfi_Cajas.IdReservadoColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletfi_Cajas.IdReservadoColumn] = value;
                }
            }
            
            public System.Guid RowId {
                get {
                    try {
                        return ((System.Guid)(this[this.tabletfi_Cajas.RowIdColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletfi_Cajas.RowIdColumn] = value;
                }
            }
            
            public bool IsIdEmpresaNull() {
                return this.IsNull(this.tabletfi_Cajas.IdEmpresaColumn);
            }
            
            public void SetIdEmpresaNull() {
                this[this.tabletfi_Cajas.IdEmpresaColumn] = System.Convert.DBNull;
            }
            
            public bool IsIdSucursalNull() {
                return this.IsNull(this.tabletfi_Cajas.IdSucursalColumn);
            }
            
            public void SetIdSucursalNull() {
                this[this.tabletfi_Cajas.IdSucursalColumn] = System.Convert.DBNull;
            }
            
            public bool IsDescripcionNull() {
                return this.IsNull(this.tabletfi_Cajas.DescripcionColumn);
            }
            
            public void SetDescripcionNull() {
                this[this.tabletfi_Cajas.DescripcionColumn] = System.Convert.DBNull;
            }
            
            public bool IsFechaCreacionNull() {
                return this.IsNull(this.tabletfi_Cajas.FechaCreacionColumn);
            }
            
            public void SetFechaCreacionNull() {
                this[this.tabletfi_Cajas.FechaCreacionColumn] = System.Convert.DBNull;
            }
            
            public bool IsIdConexionCreacionNull() {
                return this.IsNull(this.tabletfi_Cajas.IdConexionCreacionColumn);
            }
            
            public void SetIdConexionCreacionNull() {
                this[this.tabletfi_Cajas.IdConexionCreacionColumn] = System.Convert.DBNull;
            }
            
            public bool IsUltimaModificacionNull() {
                return this.IsNull(this.tabletfi_Cajas.UltimaModificacionColumn);
            }
            
            public void SetUltimaModificacionNull() {
                this[this.tabletfi_Cajas.UltimaModificacionColumn] = System.Convert.DBNull;
            }
            
            public bool IsIdConexionUltimaModificacionNull() {
                return this.IsNull(this.tabletfi_Cajas.IdConexionUltimaModificacionColumn);
            }
            
            public void SetIdConexionUltimaModificacionNull() {
                this[this.tabletfi_Cajas.IdConexionUltimaModificacionColumn] = System.Convert.DBNull;
            }
            
            public bool IsIdReservadoNull() {
                return this.IsNull(this.tabletfi_Cajas.IdReservadoColumn);
            }
            
            public void SetIdReservadoNull() {
                this[this.tabletfi_Cajas.IdReservadoColumn] = System.Convert.DBNull;
            }
            
            public bool IsRowIdNull() {
                return this.IsNull(this.tabletfi_Cajas.RowIdColumn);
            }
            
            public void SetRowIdNull() {
                this[this.tabletfi_Cajas.RowIdColumn] = System.Convert.DBNull;
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class tfi_CajasRowChangeEvent : EventArgs {
            
            private tfi_CajasRow eventRow;
            
            private DataRowAction eventAction;
            
            public tfi_CajasRowChangeEvent(tfi_CajasRow row, DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            public tfi_CajasRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            public DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class tfi_InstanciasCajaDataTable : DataTable, System.Collections.IEnumerable {
            
            private DataColumn columnIdInstanciaCaja;
            
            private DataColumn columnIdCaja;
            
            private DataColumn columnIdEmpresa;
            
            private DataColumn columnIdSucursal;
            
            private DataColumn columnApertura;
            
            private DataColumn columnCierre;
            
            private DataColumn columnIdResponsable;
            
            private DataColumn columnFechaCreacion;
            
            private DataColumn columnIdConexionCreacion;
            
            private DataColumn columnUltimaModificacion;
            
            private DataColumn columnIdConexionUltimaModificacion;
            
            private DataColumn columnIdReservado;
            
            private DataColumn columnRowId;
            
            internal tfi_InstanciasCajaDataTable() : 
                    base("tfi_InstanciasCaja") {
                this.InitClass();
            }
            
            internal tfi_InstanciasCajaDataTable(DataTable table) : 
                    base(table.TableName) {
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
                this.DisplayExpression = table.DisplayExpression;
            }
            
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            internal DataColumn IdInstanciaCajaColumn {
                get {
                    return this.columnIdInstanciaCaja;
                }
            }
            
            internal DataColumn IdCajaColumn {
                get {
                    return this.columnIdCaja;
                }
            }
            
            internal DataColumn IdEmpresaColumn {
                get {
                    return this.columnIdEmpresa;
                }
            }
            
            internal DataColumn IdSucursalColumn {
                get {
                    return this.columnIdSucursal;
                }
            }
            
            internal DataColumn AperturaColumn {
                get {
                    return this.columnApertura;
                }
            }
            
            internal DataColumn CierreColumn {
                get {
                    return this.columnCierre;
                }
            }
            
            internal DataColumn IdResponsableColumn {
                get {
                    return this.columnIdResponsable;
                }
            }
            
            internal DataColumn FechaCreacionColumn {
                get {
                    return this.columnFechaCreacion;
                }
            }
            
            internal DataColumn IdConexionCreacionColumn {
                get {
                    return this.columnIdConexionCreacion;
                }
            }
            
            internal DataColumn UltimaModificacionColumn {
                get {
                    return this.columnUltimaModificacion;
                }
            }
            
            internal DataColumn IdConexionUltimaModificacionColumn {
                get {
                    return this.columnIdConexionUltimaModificacion;
                }
            }
            
            internal DataColumn IdReservadoColumn {
                get {
                    return this.columnIdReservado;
                }
            }
            
            internal DataColumn RowIdColumn {
                get {
                    return this.columnRowId;
                }
            }
            
            public tfi_InstanciasCajaRow this[int index] {
                get {
                    return ((tfi_InstanciasCajaRow)(this.Rows[index]));
                }
            }
            
            public event tfi_InstanciasCajaRowChangeEventHandler tfi_InstanciasCajaRowChanged;
            
            public event tfi_InstanciasCajaRowChangeEventHandler tfi_InstanciasCajaRowChanging;
            
            public event tfi_InstanciasCajaRowChangeEventHandler tfi_InstanciasCajaRowDeleted;
            
            public event tfi_InstanciasCajaRowChangeEventHandler tfi_InstanciasCajaRowDeleting;
            
            public void Addtfi_InstanciasCajaRow(tfi_InstanciasCajaRow row) {
                this.Rows.Add(row);
            }
            
            public tfi_InstanciasCajaRow Addtfi_InstanciasCajaRow(string IdInstanciaCaja, string IdCaja, long IdEmpresa, long IdSucursal, System.DateTime Apertura, System.DateTime Cierre, string IdResponsable, System.DateTime FechaCreacion, long IdConexionCreacion, System.Byte[] UltimaModificacion, long IdConexionUltimaModificacion, long IdReservado, System.Guid RowId) {
                tfi_InstanciasCajaRow rowtfi_InstanciasCajaRow = ((tfi_InstanciasCajaRow)(this.NewRow()));
                rowtfi_InstanciasCajaRow.ItemArray = new object[] {
                        IdInstanciaCaja,
                        IdCaja,
                        IdEmpresa,
                        IdSucursal,
                        Apertura,
                        Cierre,
                        IdResponsable,
                        FechaCreacion,
                        IdConexionCreacion,
                        UltimaModificacion,
                        IdConexionUltimaModificacion,
                        IdReservado,
                        RowId};
                this.Rows.Add(rowtfi_InstanciasCajaRow);
                return rowtfi_InstanciasCajaRow;
            }
            
            public tfi_InstanciasCajaRow FindByIdInstanciaCaja(string IdInstanciaCaja) {
                return ((tfi_InstanciasCajaRow)(this.Rows.Find(new object[] {
                            IdInstanciaCaja})));
            }
            
            public System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            public override DataTable Clone() {
                tfi_InstanciasCajaDataTable cln = ((tfi_InstanciasCajaDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            protected override DataTable CreateInstance() {
                return new tfi_InstanciasCajaDataTable();
            }
            
            internal void InitVars() {
                this.columnIdInstanciaCaja = this.Columns["IdInstanciaCaja"];
                this.columnIdCaja = this.Columns["IdCaja"];
                this.columnIdEmpresa = this.Columns["IdEmpresa"];
                this.columnIdSucursal = this.Columns["IdSucursal"];
                this.columnApertura = this.Columns["Apertura"];
                this.columnCierre = this.Columns["Cierre"];
                this.columnIdResponsable = this.Columns["IdResponsable"];
                this.columnFechaCreacion = this.Columns["FechaCreacion"];
                this.columnIdConexionCreacion = this.Columns["IdConexionCreacion"];
                this.columnUltimaModificacion = this.Columns["UltimaModificacion"];
                this.columnIdConexionUltimaModificacion = this.Columns["IdConexionUltimaModificacion"];
                this.columnIdReservado = this.Columns["IdReservado"];
                this.columnRowId = this.Columns["RowId"];
            }
            
            private void InitClass() {
                this.columnIdInstanciaCaja = new DataColumn("IdInstanciaCaja", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdInstanciaCaja);
                this.columnIdCaja = new DataColumn("IdCaja", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdCaja);
                this.columnIdEmpresa = new DataColumn("IdEmpresa", typeof(long), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdEmpresa);
                this.columnIdSucursal = new DataColumn("IdSucursal", typeof(long), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdSucursal);
                this.columnApertura = new DataColumn("Apertura", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnApertura);
                this.columnCierre = new DataColumn("Cierre", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnCierre);
                this.columnIdResponsable = new DataColumn("IdResponsable", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdResponsable);
                this.columnFechaCreacion = new DataColumn("FechaCreacion", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnFechaCreacion);
                this.columnIdConexionCreacion = new DataColumn("IdConexionCreacion", typeof(long), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdConexionCreacion);
                this.columnUltimaModificacion = new DataColumn("UltimaModificacion", typeof(System.Byte[]), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnUltimaModificacion);
                this.columnIdConexionUltimaModificacion = new DataColumn("IdConexionUltimaModificacion", typeof(long), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdConexionUltimaModificacion);
                this.columnIdReservado = new DataColumn("IdReservado", typeof(long), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdReservado);
                this.columnRowId = new DataColumn("RowId", typeof(System.Guid), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnRowId);
                this.Constraints.Add(new UniqueConstraint("tfi_InstanciasCajaExKey2", new DataColumn[] {
                                this.columnIdInstanciaCaja}, true));
                this.columnIdInstanciaCaja.AllowDBNull = false;
                this.columnIdInstanciaCaja.Unique = true;
                this.columnIdCaja.AllowDBNull = false;
                this.columnUltimaModificacion.ReadOnly = true;
            }
            
            public tfi_InstanciasCajaRow Newtfi_InstanciasCajaRow() {
                return ((tfi_InstanciasCajaRow)(this.NewRow()));
            }
            
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder) {
                return new tfi_InstanciasCajaRow(builder);
            }
            
            protected override System.Type GetRowType() {
                return typeof(tfi_InstanciasCajaRow);
            }
            
            protected override void OnRowChanged(DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.tfi_InstanciasCajaRowChanged != null)) {
                    this.tfi_InstanciasCajaRowChanged(this, new tfi_InstanciasCajaRowChangeEvent(((tfi_InstanciasCajaRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowChanging(DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.tfi_InstanciasCajaRowChanging != null)) {
                    this.tfi_InstanciasCajaRowChanging(this, new tfi_InstanciasCajaRowChangeEvent(((tfi_InstanciasCajaRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleted(DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.tfi_InstanciasCajaRowDeleted != null)) {
                    this.tfi_InstanciasCajaRowDeleted(this, new tfi_InstanciasCajaRowChangeEvent(((tfi_InstanciasCajaRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleting(DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.tfi_InstanciasCajaRowDeleting != null)) {
                    this.tfi_InstanciasCajaRowDeleting(this, new tfi_InstanciasCajaRowChangeEvent(((tfi_InstanciasCajaRow)(e.Row)), e.Action));
                }
            }
            
            public void Removetfi_InstanciasCajaRow(tfi_InstanciasCajaRow row) {
                this.Rows.Remove(row);
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class tfi_InstanciasCajaRow : DataRow {
            
            private tfi_InstanciasCajaDataTable tabletfi_InstanciasCaja;
            
            internal tfi_InstanciasCajaRow(DataRowBuilder rb) : 
                    base(rb) {
                this.tabletfi_InstanciasCaja = ((tfi_InstanciasCajaDataTable)(this.Table));
            }
            
            public string IdInstanciaCaja {
                get {
                    return ((string)(this[this.tabletfi_InstanciasCaja.IdInstanciaCajaColumn]));
                }
                set {
                    this[this.tabletfi_InstanciasCaja.IdInstanciaCajaColumn] = value;
                }
            }
            
            public string IdCaja {
                get {
                    return ((string)(this[this.tabletfi_InstanciasCaja.IdCajaColumn]));
                }
                set {
                    this[this.tabletfi_InstanciasCaja.IdCajaColumn] = value;
                }
            }
            
            public long IdEmpresa {
                get {
                    try {
                        return ((long)(this[this.tabletfi_InstanciasCaja.IdEmpresaColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletfi_InstanciasCaja.IdEmpresaColumn] = value;
                }
            }
            
            public long IdSucursal {
                get {
                    try {
                        return ((long)(this[this.tabletfi_InstanciasCaja.IdSucursalColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletfi_InstanciasCaja.IdSucursalColumn] = value;
                }
            }
            
            public System.DateTime Apertura {
                get {
                    try {
                        return ((System.DateTime)(this[this.tabletfi_InstanciasCaja.AperturaColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletfi_InstanciasCaja.AperturaColumn] = value;
                }
            }
            
            public System.DateTime Cierre {
                get {
                    try {
                        return ((System.DateTime)(this[this.tabletfi_InstanciasCaja.CierreColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletfi_InstanciasCaja.CierreColumn] = value;
                }
            }
            
            public string IdResponsable {
                get {
                    try {
                        return ((string)(this[this.tabletfi_InstanciasCaja.IdResponsableColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletfi_InstanciasCaja.IdResponsableColumn] = value;
                }
            }
            
            public System.DateTime FechaCreacion {
                get {
                    try {
                        return ((System.DateTime)(this[this.tabletfi_InstanciasCaja.FechaCreacionColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletfi_InstanciasCaja.FechaCreacionColumn] = value;
                }
            }
            
            public long IdConexionCreacion {
                get {
                    try {
                        return ((long)(this[this.tabletfi_InstanciasCaja.IdConexionCreacionColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletfi_InstanciasCaja.IdConexionCreacionColumn] = value;
                }
            }
            
            public System.Byte[] UltimaModificacion {
                get {
                    try {
                        return ((System.Byte[])(this[this.tabletfi_InstanciasCaja.UltimaModificacionColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletfi_InstanciasCaja.UltimaModificacionColumn] = value;
                }
            }
            
            public long IdConexionUltimaModificacion {
                get {
                    try {
                        return ((long)(this[this.tabletfi_InstanciasCaja.IdConexionUltimaModificacionColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletfi_InstanciasCaja.IdConexionUltimaModificacionColumn] = value;
                }
            }
            
            public long IdReservado {
                get {
                    try {
                        return ((long)(this[this.tabletfi_InstanciasCaja.IdReservadoColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletfi_InstanciasCaja.IdReservadoColumn] = value;
                }
            }
            
            public System.Guid RowId {
                get {
                    try {
                        return ((System.Guid)(this[this.tabletfi_InstanciasCaja.RowIdColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletfi_InstanciasCaja.RowIdColumn] = value;
                }
            }
            
            public bool IsIdEmpresaNull() {
                return this.IsNull(this.tabletfi_InstanciasCaja.IdEmpresaColumn);
            }
            
            public void SetIdEmpresaNull() {
                this[this.tabletfi_InstanciasCaja.IdEmpresaColumn] = System.Convert.DBNull;
            }
            
            public bool IsIdSucursalNull() {
                return this.IsNull(this.tabletfi_InstanciasCaja.IdSucursalColumn);
            }
            
            public void SetIdSucursalNull() {
                this[this.tabletfi_InstanciasCaja.IdSucursalColumn] = System.Convert.DBNull;
            }
            
            public bool IsAperturaNull() {
                return this.IsNull(this.tabletfi_InstanciasCaja.AperturaColumn);
            }
            
            public void SetAperturaNull() {
                this[this.tabletfi_InstanciasCaja.AperturaColumn] = System.Convert.DBNull;
            }
            
            public bool IsCierreNull() {
                return this.IsNull(this.tabletfi_InstanciasCaja.CierreColumn);
            }
            
            public void SetCierreNull() {
                this[this.tabletfi_InstanciasCaja.CierreColumn] = System.Convert.DBNull;
            }
            
            public bool IsIdResponsableNull() {
                return this.IsNull(this.tabletfi_InstanciasCaja.IdResponsableColumn);
            }
            
            public void SetIdResponsableNull() {
                this[this.tabletfi_InstanciasCaja.IdResponsableColumn] = System.Convert.DBNull;
            }
            
            public bool IsFechaCreacionNull() {
                return this.IsNull(this.tabletfi_InstanciasCaja.FechaCreacionColumn);
            }
            
            public void SetFechaCreacionNull() {
                this[this.tabletfi_InstanciasCaja.FechaCreacionColumn] = System.Convert.DBNull;
            }
            
            public bool IsIdConexionCreacionNull() {
                return this.IsNull(this.tabletfi_InstanciasCaja.IdConexionCreacionColumn);
            }
            
            public void SetIdConexionCreacionNull() {
                this[this.tabletfi_InstanciasCaja.IdConexionCreacionColumn] = System.Convert.DBNull;
            }
            
            public bool IsUltimaModificacionNull() {
                return this.IsNull(this.tabletfi_InstanciasCaja.UltimaModificacionColumn);
            }
            
            public void SetUltimaModificacionNull() {
                this[this.tabletfi_InstanciasCaja.UltimaModificacionColumn] = System.Convert.DBNull;
            }
            
            public bool IsIdConexionUltimaModificacionNull() {
                return this.IsNull(this.tabletfi_InstanciasCaja.IdConexionUltimaModificacionColumn);
            }
            
            public void SetIdConexionUltimaModificacionNull() {
                this[this.tabletfi_InstanciasCaja.IdConexionUltimaModificacionColumn] = System.Convert.DBNull;
            }
            
            public bool IsIdReservadoNull() {
                return this.IsNull(this.tabletfi_InstanciasCaja.IdReservadoColumn);
            }
            
            public void SetIdReservadoNull() {
                this[this.tabletfi_InstanciasCaja.IdReservadoColumn] = System.Convert.DBNull;
            }
            
            public bool IsRowIdNull() {
                return this.IsNull(this.tabletfi_InstanciasCaja.RowIdColumn);
            }
            
            public void SetRowIdNull() {
                this[this.tabletfi_InstanciasCaja.RowIdColumn] = System.Convert.DBNull;
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class tfi_InstanciasCajaRowChangeEvent : EventArgs {
            
            private tfi_InstanciasCajaRow eventRow;
            
            private DataRowAction eventAction;
            
            public tfi_InstanciasCajaRowChangeEvent(tfi_InstanciasCajaRow row, DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            public tfi_InstanciasCajaRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            public DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class tfi_ResponsablesCajasDataTable : DataTable, System.Collections.IEnumerable {
            
            private DataColumn columnIdCaja;
            
            private DataColumn columnIdResponsable;
            
            private DataColumn columnFechaCreacion;
            
            private DataColumn columnIdConexionCreacion;
            
            private DataColumn columnUltimaModificacion;
            
            private DataColumn columnIdConexionUltimaModificacion;
            
            private DataColumn columnIdReservado;
            
            private DataColumn columnRowId;
            
            private DataColumn columnIdEmpresa;
            
            private DataColumn columnIdSucursal;
            
            internal tfi_ResponsablesCajasDataTable() : 
                    base("tfi_ResponsablesCajas") {
                this.InitClass();
            }
            
            internal tfi_ResponsablesCajasDataTable(DataTable table) : 
                    base(table.TableName) {
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
                this.DisplayExpression = table.DisplayExpression;
            }
            
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            internal DataColumn IdCajaColumn {
                get {
                    return this.columnIdCaja;
                }
            }
            
            internal DataColumn IdResponsableColumn {
                get {
                    return this.columnIdResponsable;
                }
            }
            
            internal DataColumn FechaCreacionColumn {
                get {
                    return this.columnFechaCreacion;
                }
            }
            
            internal DataColumn IdConexionCreacionColumn {
                get {
                    return this.columnIdConexionCreacion;
                }
            }
            
            internal DataColumn UltimaModificacionColumn {
                get {
                    return this.columnUltimaModificacion;
                }
            }
            
            internal DataColumn IdConexionUltimaModificacionColumn {
                get {
                    return this.columnIdConexionUltimaModificacion;
                }
            }
            
            internal DataColumn IdReservadoColumn {
                get {
                    return this.columnIdReservado;
                }
            }
            
            internal DataColumn RowIdColumn {
                get {
                    return this.columnRowId;
                }
            }
            
            internal DataColumn IdEmpresaColumn {
                get {
                    return this.columnIdEmpresa;
                }
            }
            
            internal DataColumn IdSucursalColumn {
                get {
                    return this.columnIdSucursal;
                }
            }
            
            public tfi_ResponsablesCajasRow this[int index] {
                get {
                    return ((tfi_ResponsablesCajasRow)(this.Rows[index]));
                }
            }
            
            public event tfi_ResponsablesCajasRowChangeEventHandler tfi_ResponsablesCajasRowChanged;
            
            public event tfi_ResponsablesCajasRowChangeEventHandler tfi_ResponsablesCajasRowChanging;
            
            public event tfi_ResponsablesCajasRowChangeEventHandler tfi_ResponsablesCajasRowDeleted;
            
            public event tfi_ResponsablesCajasRowChangeEventHandler tfi_ResponsablesCajasRowDeleting;
            
            public void Addtfi_ResponsablesCajasRow(tfi_ResponsablesCajasRow row) {
                this.Rows.Add(row);
            }
            
            public tfi_ResponsablesCajasRow Addtfi_ResponsablesCajasRow(string IdCaja, string IdResponsable, System.DateTime FechaCreacion, long IdConexionCreacion, System.Byte[] UltimaModificacion, long IdConexionUltimaModificacion, long IdReservado, System.Guid RowId, long IdEmpresa, long IdSucursal) {
                tfi_ResponsablesCajasRow rowtfi_ResponsablesCajasRow = ((tfi_ResponsablesCajasRow)(this.NewRow()));
                rowtfi_ResponsablesCajasRow.ItemArray = new object[] {
                        IdCaja,
                        IdResponsable,
                        FechaCreacion,
                        IdConexionCreacion,
                        UltimaModificacion,
                        IdConexionUltimaModificacion,
                        IdReservado,
                        RowId,
                        IdEmpresa,
                        IdSucursal};
                this.Rows.Add(rowtfi_ResponsablesCajasRow);
                return rowtfi_ResponsablesCajasRow;
            }
            
            public System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            public override DataTable Clone() {
                tfi_ResponsablesCajasDataTable cln = ((tfi_ResponsablesCajasDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            protected override DataTable CreateInstance() {
                return new tfi_ResponsablesCajasDataTable();
            }
            
            internal void InitVars() {
                this.columnIdCaja = this.Columns["IdCaja"];
                this.columnIdResponsable = this.Columns["IdResponsable"];
                this.columnFechaCreacion = this.Columns["FechaCreacion"];
                this.columnIdConexionCreacion = this.Columns["IdConexionCreacion"];
                this.columnUltimaModificacion = this.Columns["UltimaModificacion"];
                this.columnIdConexionUltimaModificacion = this.Columns["IdConexionUltimaModificacion"];
                this.columnIdReservado = this.Columns["IdReservado"];
                this.columnRowId = this.Columns["RowId"];
                this.columnIdEmpresa = this.Columns["IdEmpresa"];
                this.columnIdSucursal = this.Columns["IdSucursal"];
            }
            
            private void InitClass() {
                this.columnIdCaja = new DataColumn("IdCaja", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdCaja);
                this.columnIdResponsable = new DataColumn("IdResponsable", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdResponsable);
                this.columnFechaCreacion = new DataColumn("FechaCreacion", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnFechaCreacion);
                this.columnIdConexionCreacion = new DataColumn("IdConexionCreacion", typeof(long), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdConexionCreacion);
                this.columnUltimaModificacion = new DataColumn("UltimaModificacion", typeof(System.Byte[]), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnUltimaModificacion);
                this.columnIdConexionUltimaModificacion = new DataColumn("IdConexionUltimaModificacion", typeof(long), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdConexionUltimaModificacion);
                this.columnIdReservado = new DataColumn("IdReservado", typeof(long), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdReservado);
                this.columnRowId = new DataColumn("RowId", typeof(System.Guid), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnRowId);
                this.columnIdEmpresa = new DataColumn("IdEmpresa", typeof(long), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdEmpresa);
                this.columnIdSucursal = new DataColumn("IdSucursal", typeof(long), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdSucursal);
                this.columnUltimaModificacion.ReadOnly = true;
            }
            
            public tfi_ResponsablesCajasRow Newtfi_ResponsablesCajasRow() {
                return ((tfi_ResponsablesCajasRow)(this.NewRow()));
            }
            
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder) {
                return new tfi_ResponsablesCajasRow(builder);
            }
            
            protected override System.Type GetRowType() {
                return typeof(tfi_ResponsablesCajasRow);
            }
            
            protected override void OnRowChanged(DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.tfi_ResponsablesCajasRowChanged != null)) {
                    this.tfi_ResponsablesCajasRowChanged(this, new tfi_ResponsablesCajasRowChangeEvent(((tfi_ResponsablesCajasRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowChanging(DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.tfi_ResponsablesCajasRowChanging != null)) {
                    this.tfi_ResponsablesCajasRowChanging(this, new tfi_ResponsablesCajasRowChangeEvent(((tfi_ResponsablesCajasRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleted(DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.tfi_ResponsablesCajasRowDeleted != null)) {
                    this.tfi_ResponsablesCajasRowDeleted(this, new tfi_ResponsablesCajasRowChangeEvent(((tfi_ResponsablesCajasRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleting(DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.tfi_ResponsablesCajasRowDeleting != null)) {
                    this.tfi_ResponsablesCajasRowDeleting(this, new tfi_ResponsablesCajasRowChangeEvent(((tfi_ResponsablesCajasRow)(e.Row)), e.Action));
                }
            }
            
            public void Removetfi_ResponsablesCajasRow(tfi_ResponsablesCajasRow row) {
                this.Rows.Remove(row);
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class tfi_ResponsablesCajasRow : DataRow {
            
            private tfi_ResponsablesCajasDataTable tabletfi_ResponsablesCajas;
            
            internal tfi_ResponsablesCajasRow(DataRowBuilder rb) : 
                    base(rb) {
                this.tabletfi_ResponsablesCajas = ((tfi_ResponsablesCajasDataTable)(this.Table));
            }
            
            public string IdCaja {
                get {
                    try {
                        return ((string)(this[this.tabletfi_ResponsablesCajas.IdCajaColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletfi_ResponsablesCajas.IdCajaColumn] = value;
                }
            }
            
            public string IdResponsable {
                get {
                    try {
                        return ((string)(this[this.tabletfi_ResponsablesCajas.IdResponsableColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletfi_ResponsablesCajas.IdResponsableColumn] = value;
                }
            }
            
            public System.DateTime FechaCreacion {
                get {
                    try {
                        return ((System.DateTime)(this[this.tabletfi_ResponsablesCajas.FechaCreacionColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletfi_ResponsablesCajas.FechaCreacionColumn] = value;
                }
            }
            
            public long IdConexionCreacion {
                get {
                    try {
                        return ((long)(this[this.tabletfi_ResponsablesCajas.IdConexionCreacionColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletfi_ResponsablesCajas.IdConexionCreacionColumn] = value;
                }
            }
            
            public System.Byte[] UltimaModificacion {
                get {
                    try {
                        return ((System.Byte[])(this[this.tabletfi_ResponsablesCajas.UltimaModificacionColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletfi_ResponsablesCajas.UltimaModificacionColumn] = value;
                }
            }
            
            public long IdConexionUltimaModificacion {
                get {
                    try {
                        return ((long)(this[this.tabletfi_ResponsablesCajas.IdConexionUltimaModificacionColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletfi_ResponsablesCajas.IdConexionUltimaModificacionColumn] = value;
                }
            }
            
            public long IdReservado {
                get {
                    try {
                        return ((long)(this[this.tabletfi_ResponsablesCajas.IdReservadoColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletfi_ResponsablesCajas.IdReservadoColumn] = value;
                }
            }
            
            public System.Guid RowId {
                get {
                    try {
                        return ((System.Guid)(this[this.tabletfi_ResponsablesCajas.RowIdColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletfi_ResponsablesCajas.RowIdColumn] = value;
                }
            }
            
            public long IdEmpresa {
                get {
                    try {
                        return ((long)(this[this.tabletfi_ResponsablesCajas.IdEmpresaColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletfi_ResponsablesCajas.IdEmpresaColumn] = value;
                }
            }
            
            public long IdSucursal {
                get {
                    try {
                        return ((long)(this[this.tabletfi_ResponsablesCajas.IdSucursalColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletfi_ResponsablesCajas.IdSucursalColumn] = value;
                }
            }
            
            public bool IsIdCajaNull() {
                return this.IsNull(this.tabletfi_ResponsablesCajas.IdCajaColumn);
            }
            
            public void SetIdCajaNull() {
                this[this.tabletfi_ResponsablesCajas.IdCajaColumn] = System.Convert.DBNull;
            }
            
            public bool IsIdResponsableNull() {
                return this.IsNull(this.tabletfi_ResponsablesCajas.IdResponsableColumn);
            }
            
            public void SetIdResponsableNull() {
                this[this.tabletfi_ResponsablesCajas.IdResponsableColumn] = System.Convert.DBNull;
            }
            
            public bool IsFechaCreacionNull() {
                return this.IsNull(this.tabletfi_ResponsablesCajas.FechaCreacionColumn);
            }
            
            public void SetFechaCreacionNull() {
                this[this.tabletfi_ResponsablesCajas.FechaCreacionColumn] = System.Convert.DBNull;
            }
            
            public bool IsIdConexionCreacionNull() {
                return this.IsNull(this.tabletfi_ResponsablesCajas.IdConexionCreacionColumn);
            }
            
            public void SetIdConexionCreacionNull() {
                this[this.tabletfi_ResponsablesCajas.IdConexionCreacionColumn] = System.Convert.DBNull;
            }
            
            public bool IsUltimaModificacionNull() {
                return this.IsNull(this.tabletfi_ResponsablesCajas.UltimaModificacionColumn);
            }
            
            public void SetUltimaModificacionNull() {
                this[this.tabletfi_ResponsablesCajas.UltimaModificacionColumn] = System.Convert.DBNull;
            }
            
            public bool IsIdConexionUltimaModificacionNull() {
                return this.IsNull(this.tabletfi_ResponsablesCajas.IdConexionUltimaModificacionColumn);
            }
            
            public void SetIdConexionUltimaModificacionNull() {
                this[this.tabletfi_ResponsablesCajas.IdConexionUltimaModificacionColumn] = System.Convert.DBNull;
            }
            
            public bool IsIdReservadoNull() {
                return this.IsNull(this.tabletfi_ResponsablesCajas.IdReservadoColumn);
            }
            
            public void SetIdReservadoNull() {
                this[this.tabletfi_ResponsablesCajas.IdReservadoColumn] = System.Convert.DBNull;
            }
            
            public bool IsRowIdNull() {
                return this.IsNull(this.tabletfi_ResponsablesCajas.RowIdColumn);
            }
            
            public void SetRowIdNull() {
                this[this.tabletfi_ResponsablesCajas.RowIdColumn] = System.Convert.DBNull;
            }
            
            public bool IsIdEmpresaNull() {
                return this.IsNull(this.tabletfi_ResponsablesCajas.IdEmpresaColumn);
            }
            
            public void SetIdEmpresaNull() {
                this[this.tabletfi_ResponsablesCajas.IdEmpresaColumn] = System.Convert.DBNull;
            }
            
            public bool IsIdSucursalNull() {
                return this.IsNull(this.tabletfi_ResponsablesCajas.IdSucursalColumn);
            }
            
            public void SetIdSucursalNull() {
                this[this.tabletfi_ResponsablesCajas.IdSucursalColumn] = System.Convert.DBNull;
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class tfi_ResponsablesCajasRowChangeEvent : EventArgs {
            
            private tfi_ResponsablesCajasRow eventRow;
            
            private DataRowAction eventAction;
            
            public tfi_ResponsablesCajasRowChangeEvent(tfi_ResponsablesCajasRow row, DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            public tfi_ResponsablesCajasRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            public DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class Pr_tfi_Cajas_GetByResponsableDataTable : DataTable, System.Collections.IEnumerable {
            
            private DataColumn columnIdCaja;
            
            private DataColumn columnDescripcion;
            
            internal Pr_tfi_Cajas_GetByResponsableDataTable() : 
                    base("Pr_tfi_Cajas_GetByResponsable") {
                this.InitClass();
            }
            
            internal Pr_tfi_Cajas_GetByResponsableDataTable(DataTable table) : 
                    base(table.TableName) {
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
                this.DisplayExpression = table.DisplayExpression;
            }
            
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            internal DataColumn IdCajaColumn {
                get {
                    return this.columnIdCaja;
                }
            }
            
            internal DataColumn DescripcionColumn {
                get {
                    return this.columnDescripcion;
                }
            }
            
            public Pr_tfi_Cajas_GetByResponsableRow this[int index] {
                get {
                    return ((Pr_tfi_Cajas_GetByResponsableRow)(this.Rows[index]));
                }
            }
            
            public event Pr_tfi_Cajas_GetByResponsableRowChangeEventHandler Pr_tfi_Cajas_GetByResponsableRowChanged;
            
            public event Pr_tfi_Cajas_GetByResponsableRowChangeEventHandler Pr_tfi_Cajas_GetByResponsableRowChanging;
            
            public event Pr_tfi_Cajas_GetByResponsableRowChangeEventHandler Pr_tfi_Cajas_GetByResponsableRowDeleted;
            
            public event Pr_tfi_Cajas_GetByResponsableRowChangeEventHandler Pr_tfi_Cajas_GetByResponsableRowDeleting;
            
            public void AddPr_tfi_Cajas_GetByResponsableRow(Pr_tfi_Cajas_GetByResponsableRow row) {
                this.Rows.Add(row);
            }
            
            public Pr_tfi_Cajas_GetByResponsableRow AddPr_tfi_Cajas_GetByResponsableRow(string IdCaja, string Descripcion) {
                Pr_tfi_Cajas_GetByResponsableRow rowPr_tfi_Cajas_GetByResponsableRow = ((Pr_tfi_Cajas_GetByResponsableRow)(this.NewRow()));
                rowPr_tfi_Cajas_GetByResponsableRow.ItemArray = new object[] {
                        IdCaja,
                        Descripcion};
                this.Rows.Add(rowPr_tfi_Cajas_GetByResponsableRow);
                return rowPr_tfi_Cajas_GetByResponsableRow;
            }
            
            public Pr_tfi_Cajas_GetByResponsableRow FindByIdCaja(string IdCaja) {
                return ((Pr_tfi_Cajas_GetByResponsableRow)(this.Rows.Find(new object[] {
                            IdCaja})));
            }
            
            public System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            public override DataTable Clone() {
                Pr_tfi_Cajas_GetByResponsableDataTable cln = ((Pr_tfi_Cajas_GetByResponsableDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            protected override DataTable CreateInstance() {
                return new Pr_tfi_Cajas_GetByResponsableDataTable();
            }
            
            internal void InitVars() {
                this.columnIdCaja = this.Columns["IdCaja"];
                this.columnDescripcion = this.Columns["Descripcion"];
            }
            
            private void InitClass() {
                this.columnIdCaja = new DataColumn("IdCaja", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdCaja);
                this.columnDescripcion = new DataColumn("Descripcion", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnDescripcion);
                this.Constraints.Add(new UniqueConstraint("tfi_InstanciasCajaExKey4", new DataColumn[] {
                                this.columnIdCaja}, true));
                this.columnIdCaja.AllowDBNull = false;
                this.columnIdCaja.Unique = true;
            }
            
            public Pr_tfi_Cajas_GetByResponsableRow NewPr_tfi_Cajas_GetByResponsableRow() {
                return ((Pr_tfi_Cajas_GetByResponsableRow)(this.NewRow()));
            }
            
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder) {
                return new Pr_tfi_Cajas_GetByResponsableRow(builder);
            }
            
            protected override System.Type GetRowType() {
                return typeof(Pr_tfi_Cajas_GetByResponsableRow);
            }
            
            protected override void OnRowChanged(DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.Pr_tfi_Cajas_GetByResponsableRowChanged != null)) {
                    this.Pr_tfi_Cajas_GetByResponsableRowChanged(this, new Pr_tfi_Cajas_GetByResponsableRowChangeEvent(((Pr_tfi_Cajas_GetByResponsableRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowChanging(DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.Pr_tfi_Cajas_GetByResponsableRowChanging != null)) {
                    this.Pr_tfi_Cajas_GetByResponsableRowChanging(this, new Pr_tfi_Cajas_GetByResponsableRowChangeEvent(((Pr_tfi_Cajas_GetByResponsableRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleted(DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.Pr_tfi_Cajas_GetByResponsableRowDeleted != null)) {
                    this.Pr_tfi_Cajas_GetByResponsableRowDeleted(this, new Pr_tfi_Cajas_GetByResponsableRowChangeEvent(((Pr_tfi_Cajas_GetByResponsableRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleting(DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.Pr_tfi_Cajas_GetByResponsableRowDeleting != null)) {
                    this.Pr_tfi_Cajas_GetByResponsableRowDeleting(this, new Pr_tfi_Cajas_GetByResponsableRowChangeEvent(((Pr_tfi_Cajas_GetByResponsableRow)(e.Row)), e.Action));
                }
            }
            
            public void RemovePr_tfi_Cajas_GetByResponsableRow(Pr_tfi_Cajas_GetByResponsableRow row) {
                this.Rows.Remove(row);
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class Pr_tfi_Cajas_GetByResponsableRow : DataRow {
            
            private Pr_tfi_Cajas_GetByResponsableDataTable tablePr_tfi_Cajas_GetByResponsable;
            
            internal Pr_tfi_Cajas_GetByResponsableRow(DataRowBuilder rb) : 
                    base(rb) {
                this.tablePr_tfi_Cajas_GetByResponsable = ((Pr_tfi_Cajas_GetByResponsableDataTable)(this.Table));
            }
            
            public string IdCaja {
                get {
                    return ((string)(this[this.tablePr_tfi_Cajas_GetByResponsable.IdCajaColumn]));
                }
                set {
                    this[this.tablePr_tfi_Cajas_GetByResponsable.IdCajaColumn] = value;
                }
            }
            
            public string Descripcion {
                get {
                    try {
                        return ((string)(this[this.tablePr_tfi_Cajas_GetByResponsable.DescripcionColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tablePr_tfi_Cajas_GetByResponsable.DescripcionColumn] = value;
                }
            }
            
            public bool IsDescripcionNull() {
                return this.IsNull(this.tablePr_tfi_Cajas_GetByResponsable.DescripcionColumn);
            }
            
            public void SetDescripcionNull() {
                this[this.tablePr_tfi_Cajas_GetByResponsable.DescripcionColumn] = System.Convert.DBNull;
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class Pr_tfi_Cajas_GetByResponsableRowChangeEvent : EventArgs {
            
            private Pr_tfi_Cajas_GetByResponsableRow eventRow;
            
            private DataRowAction eventAction;
            
            public Pr_tfi_Cajas_GetByResponsableRowChangeEvent(Pr_tfi_Cajas_GetByResponsableRow row, DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            public Pr_tfi_Cajas_GetByResponsableRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            public DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class Pr_tfi_InstanciasCaja_GetByResponsableDataTable : DataTable, System.Collections.IEnumerable {
            
            private DataColumn columnIdInstanciaCaja;
            
            private DataColumn columnIdCaja;
            
            private DataColumn columnDescripcion;
            
            private DataColumn columnApertura;
            
            internal Pr_tfi_InstanciasCaja_GetByResponsableDataTable() : 
                    base("Pr_tfi_InstanciasCaja_GetByResponsable") {
                this.InitClass();
            }
            
            internal Pr_tfi_InstanciasCaja_GetByResponsableDataTable(DataTable table) : 
                    base(table.TableName) {
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
                this.DisplayExpression = table.DisplayExpression;
            }
            
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            internal DataColumn IdInstanciaCajaColumn {
                get {
                    return this.columnIdInstanciaCaja;
                }
            }
            
            internal DataColumn IdCajaColumn {
                get {
                    return this.columnIdCaja;
                }
            }
            
            internal DataColumn DescripcionColumn {
                get {
                    return this.columnDescripcion;
                }
            }
            
            internal DataColumn AperturaColumn {
                get {
                    return this.columnApertura;
                }
            }
            
            public Pr_tfi_InstanciasCaja_GetByResponsableRow this[int index] {
                get {
                    return ((Pr_tfi_InstanciasCaja_GetByResponsableRow)(this.Rows[index]));
                }
            }
            
            public event Pr_tfi_InstanciasCaja_GetByResponsableRowChangeEventHandler Pr_tfi_InstanciasCaja_GetByResponsableRowChanged;
            
            public event Pr_tfi_InstanciasCaja_GetByResponsableRowChangeEventHandler Pr_tfi_InstanciasCaja_GetByResponsableRowChanging;
            
            public event Pr_tfi_InstanciasCaja_GetByResponsableRowChangeEventHandler Pr_tfi_InstanciasCaja_GetByResponsableRowDeleted;
            
            public event Pr_tfi_InstanciasCaja_GetByResponsableRowChangeEventHandler Pr_tfi_InstanciasCaja_GetByResponsableRowDeleting;
            
            public void AddPr_tfi_InstanciasCaja_GetByResponsableRow(Pr_tfi_InstanciasCaja_GetByResponsableRow row) {
                this.Rows.Add(row);
            }
            
            public Pr_tfi_InstanciasCaja_GetByResponsableRow AddPr_tfi_InstanciasCaja_GetByResponsableRow(string IdInstanciaCaja, string IdCaja, string Descripcion, System.DateTime Apertura) {
                Pr_tfi_InstanciasCaja_GetByResponsableRow rowPr_tfi_InstanciasCaja_GetByResponsableRow = ((Pr_tfi_InstanciasCaja_GetByResponsableRow)(this.NewRow()));
                rowPr_tfi_InstanciasCaja_GetByResponsableRow.ItemArray = new object[] {
                        IdInstanciaCaja,
                        IdCaja,
                        Descripcion,
                        Apertura};
                this.Rows.Add(rowPr_tfi_InstanciasCaja_GetByResponsableRow);
                return rowPr_tfi_InstanciasCaja_GetByResponsableRow;
            }
            
            public System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            public override DataTable Clone() {
                Pr_tfi_InstanciasCaja_GetByResponsableDataTable cln = ((Pr_tfi_InstanciasCaja_GetByResponsableDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            protected override DataTable CreateInstance() {
                return new Pr_tfi_InstanciasCaja_GetByResponsableDataTable();
            }
            
            internal void InitVars() {
                this.columnIdInstanciaCaja = this.Columns["IdInstanciaCaja"];
                this.columnIdCaja = this.Columns["IdCaja"];
                this.columnDescripcion = this.Columns["Descripcion"];
                this.columnApertura = this.Columns["Apertura"];
            }
            
            private void InitClass() {
                this.columnIdInstanciaCaja = new DataColumn("IdInstanciaCaja", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdInstanciaCaja);
                this.columnIdCaja = new DataColumn("IdCaja", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdCaja);
                this.columnDescripcion = new DataColumn("Descripcion", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnDescripcion);
                this.columnApertura = new DataColumn("Apertura", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnApertura);
                this.columnIdInstanciaCaja.AllowDBNull = false;
                this.columnIdCaja.AllowDBNull = false;
            }
            
            public Pr_tfi_InstanciasCaja_GetByResponsableRow NewPr_tfi_InstanciasCaja_GetByResponsableRow() {
                return ((Pr_tfi_InstanciasCaja_GetByResponsableRow)(this.NewRow()));
            }
            
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder) {
                return new Pr_tfi_InstanciasCaja_GetByResponsableRow(builder);
            }
            
            protected override System.Type GetRowType() {
                return typeof(Pr_tfi_InstanciasCaja_GetByResponsableRow);
            }
            
            protected override void OnRowChanged(DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.Pr_tfi_InstanciasCaja_GetByResponsableRowChanged != null)) {
                    this.Pr_tfi_InstanciasCaja_GetByResponsableRowChanged(this, new Pr_tfi_InstanciasCaja_GetByResponsableRowChangeEvent(((Pr_tfi_InstanciasCaja_GetByResponsableRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowChanging(DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.Pr_tfi_InstanciasCaja_GetByResponsableRowChanging != null)) {
                    this.Pr_tfi_InstanciasCaja_GetByResponsableRowChanging(this, new Pr_tfi_InstanciasCaja_GetByResponsableRowChangeEvent(((Pr_tfi_InstanciasCaja_GetByResponsableRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleted(DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.Pr_tfi_InstanciasCaja_GetByResponsableRowDeleted != null)) {
                    this.Pr_tfi_InstanciasCaja_GetByResponsableRowDeleted(this, new Pr_tfi_InstanciasCaja_GetByResponsableRowChangeEvent(((Pr_tfi_InstanciasCaja_GetByResponsableRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleting(DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.Pr_tfi_InstanciasCaja_GetByResponsableRowDeleting != null)) {
                    this.Pr_tfi_InstanciasCaja_GetByResponsableRowDeleting(this, new Pr_tfi_InstanciasCaja_GetByResponsableRowChangeEvent(((Pr_tfi_InstanciasCaja_GetByResponsableRow)(e.Row)), e.Action));
                }
            }
            
            public void RemovePr_tfi_InstanciasCaja_GetByResponsableRow(Pr_tfi_InstanciasCaja_GetByResponsableRow row) {
                this.Rows.Remove(row);
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class Pr_tfi_InstanciasCaja_GetByResponsableRow : DataRow {
            
            private Pr_tfi_InstanciasCaja_GetByResponsableDataTable tablePr_tfi_InstanciasCaja_GetByResponsable;
            
            internal Pr_tfi_InstanciasCaja_GetByResponsableRow(DataRowBuilder rb) : 
                    base(rb) {
                this.tablePr_tfi_InstanciasCaja_GetByResponsable = ((Pr_tfi_InstanciasCaja_GetByResponsableDataTable)(this.Table));
            }
            
            public string IdInstanciaCaja {
                get {
                    return ((string)(this[this.tablePr_tfi_InstanciasCaja_GetByResponsable.IdInstanciaCajaColumn]));
                }
                set {
                    this[this.tablePr_tfi_InstanciasCaja_GetByResponsable.IdInstanciaCajaColumn] = value;
                }
            }
            
            public string IdCaja {
                get {
                    return ((string)(this[this.tablePr_tfi_InstanciasCaja_GetByResponsable.IdCajaColumn]));
                }
                set {
                    this[this.tablePr_tfi_InstanciasCaja_GetByResponsable.IdCajaColumn] = value;
                }
            }
            
            public string Descripcion {
                get {
                    try {
                        return ((string)(this[this.tablePr_tfi_InstanciasCaja_GetByResponsable.DescripcionColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tablePr_tfi_InstanciasCaja_GetByResponsable.DescripcionColumn] = value;
                }
            }
            
            public System.DateTime Apertura {
                get {
                    try {
                        return ((System.DateTime)(this[this.tablePr_tfi_InstanciasCaja_GetByResponsable.AperturaColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tablePr_tfi_InstanciasCaja_GetByResponsable.AperturaColumn] = value;
                }
            }
            
            public bool IsDescripcionNull() {
                return this.IsNull(this.tablePr_tfi_InstanciasCaja_GetByResponsable.DescripcionColumn);
            }
            
            public void SetDescripcionNull() {
                this[this.tablePr_tfi_InstanciasCaja_GetByResponsable.DescripcionColumn] = System.Convert.DBNull;
            }
            
            public bool IsAperturaNull() {
                return this.IsNull(this.tablePr_tfi_InstanciasCaja_GetByResponsable.AperturaColumn);
            }
            
            public void SetAperturaNull() {
                this[this.tablePr_tfi_InstanciasCaja_GetByResponsable.AperturaColumn] = System.Convert.DBNull;
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class Pr_tfi_InstanciasCaja_GetByResponsableRowChangeEvent : EventArgs {
            
            private Pr_tfi_InstanciasCaja_GetByResponsableRow eventRow;
            
            private DataRowAction eventAction;
            
            public Pr_tfi_InstanciasCaja_GetByResponsableRowChangeEvent(Pr_tfi_InstanciasCaja_GetByResponsableRow row, DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            public Pr_tfi_InstanciasCaja_GetByResponsableRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            public DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class tfi_InstanciasCajaCierresDataTable : DataTable, System.Collections.IEnumerable {
            
            private DataColumn columnIdInstanciaCaja;
            
            private DataColumn columnIdTDCompTesoreria;
            
            private DataColumn columnIdMonedaCierre;
            
            private DataColumn columnTotal;
            
            private DataColumn columnIdCotizacionCierre;
            
            private DataColumn columnFechaCreacion;
            
            private DataColumn columnIdConexionCreacion;
            
            private DataColumn columnUltimaModificacion;
            
            private DataColumn columnIdConexionUltimaModificacion;
            
            private DataColumn columnIdReservado;
            
            private DataColumn columnRowId;
            
            private DataColumn columnIdEmpresa;
            
            private DataColumn columnIdSucursal;
            
            internal tfi_InstanciasCajaCierresDataTable() : 
                    base("tfi_InstanciasCajaCierres") {
                this.InitClass();
            }
            
            internal tfi_InstanciasCajaCierresDataTable(DataTable table) : 
                    base(table.TableName) {
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
                this.DisplayExpression = table.DisplayExpression;
            }
            
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            internal DataColumn IdInstanciaCajaColumn {
                get {
                    return this.columnIdInstanciaCaja;
                }
            }
            
            internal DataColumn IdTDCompTesoreriaColumn {
                get {
                    return this.columnIdTDCompTesoreria;
                }
            }
            
            internal DataColumn IdMonedaCierreColumn {
                get {
                    return this.columnIdMonedaCierre;
                }
            }
            
            internal DataColumn TotalColumn {
                get {
                    return this.columnTotal;
                }
            }
            
            internal DataColumn IdCotizacionCierreColumn {
                get {
                    return this.columnIdCotizacionCierre;
                }
            }
            
            internal DataColumn FechaCreacionColumn {
                get {
                    return this.columnFechaCreacion;
                }
            }
            
            internal DataColumn IdConexionCreacionColumn {
                get {
                    return this.columnIdConexionCreacion;
                }
            }
            
            internal DataColumn UltimaModificacionColumn {
                get {
                    return this.columnUltimaModificacion;
                }
            }
            
            internal DataColumn IdConexionUltimaModificacionColumn {
                get {
                    return this.columnIdConexionUltimaModificacion;
                }
            }
            
            internal DataColumn IdReservadoColumn {
                get {
                    return this.columnIdReservado;
                }
            }
            
            internal DataColumn RowIdColumn {
                get {
                    return this.columnRowId;
                }
            }
            
            internal DataColumn IdEmpresaColumn {
                get {
                    return this.columnIdEmpresa;
                }
            }
            
            internal DataColumn IdSucursalColumn {
                get {
                    return this.columnIdSucursal;
                }
            }
            
            public tfi_InstanciasCajaCierresRow this[int index] {
                get {
                    return ((tfi_InstanciasCajaCierresRow)(this.Rows[index]));
                }
            }
            
            public event tfi_InstanciasCajaCierresRowChangeEventHandler tfi_InstanciasCajaCierresRowChanged;
            
            public event tfi_InstanciasCajaCierresRowChangeEventHandler tfi_InstanciasCajaCierresRowChanging;
            
            public event tfi_InstanciasCajaCierresRowChangeEventHandler tfi_InstanciasCajaCierresRowDeleted;
            
            public event tfi_InstanciasCajaCierresRowChangeEventHandler tfi_InstanciasCajaCierresRowDeleting;
            
            public void Addtfi_InstanciasCajaCierresRow(tfi_InstanciasCajaCierresRow row) {
                this.Rows.Add(row);
            }
            
            public tfi_InstanciasCajaCierresRow Addtfi_InstanciasCajaCierresRow(string IdInstanciaCaja, string IdTDCompTesoreria, string IdMonedaCierre, System.Decimal Total, string IdCotizacionCierre, System.DateTime FechaCreacion, long IdConexionCreacion, System.Byte[] UltimaModificacion, long IdConexionUltimaModificacion, long IdReservado, System.Guid RowId, long IdEmpresa, long IdSucursal) {
                tfi_InstanciasCajaCierresRow rowtfi_InstanciasCajaCierresRow = ((tfi_InstanciasCajaCierresRow)(this.NewRow()));
                rowtfi_InstanciasCajaCierresRow.ItemArray = new object[] {
                        IdInstanciaCaja,
                        IdTDCompTesoreria,
                        IdMonedaCierre,
                        Total,
                        IdCotizacionCierre,
                        FechaCreacion,
                        IdConexionCreacion,
                        UltimaModificacion,
                        IdConexionUltimaModificacion,
                        IdReservado,
                        RowId,
                        IdEmpresa,
                        IdSucursal};
                this.Rows.Add(rowtfi_InstanciasCajaCierresRow);
                return rowtfi_InstanciasCajaCierresRow;
            }
            
            public tfi_InstanciasCajaCierresRow FindByIdInstanciaCajaIdTDCompTesoreriaIdMonedaCierre(string IdInstanciaCaja, string IdTDCompTesoreria, string IdMonedaCierre) {
                return ((tfi_InstanciasCajaCierresRow)(this.Rows.Find(new object[] {
                            IdInstanciaCaja,
                            IdTDCompTesoreria,
                            IdMonedaCierre})));
            }
            
            public System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            public override DataTable Clone() {
                tfi_InstanciasCajaCierresDataTable cln = ((tfi_InstanciasCajaCierresDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            protected override DataTable CreateInstance() {
                return new tfi_InstanciasCajaCierresDataTable();
            }
            
            internal void InitVars() {
                this.columnIdInstanciaCaja = this.Columns["IdInstanciaCaja"];
                this.columnIdTDCompTesoreria = this.Columns["IdTDCompTesoreria"];
                this.columnIdMonedaCierre = this.Columns["IdMonedaCierre"];
                this.columnTotal = this.Columns["Total"];
                this.columnIdCotizacionCierre = this.Columns["IdCotizacionCierre"];
                this.columnFechaCreacion = this.Columns["FechaCreacion"];
                this.columnIdConexionCreacion = this.Columns["IdConexionCreacion"];
                this.columnUltimaModificacion = this.Columns["UltimaModificacion"];
                this.columnIdConexionUltimaModificacion = this.Columns["IdConexionUltimaModificacion"];
                this.columnIdReservado = this.Columns["IdReservado"];
                this.columnRowId = this.Columns["RowId"];
                this.columnIdEmpresa = this.Columns["IdEmpresa"];
                this.columnIdSucursal = this.Columns["IdSucursal"];
            }
            
            private void InitClass() {
                this.columnIdInstanciaCaja = new DataColumn("IdInstanciaCaja", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdInstanciaCaja);
                this.columnIdTDCompTesoreria = new DataColumn("IdTDCompTesoreria", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdTDCompTesoreria);
                this.columnIdMonedaCierre = new DataColumn("IdMonedaCierre", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdMonedaCierre);
                this.columnTotal = new DataColumn("Total", typeof(System.Decimal), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnTotal);
                this.columnIdCotizacionCierre = new DataColumn("IdCotizacionCierre", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdCotizacionCierre);
                this.columnFechaCreacion = new DataColumn("FechaCreacion", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnFechaCreacion);
                this.columnIdConexionCreacion = new DataColumn("IdConexionCreacion", typeof(long), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdConexionCreacion);
                this.columnUltimaModificacion = new DataColumn("UltimaModificacion", typeof(System.Byte[]), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnUltimaModificacion);
                this.columnIdConexionUltimaModificacion = new DataColumn("IdConexionUltimaModificacion", typeof(long), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdConexionUltimaModificacion);
                this.columnIdReservado = new DataColumn("IdReservado", typeof(long), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdReservado);
                this.columnRowId = new DataColumn("RowId", typeof(System.Guid), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnRowId);
                this.columnIdEmpresa = new DataColumn("IdEmpresa", typeof(long), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdEmpresa);
                this.columnIdSucursal = new DataColumn("IdSucursal", typeof(long), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdSucursal);
                this.Constraints.Add(new UniqueConstraint("tfi_InstanciasCajaExDatasetKey1", new DataColumn[] {
                                this.columnIdInstanciaCaja,
                                this.columnIdTDCompTesoreria,
                                this.columnIdMonedaCierre}, true));
                this.columnIdInstanciaCaja.AllowDBNull = false;
                this.columnIdTDCompTesoreria.AllowDBNull = false;
                this.columnIdMonedaCierre.AllowDBNull = false;
                this.columnUltimaModificacion.ReadOnly = true;
            }
            
            public tfi_InstanciasCajaCierresRow Newtfi_InstanciasCajaCierresRow() {
                return ((tfi_InstanciasCajaCierresRow)(this.NewRow()));
            }
            
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder) {
                return new tfi_InstanciasCajaCierresRow(builder);
            }
            
            protected override System.Type GetRowType() {
                return typeof(tfi_InstanciasCajaCierresRow);
            }
            
            protected override void OnRowChanged(DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.tfi_InstanciasCajaCierresRowChanged != null)) {
                    this.tfi_InstanciasCajaCierresRowChanged(this, new tfi_InstanciasCajaCierresRowChangeEvent(((tfi_InstanciasCajaCierresRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowChanging(DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.tfi_InstanciasCajaCierresRowChanging != null)) {
                    this.tfi_InstanciasCajaCierresRowChanging(this, new tfi_InstanciasCajaCierresRowChangeEvent(((tfi_InstanciasCajaCierresRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleted(DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.tfi_InstanciasCajaCierresRowDeleted != null)) {
                    this.tfi_InstanciasCajaCierresRowDeleted(this, new tfi_InstanciasCajaCierresRowChangeEvent(((tfi_InstanciasCajaCierresRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleting(DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.tfi_InstanciasCajaCierresRowDeleting != null)) {
                    this.tfi_InstanciasCajaCierresRowDeleting(this, new tfi_InstanciasCajaCierresRowChangeEvent(((tfi_InstanciasCajaCierresRow)(e.Row)), e.Action));
                }
            }
            
            public void Removetfi_InstanciasCajaCierresRow(tfi_InstanciasCajaCierresRow row) {
                this.Rows.Remove(row);
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class tfi_InstanciasCajaCierresRow : DataRow {
            
            private tfi_InstanciasCajaCierresDataTable tabletfi_InstanciasCajaCierres;
            
            internal tfi_InstanciasCajaCierresRow(DataRowBuilder rb) : 
                    base(rb) {
                this.tabletfi_InstanciasCajaCierres = ((tfi_InstanciasCajaCierresDataTable)(this.Table));
            }
            
            public string IdInstanciaCaja {
                get {
                    return ((string)(this[this.tabletfi_InstanciasCajaCierres.IdInstanciaCajaColumn]));
                }
                set {
                    this[this.tabletfi_InstanciasCajaCierres.IdInstanciaCajaColumn] = value;
                }
            }
            
            public string IdTDCompTesoreria {
                get {
                    return ((string)(this[this.tabletfi_InstanciasCajaCierres.IdTDCompTesoreriaColumn]));
                }
                set {
                    this[this.tabletfi_InstanciasCajaCierres.IdTDCompTesoreriaColumn] = value;
                }
            }
            
            public string IdMonedaCierre {
                get {
                    return ((string)(this[this.tabletfi_InstanciasCajaCierres.IdMonedaCierreColumn]));
                }
                set {
                    this[this.tabletfi_InstanciasCajaCierres.IdMonedaCierreColumn] = value;
                }
            }
            
            public System.Decimal Total {
                get {
                    try {
                        return ((System.Decimal)(this[this.tabletfi_InstanciasCajaCierres.TotalColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletfi_InstanciasCajaCierres.TotalColumn] = value;
                }
            }
            
            public string IdCotizacionCierre {
                get {
                    try {
                        return ((string)(this[this.tabletfi_InstanciasCajaCierres.IdCotizacionCierreColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletfi_InstanciasCajaCierres.IdCotizacionCierreColumn] = value;
                }
            }
            
            public System.DateTime FechaCreacion {
                get {
                    try {
                        return ((System.DateTime)(this[this.tabletfi_InstanciasCajaCierres.FechaCreacionColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletfi_InstanciasCajaCierres.FechaCreacionColumn] = value;
                }
            }
            
            public long IdConexionCreacion {
                get {
                    try {
                        return ((long)(this[this.tabletfi_InstanciasCajaCierres.IdConexionCreacionColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletfi_InstanciasCajaCierres.IdConexionCreacionColumn] = value;
                }
            }
            
            public System.Byte[] UltimaModificacion {
                get {
                    try {
                        return ((System.Byte[])(this[this.tabletfi_InstanciasCajaCierres.UltimaModificacionColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletfi_InstanciasCajaCierres.UltimaModificacionColumn] = value;
                }
            }
            
            public long IdConexionUltimaModificacion {
                get {
                    try {
                        return ((long)(this[this.tabletfi_InstanciasCajaCierres.IdConexionUltimaModificacionColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletfi_InstanciasCajaCierres.IdConexionUltimaModificacionColumn] = value;
                }
            }
            
            public long IdReservado {
                get {
                    try {
                        return ((long)(this[this.tabletfi_InstanciasCajaCierres.IdReservadoColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletfi_InstanciasCajaCierres.IdReservadoColumn] = value;
                }
            }
            
            public System.Guid RowId {
                get {
                    try {
                        return ((System.Guid)(this[this.tabletfi_InstanciasCajaCierres.RowIdColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletfi_InstanciasCajaCierres.RowIdColumn] = value;
                }
            }
            
            public long IdEmpresa {
                get {
                    try {
                        return ((long)(this[this.tabletfi_InstanciasCajaCierres.IdEmpresaColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletfi_InstanciasCajaCierres.IdEmpresaColumn] = value;
                }
            }
            
            public long IdSucursal {
                get {
                    try {
                        return ((long)(this[this.tabletfi_InstanciasCajaCierres.IdSucursalColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletfi_InstanciasCajaCierres.IdSucursalColumn] = value;
                }
            }
            
            public bool IsTotalNull() {
                return this.IsNull(this.tabletfi_InstanciasCajaCierres.TotalColumn);
            }
            
            public void SetTotalNull() {
                this[this.tabletfi_InstanciasCajaCierres.TotalColumn] = System.Convert.DBNull;
            }
            
            public bool IsIdCotizacionCierreNull() {
                return this.IsNull(this.tabletfi_InstanciasCajaCierres.IdCotizacionCierreColumn);
            }
            
            public void SetIdCotizacionCierreNull() {
                this[this.tabletfi_InstanciasCajaCierres.IdCotizacionCierreColumn] = System.Convert.DBNull;
            }
            
            public bool IsFechaCreacionNull() {
                return this.IsNull(this.tabletfi_InstanciasCajaCierres.FechaCreacionColumn);
            }
            
            public void SetFechaCreacionNull() {
                this[this.tabletfi_InstanciasCajaCierres.FechaCreacionColumn] = System.Convert.DBNull;
            }
            
            public bool IsIdConexionCreacionNull() {
                return this.IsNull(this.tabletfi_InstanciasCajaCierres.IdConexionCreacionColumn);
            }
            
            public void SetIdConexionCreacionNull() {
                this[this.tabletfi_InstanciasCajaCierres.IdConexionCreacionColumn] = System.Convert.DBNull;
            }
            
            public bool IsUltimaModificacionNull() {
                return this.IsNull(this.tabletfi_InstanciasCajaCierres.UltimaModificacionColumn);
            }
            
            public void SetUltimaModificacionNull() {
                this[this.tabletfi_InstanciasCajaCierres.UltimaModificacionColumn] = System.Convert.DBNull;
            }
            
            public bool IsIdConexionUltimaModificacionNull() {
                return this.IsNull(this.tabletfi_InstanciasCajaCierres.IdConexionUltimaModificacionColumn);
            }
            
            public void SetIdConexionUltimaModificacionNull() {
                this[this.tabletfi_InstanciasCajaCierres.IdConexionUltimaModificacionColumn] = System.Convert.DBNull;
            }
            
            public bool IsIdReservadoNull() {
                return this.IsNull(this.tabletfi_InstanciasCajaCierres.IdReservadoColumn);
            }
            
            public void SetIdReservadoNull() {
                this[this.tabletfi_InstanciasCajaCierres.IdReservadoColumn] = System.Convert.DBNull;
            }
            
            public bool IsRowIdNull() {
                return this.IsNull(this.tabletfi_InstanciasCajaCierres.RowIdColumn);
            }
            
            public void SetRowIdNull() {
                this[this.tabletfi_InstanciasCajaCierres.RowIdColumn] = System.Convert.DBNull;
            }
            
            public bool IsIdEmpresaNull() {
                return this.IsNull(this.tabletfi_InstanciasCajaCierres.IdEmpresaColumn);
            }
            
            public void SetIdEmpresaNull() {
                this[this.tabletfi_InstanciasCajaCierres.IdEmpresaColumn] = System.Convert.DBNull;
            }
            
            public bool IsIdSucursalNull() {
                return this.IsNull(this.tabletfi_InstanciasCajaCierres.IdSucursalColumn);
            }
            
            public void SetIdSucursalNull() {
                this[this.tabletfi_InstanciasCajaCierres.IdSucursalColumn] = System.Convert.DBNull;
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class tfi_InstanciasCajaCierresRowChangeEvent : EventArgs {
            
            private tfi_InstanciasCajaCierresRow eventRow;
            
            private DataRowAction eventAction;
            
            public tfi_InstanciasCajaCierresRowChangeEvent(tfi_InstanciasCajaCierresRow row, DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            public tfi_InstanciasCajaCierresRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            public DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class Pr_tfi_InstanciasCaja_CierreCajaDataTable : DataTable, System.Collections.IEnumerable {
            
            private DataColumn columnIdInstanciaCaja;
            
            private DataColumn columnCantidad;
            
            private DataColumn columnIdTDCompTesoreria;
            
            private DataColumn columnTipo_de_Comprobante;
            
            private DataColumn columnIdMoneda;
            
            private DataColumn columnMoneda;
            
            private DataColumn columnIdCotizacionMoneda;
            
            private DataColumn columnNeto;
            
            internal Pr_tfi_InstanciasCaja_CierreCajaDataTable() : 
                    base("Pr_tfi_InstanciasCaja_CierreCaja") {
                this.InitClass();
            }
            
            internal Pr_tfi_InstanciasCaja_CierreCajaDataTable(DataTable table) : 
                    base(table.TableName) {
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
                this.DisplayExpression = table.DisplayExpression;
            }
            
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            internal DataColumn IdInstanciaCajaColumn {
                get {
                    return this.columnIdInstanciaCaja;
                }
            }
            
            internal DataColumn CantidadColumn {
                get {
                    return this.columnCantidad;
                }
            }
            
            internal DataColumn IdTDCompTesoreriaColumn {
                get {
                    return this.columnIdTDCompTesoreria;
                }
            }
            
            internal DataColumn Tipo_de_ComprobanteColumn {
                get {
                    return this.columnTipo_de_Comprobante;
                }
            }
            
            internal DataColumn IdMonedaColumn {
                get {
                    return this.columnIdMoneda;
                }
            }
            
            internal DataColumn MonedaColumn {
                get {
                    return this.columnMoneda;
                }
            }
            
            internal DataColumn IdCotizacionMonedaColumn {
                get {
                    return this.columnIdCotizacionMoneda;
                }
            }
            
            internal DataColumn NetoColumn {
                get {
                    return this.columnNeto;
                }
            }
            
            public Pr_tfi_InstanciasCaja_CierreCajaRow this[int index] {
                get {
                    return ((Pr_tfi_InstanciasCaja_CierreCajaRow)(this.Rows[index]));
                }
            }
            
            public event Pr_tfi_InstanciasCaja_CierreCajaRowChangeEventHandler Pr_tfi_InstanciasCaja_CierreCajaRowChanged;
            
            public event Pr_tfi_InstanciasCaja_CierreCajaRowChangeEventHandler Pr_tfi_InstanciasCaja_CierreCajaRowChanging;
            
            public event Pr_tfi_InstanciasCaja_CierreCajaRowChangeEventHandler Pr_tfi_InstanciasCaja_CierreCajaRowDeleted;
            
            public event Pr_tfi_InstanciasCaja_CierreCajaRowChangeEventHandler Pr_tfi_InstanciasCaja_CierreCajaRowDeleting;
            
            public void AddPr_tfi_InstanciasCaja_CierreCajaRow(Pr_tfi_InstanciasCaja_CierreCajaRow row) {
                this.Rows.Add(row);
            }
            
            public Pr_tfi_InstanciasCaja_CierreCajaRow AddPr_tfi_InstanciasCaja_CierreCajaRow(string IdInstanciaCaja, int Cantidad, string IdTDCompTesoreria, string Tipo_de_Comprobante, string IdMoneda, string Moneda, string IdCotizacionMoneda, System.Decimal Neto) {
                Pr_tfi_InstanciasCaja_CierreCajaRow rowPr_tfi_InstanciasCaja_CierreCajaRow = ((Pr_tfi_InstanciasCaja_CierreCajaRow)(this.NewRow()));
                rowPr_tfi_InstanciasCaja_CierreCajaRow.ItemArray = new object[] {
                        IdInstanciaCaja,
                        Cantidad,
                        IdTDCompTesoreria,
                        Tipo_de_Comprobante,
                        IdMoneda,
                        Moneda,
                        IdCotizacionMoneda,
                        Neto};
                this.Rows.Add(rowPr_tfi_InstanciasCaja_CierreCajaRow);
                return rowPr_tfi_InstanciasCaja_CierreCajaRow;
            }
            
            public System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            public override DataTable Clone() {
                Pr_tfi_InstanciasCaja_CierreCajaDataTable cln = ((Pr_tfi_InstanciasCaja_CierreCajaDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            protected override DataTable CreateInstance() {
                return new Pr_tfi_InstanciasCaja_CierreCajaDataTable();
            }
            
            internal void InitVars() {
                this.columnIdInstanciaCaja = this.Columns["IdInstanciaCaja"];
                this.columnCantidad = this.Columns["Cantidad"];
                this.columnIdTDCompTesoreria = this.Columns["IdTDCompTesoreria"];
                this.columnTipo_de_Comprobante = this.Columns["Tipo de Comprobante"];
                this.columnIdMoneda = this.Columns["IdMoneda"];
                this.columnMoneda = this.Columns["Moneda"];
                this.columnIdCotizacionMoneda = this.Columns["IdCotizacionMoneda"];
                this.columnNeto = this.Columns["Neto"];
            }
            
            private void InitClass() {
                this.columnIdInstanciaCaja = new DataColumn("IdInstanciaCaja", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdInstanciaCaja);
                this.columnCantidad = new DataColumn("Cantidad", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnCantidad);
                this.columnIdTDCompTesoreria = new DataColumn("IdTDCompTesoreria", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdTDCompTesoreria);
                this.columnTipo_de_Comprobante = new DataColumn("Tipo de Comprobante", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnTipo_de_Comprobante);
                this.columnIdMoneda = new DataColumn("IdMoneda", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdMoneda);
                this.columnMoneda = new DataColumn("Moneda", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnMoneda);
                this.columnIdCotizacionMoneda = new DataColumn("IdCotizacionMoneda", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdCotizacionMoneda);
                this.columnNeto = new DataColumn("Neto", typeof(System.Decimal), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnNeto);
                this.columnIdInstanciaCaja.AllowDBNull = false;
                this.columnCantidad.ReadOnly = true;
                this.columnIdTDCompTesoreria.AllowDBNull = false;
                this.columnMoneda.AllowDBNull = false;
                this.columnNeto.ReadOnly = true;
            }
            
            public Pr_tfi_InstanciasCaja_CierreCajaRow NewPr_tfi_InstanciasCaja_CierreCajaRow() {
                return ((Pr_tfi_InstanciasCaja_CierreCajaRow)(this.NewRow()));
            }
            
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder) {
                return new Pr_tfi_InstanciasCaja_CierreCajaRow(builder);
            }
            
            protected override System.Type GetRowType() {
                return typeof(Pr_tfi_InstanciasCaja_CierreCajaRow);
            }
            
            protected override void OnRowChanged(DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.Pr_tfi_InstanciasCaja_CierreCajaRowChanged != null)) {
                    this.Pr_tfi_InstanciasCaja_CierreCajaRowChanged(this, new Pr_tfi_InstanciasCaja_CierreCajaRowChangeEvent(((Pr_tfi_InstanciasCaja_CierreCajaRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowChanging(DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.Pr_tfi_InstanciasCaja_CierreCajaRowChanging != null)) {
                    this.Pr_tfi_InstanciasCaja_CierreCajaRowChanging(this, new Pr_tfi_InstanciasCaja_CierreCajaRowChangeEvent(((Pr_tfi_InstanciasCaja_CierreCajaRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleted(DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.Pr_tfi_InstanciasCaja_CierreCajaRowDeleted != null)) {
                    this.Pr_tfi_InstanciasCaja_CierreCajaRowDeleted(this, new Pr_tfi_InstanciasCaja_CierreCajaRowChangeEvent(((Pr_tfi_InstanciasCaja_CierreCajaRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleting(DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.Pr_tfi_InstanciasCaja_CierreCajaRowDeleting != null)) {
                    this.Pr_tfi_InstanciasCaja_CierreCajaRowDeleting(this, new Pr_tfi_InstanciasCaja_CierreCajaRowChangeEvent(((Pr_tfi_InstanciasCaja_CierreCajaRow)(e.Row)), e.Action));
                }
            }
            
            public void RemovePr_tfi_InstanciasCaja_CierreCajaRow(Pr_tfi_InstanciasCaja_CierreCajaRow row) {
                this.Rows.Remove(row);
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class Pr_tfi_InstanciasCaja_CierreCajaRow : DataRow {
            
            private Pr_tfi_InstanciasCaja_CierreCajaDataTable tablePr_tfi_InstanciasCaja_CierreCaja;
            
            internal Pr_tfi_InstanciasCaja_CierreCajaRow(DataRowBuilder rb) : 
                    base(rb) {
                this.tablePr_tfi_InstanciasCaja_CierreCaja = ((Pr_tfi_InstanciasCaja_CierreCajaDataTable)(this.Table));
            }
            
            public string IdInstanciaCaja {
                get {
                    return ((string)(this[this.tablePr_tfi_InstanciasCaja_CierreCaja.IdInstanciaCajaColumn]));
                }
                set {
                    this[this.tablePr_tfi_InstanciasCaja_CierreCaja.IdInstanciaCajaColumn] = value;
                }
            }
            
            public int Cantidad {
                get {
                    try {
                        return ((int)(this[this.tablePr_tfi_InstanciasCaja_CierreCaja.CantidadColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tablePr_tfi_InstanciasCaja_CierreCaja.CantidadColumn] = value;
                }
            }
            
            public string IdTDCompTesoreria {
                get {
                    return ((string)(this[this.tablePr_tfi_InstanciasCaja_CierreCaja.IdTDCompTesoreriaColumn]));
                }
                set {
                    this[this.tablePr_tfi_InstanciasCaja_CierreCaja.IdTDCompTesoreriaColumn] = value;
                }
            }
            
            public string Tipo_de_Comprobante {
                get {
                    try {
                        return ((string)(this[this.tablePr_tfi_InstanciasCaja_CierreCaja.Tipo_de_ComprobanteColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tablePr_tfi_InstanciasCaja_CierreCaja.Tipo_de_ComprobanteColumn] = value;
                }
            }
            
            public string IdMoneda {
                get {
                    try {
                        return ((string)(this[this.tablePr_tfi_InstanciasCaja_CierreCaja.IdMonedaColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tablePr_tfi_InstanciasCaja_CierreCaja.IdMonedaColumn] = value;
                }
            }
            
            public string Moneda {
                get {
                    return ((string)(this[this.tablePr_tfi_InstanciasCaja_CierreCaja.MonedaColumn]));
                }
                set {
                    this[this.tablePr_tfi_InstanciasCaja_CierreCaja.MonedaColumn] = value;
                }
            }
            
            public string IdCotizacionMoneda {
                get {
                    try {
                        return ((string)(this[this.tablePr_tfi_InstanciasCaja_CierreCaja.IdCotizacionMonedaColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tablePr_tfi_InstanciasCaja_CierreCaja.IdCotizacionMonedaColumn] = value;
                }
            }
            
            public System.Decimal Neto {
                get {
                    try {
                        return ((System.Decimal)(this[this.tablePr_tfi_InstanciasCaja_CierreCaja.NetoColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tablePr_tfi_InstanciasCaja_CierreCaja.NetoColumn] = value;
                }
            }
            
            public bool IsCantidadNull() {
                return this.IsNull(this.tablePr_tfi_InstanciasCaja_CierreCaja.CantidadColumn);
            }
            
            public void SetCantidadNull() {
                this[this.tablePr_tfi_InstanciasCaja_CierreCaja.CantidadColumn] = System.Convert.DBNull;
            }
            
            public bool IsTipo_de_ComprobanteNull() {
                return this.IsNull(this.tablePr_tfi_InstanciasCaja_CierreCaja.Tipo_de_ComprobanteColumn);
            }
            
            public void SetTipo_de_ComprobanteNull() {
                this[this.tablePr_tfi_InstanciasCaja_CierreCaja.Tipo_de_ComprobanteColumn] = System.Convert.DBNull;
            }
            
            public bool IsIdMonedaNull() {
                return this.IsNull(this.tablePr_tfi_InstanciasCaja_CierreCaja.IdMonedaColumn);
            }
            
            public void SetIdMonedaNull() {
                this[this.tablePr_tfi_InstanciasCaja_CierreCaja.IdMonedaColumn] = System.Convert.DBNull;
            }
            
            public bool IsIdCotizacionMonedaNull() {
                return this.IsNull(this.tablePr_tfi_InstanciasCaja_CierreCaja.IdCotizacionMonedaColumn);
            }
            
            public void SetIdCotizacionMonedaNull() {
                this[this.tablePr_tfi_InstanciasCaja_CierreCaja.IdCotizacionMonedaColumn] = System.Convert.DBNull;
            }
            
            public bool IsNetoNull() {
                return this.IsNull(this.tablePr_tfi_InstanciasCaja_CierreCaja.NetoColumn);
            }
            
            public void SetNetoNull() {
                this[this.tablePr_tfi_InstanciasCaja_CierreCaja.NetoColumn] = System.Convert.DBNull;
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class Pr_tfi_InstanciasCaja_CierreCajaRowChangeEvent : EventArgs {
            
            private Pr_tfi_InstanciasCaja_CierreCajaRow eventRow;
            
            private DataRowAction eventAction;
            
            public Pr_tfi_InstanciasCaja_CierreCajaRowChangeEvent(Pr_tfi_InstanciasCaja_CierreCajaRow row, DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            public Pr_tfi_InstanciasCaja_CierreCajaRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            public DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
