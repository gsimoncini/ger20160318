//------------------------------------------------------------------------------
// <autogenerated>
//     This code was generated by a tool.
//     Runtime Version: 1.1.4322.573
//
//     Changes to this file may cause incorrect behavior and will be lost if 
//     the code is regenerated.
// </autogenerated>
//------------------------------------------------------------------------------

namespace mz.erp.commontypes.data {
    using System;
    using System.Data;
    using System.Xml;
    using System.Runtime.Serialization;
    
    
    [Serializable()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Diagnostics.DebuggerStepThrough()]
    [System.ComponentModel.ToolboxItem(true)]
    public class tfi_FormasDePagoExDataset : DataSet {
        
        private Pr_tfi_CotizacionesMoneda_GetValorCotizacionDataTable tablePr_tfi_CotizacionesMoneda_GetValorCotizacion;
        
        private Pr_tfi_GetComprobantesTesoreriaDataTable tablePr_tfi_GetComprobantesTesoreria;
        
        private Pr_tfi_GetFormasDePagosDataTable tablePr_tfi_GetFormasDePagos;
        
        private Pr_tfi_GetFormasDePagosGeneralesDataTable tablePr_tfi_GetFormasDePagosGenerales;
        
        public tfi_FormasDePagoExDataset() {
            this.InitClass();
            System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            this.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        protected tfi_FormasDePagoExDataset(SerializationInfo info, StreamingContext context) {
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((strSchema != null)) {
                DataSet ds = new DataSet();
                ds.ReadXmlSchema(new XmlTextReader(new System.IO.StringReader(strSchema)));
                if ((ds.Tables["Pr_tfi_CotizacionesMoneda_GetValorCotizacion"] != null)) {
                    this.Tables.Add(new Pr_tfi_CotizacionesMoneda_GetValorCotizacionDataTable(ds.Tables["Pr_tfi_CotizacionesMoneda_GetValorCotizacion"]));
                }
                if ((ds.Tables["Pr_tfi_GetComprobantesTesoreria"] != null)) {
                    this.Tables.Add(new Pr_tfi_GetComprobantesTesoreriaDataTable(ds.Tables["Pr_tfi_GetComprobantesTesoreria"]));
                }
                if ((ds.Tables["Pr_tfi_GetFormasDePagos"] != null)) {
                    this.Tables.Add(new Pr_tfi_GetFormasDePagosDataTable(ds.Tables["Pr_tfi_GetFormasDePagos"]));
                }
                if ((ds.Tables["Pr_tfi_GetFormasDePagosGenerales"] != null)) {
                    this.Tables.Add(new Pr_tfi_GetFormasDePagosGeneralesDataTable(ds.Tables["Pr_tfi_GetFormasDePagosGenerales"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.InitClass();
            }
            this.GetSerializationData(info, context);
            System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            this.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public Pr_tfi_CotizacionesMoneda_GetValorCotizacionDataTable Pr_tfi_CotizacionesMoneda_GetValorCotizacion {
            get {
                return this.tablePr_tfi_CotizacionesMoneda_GetValorCotizacion;
            }
        }
        
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public Pr_tfi_GetComprobantesTesoreriaDataTable Pr_tfi_GetComprobantesTesoreria {
            get {
                return this.tablePr_tfi_GetComprobantesTesoreria;
            }
        }
        
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public Pr_tfi_GetFormasDePagosDataTable Pr_tfi_GetFormasDePagos {
            get {
                return this.tablePr_tfi_GetFormasDePagos;
            }
        }
        
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public Pr_tfi_GetFormasDePagosGeneralesDataTable Pr_tfi_GetFormasDePagosGenerales {
            get {
                return this.tablePr_tfi_GetFormasDePagosGenerales;
            }
        }
        
        public override DataSet Clone() {
            tfi_FormasDePagoExDataset cln = ((tfi_FormasDePagoExDataset)(base.Clone()));
            cln.InitVars();
            return cln;
        }
        
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        protected override void ReadXmlSerializable(XmlReader reader) {
            this.Reset();
            DataSet ds = new DataSet();
            ds.ReadXml(reader);
            if ((ds.Tables["Pr_tfi_CotizacionesMoneda_GetValorCotizacion"] != null)) {
                this.Tables.Add(new Pr_tfi_CotizacionesMoneda_GetValorCotizacionDataTable(ds.Tables["Pr_tfi_CotizacionesMoneda_GetValorCotizacion"]));
            }
            if ((ds.Tables["Pr_tfi_GetComprobantesTesoreria"] != null)) {
                this.Tables.Add(new Pr_tfi_GetComprobantesTesoreriaDataTable(ds.Tables["Pr_tfi_GetComprobantesTesoreria"]));
            }
            if ((ds.Tables["Pr_tfi_GetFormasDePagos"] != null)) {
                this.Tables.Add(new Pr_tfi_GetFormasDePagosDataTable(ds.Tables["Pr_tfi_GetFormasDePagos"]));
            }
            if ((ds.Tables["Pr_tfi_GetFormasDePagosGenerales"] != null)) {
                this.Tables.Add(new Pr_tfi_GetFormasDePagosGeneralesDataTable(ds.Tables["Pr_tfi_GetFormasDePagosGenerales"]));
            }
            this.DataSetName = ds.DataSetName;
            this.Prefix = ds.Prefix;
            this.Namespace = ds.Namespace;
            this.Locale = ds.Locale;
            this.CaseSensitive = ds.CaseSensitive;
            this.EnforceConstraints = ds.EnforceConstraints;
            this.Merge(ds, false, System.Data.MissingSchemaAction.Add);
            this.InitVars();
        }
        
        protected override System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            System.IO.MemoryStream stream = new System.IO.MemoryStream();
            this.WriteXmlSchema(new XmlTextWriter(stream, null));
            stream.Position = 0;
            return System.Xml.Schema.XmlSchema.Read(new XmlTextReader(stream), null);
        }
        
        internal void InitVars() {
            this.tablePr_tfi_CotizacionesMoneda_GetValorCotizacion = ((Pr_tfi_CotizacionesMoneda_GetValorCotizacionDataTable)(this.Tables["Pr_tfi_CotizacionesMoneda_GetValorCotizacion"]));
            if ((this.tablePr_tfi_CotizacionesMoneda_GetValorCotizacion != null)) {
                this.tablePr_tfi_CotizacionesMoneda_GetValorCotizacion.InitVars();
            }
            this.tablePr_tfi_GetComprobantesTesoreria = ((Pr_tfi_GetComprobantesTesoreriaDataTable)(this.Tables["Pr_tfi_GetComprobantesTesoreria"]));
            if ((this.tablePr_tfi_GetComprobantesTesoreria != null)) {
                this.tablePr_tfi_GetComprobantesTesoreria.InitVars();
            }
            this.tablePr_tfi_GetFormasDePagos = ((Pr_tfi_GetFormasDePagosDataTable)(this.Tables["Pr_tfi_GetFormasDePagos"]));
            if ((this.tablePr_tfi_GetFormasDePagos != null)) {
                this.tablePr_tfi_GetFormasDePagos.InitVars();
            }
            this.tablePr_tfi_GetFormasDePagosGenerales = ((Pr_tfi_GetFormasDePagosGeneralesDataTable)(this.Tables["Pr_tfi_GetFormasDePagosGenerales"]));
            if ((this.tablePr_tfi_GetFormasDePagosGenerales != null)) {
                this.tablePr_tfi_GetFormasDePagosGenerales.InitVars();
            }
        }
        
        private void InitClass() {
            this.DataSetName = "tfi_FormasDePagoExDataset";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/tfi_FormasDePagoEx.xsd";
            this.Locale = new System.Globalization.CultureInfo("en-US");
            this.CaseSensitive = false;
            this.EnforceConstraints = true;
            this.tablePr_tfi_CotizacionesMoneda_GetValorCotizacion = new Pr_tfi_CotizacionesMoneda_GetValorCotizacionDataTable();
            this.Tables.Add(this.tablePr_tfi_CotizacionesMoneda_GetValorCotizacion);
            this.tablePr_tfi_GetComprobantesTesoreria = new Pr_tfi_GetComprobantesTesoreriaDataTable();
            this.Tables.Add(this.tablePr_tfi_GetComprobantesTesoreria);
            this.tablePr_tfi_GetFormasDePagos = new Pr_tfi_GetFormasDePagosDataTable();
            this.Tables.Add(this.tablePr_tfi_GetFormasDePagos);
            this.tablePr_tfi_GetFormasDePagosGenerales = new Pr_tfi_GetFormasDePagosGeneralesDataTable();
            this.Tables.Add(this.tablePr_tfi_GetFormasDePagosGenerales);
        }
        
        private bool ShouldSerializePr_tfi_CotizacionesMoneda_GetValorCotizacion() {
            return false;
        }
        
        private bool ShouldSerializePr_tfi_GetComprobantesTesoreria() {
            return false;
        }
        
        private bool ShouldSerializePr_tfi_GetFormasDePagos() {
            return false;
        }
        
        private bool ShouldSerializePr_tfi_GetFormasDePagosGenerales() {
            return false;
        }
        
        private void SchemaChanged(object sender, System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        public delegate void Pr_tfi_CotizacionesMoneda_GetValorCotizacionRowChangeEventHandler(object sender, Pr_tfi_CotizacionesMoneda_GetValorCotizacionRowChangeEvent e);
        
        public delegate void Pr_tfi_GetComprobantesTesoreriaRowChangeEventHandler(object sender, Pr_tfi_GetComprobantesTesoreriaRowChangeEvent e);
        
        public delegate void Pr_tfi_GetFormasDePagosRowChangeEventHandler(object sender, Pr_tfi_GetFormasDePagosRowChangeEvent e);
        
        public delegate void Pr_tfi_GetFormasDePagosGeneralesRowChangeEventHandler(object sender, Pr_tfi_GetFormasDePagosGeneralesRowChangeEvent e);
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class Pr_tfi_CotizacionesMoneda_GetValorCotizacionDataTable : DataTable, System.Collections.IEnumerable {
            
            private DataColumn columnvalor;
            
            private DataColumn columnIdCotizacionMoneda;
            
            internal Pr_tfi_CotizacionesMoneda_GetValorCotizacionDataTable() : 
                    base("Pr_tfi_CotizacionesMoneda_GetValorCotizacion") {
                this.InitClass();
            }
            
            internal Pr_tfi_CotizacionesMoneda_GetValorCotizacionDataTable(DataTable table) : 
                    base(table.TableName) {
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
                this.DisplayExpression = table.DisplayExpression;
            }
            
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            internal DataColumn valorColumn {
                get {
                    return this.columnvalor;
                }
            }
            
            internal DataColumn IdCotizacionMonedaColumn {
                get {
                    return this.columnIdCotizacionMoneda;
                }
            }
            
            public Pr_tfi_CotizacionesMoneda_GetValorCotizacionRow this[int index] {
                get {
                    return ((Pr_tfi_CotizacionesMoneda_GetValorCotizacionRow)(this.Rows[index]));
                }
            }
            
            public event Pr_tfi_CotizacionesMoneda_GetValorCotizacionRowChangeEventHandler Pr_tfi_CotizacionesMoneda_GetValorCotizacionRowChanged;
            
            public event Pr_tfi_CotizacionesMoneda_GetValorCotizacionRowChangeEventHandler Pr_tfi_CotizacionesMoneda_GetValorCotizacionRowChanging;
            
            public event Pr_tfi_CotizacionesMoneda_GetValorCotizacionRowChangeEventHandler Pr_tfi_CotizacionesMoneda_GetValorCotizacionRowDeleted;
            
            public event Pr_tfi_CotizacionesMoneda_GetValorCotizacionRowChangeEventHandler Pr_tfi_CotizacionesMoneda_GetValorCotizacionRowDeleting;
            
            public void AddPr_tfi_CotizacionesMoneda_GetValorCotizacionRow(Pr_tfi_CotizacionesMoneda_GetValorCotizacionRow row) {
                this.Rows.Add(row);
            }
            
            public Pr_tfi_CotizacionesMoneda_GetValorCotizacionRow AddPr_tfi_CotizacionesMoneda_GetValorCotizacionRow(System.Decimal valor, string IdCotizacionMoneda) {
                Pr_tfi_CotizacionesMoneda_GetValorCotizacionRow rowPr_tfi_CotizacionesMoneda_GetValorCotizacionRow = ((Pr_tfi_CotizacionesMoneda_GetValorCotizacionRow)(this.NewRow()));
                rowPr_tfi_CotizacionesMoneda_GetValorCotizacionRow.ItemArray = new object[] {
                        valor,
                        IdCotizacionMoneda};
                this.Rows.Add(rowPr_tfi_CotizacionesMoneda_GetValorCotizacionRow);
                return rowPr_tfi_CotizacionesMoneda_GetValorCotizacionRow;
            }
            
            public Pr_tfi_CotizacionesMoneda_GetValorCotizacionRow FindByIdCotizacionMoneda(string IdCotizacionMoneda) {
                return ((Pr_tfi_CotizacionesMoneda_GetValorCotizacionRow)(this.Rows.Find(new object[] {
                            IdCotizacionMoneda})));
            }
            
            public System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            public override DataTable Clone() {
                Pr_tfi_CotizacionesMoneda_GetValorCotizacionDataTable cln = ((Pr_tfi_CotizacionesMoneda_GetValorCotizacionDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            protected override DataTable CreateInstance() {
                return new Pr_tfi_CotizacionesMoneda_GetValorCotizacionDataTable();
            }
            
            internal void InitVars() {
                this.columnvalor = this.Columns["valor"];
                this.columnIdCotizacionMoneda = this.Columns["IdCotizacionMoneda"];
            }
            
            private void InitClass() {
                this.columnvalor = new DataColumn("valor", typeof(System.Decimal), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnvalor);
                this.columnIdCotizacionMoneda = new DataColumn("IdCotizacionMoneda", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdCotizacionMoneda);
                this.Constraints.Add(new UniqueConstraint("tfi_FormasDePagoExKey1", new DataColumn[] {
                                this.columnIdCotizacionMoneda}, true));
                this.columnIdCotizacionMoneda.AllowDBNull = false;
                this.columnIdCotizacionMoneda.Unique = true;
            }
            
            public Pr_tfi_CotizacionesMoneda_GetValorCotizacionRow NewPr_tfi_CotizacionesMoneda_GetValorCotizacionRow() {
                return ((Pr_tfi_CotizacionesMoneda_GetValorCotizacionRow)(this.NewRow()));
            }
            
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder) {
                return new Pr_tfi_CotizacionesMoneda_GetValorCotizacionRow(builder);
            }
            
            protected override System.Type GetRowType() {
                return typeof(Pr_tfi_CotizacionesMoneda_GetValorCotizacionRow);
            }
            
            protected override void OnRowChanged(DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.Pr_tfi_CotizacionesMoneda_GetValorCotizacionRowChanged != null)) {
                    this.Pr_tfi_CotizacionesMoneda_GetValorCotizacionRowChanged(this, new Pr_tfi_CotizacionesMoneda_GetValorCotizacionRowChangeEvent(((Pr_tfi_CotizacionesMoneda_GetValorCotizacionRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowChanging(DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.Pr_tfi_CotizacionesMoneda_GetValorCotizacionRowChanging != null)) {
                    this.Pr_tfi_CotizacionesMoneda_GetValorCotizacionRowChanging(this, new Pr_tfi_CotizacionesMoneda_GetValorCotizacionRowChangeEvent(((Pr_tfi_CotizacionesMoneda_GetValorCotizacionRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleted(DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.Pr_tfi_CotizacionesMoneda_GetValorCotizacionRowDeleted != null)) {
                    this.Pr_tfi_CotizacionesMoneda_GetValorCotizacionRowDeleted(this, new Pr_tfi_CotizacionesMoneda_GetValorCotizacionRowChangeEvent(((Pr_tfi_CotizacionesMoneda_GetValorCotizacionRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleting(DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.Pr_tfi_CotizacionesMoneda_GetValorCotizacionRowDeleting != null)) {
                    this.Pr_tfi_CotizacionesMoneda_GetValorCotizacionRowDeleting(this, new Pr_tfi_CotizacionesMoneda_GetValorCotizacionRowChangeEvent(((Pr_tfi_CotizacionesMoneda_GetValorCotizacionRow)(e.Row)), e.Action));
                }
            }
            
            public void RemovePr_tfi_CotizacionesMoneda_GetValorCotizacionRow(Pr_tfi_CotizacionesMoneda_GetValorCotizacionRow row) {
                this.Rows.Remove(row);
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class Pr_tfi_CotizacionesMoneda_GetValorCotizacionRow : DataRow {
            
            private Pr_tfi_CotizacionesMoneda_GetValorCotizacionDataTable tablePr_tfi_CotizacionesMoneda_GetValorCotizacion;
            
            internal Pr_tfi_CotizacionesMoneda_GetValorCotizacionRow(DataRowBuilder rb) : 
                    base(rb) {
                this.tablePr_tfi_CotizacionesMoneda_GetValorCotizacion = ((Pr_tfi_CotizacionesMoneda_GetValorCotizacionDataTable)(this.Table));
            }
            
            public System.Decimal valor {
                get {
                    try {
                        return ((System.Decimal)(this[this.tablePr_tfi_CotizacionesMoneda_GetValorCotizacion.valorColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tablePr_tfi_CotizacionesMoneda_GetValorCotizacion.valorColumn] = value;
                }
            }
            
            public string IdCotizacionMoneda {
                get {
                    return ((string)(this[this.tablePr_tfi_CotizacionesMoneda_GetValorCotizacion.IdCotizacionMonedaColumn]));
                }
                set {
                    this[this.tablePr_tfi_CotizacionesMoneda_GetValorCotizacion.IdCotizacionMonedaColumn] = value;
                }
            }
            
            public bool IsvalorNull() {
                return this.IsNull(this.tablePr_tfi_CotizacionesMoneda_GetValorCotizacion.valorColumn);
            }
            
            public void SetvalorNull() {
                this[this.tablePr_tfi_CotizacionesMoneda_GetValorCotizacion.valorColumn] = System.Convert.DBNull;
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class Pr_tfi_CotizacionesMoneda_GetValorCotizacionRowChangeEvent : EventArgs {
            
            private Pr_tfi_CotizacionesMoneda_GetValorCotizacionRow eventRow;
            
            private DataRowAction eventAction;
            
            public Pr_tfi_CotizacionesMoneda_GetValorCotizacionRowChangeEvent(Pr_tfi_CotizacionesMoneda_GetValorCotizacionRow row, DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            public Pr_tfi_CotizacionesMoneda_GetValorCotizacionRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            public DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class Pr_tfi_GetComprobantesTesoreriaDataTable : DataTable, System.Collections.IEnumerable {
            
            private DataColumn columnIdTDCompTesoreria;
            
            private DataColumn columnDescripcion;
            
            private DataColumn columnAgrupado;
            
            internal Pr_tfi_GetComprobantesTesoreriaDataTable() : 
                    base("Pr_tfi_GetComprobantesTesoreria") {
                this.InitClass();
            }
            
            internal Pr_tfi_GetComprobantesTesoreriaDataTable(DataTable table) : 
                    base(table.TableName) {
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
                this.DisplayExpression = table.DisplayExpression;
            }
            
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            internal DataColumn IdTDCompTesoreriaColumn {
                get {
                    return this.columnIdTDCompTesoreria;
                }
            }
            
            internal DataColumn DescripcionColumn {
                get {
                    return this.columnDescripcion;
                }
            }
            
            internal DataColumn AgrupadoColumn {
                get {
                    return this.columnAgrupado;
                }
            }
            
            public Pr_tfi_GetComprobantesTesoreriaRow this[int index] {
                get {
                    return ((Pr_tfi_GetComprobantesTesoreriaRow)(this.Rows[index]));
                }
            }
            
            public event Pr_tfi_GetComprobantesTesoreriaRowChangeEventHandler Pr_tfi_GetComprobantesTesoreriaRowChanged;
            
            public event Pr_tfi_GetComprobantesTesoreriaRowChangeEventHandler Pr_tfi_GetComprobantesTesoreriaRowChanging;
            
            public event Pr_tfi_GetComprobantesTesoreriaRowChangeEventHandler Pr_tfi_GetComprobantesTesoreriaRowDeleted;
            
            public event Pr_tfi_GetComprobantesTesoreriaRowChangeEventHandler Pr_tfi_GetComprobantesTesoreriaRowDeleting;
            
            public void AddPr_tfi_GetComprobantesTesoreriaRow(Pr_tfi_GetComprobantesTesoreriaRow row) {
                this.Rows.Add(row);
            }
            
            public Pr_tfi_GetComprobantesTesoreriaRow AddPr_tfi_GetComprobantesTesoreriaRow(string IdTDCompTesoreria, string Descripcion, bool Agrupado) {
                Pr_tfi_GetComprobantesTesoreriaRow rowPr_tfi_GetComprobantesTesoreriaRow = ((Pr_tfi_GetComprobantesTesoreriaRow)(this.NewRow()));
                rowPr_tfi_GetComprobantesTesoreriaRow.ItemArray = new object[] {
                        IdTDCompTesoreria,
                        Descripcion,
                        Agrupado};
                this.Rows.Add(rowPr_tfi_GetComprobantesTesoreriaRow);
                return rowPr_tfi_GetComprobantesTesoreriaRow;
            }
            
            public System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            public override DataTable Clone() {
                Pr_tfi_GetComprobantesTesoreriaDataTable cln = ((Pr_tfi_GetComprobantesTesoreriaDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            protected override DataTable CreateInstance() {
                return new Pr_tfi_GetComprobantesTesoreriaDataTable();
            }
            
            internal void InitVars() {
                this.columnIdTDCompTesoreria = this.Columns["IdTDCompTesoreria"];
                this.columnDescripcion = this.Columns["Descripcion"];
                this.columnAgrupado = this.Columns["Agrupado"];
            }
            
            private void InitClass() {
                this.columnIdTDCompTesoreria = new DataColumn("IdTDCompTesoreria", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdTDCompTesoreria);
                this.columnDescripcion = new DataColumn("Descripcion", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnDescripcion);
                this.columnAgrupado = new DataColumn("Agrupado", typeof(bool), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnAgrupado);
                this.columnIdTDCompTesoreria.ReadOnly = true;
                this.columnDescripcion.ReadOnly = true;
            }
            
            public Pr_tfi_GetComprobantesTesoreriaRow NewPr_tfi_GetComprobantesTesoreriaRow() {
                return ((Pr_tfi_GetComprobantesTesoreriaRow)(this.NewRow()));
            }
            
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder) {
                return new Pr_tfi_GetComprobantesTesoreriaRow(builder);
            }
            
            protected override System.Type GetRowType() {
                return typeof(Pr_tfi_GetComprobantesTesoreriaRow);
            }
            
            protected override void OnRowChanged(DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.Pr_tfi_GetComprobantesTesoreriaRowChanged != null)) {
                    this.Pr_tfi_GetComprobantesTesoreriaRowChanged(this, new Pr_tfi_GetComprobantesTesoreriaRowChangeEvent(((Pr_tfi_GetComprobantesTesoreriaRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowChanging(DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.Pr_tfi_GetComprobantesTesoreriaRowChanging != null)) {
                    this.Pr_tfi_GetComprobantesTesoreriaRowChanging(this, new Pr_tfi_GetComprobantesTesoreriaRowChangeEvent(((Pr_tfi_GetComprobantesTesoreriaRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleted(DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.Pr_tfi_GetComprobantesTesoreriaRowDeleted != null)) {
                    this.Pr_tfi_GetComprobantesTesoreriaRowDeleted(this, new Pr_tfi_GetComprobantesTesoreriaRowChangeEvent(((Pr_tfi_GetComprobantesTesoreriaRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleting(DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.Pr_tfi_GetComprobantesTesoreriaRowDeleting != null)) {
                    this.Pr_tfi_GetComprobantesTesoreriaRowDeleting(this, new Pr_tfi_GetComprobantesTesoreriaRowChangeEvent(((Pr_tfi_GetComprobantesTesoreriaRow)(e.Row)), e.Action));
                }
            }
            
            public void RemovePr_tfi_GetComprobantesTesoreriaRow(Pr_tfi_GetComprobantesTesoreriaRow row) {
                this.Rows.Remove(row);
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class Pr_tfi_GetComprobantesTesoreriaRow : DataRow {
            
            private Pr_tfi_GetComprobantesTesoreriaDataTable tablePr_tfi_GetComprobantesTesoreria;
            
            internal Pr_tfi_GetComprobantesTesoreriaRow(DataRowBuilder rb) : 
                    base(rb) {
                this.tablePr_tfi_GetComprobantesTesoreria = ((Pr_tfi_GetComprobantesTesoreriaDataTable)(this.Table));
            }
            
            public string IdTDCompTesoreria {
                get {
                    try {
                        return ((string)(this[this.tablePr_tfi_GetComprobantesTesoreria.IdTDCompTesoreriaColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tablePr_tfi_GetComprobantesTesoreria.IdTDCompTesoreriaColumn] = value;
                }
            }
            
            public string Descripcion {
                get {
                    try {
                        return ((string)(this[this.tablePr_tfi_GetComprobantesTesoreria.DescripcionColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tablePr_tfi_GetComprobantesTesoreria.DescripcionColumn] = value;
                }
            }
            
            public bool Agrupado {
                get {
                    try {
                        return ((bool)(this[this.tablePr_tfi_GetComprobantesTesoreria.AgrupadoColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tablePr_tfi_GetComprobantesTesoreria.AgrupadoColumn] = value;
                }
            }
            
            public bool IsIdTDCompTesoreriaNull() {
                return this.IsNull(this.tablePr_tfi_GetComprobantesTesoreria.IdTDCompTesoreriaColumn);
            }
            
            public void SetIdTDCompTesoreriaNull() {
                this[this.tablePr_tfi_GetComprobantesTesoreria.IdTDCompTesoreriaColumn] = System.Convert.DBNull;
            }
            
            public bool IsDescripcionNull() {
                return this.IsNull(this.tablePr_tfi_GetComprobantesTesoreria.DescripcionColumn);
            }
            
            public void SetDescripcionNull() {
                this[this.tablePr_tfi_GetComprobantesTesoreria.DescripcionColumn] = System.Convert.DBNull;
            }
            
            public bool IsAgrupadoNull() {
                return this.IsNull(this.tablePr_tfi_GetComprobantesTesoreria.AgrupadoColumn);
            }
            
            public void SetAgrupadoNull() {
                this[this.tablePr_tfi_GetComprobantesTesoreria.AgrupadoColumn] = System.Convert.DBNull;
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class Pr_tfi_GetComprobantesTesoreriaRowChangeEvent : EventArgs {
            
            private Pr_tfi_GetComprobantesTesoreriaRow eventRow;
            
            private DataRowAction eventAction;
            
            public Pr_tfi_GetComprobantesTesoreriaRowChangeEvent(Pr_tfi_GetComprobantesTesoreriaRow row, DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            public Pr_tfi_GetComprobantesTesoreriaRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            public DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class Pr_tfi_GetFormasDePagosDataTable : DataTable, System.Collections.IEnumerable {
            
            private DataColumn columnIdFormaDePago;
            
            private DataColumn columnIdTDCompTesoreria;
            
            private DataColumn columnIdMoneda;
            
            private DataColumn columnMoneda;
            
            private DataColumn columnIdEntidad;
            
            private DataColumn columnEntidad;
            
            private DataColumn columnCuotas;
            
            private DataColumn columnRecargo;
            
            internal Pr_tfi_GetFormasDePagosDataTable() : 
                    base("Pr_tfi_GetFormasDePagos") {
                this.InitClass();
            }
            
            internal Pr_tfi_GetFormasDePagosDataTable(DataTable table) : 
                    base(table.TableName) {
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
                this.DisplayExpression = table.DisplayExpression;
            }
            
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            internal DataColumn IdFormaDePagoColumn {
                get {
                    return this.columnIdFormaDePago;
                }
            }
            
            internal DataColumn IdTDCompTesoreriaColumn {
                get {
                    return this.columnIdTDCompTesoreria;
                }
            }
            
            internal DataColumn IdMonedaColumn {
                get {
                    return this.columnIdMoneda;
                }
            }
            
            internal DataColumn MonedaColumn {
                get {
                    return this.columnMoneda;
                }
            }
            
            internal DataColumn IdEntidadColumn {
                get {
                    return this.columnIdEntidad;
                }
            }
            
            internal DataColumn EntidadColumn {
                get {
                    return this.columnEntidad;
                }
            }
            
            internal DataColumn CuotasColumn {
                get {
                    return this.columnCuotas;
                }
            }
            
            internal DataColumn RecargoColumn {
                get {
                    return this.columnRecargo;
                }
            }
            
            public Pr_tfi_GetFormasDePagosRow this[int index] {
                get {
                    return ((Pr_tfi_GetFormasDePagosRow)(this.Rows[index]));
                }
            }
            
            public event Pr_tfi_GetFormasDePagosRowChangeEventHandler Pr_tfi_GetFormasDePagosRowChanged;
            
            public event Pr_tfi_GetFormasDePagosRowChangeEventHandler Pr_tfi_GetFormasDePagosRowChanging;
            
            public event Pr_tfi_GetFormasDePagosRowChangeEventHandler Pr_tfi_GetFormasDePagosRowDeleted;
            
            public event Pr_tfi_GetFormasDePagosRowChangeEventHandler Pr_tfi_GetFormasDePagosRowDeleting;
            
            public void AddPr_tfi_GetFormasDePagosRow(Pr_tfi_GetFormasDePagosRow row) {
                this.Rows.Add(row);
            }
            
            public Pr_tfi_GetFormasDePagosRow AddPr_tfi_GetFormasDePagosRow(string IdFormaDePago, string IdTDCompTesoreria, string IdMoneda, string Moneda, string IdEntidad, string Entidad, short Cuotas, System.Decimal Recargo) {
                Pr_tfi_GetFormasDePagosRow rowPr_tfi_GetFormasDePagosRow = ((Pr_tfi_GetFormasDePagosRow)(this.NewRow()));
                rowPr_tfi_GetFormasDePagosRow.ItemArray = new object[] {
                        IdFormaDePago,
                        IdTDCompTesoreria,
                        IdMoneda,
                        Moneda,
                        IdEntidad,
                        Entidad,
                        Cuotas,
                        Recargo};
                this.Rows.Add(rowPr_tfi_GetFormasDePagosRow);
                return rowPr_tfi_GetFormasDePagosRow;
            }
            
            public Pr_tfi_GetFormasDePagosRow FindByIdFormaDePagoIdMonedaIdEntidad(string IdFormaDePago, string IdMoneda, string IdEntidad) {
                return ((Pr_tfi_GetFormasDePagosRow)(this.Rows.Find(new object[] {
                            IdFormaDePago,
                            IdMoneda,
                            IdEntidad})));
            }
            
            public System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            public override DataTable Clone() {
                Pr_tfi_GetFormasDePagosDataTable cln = ((Pr_tfi_GetFormasDePagosDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            protected override DataTable CreateInstance() {
                return new Pr_tfi_GetFormasDePagosDataTable();
            }
            
            internal void InitVars() {
                this.columnIdFormaDePago = this.Columns["IdFormaDePago"];
                this.columnIdTDCompTesoreria = this.Columns["IdTDCompTesoreria"];
                this.columnIdMoneda = this.Columns["IdMoneda"];
                this.columnMoneda = this.Columns["Moneda"];
                this.columnIdEntidad = this.Columns["IdEntidad"];
                this.columnEntidad = this.Columns["Entidad"];
                this.columnCuotas = this.Columns["Cuotas"];
                this.columnRecargo = this.Columns["Recargo"];
            }
            
            private void InitClass() {
                this.columnIdFormaDePago = new DataColumn("IdFormaDePago", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdFormaDePago);
                this.columnIdTDCompTesoreria = new DataColumn("IdTDCompTesoreria", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdTDCompTesoreria);
                this.columnIdMoneda = new DataColumn("IdMoneda", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdMoneda);
                this.columnMoneda = new DataColumn("Moneda", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnMoneda);
                this.columnIdEntidad = new DataColumn("IdEntidad", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdEntidad);
                this.columnEntidad = new DataColumn("Entidad", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnEntidad);
                this.columnCuotas = new DataColumn("Cuotas", typeof(short), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnCuotas);
                this.columnRecargo = new DataColumn("Recargo", typeof(System.Decimal), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnRecargo);
                this.Constraints.Add(new UniqueConstraint("tfi_FormasDePagoExDatasetKey1", new DataColumn[] {
                                this.columnIdFormaDePago,
                                this.columnIdMoneda,
                                this.columnIdEntidad}, true));
                this.columnIdFormaDePago.AllowDBNull = false;
                this.columnIdTDCompTesoreria.AllowDBNull = false;
                this.columnIdMoneda.AllowDBNull = false;
                this.columnMoneda.AllowDBNull = false;
                this.columnIdEntidad.AllowDBNull = false;
                this.columnEntidad.AllowDBNull = false;
                this.columnCuotas.AllowDBNull = false;
                this.columnRecargo.AllowDBNull = false;
            }
            
            public Pr_tfi_GetFormasDePagosRow NewPr_tfi_GetFormasDePagosRow() {
                return ((Pr_tfi_GetFormasDePagosRow)(this.NewRow()));
            }
            
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder) {
                return new Pr_tfi_GetFormasDePagosRow(builder);
            }
            
            protected override System.Type GetRowType() {
                return typeof(Pr_tfi_GetFormasDePagosRow);
            }
            
            protected override void OnRowChanged(DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.Pr_tfi_GetFormasDePagosRowChanged != null)) {
                    this.Pr_tfi_GetFormasDePagosRowChanged(this, new Pr_tfi_GetFormasDePagosRowChangeEvent(((Pr_tfi_GetFormasDePagosRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowChanging(DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.Pr_tfi_GetFormasDePagosRowChanging != null)) {
                    this.Pr_tfi_GetFormasDePagosRowChanging(this, new Pr_tfi_GetFormasDePagosRowChangeEvent(((Pr_tfi_GetFormasDePagosRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleted(DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.Pr_tfi_GetFormasDePagosRowDeleted != null)) {
                    this.Pr_tfi_GetFormasDePagosRowDeleted(this, new Pr_tfi_GetFormasDePagosRowChangeEvent(((Pr_tfi_GetFormasDePagosRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleting(DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.Pr_tfi_GetFormasDePagosRowDeleting != null)) {
                    this.Pr_tfi_GetFormasDePagosRowDeleting(this, new Pr_tfi_GetFormasDePagosRowChangeEvent(((Pr_tfi_GetFormasDePagosRow)(e.Row)), e.Action));
                }
            }
            
            public void RemovePr_tfi_GetFormasDePagosRow(Pr_tfi_GetFormasDePagosRow row) {
                this.Rows.Remove(row);
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class Pr_tfi_GetFormasDePagosRow : DataRow {
            
            private Pr_tfi_GetFormasDePagosDataTable tablePr_tfi_GetFormasDePagos;
            
            internal Pr_tfi_GetFormasDePagosRow(DataRowBuilder rb) : 
                    base(rb) {
                this.tablePr_tfi_GetFormasDePagos = ((Pr_tfi_GetFormasDePagosDataTable)(this.Table));
            }
            
            public string IdFormaDePago {
                get {
                    return ((string)(this[this.tablePr_tfi_GetFormasDePagos.IdFormaDePagoColumn]));
                }
                set {
                    this[this.tablePr_tfi_GetFormasDePagos.IdFormaDePagoColumn] = value;
                }
            }
            
            public string IdTDCompTesoreria {
                get {
                    return ((string)(this[this.tablePr_tfi_GetFormasDePagos.IdTDCompTesoreriaColumn]));
                }
                set {
                    this[this.tablePr_tfi_GetFormasDePagos.IdTDCompTesoreriaColumn] = value;
                }
            }
            
            public string IdMoneda {
                get {
                    return ((string)(this[this.tablePr_tfi_GetFormasDePagos.IdMonedaColumn]));
                }
                set {
                    this[this.tablePr_tfi_GetFormasDePagos.IdMonedaColumn] = value;
                }
            }
            
            public string Moneda {
                get {
                    return ((string)(this[this.tablePr_tfi_GetFormasDePagos.MonedaColumn]));
                }
                set {
                    this[this.tablePr_tfi_GetFormasDePagos.MonedaColumn] = value;
                }
            }
            
            public string IdEntidad {
                get {
                    return ((string)(this[this.tablePr_tfi_GetFormasDePagos.IdEntidadColumn]));
                }
                set {
                    this[this.tablePr_tfi_GetFormasDePagos.IdEntidadColumn] = value;
                }
            }
            
            public string Entidad {
                get {
                    return ((string)(this[this.tablePr_tfi_GetFormasDePagos.EntidadColumn]));
                }
                set {
                    this[this.tablePr_tfi_GetFormasDePagos.EntidadColumn] = value;
                }
            }
            
            public short Cuotas {
                get {
                    return ((short)(this[this.tablePr_tfi_GetFormasDePagos.CuotasColumn]));
                }
                set {
                    this[this.tablePr_tfi_GetFormasDePagos.CuotasColumn] = value;
                }
            }
            
            public System.Decimal Recargo {
                get {
                    return ((System.Decimal)(this[this.tablePr_tfi_GetFormasDePagos.RecargoColumn]));
                }
                set {
                    this[this.tablePr_tfi_GetFormasDePagos.RecargoColumn] = value;
                }
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class Pr_tfi_GetFormasDePagosRowChangeEvent : EventArgs {
            
            private Pr_tfi_GetFormasDePagosRow eventRow;
            
            private DataRowAction eventAction;
            
            public Pr_tfi_GetFormasDePagosRowChangeEvent(Pr_tfi_GetFormasDePagosRow row, DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            public Pr_tfi_GetFormasDePagosRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            public DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class Pr_tfi_GetFormasDePagosGeneralesDataTable : DataTable, System.Collections.IEnumerable {
            
            private DataColumn columnIdTDCompTesoreria;
            
            private DataColumn columnIdMoneda;
            
            private DataColumn columnRecargo;
            
            private DataColumn columnFechaCreacion;
            
            private DataColumn columnIdConexionCreacion;
            
            private DataColumn columnUltimaModificacion;
            
            private DataColumn columnIdConexionUltimaModificacion;
            
            private DataColumn columnIdReservado;
            
            private DataColumn columnRowId;
            
            private DataColumn columnIdEmpresa;
            
            private DataColumn columnIdSucursal;
            
            private DataColumn columnIdFormaDePago;
            
            private DataColumn columnDescripcion;
            
            internal Pr_tfi_GetFormasDePagosGeneralesDataTable() : 
                    base("Pr_tfi_GetFormasDePagosGenerales") {
                this.InitClass();
            }
            
            internal Pr_tfi_GetFormasDePagosGeneralesDataTable(DataTable table) : 
                    base(table.TableName) {
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
                this.DisplayExpression = table.DisplayExpression;
            }
            
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            internal DataColumn IdTDCompTesoreriaColumn {
                get {
                    return this.columnIdTDCompTesoreria;
                }
            }
            
            internal DataColumn IdMonedaColumn {
                get {
                    return this.columnIdMoneda;
                }
            }
            
            internal DataColumn RecargoColumn {
                get {
                    return this.columnRecargo;
                }
            }
            
            internal DataColumn FechaCreacionColumn {
                get {
                    return this.columnFechaCreacion;
                }
            }
            
            internal DataColumn IdConexionCreacionColumn {
                get {
                    return this.columnIdConexionCreacion;
                }
            }
            
            internal DataColumn UltimaModificacionColumn {
                get {
                    return this.columnUltimaModificacion;
                }
            }
            
            internal DataColumn IdConexionUltimaModificacionColumn {
                get {
                    return this.columnIdConexionUltimaModificacion;
                }
            }
            
            internal DataColumn IdReservadoColumn {
                get {
                    return this.columnIdReservado;
                }
            }
            
            internal DataColumn RowIdColumn {
                get {
                    return this.columnRowId;
                }
            }
            
            internal DataColumn IdEmpresaColumn {
                get {
                    return this.columnIdEmpresa;
                }
            }
            
            internal DataColumn IdSucursalColumn {
                get {
                    return this.columnIdSucursal;
                }
            }
            
            internal DataColumn IdFormaDePagoColumn {
                get {
                    return this.columnIdFormaDePago;
                }
            }
            
            internal DataColumn DescripcionColumn {
                get {
                    return this.columnDescripcion;
                }
            }
            
            public Pr_tfi_GetFormasDePagosGeneralesRow this[int index] {
                get {
                    return ((Pr_tfi_GetFormasDePagosGeneralesRow)(this.Rows[index]));
                }
            }
            
            public event Pr_tfi_GetFormasDePagosGeneralesRowChangeEventHandler Pr_tfi_GetFormasDePagosGeneralesRowChanged;
            
            public event Pr_tfi_GetFormasDePagosGeneralesRowChangeEventHandler Pr_tfi_GetFormasDePagosGeneralesRowChanging;
            
            public event Pr_tfi_GetFormasDePagosGeneralesRowChangeEventHandler Pr_tfi_GetFormasDePagosGeneralesRowDeleted;
            
            public event Pr_tfi_GetFormasDePagosGeneralesRowChangeEventHandler Pr_tfi_GetFormasDePagosGeneralesRowDeleting;
            
            public void AddPr_tfi_GetFormasDePagosGeneralesRow(Pr_tfi_GetFormasDePagosGeneralesRow row) {
                this.Rows.Add(row);
            }
            
            public Pr_tfi_GetFormasDePagosGeneralesRow AddPr_tfi_GetFormasDePagosGeneralesRow(string IdTDCompTesoreria, string IdMoneda, System.Decimal Recargo, System.DateTime FechaCreacion, long IdConexionCreacion, System.Byte[] UltimaModificacion, long IdConexionUltimaModificacion, long IdReservado, System.Guid RowId, long IdEmpresa, long IdSucursal, string IdFormaDePago, string Descripcion) {
                Pr_tfi_GetFormasDePagosGeneralesRow rowPr_tfi_GetFormasDePagosGeneralesRow = ((Pr_tfi_GetFormasDePagosGeneralesRow)(this.NewRow()));
                rowPr_tfi_GetFormasDePagosGeneralesRow.ItemArray = new object[] {
                        IdTDCompTesoreria,
                        IdMoneda,
                        Recargo,
                        FechaCreacion,
                        IdConexionCreacion,
                        UltimaModificacion,
                        IdConexionUltimaModificacion,
                        IdReservado,
                        RowId,
                        IdEmpresa,
                        IdSucursal,
                        IdFormaDePago,
                        Descripcion};
                this.Rows.Add(rowPr_tfi_GetFormasDePagosGeneralesRow);
                return rowPr_tfi_GetFormasDePagosGeneralesRow;
            }
            
            public System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            public override DataTable Clone() {
                Pr_tfi_GetFormasDePagosGeneralesDataTable cln = ((Pr_tfi_GetFormasDePagosGeneralesDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            protected override DataTable CreateInstance() {
                return new Pr_tfi_GetFormasDePagosGeneralesDataTable();
            }
            
            internal void InitVars() {
                this.columnIdTDCompTesoreria = this.Columns["IdTDCompTesoreria"];
                this.columnIdMoneda = this.Columns["IdMoneda"];
                this.columnRecargo = this.Columns["Recargo"];
                this.columnFechaCreacion = this.Columns["FechaCreacion"];
                this.columnIdConexionCreacion = this.Columns["IdConexionCreacion"];
                this.columnUltimaModificacion = this.Columns["UltimaModificacion"];
                this.columnIdConexionUltimaModificacion = this.Columns["IdConexionUltimaModificacion"];
                this.columnIdReservado = this.Columns["IdReservado"];
                this.columnRowId = this.Columns["RowId"];
                this.columnIdEmpresa = this.Columns["IdEmpresa"];
                this.columnIdSucursal = this.Columns["IdSucursal"];
                this.columnIdFormaDePago = this.Columns["IdFormaDePago"];
                this.columnDescripcion = this.Columns["Descripcion"];
            }
            
            private void InitClass() {
                this.columnIdTDCompTesoreria = new DataColumn("IdTDCompTesoreria", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdTDCompTesoreria);
                this.columnIdMoneda = new DataColumn("IdMoneda", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdMoneda);
                this.columnRecargo = new DataColumn("Recargo", typeof(System.Decimal), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnRecargo);
                this.columnFechaCreacion = new DataColumn("FechaCreacion", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnFechaCreacion);
                this.columnIdConexionCreacion = new DataColumn("IdConexionCreacion", typeof(long), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdConexionCreacion);
                this.columnUltimaModificacion = new DataColumn("UltimaModificacion", typeof(System.Byte[]), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnUltimaModificacion);
                this.columnIdConexionUltimaModificacion = new DataColumn("IdConexionUltimaModificacion", typeof(long), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdConexionUltimaModificacion);
                this.columnIdReservado = new DataColumn("IdReservado", typeof(long), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdReservado);
                this.columnRowId = new DataColumn("RowId", typeof(System.Guid), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnRowId);
                this.columnIdEmpresa = new DataColumn("IdEmpresa", typeof(long), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdEmpresa);
                this.columnIdSucursal = new DataColumn("IdSucursal", typeof(long), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdSucursal);
                this.columnIdFormaDePago = new DataColumn("IdFormaDePago", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdFormaDePago);
                this.columnDescripcion = new DataColumn("Descripcion", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnDescripcion);
                this.columnIdTDCompTesoreria.AllowDBNull = false;
                this.columnIdMoneda.AllowDBNull = false;
                this.columnRecargo.AllowDBNull = false;
                this.columnUltimaModificacion.ReadOnly = true;
                this.columnIdFormaDePago.AllowDBNull = false;
                this.columnDescripcion.AllowDBNull = false;
            }
            
            public Pr_tfi_GetFormasDePagosGeneralesRow NewPr_tfi_GetFormasDePagosGeneralesRow() {
                return ((Pr_tfi_GetFormasDePagosGeneralesRow)(this.NewRow()));
            }
            
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder) {
                return new Pr_tfi_GetFormasDePagosGeneralesRow(builder);
            }
            
            protected override System.Type GetRowType() {
                return typeof(Pr_tfi_GetFormasDePagosGeneralesRow);
            }
            
            protected override void OnRowChanged(DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.Pr_tfi_GetFormasDePagosGeneralesRowChanged != null)) {
                    this.Pr_tfi_GetFormasDePagosGeneralesRowChanged(this, new Pr_tfi_GetFormasDePagosGeneralesRowChangeEvent(((Pr_tfi_GetFormasDePagosGeneralesRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowChanging(DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.Pr_tfi_GetFormasDePagosGeneralesRowChanging != null)) {
                    this.Pr_tfi_GetFormasDePagosGeneralesRowChanging(this, new Pr_tfi_GetFormasDePagosGeneralesRowChangeEvent(((Pr_tfi_GetFormasDePagosGeneralesRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleted(DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.Pr_tfi_GetFormasDePagosGeneralesRowDeleted != null)) {
                    this.Pr_tfi_GetFormasDePagosGeneralesRowDeleted(this, new Pr_tfi_GetFormasDePagosGeneralesRowChangeEvent(((Pr_tfi_GetFormasDePagosGeneralesRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleting(DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.Pr_tfi_GetFormasDePagosGeneralesRowDeleting != null)) {
                    this.Pr_tfi_GetFormasDePagosGeneralesRowDeleting(this, new Pr_tfi_GetFormasDePagosGeneralesRowChangeEvent(((Pr_tfi_GetFormasDePagosGeneralesRow)(e.Row)), e.Action));
                }
            }
            
            public void RemovePr_tfi_GetFormasDePagosGeneralesRow(Pr_tfi_GetFormasDePagosGeneralesRow row) {
                this.Rows.Remove(row);
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class Pr_tfi_GetFormasDePagosGeneralesRow : DataRow {
            
            private Pr_tfi_GetFormasDePagosGeneralesDataTable tablePr_tfi_GetFormasDePagosGenerales;
            
            internal Pr_tfi_GetFormasDePagosGeneralesRow(DataRowBuilder rb) : 
                    base(rb) {
                this.tablePr_tfi_GetFormasDePagosGenerales = ((Pr_tfi_GetFormasDePagosGeneralesDataTable)(this.Table));
            }
            
            public string IdTDCompTesoreria {
                get {
                    return ((string)(this[this.tablePr_tfi_GetFormasDePagosGenerales.IdTDCompTesoreriaColumn]));
                }
                set {
                    this[this.tablePr_tfi_GetFormasDePagosGenerales.IdTDCompTesoreriaColumn] = value;
                }
            }
            
            public string IdMoneda {
                get {
                    return ((string)(this[this.tablePr_tfi_GetFormasDePagosGenerales.IdMonedaColumn]));
                }
                set {
                    this[this.tablePr_tfi_GetFormasDePagosGenerales.IdMonedaColumn] = value;
                }
            }
            
            public System.Decimal Recargo {
                get {
                    return ((System.Decimal)(this[this.tablePr_tfi_GetFormasDePagosGenerales.RecargoColumn]));
                }
                set {
                    this[this.tablePr_tfi_GetFormasDePagosGenerales.RecargoColumn] = value;
                }
            }
            
            public System.DateTime FechaCreacion {
                get {
                    try {
                        return ((System.DateTime)(this[this.tablePr_tfi_GetFormasDePagosGenerales.FechaCreacionColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tablePr_tfi_GetFormasDePagosGenerales.FechaCreacionColumn] = value;
                }
            }
            
            public long IdConexionCreacion {
                get {
                    try {
                        return ((long)(this[this.tablePr_tfi_GetFormasDePagosGenerales.IdConexionCreacionColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tablePr_tfi_GetFormasDePagosGenerales.IdConexionCreacionColumn] = value;
                }
            }
            
            public System.Byte[] UltimaModificacion {
                get {
                    try {
                        return ((System.Byte[])(this[this.tablePr_tfi_GetFormasDePagosGenerales.UltimaModificacionColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tablePr_tfi_GetFormasDePagosGenerales.UltimaModificacionColumn] = value;
                }
            }
            
            public long IdConexionUltimaModificacion {
                get {
                    try {
                        return ((long)(this[this.tablePr_tfi_GetFormasDePagosGenerales.IdConexionUltimaModificacionColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tablePr_tfi_GetFormasDePagosGenerales.IdConexionUltimaModificacionColumn] = value;
                }
            }
            
            public long IdReservado {
                get {
                    try {
                        return ((long)(this[this.tablePr_tfi_GetFormasDePagosGenerales.IdReservadoColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tablePr_tfi_GetFormasDePagosGenerales.IdReservadoColumn] = value;
                }
            }
            
            public System.Guid RowId {
                get {
                    try {
                        return ((System.Guid)(this[this.tablePr_tfi_GetFormasDePagosGenerales.RowIdColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tablePr_tfi_GetFormasDePagosGenerales.RowIdColumn] = value;
                }
            }
            
            public long IdEmpresa {
                get {
                    try {
                        return ((long)(this[this.tablePr_tfi_GetFormasDePagosGenerales.IdEmpresaColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tablePr_tfi_GetFormasDePagosGenerales.IdEmpresaColumn] = value;
                }
            }
            
            public long IdSucursal {
                get {
                    try {
                        return ((long)(this[this.tablePr_tfi_GetFormasDePagosGenerales.IdSucursalColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tablePr_tfi_GetFormasDePagosGenerales.IdSucursalColumn] = value;
                }
            }
            
            public string IdFormaDePago {
                get {
                    return ((string)(this[this.tablePr_tfi_GetFormasDePagosGenerales.IdFormaDePagoColumn]));
                }
                set {
                    this[this.tablePr_tfi_GetFormasDePagosGenerales.IdFormaDePagoColumn] = value;
                }
            }
            
            public string Descripcion {
                get {
                    return ((string)(this[this.tablePr_tfi_GetFormasDePagosGenerales.DescripcionColumn]));
                }
                set {
                    this[this.tablePr_tfi_GetFormasDePagosGenerales.DescripcionColumn] = value;
                }
            }
            
            public bool IsFechaCreacionNull() {
                return this.IsNull(this.tablePr_tfi_GetFormasDePagosGenerales.FechaCreacionColumn);
            }
            
            public void SetFechaCreacionNull() {
                this[this.tablePr_tfi_GetFormasDePagosGenerales.FechaCreacionColumn] = System.Convert.DBNull;
            }
            
            public bool IsIdConexionCreacionNull() {
                return this.IsNull(this.tablePr_tfi_GetFormasDePagosGenerales.IdConexionCreacionColumn);
            }
            
            public void SetIdConexionCreacionNull() {
                this[this.tablePr_tfi_GetFormasDePagosGenerales.IdConexionCreacionColumn] = System.Convert.DBNull;
            }
            
            public bool IsUltimaModificacionNull() {
                return this.IsNull(this.tablePr_tfi_GetFormasDePagosGenerales.UltimaModificacionColumn);
            }
            
            public void SetUltimaModificacionNull() {
                this[this.tablePr_tfi_GetFormasDePagosGenerales.UltimaModificacionColumn] = System.Convert.DBNull;
            }
            
            public bool IsIdConexionUltimaModificacionNull() {
                return this.IsNull(this.tablePr_tfi_GetFormasDePagosGenerales.IdConexionUltimaModificacionColumn);
            }
            
            public void SetIdConexionUltimaModificacionNull() {
                this[this.tablePr_tfi_GetFormasDePagosGenerales.IdConexionUltimaModificacionColumn] = System.Convert.DBNull;
            }
            
            public bool IsIdReservadoNull() {
                return this.IsNull(this.tablePr_tfi_GetFormasDePagosGenerales.IdReservadoColumn);
            }
            
            public void SetIdReservadoNull() {
                this[this.tablePr_tfi_GetFormasDePagosGenerales.IdReservadoColumn] = System.Convert.DBNull;
            }
            
            public bool IsRowIdNull() {
                return this.IsNull(this.tablePr_tfi_GetFormasDePagosGenerales.RowIdColumn);
            }
            
            public void SetRowIdNull() {
                this[this.tablePr_tfi_GetFormasDePagosGenerales.RowIdColumn] = System.Convert.DBNull;
            }
            
            public bool IsIdEmpresaNull() {
                return this.IsNull(this.tablePr_tfi_GetFormasDePagosGenerales.IdEmpresaColumn);
            }
            
            public void SetIdEmpresaNull() {
                this[this.tablePr_tfi_GetFormasDePagosGenerales.IdEmpresaColumn] = System.Convert.DBNull;
            }
            
            public bool IsIdSucursalNull() {
                return this.IsNull(this.tablePr_tfi_GetFormasDePagosGenerales.IdSucursalColumn);
            }
            
            public void SetIdSucursalNull() {
                this[this.tablePr_tfi_GetFormasDePagosGenerales.IdSucursalColumn] = System.Convert.DBNull;
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class Pr_tfi_GetFormasDePagosGeneralesRowChangeEvent : EventArgs {
            
            private Pr_tfi_GetFormasDePagosGeneralesRow eventRow;
            
            private DataRowAction eventAction;
            
            public Pr_tfi_GetFormasDePagosGeneralesRowChangeEvent(Pr_tfi_GetFormasDePagosGeneralesRow row, DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            public Pr_tfi_GetFormasDePagosGeneralesRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            public DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
