//------------------------------------------------------------------------------
// <autogenerated>
//     This code was generated by a tool.
//     Runtime Version: 1.1.4322.2407
//
//     Changes to this file may cause incorrect behavior and will be lost if 
//     the code is regenerated.
// </autogenerated>
//------------------------------------------------------------------------------

namespace mz.erp.commontypes.data {
    using System;
    using System.Data;
    using System.Xml;
    using System.Runtime.Serialization;
    
    
    [Serializable()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Diagnostics.DebuggerStepThrough()]
    [System.ComponentModel.ToolboxItem(true)]
    public class tpu_ComprobanteDetalleDeudaDataset : DataSet {
        
        private tpu_ComprobanteDetalleDeudaDataTable tabletpu_ComprobanteDetalleDeuda;
        
        public tpu_ComprobanteDetalleDeudaDataset() {
            this.InitClass();
            System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            this.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        protected tpu_ComprobanteDetalleDeudaDataset(SerializationInfo info, StreamingContext context) {
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((strSchema != null)) {
                DataSet ds = new DataSet();
                ds.ReadXmlSchema(new XmlTextReader(new System.IO.StringReader(strSchema)));
                if ((ds.Tables["tpu_ComprobanteDetalleDeuda"] != null)) {
                    this.Tables.Add(new tpu_ComprobanteDetalleDeudaDataTable(ds.Tables["tpu_ComprobanteDetalleDeuda"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.InitClass();
            }
            this.GetSerializationData(info, context);
            System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            this.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public tpu_ComprobanteDetalleDeudaDataTable tpu_ComprobanteDetalleDeuda {
            get {
                return this.tabletpu_ComprobanteDetalleDeuda;
            }
        }
        
        public override DataSet Clone() {
            tpu_ComprobanteDetalleDeudaDataset cln = ((tpu_ComprobanteDetalleDeudaDataset)(base.Clone()));
            cln.InitVars();
            return cln;
        }
        
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        protected override void ReadXmlSerializable(XmlReader reader) {
            this.Reset();
            DataSet ds = new DataSet();
            ds.ReadXml(reader);
            if ((ds.Tables["tpu_ComprobanteDetalleDeuda"] != null)) {
                this.Tables.Add(new tpu_ComprobanteDetalleDeudaDataTable(ds.Tables["tpu_ComprobanteDetalleDeuda"]));
            }
            this.DataSetName = ds.DataSetName;
            this.Prefix = ds.Prefix;
            this.Namespace = ds.Namespace;
            this.Locale = ds.Locale;
            this.CaseSensitive = ds.CaseSensitive;
            this.EnforceConstraints = ds.EnforceConstraints;
            this.Merge(ds, false, System.Data.MissingSchemaAction.Add);
            this.InitVars();
        }
        
        protected override System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            System.IO.MemoryStream stream = new System.IO.MemoryStream();
            this.WriteXmlSchema(new XmlTextWriter(stream, null));
            stream.Position = 0;
            return System.Xml.Schema.XmlSchema.Read(new XmlTextReader(stream), null);
        }
        
        internal void InitVars() {
            this.tabletpu_ComprobanteDetalleDeuda = ((tpu_ComprobanteDetalleDeudaDataTable)(this.Tables["tpu_ComprobanteDetalleDeuda"]));
            if ((this.tabletpu_ComprobanteDetalleDeuda != null)) {
                this.tabletpu_ComprobanteDetalleDeuda.InitVars();
            }
        }
        
        private void InitClass() {
            this.DataSetName = "tpu_ComprobanteDetalleDeudaDataset";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/tpu_ComprobanteDetalleDeuda.xsd";
            this.Locale = new System.Globalization.CultureInfo("en-US");
            this.CaseSensitive = false;
            this.EnforceConstraints = true;
            this.tabletpu_ComprobanteDetalleDeuda = new tpu_ComprobanteDetalleDeudaDataTable();
            this.Tables.Add(this.tabletpu_ComprobanteDetalleDeuda);
        }
        
        private bool ShouldSerializetpu_ComprobanteDetalleDeuda() {
            return false;
        }
        
        private void SchemaChanged(object sender, System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        public delegate void tpu_ComprobanteDetalleDeudaRowChangeEventHandler(object sender, tpu_ComprobanteDetalleDeudaRowChangeEvent e);
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class tpu_ComprobanteDetalleDeudaDataTable : DataTable, System.Collections.IEnumerable {
            
            private DataColumn columnIdComprobante;
            
            private DataColumn columnIdTipoDeComprobante;
            
            private DataColumn columnNumero;
            
            private DataColumn columnFechaEmision;
            
            private DataColumn columnFechaVencimiento;
            
            private DataColumn columnCuota;
            
            private DataColumn columnImporte;
            
            private DataColumn columnSaldo;
            
            private DataColumn columnIdMonedaCierre;
            
            private DataColumn columnIdCotizacionCierre;
            
            private DataColumn columnFechaCreacion;
            
            private DataColumn columnIdConexionCreacion;
            
            private DataColumn columnUltimaModificacion;
            
            private DataColumn columnIdConexionUltimaModificacion;
            
            private DataColumn columnIdReservado;
            
            private DataColumn columnRowId;
            
            private DataColumn columnIdSucursal;
            
            private DataColumn columnIdEmpresa;
            
            private DataColumn columnSaldoTemporal;
            
            internal tpu_ComprobanteDetalleDeudaDataTable() : 
                    base("tpu_ComprobanteDetalleDeuda") {
                this.InitClass();
            }
            
            internal tpu_ComprobanteDetalleDeudaDataTable(DataTable table) : 
                    base(table.TableName) {
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
                this.DisplayExpression = table.DisplayExpression;
            }
            
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            internal DataColumn IdComprobanteColumn {
                get {
                    return this.columnIdComprobante;
                }
            }
            
            internal DataColumn IdTipoDeComprobanteColumn {
                get {
                    return this.columnIdTipoDeComprobante;
                }
            }
            
            internal DataColumn NumeroColumn {
                get {
                    return this.columnNumero;
                }
            }
            
            internal DataColumn FechaEmisionColumn {
                get {
                    return this.columnFechaEmision;
                }
            }
            
            internal DataColumn FechaVencimientoColumn {
                get {
                    return this.columnFechaVencimiento;
                }
            }
            
            internal DataColumn CuotaColumn {
                get {
                    return this.columnCuota;
                }
            }
            
            internal DataColumn ImporteColumn {
                get {
                    return this.columnImporte;
                }
            }
            
            internal DataColumn SaldoColumn {
                get {
                    return this.columnSaldo;
                }
            }
            
            internal DataColumn IdMonedaCierreColumn {
                get {
                    return this.columnIdMonedaCierre;
                }
            }
            
            internal DataColumn IdCotizacionCierreColumn {
                get {
                    return this.columnIdCotizacionCierre;
                }
            }
            
            internal DataColumn FechaCreacionColumn {
                get {
                    return this.columnFechaCreacion;
                }
            }
            
            internal DataColumn IdConexionCreacionColumn {
                get {
                    return this.columnIdConexionCreacion;
                }
            }
            
            internal DataColumn UltimaModificacionColumn {
                get {
                    return this.columnUltimaModificacion;
                }
            }
            
            internal DataColumn IdConexionUltimaModificacionColumn {
                get {
                    return this.columnIdConexionUltimaModificacion;
                }
            }
            
            internal DataColumn IdReservadoColumn {
                get {
                    return this.columnIdReservado;
                }
            }
            
            internal DataColumn RowIdColumn {
                get {
                    return this.columnRowId;
                }
            }
            
            internal DataColumn IdSucursalColumn {
                get {
                    return this.columnIdSucursal;
                }
            }
            
            internal DataColumn IdEmpresaColumn {
                get {
                    return this.columnIdEmpresa;
                }
            }
            
            internal DataColumn SaldoTemporalColumn {
                get {
                    return this.columnSaldoTemporal;
                }
            }
            
            public tpu_ComprobanteDetalleDeudaRow this[int index] {
                get {
                    return ((tpu_ComprobanteDetalleDeudaRow)(this.Rows[index]));
                }
            }
            
            public event tpu_ComprobanteDetalleDeudaRowChangeEventHandler tpu_ComprobanteDetalleDeudaRowChanged;
            
            public event tpu_ComprobanteDetalleDeudaRowChangeEventHandler tpu_ComprobanteDetalleDeudaRowChanging;
            
            public event tpu_ComprobanteDetalleDeudaRowChangeEventHandler tpu_ComprobanteDetalleDeudaRowDeleted;
            
            public event tpu_ComprobanteDetalleDeudaRowChangeEventHandler tpu_ComprobanteDetalleDeudaRowDeleting;
            
            public void Addtpu_ComprobanteDetalleDeudaRow(tpu_ComprobanteDetalleDeudaRow row) {
                this.Rows.Add(row);
            }
            
            public tpu_ComprobanteDetalleDeudaRow Addtpu_ComprobanteDetalleDeudaRow(
                        string IdComprobante, 
                        string IdTipoDeComprobante, 
                        string Numero, 
                        System.DateTime FechaEmision, 
                        System.DateTime FechaVencimiento, 
                        short Cuota, 
                        System.Decimal Importe, 
                        System.Decimal Saldo, 
                        string IdMonedaCierre, 
                        string IdCotizacionCierre, 
                        System.DateTime FechaCreacion, 
                        long IdConexionCreacion, 
                        System.Byte[] UltimaModificacion, 
                        long IdConexionUltimaModificacion, 
                        long IdReservado, 
                        System.Guid RowId, 
                        long IdSucursal, 
                        long IdEmpresa, 
                        System.Decimal SaldoTemporal) {
                tpu_ComprobanteDetalleDeudaRow rowtpu_ComprobanteDetalleDeudaRow = ((tpu_ComprobanteDetalleDeudaRow)(this.NewRow()));
                rowtpu_ComprobanteDetalleDeudaRow.ItemArray = new object[] {
                        IdComprobante,
                        IdTipoDeComprobante,
                        Numero,
                        FechaEmision,
                        FechaVencimiento,
                        Cuota,
                        Importe,
                        Saldo,
                        IdMonedaCierre,
                        IdCotizacionCierre,
                        FechaCreacion,
                        IdConexionCreacion,
                        UltimaModificacion,
                        IdConexionUltimaModificacion,
                        IdReservado,
                        RowId,
                        IdSucursal,
                        IdEmpresa,
                        SaldoTemporal};
                this.Rows.Add(rowtpu_ComprobanteDetalleDeudaRow);
                return rowtpu_ComprobanteDetalleDeudaRow;
            }
            
            public tpu_ComprobanteDetalleDeudaRow FindByIdComprobanteCuota(string IdComprobante, short Cuota) {
                return ((tpu_ComprobanteDetalleDeudaRow)(this.Rows.Find(new object[] {
                            IdComprobante,
                            Cuota})));
            }
            
            public System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            public override DataTable Clone() {
                tpu_ComprobanteDetalleDeudaDataTable cln = ((tpu_ComprobanteDetalleDeudaDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            protected override DataTable CreateInstance() {
                return new tpu_ComprobanteDetalleDeudaDataTable();
            }
            
            internal void InitVars() {
                this.columnIdComprobante = this.Columns["IdComprobante"];
                this.columnIdTipoDeComprobante = this.Columns["IdTipoDeComprobante"];
                this.columnNumero = this.Columns["Numero"];
                this.columnFechaEmision = this.Columns["FechaEmision"];
                this.columnFechaVencimiento = this.Columns["FechaVencimiento"];
                this.columnCuota = this.Columns["Cuota"];
                this.columnImporte = this.Columns["Importe"];
                this.columnSaldo = this.Columns["Saldo"];
                this.columnIdMonedaCierre = this.Columns["IdMonedaCierre"];
                this.columnIdCotizacionCierre = this.Columns["IdCotizacionCierre"];
                this.columnFechaCreacion = this.Columns["FechaCreacion"];
                this.columnIdConexionCreacion = this.Columns["IdConexionCreacion"];
                this.columnUltimaModificacion = this.Columns["UltimaModificacion"];
                this.columnIdConexionUltimaModificacion = this.Columns["IdConexionUltimaModificacion"];
                this.columnIdReservado = this.Columns["IdReservado"];
                this.columnRowId = this.Columns["RowId"];
                this.columnIdSucursal = this.Columns["IdSucursal"];
                this.columnIdEmpresa = this.Columns["IdEmpresa"];
                this.columnSaldoTemporal = this.Columns["SaldoTemporal"];
            }
            
            private void InitClass() {
                this.columnIdComprobante = new DataColumn("IdComprobante", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdComprobante);
                this.columnIdTipoDeComprobante = new DataColumn("IdTipoDeComprobante", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdTipoDeComprobante);
                this.columnNumero = new DataColumn("Numero", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnNumero);
                this.columnFechaEmision = new DataColumn("FechaEmision", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnFechaEmision);
                this.columnFechaVencimiento = new DataColumn("FechaVencimiento", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnFechaVencimiento);
                this.columnCuota = new DataColumn("Cuota", typeof(short), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnCuota);
                this.columnImporte = new DataColumn("Importe", typeof(System.Decimal), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnImporte);
                this.columnSaldo = new DataColumn("Saldo", typeof(System.Decimal), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnSaldo);
                this.columnIdMonedaCierre = new DataColumn("IdMonedaCierre", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdMonedaCierre);
                this.columnIdCotizacionCierre = new DataColumn("IdCotizacionCierre", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdCotizacionCierre);
                this.columnFechaCreacion = new DataColumn("FechaCreacion", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnFechaCreacion);
                this.columnIdConexionCreacion = new DataColumn("IdConexionCreacion", typeof(long), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdConexionCreacion);
                this.columnUltimaModificacion = new DataColumn("UltimaModificacion", typeof(System.Byte[]), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnUltimaModificacion);
                this.columnIdConexionUltimaModificacion = new DataColumn("IdConexionUltimaModificacion", typeof(long), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdConexionUltimaModificacion);
                this.columnIdReservado = new DataColumn("IdReservado", typeof(long), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdReservado);
                this.columnRowId = new DataColumn("RowId", typeof(System.Guid), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnRowId);
                this.columnIdSucursal = new DataColumn("IdSucursal", typeof(long), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdSucursal);
                this.columnIdEmpresa = new DataColumn("IdEmpresa", typeof(long), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdEmpresa);
                this.columnSaldoTemporal = new DataColumn("SaldoTemporal", typeof(System.Decimal), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnSaldoTemporal);
                this.Constraints.Add(new UniqueConstraint("tpu_ComprobanteDetalleDeudaKey1", new DataColumn[] {
                                this.columnIdComprobante,
                                this.columnCuota}, true));
                this.columnIdComprobante.AllowDBNull = false;
                this.columnIdTipoDeComprobante.AllowDBNull = false;
                this.columnNumero.AllowDBNull = false;
                this.columnFechaEmision.AllowDBNull = false;
                this.columnCuota.AllowDBNull = false;
                this.columnImporte.AllowDBNull = false;
                this.columnSaldo.AllowDBNull = false;
                this.columnUltimaModificacion.ReadOnly = true;
            }
            
            public tpu_ComprobanteDetalleDeudaRow Newtpu_ComprobanteDetalleDeudaRow() {
                return ((tpu_ComprobanteDetalleDeudaRow)(this.NewRow()));
            }
            
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder) {
                return new tpu_ComprobanteDetalleDeudaRow(builder);
            }
            
            protected override System.Type GetRowType() {
                return typeof(tpu_ComprobanteDetalleDeudaRow);
            }
            
            protected override void OnRowChanged(DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.tpu_ComprobanteDetalleDeudaRowChanged != null)) {
                    this.tpu_ComprobanteDetalleDeudaRowChanged(this, new tpu_ComprobanteDetalleDeudaRowChangeEvent(((tpu_ComprobanteDetalleDeudaRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowChanging(DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.tpu_ComprobanteDetalleDeudaRowChanging != null)) {
                    this.tpu_ComprobanteDetalleDeudaRowChanging(this, new tpu_ComprobanteDetalleDeudaRowChangeEvent(((tpu_ComprobanteDetalleDeudaRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleted(DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.tpu_ComprobanteDetalleDeudaRowDeleted != null)) {
                    this.tpu_ComprobanteDetalleDeudaRowDeleted(this, new tpu_ComprobanteDetalleDeudaRowChangeEvent(((tpu_ComprobanteDetalleDeudaRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleting(DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.tpu_ComprobanteDetalleDeudaRowDeleting != null)) {
                    this.tpu_ComprobanteDetalleDeudaRowDeleting(this, new tpu_ComprobanteDetalleDeudaRowChangeEvent(((tpu_ComprobanteDetalleDeudaRow)(e.Row)), e.Action));
                }
            }
            
            public void Removetpu_ComprobanteDetalleDeudaRow(tpu_ComprobanteDetalleDeudaRow row) {
                this.Rows.Remove(row);
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class tpu_ComprobanteDetalleDeudaRow : DataRow {
            
            private tpu_ComprobanteDetalleDeudaDataTable tabletpu_ComprobanteDetalleDeuda;
            
            internal tpu_ComprobanteDetalleDeudaRow(DataRowBuilder rb) : 
                    base(rb) {
                this.tabletpu_ComprobanteDetalleDeuda = ((tpu_ComprobanteDetalleDeudaDataTable)(this.Table));
            }
            
            public string IdComprobante {
                get {
                    return ((string)(this[this.tabletpu_ComprobanteDetalleDeuda.IdComprobanteColumn]));
                }
                set {
                    this[this.tabletpu_ComprobanteDetalleDeuda.IdComprobanteColumn] = value;
                }
            }
            
            public string IdTipoDeComprobante {
                get {
                    return ((string)(this[this.tabletpu_ComprobanteDetalleDeuda.IdTipoDeComprobanteColumn]));
                }
                set {
                    this[this.tabletpu_ComprobanteDetalleDeuda.IdTipoDeComprobanteColumn] = value;
                }
            }
            
            public string Numero {
                get {
                    return ((string)(this[this.tabletpu_ComprobanteDetalleDeuda.NumeroColumn]));
                }
                set {
                    this[this.tabletpu_ComprobanteDetalleDeuda.NumeroColumn] = value;
                }
            }
            
            public System.DateTime FechaEmision {
                get {
                    return ((System.DateTime)(this[this.tabletpu_ComprobanteDetalleDeuda.FechaEmisionColumn]));
                }
                set {
                    this[this.tabletpu_ComprobanteDetalleDeuda.FechaEmisionColumn] = value;
                }
            }
            
            public System.DateTime FechaVencimiento {
                get {
                    try {
                        return ((System.DateTime)(this[this.tabletpu_ComprobanteDetalleDeuda.FechaVencimientoColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletpu_ComprobanteDetalleDeuda.FechaVencimientoColumn] = value;
                }
            }
            
            public short Cuota {
                get {
                    return ((short)(this[this.tabletpu_ComprobanteDetalleDeuda.CuotaColumn]));
                }
                set {
                    this[this.tabletpu_ComprobanteDetalleDeuda.CuotaColumn] = value;
                }
            }
            
            public System.Decimal Importe {
                get {
                    return ((System.Decimal)(this[this.tabletpu_ComprobanteDetalleDeuda.ImporteColumn]));
                }
                set {
                    this[this.tabletpu_ComprobanteDetalleDeuda.ImporteColumn] = value;
                }
            }
            
            public System.Decimal Saldo {
                get {
                    return ((System.Decimal)(this[this.tabletpu_ComprobanteDetalleDeuda.SaldoColumn]));
                }
                set {
                    this[this.tabletpu_ComprobanteDetalleDeuda.SaldoColumn] = value;
                }
            }
            
            public string IdMonedaCierre {
                get {
                    try {
                        return ((string)(this[this.tabletpu_ComprobanteDetalleDeuda.IdMonedaCierreColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletpu_ComprobanteDetalleDeuda.IdMonedaCierreColumn] = value;
                }
            }
            
            public string IdCotizacionCierre {
                get {
                    try {
                        return ((string)(this[this.tabletpu_ComprobanteDetalleDeuda.IdCotizacionCierreColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletpu_ComprobanteDetalleDeuda.IdCotizacionCierreColumn] = value;
                }
            }
            
            public System.DateTime FechaCreacion {
                get {
                    try {
                        return ((System.DateTime)(this[this.tabletpu_ComprobanteDetalleDeuda.FechaCreacionColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletpu_ComprobanteDetalleDeuda.FechaCreacionColumn] = value;
                }
            }
            
            public long IdConexionCreacion {
                get {
                    try {
                        return ((long)(this[this.tabletpu_ComprobanteDetalleDeuda.IdConexionCreacionColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletpu_ComprobanteDetalleDeuda.IdConexionCreacionColumn] = value;
                }
            }
            
            public System.Byte[] UltimaModificacion {
                get {
                    try {
                        return ((System.Byte[])(this[this.tabletpu_ComprobanteDetalleDeuda.UltimaModificacionColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletpu_ComprobanteDetalleDeuda.UltimaModificacionColumn] = value;
                }
            }
            
            public long IdConexionUltimaModificacion {
                get {
                    try {
                        return ((long)(this[this.tabletpu_ComprobanteDetalleDeuda.IdConexionUltimaModificacionColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletpu_ComprobanteDetalleDeuda.IdConexionUltimaModificacionColumn] = value;
                }
            }
            
            public long IdReservado {
                get {
                    try {
                        return ((long)(this[this.tabletpu_ComprobanteDetalleDeuda.IdReservadoColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletpu_ComprobanteDetalleDeuda.IdReservadoColumn] = value;
                }
            }
            
            public System.Guid RowId {
                get {
                    try {
                        return ((System.Guid)(this[this.tabletpu_ComprobanteDetalleDeuda.RowIdColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletpu_ComprobanteDetalleDeuda.RowIdColumn] = value;
                }
            }
            
            public long IdSucursal {
                get {
                    try {
                        return ((long)(this[this.tabletpu_ComprobanteDetalleDeuda.IdSucursalColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletpu_ComprobanteDetalleDeuda.IdSucursalColumn] = value;
                }
            }
            
            public long IdEmpresa {
                get {
                    try {
                        return ((long)(this[this.tabletpu_ComprobanteDetalleDeuda.IdEmpresaColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletpu_ComprobanteDetalleDeuda.IdEmpresaColumn] = value;
                }
            }
            
            public System.Decimal SaldoTemporal {
                get {
                    try {
                        return ((System.Decimal)(this[this.tabletpu_ComprobanteDetalleDeuda.SaldoTemporalColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletpu_ComprobanteDetalleDeuda.SaldoTemporalColumn] = value;
                }
            }
            
            public bool IsFechaVencimientoNull() {
                return this.IsNull(this.tabletpu_ComprobanteDetalleDeuda.FechaVencimientoColumn);
            }
            
            public void SetFechaVencimientoNull() {
                this[this.tabletpu_ComprobanteDetalleDeuda.FechaVencimientoColumn] = System.Convert.DBNull;
            }
            
            public bool IsIdMonedaCierreNull() {
                return this.IsNull(this.tabletpu_ComprobanteDetalleDeuda.IdMonedaCierreColumn);
            }
            
            public void SetIdMonedaCierreNull() {
                this[this.tabletpu_ComprobanteDetalleDeuda.IdMonedaCierreColumn] = System.Convert.DBNull;
            }
            
            public bool IsIdCotizacionCierreNull() {
                return this.IsNull(this.tabletpu_ComprobanteDetalleDeuda.IdCotizacionCierreColumn);
            }
            
            public void SetIdCotizacionCierreNull() {
                this[this.tabletpu_ComprobanteDetalleDeuda.IdCotizacionCierreColumn] = System.Convert.DBNull;
            }
            
            public bool IsFechaCreacionNull() {
                return this.IsNull(this.tabletpu_ComprobanteDetalleDeuda.FechaCreacionColumn);
            }
            
            public void SetFechaCreacionNull() {
                this[this.tabletpu_ComprobanteDetalleDeuda.FechaCreacionColumn] = System.Convert.DBNull;
            }
            
            public bool IsIdConexionCreacionNull() {
                return this.IsNull(this.tabletpu_ComprobanteDetalleDeuda.IdConexionCreacionColumn);
            }
            
            public void SetIdConexionCreacionNull() {
                this[this.tabletpu_ComprobanteDetalleDeuda.IdConexionCreacionColumn] = System.Convert.DBNull;
            }
            
            public bool IsUltimaModificacionNull() {
                return this.IsNull(this.tabletpu_ComprobanteDetalleDeuda.UltimaModificacionColumn);
            }
            
            public void SetUltimaModificacionNull() {
                this[this.tabletpu_ComprobanteDetalleDeuda.UltimaModificacionColumn] = System.Convert.DBNull;
            }
            
            public bool IsIdConexionUltimaModificacionNull() {
                return this.IsNull(this.tabletpu_ComprobanteDetalleDeuda.IdConexionUltimaModificacionColumn);
            }
            
            public void SetIdConexionUltimaModificacionNull() {
                this[this.tabletpu_ComprobanteDetalleDeuda.IdConexionUltimaModificacionColumn] = System.Convert.DBNull;
            }
            
            public bool IsIdReservadoNull() {
                return this.IsNull(this.tabletpu_ComprobanteDetalleDeuda.IdReservadoColumn);
            }
            
            public void SetIdReservadoNull() {
                this[this.tabletpu_ComprobanteDetalleDeuda.IdReservadoColumn] = System.Convert.DBNull;
            }
            
            public bool IsRowIdNull() {
                return this.IsNull(this.tabletpu_ComprobanteDetalleDeuda.RowIdColumn);
            }
            
            public void SetRowIdNull() {
                this[this.tabletpu_ComprobanteDetalleDeuda.RowIdColumn] = System.Convert.DBNull;
            }
            
            public bool IsIdSucursalNull() {
                return this.IsNull(this.tabletpu_ComprobanteDetalleDeuda.IdSucursalColumn);
            }
            
            public void SetIdSucursalNull() {
                this[this.tabletpu_ComprobanteDetalleDeuda.IdSucursalColumn] = System.Convert.DBNull;
            }
            
            public bool IsIdEmpresaNull() {
                return this.IsNull(this.tabletpu_ComprobanteDetalleDeuda.IdEmpresaColumn);
            }
            
            public void SetIdEmpresaNull() {
                this[this.tabletpu_ComprobanteDetalleDeuda.IdEmpresaColumn] = System.Convert.DBNull;
            }
            
            public bool IsSaldoTemporalNull() {
                return this.IsNull(this.tabletpu_ComprobanteDetalleDeuda.SaldoTemporalColumn);
            }
            
            public void SetSaldoTemporalNull() {
                this[this.tabletpu_ComprobanteDetalleDeuda.SaldoTemporalColumn] = System.Convert.DBNull;
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class tpu_ComprobanteDetalleDeudaRowChangeEvent : EventArgs {
            
            private tpu_ComprobanteDetalleDeudaRow eventRow;
            
            private DataRowAction eventAction;
            
            public tpu_ComprobanteDetalleDeudaRowChangeEvent(tpu_ComprobanteDetalleDeudaRow row, DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            public tpu_ComprobanteDetalleDeudaRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            public DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
