//------------------------------------------------------------------------------
// <autogenerated>
//     This code was generated by a tool.
//     Runtime Version: 1.1.4322.2407
//
//     Changes to this file may cause incorrect behavior and will be lost if 
//     the code is regenerated.
// </autogenerated>
//------------------------------------------------------------------------------

namespace mz.erp.commontypes.data {
    using System;
    using System.Data;
    using System.Xml;
    using System.Runtime.Serialization;
    
    
    [Serializable()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Diagnostics.DebuggerStepThrough()]
    [System.ComponentModel.ToolboxItem(true)]
    public class tpu_ComprobantesDetDataset : DataSet {
        
        private tpu_ComprobantesDetDataTable tabletpu_ComprobantesDet;
        
        public tpu_ComprobantesDetDataset() {
            this.InitClass();
            System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            this.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        protected tpu_ComprobantesDetDataset(SerializationInfo info, StreamingContext context) {
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((strSchema != null)) {
                DataSet ds = new DataSet();
                ds.ReadXmlSchema(new XmlTextReader(new System.IO.StringReader(strSchema)));
                if ((ds.Tables["tpu_ComprobantesDet"] != null)) {
                    this.Tables.Add(new tpu_ComprobantesDetDataTable(ds.Tables["tpu_ComprobantesDet"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.InitClass();
            }
            this.GetSerializationData(info, context);
            System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            this.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public tpu_ComprobantesDetDataTable tpu_ComprobantesDet {
            get {
                return this.tabletpu_ComprobantesDet;
            }
        }
        
        public override DataSet Clone() {
            tpu_ComprobantesDetDataset cln = ((tpu_ComprobantesDetDataset)(base.Clone()));
            cln.InitVars();
            return cln;
        }
        
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        protected override void ReadXmlSerializable(XmlReader reader) {
            this.Reset();
            DataSet ds = new DataSet();
            ds.ReadXml(reader);
            if ((ds.Tables["tpu_ComprobantesDet"] != null)) {
                this.Tables.Add(new tpu_ComprobantesDetDataTable(ds.Tables["tpu_ComprobantesDet"]));
            }
            this.DataSetName = ds.DataSetName;
            this.Prefix = ds.Prefix;
            this.Namespace = ds.Namespace;
            this.Locale = ds.Locale;
            this.CaseSensitive = ds.CaseSensitive;
            this.EnforceConstraints = ds.EnforceConstraints;
            this.Merge(ds, false, System.Data.MissingSchemaAction.Add);
            this.InitVars();
        }
        
        protected override System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            System.IO.MemoryStream stream = new System.IO.MemoryStream();
            this.WriteXmlSchema(new XmlTextWriter(stream, null));
            stream.Position = 0;
            return System.Xml.Schema.XmlSchema.Read(new XmlTextReader(stream), null);
        }
        
        internal void InitVars() {
            this.tabletpu_ComprobantesDet = ((tpu_ComprobantesDetDataTable)(this.Tables["tpu_ComprobantesDet"]));
            if ((this.tabletpu_ComprobantesDet != null)) {
                this.tabletpu_ComprobantesDet.InitVars();
            }
        }
        
        private void InitClass() {
            this.DataSetName = "tpu_ComprobantesDetDataset";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/tpu_ComprobantesDet.xsd";
            this.Locale = new System.Globalization.CultureInfo("en-US");
            this.CaseSensitive = false;
            this.EnforceConstraints = true;
            this.tabletpu_ComprobantesDet = new tpu_ComprobantesDetDataTable();
            this.Tables.Add(this.tabletpu_ComprobantesDet);
        }
        
        private bool ShouldSerializetpu_ComprobantesDet() {
            return false;
        }
        
        private void SchemaChanged(object sender, System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        public delegate void tpu_ComprobantesDetRowChangeEventHandler(object sender, tpu_ComprobantesDetRowChangeEvent e);
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class tpu_ComprobantesDetDataTable : DataTable, System.Collections.IEnumerable {
            
            private DataColumn columnIdComprobante;
            
            private DataColumn columnOrdinal;
            
            private DataColumn columnIdProducto;
            
            private DataColumn columnCantidad;
            
            private DataColumn columnImpuestosDirectos;
            
            private DataColumn columnImpuestosIndirectos;
            
            private DataColumn columnIdMonedaOrigen;
            
            private DataColumn columnIdMonedaCierre;
            
            private DataColumn columnIdEmpresa;
            
            private DataColumn columnIdSucursal;
            
            private DataColumn columnPrecioDeCosto;
            
            private DataColumn columnIdCotizacionCierre;
            
            private DataColumn columnFechaCreacion;
            
            private DataColumn columnIdConexionCreacion;
            
            private DataColumn columnUltimaModificacion;
            
            private DataColumn columnIdConexionUltimaModificacion;
            
            private DataColumn columnIdReservado;
            
            private DataColumn columnRowId;
            
            private DataColumn columnRowIdGenerado;
            
            private DataColumn columnValorCotizacionProveedor;
            
            private DataColumn columnPrecioDeCostoNetoMonedaOrigen;
            
            private DataColumn columnBonificacion1MonedaOrigen;
            
            private DataColumn columnBonificacion2MonedaOrigen;
            
            private DataColumn columnBonificacion3MonedaOrigen;
            
            private DataColumn columnBonificacion4MonedaOrigen;
            
            private DataColumn columnBonificacion5MonedaOrigen;
            
            private DataColumn columnPorcentajeBonificacion1;
            
            private DataColumn columnPorcentajeBonificacion2;
            
            private DataColumn columnPorcentajeBonificacion3;
            
            private DataColumn columnPorcentajeBonificacion4;
            
            private DataColumn columnPorcentajeBonificacion5;
            
            private DataColumn columnEstado;
            
            private DataColumn columnPrecioDeCostoMonedaOrigen;
            
            internal tpu_ComprobantesDetDataTable() : 
                    base("tpu_ComprobantesDet") {
                this.InitClass();
            }
            
            internal tpu_ComprobantesDetDataTable(DataTable table) : 
                    base(table.TableName) {
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
                this.DisplayExpression = table.DisplayExpression;
            }
            
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            internal DataColumn IdComprobanteColumn {
                get {
                    return this.columnIdComprobante;
                }
            }
            
            internal DataColumn OrdinalColumn {
                get {
                    return this.columnOrdinal;
                }
            }
            
            internal DataColumn IdProductoColumn {
                get {
                    return this.columnIdProducto;
                }
            }
            
            internal DataColumn CantidadColumn {
                get {
                    return this.columnCantidad;
                }
            }
            
            internal DataColumn ImpuestosDirectosColumn {
                get {
                    return this.columnImpuestosDirectos;
                }
            }
            
            internal DataColumn ImpuestosIndirectosColumn {
                get {
                    return this.columnImpuestosIndirectos;
                }
            }
            
            internal DataColumn IdMonedaOrigenColumn {
                get {
                    return this.columnIdMonedaOrigen;
                }
            }
            
            internal DataColumn IdMonedaCierreColumn {
                get {
                    return this.columnIdMonedaCierre;
                }
            }
            
            internal DataColumn IdEmpresaColumn {
                get {
                    return this.columnIdEmpresa;
                }
            }
            
            internal DataColumn IdSucursalColumn {
                get {
                    return this.columnIdSucursal;
                }
            }
            
            internal DataColumn PrecioDeCostoColumn {
                get {
                    return this.columnPrecioDeCosto;
                }
            }
            
            internal DataColumn IdCotizacionCierreColumn {
                get {
                    return this.columnIdCotizacionCierre;
                }
            }
            
            internal DataColumn FechaCreacionColumn {
                get {
                    return this.columnFechaCreacion;
                }
            }
            
            internal DataColumn IdConexionCreacionColumn {
                get {
                    return this.columnIdConexionCreacion;
                }
            }
            
            internal DataColumn UltimaModificacionColumn {
                get {
                    return this.columnUltimaModificacion;
                }
            }
            
            internal DataColumn IdConexionUltimaModificacionColumn {
                get {
                    return this.columnIdConexionUltimaModificacion;
                }
            }
            
            internal DataColumn IdReservadoColumn {
                get {
                    return this.columnIdReservado;
                }
            }
            
            internal DataColumn RowIdColumn {
                get {
                    return this.columnRowId;
                }
            }
            
            internal DataColumn RowIdGeneradoColumn {
                get {
                    return this.columnRowIdGenerado;
                }
            }
            
            internal DataColumn ValorCotizacionProveedorColumn {
                get {
                    return this.columnValorCotizacionProveedor;
                }
            }
            
            internal DataColumn PrecioDeCostoNetoMonedaOrigenColumn {
                get {
                    return this.columnPrecioDeCostoNetoMonedaOrigen;
                }
            }
            
            internal DataColumn Bonificacion1MonedaOrigenColumn {
                get {
                    return this.columnBonificacion1MonedaOrigen;
                }
            }
            
            internal DataColumn Bonificacion2MonedaOrigenColumn {
                get {
                    return this.columnBonificacion2MonedaOrigen;
                }
            }
            
            internal DataColumn Bonificacion3MonedaOrigenColumn {
                get {
                    return this.columnBonificacion3MonedaOrigen;
                }
            }
            
            internal DataColumn Bonificacion4MonedaOrigenColumn {
                get {
                    return this.columnBonificacion4MonedaOrigen;
                }
            }
            
            internal DataColumn Bonificacion5MonedaOrigenColumn {
                get {
                    return this.columnBonificacion5MonedaOrigen;
                }
            }
            
            internal DataColumn PorcentajeBonificacion1Column {
                get {
                    return this.columnPorcentajeBonificacion1;
                }
            }
            
            internal DataColumn PorcentajeBonificacion2Column {
                get {
                    return this.columnPorcentajeBonificacion2;
                }
            }
            
            internal DataColumn PorcentajeBonificacion3Column {
                get {
                    return this.columnPorcentajeBonificacion3;
                }
            }
            
            internal DataColumn PorcentajeBonificacion4Column {
                get {
                    return this.columnPorcentajeBonificacion4;
                }
            }
            
            internal DataColumn PorcentajeBonificacion5Column {
                get {
                    return this.columnPorcentajeBonificacion5;
                }
            }
            
            internal DataColumn EstadoColumn {
                get {
                    return this.columnEstado;
                }
            }
            
            internal DataColumn PrecioDeCostoMonedaOrigenColumn {
                get {
                    return this.columnPrecioDeCostoMonedaOrigen;
                }
            }
            
            public tpu_ComprobantesDetRow this[int index] {
                get {
                    return ((tpu_ComprobantesDetRow)(this.Rows[index]));
                }
            }
            
            public event tpu_ComprobantesDetRowChangeEventHandler tpu_ComprobantesDetRowChanged;
            
            public event tpu_ComprobantesDetRowChangeEventHandler tpu_ComprobantesDetRowChanging;
            
            public event tpu_ComprobantesDetRowChangeEventHandler tpu_ComprobantesDetRowDeleted;
            
            public event tpu_ComprobantesDetRowChangeEventHandler tpu_ComprobantesDetRowDeleting;
            
            public void Addtpu_ComprobantesDetRow(tpu_ComprobantesDetRow row) {
                this.Rows.Add(row);
            }
            
            public tpu_ComprobantesDetRow Addtpu_ComprobantesDetRow(
                        string IdComprobante, 
                        long Ordinal, 
                        string IdProducto, 
                        System.Decimal Cantidad, 
                        System.Decimal ImpuestosDirectos, 
                        System.Decimal ImpuestosIndirectos, 
                        string IdMonedaOrigen, 
                        string IdMonedaCierre, 
                        long IdEmpresa, 
                        long IdSucursal, 
                        System.Decimal PrecioDeCosto, 
                        string IdCotizacionCierre, 
                        System.DateTime FechaCreacion, 
                        long IdConexionCreacion, 
                        System.Byte[] UltimaModificacion, 
                        long IdConexionUltimaModificacion, 
                        long IdReservado, 
                        System.Guid RowId, 
                        string RowIdGenerado, 
                        System.Decimal ValorCotizacionProveedor, 
                        System.Decimal PrecioDeCostoNetoMonedaOrigen, 
                        System.Decimal Bonificacion1MonedaOrigen, 
                        System.Decimal Bonificacion2MonedaOrigen, 
                        System.Decimal Bonificacion3MonedaOrigen, 
                        System.Decimal Bonificacion4MonedaOrigen, 
                        System.Decimal Bonificacion5MonedaOrigen, 
                        System.Decimal PorcentajeBonificacion1, 
                        System.Decimal PorcentajeBonificacion2, 
                        System.Decimal PorcentajeBonificacion3, 
                        System.Decimal PorcentajeBonificacion4, 
                        System.Decimal PorcentajeBonificacion5, 
                        string Estado, 
                        System.Decimal PrecioDeCostoMonedaOrigen) {
                tpu_ComprobantesDetRow rowtpu_ComprobantesDetRow = ((tpu_ComprobantesDetRow)(this.NewRow()));
                rowtpu_ComprobantesDetRow.ItemArray = new object[] {
                        IdComprobante,
                        Ordinal,
                        IdProducto,
                        Cantidad,
                        ImpuestosDirectos,
                        ImpuestosIndirectos,
                        IdMonedaOrigen,
                        IdMonedaCierre,
                        IdEmpresa,
                        IdSucursal,
                        PrecioDeCosto,
                        IdCotizacionCierre,
                        FechaCreacion,
                        IdConexionCreacion,
                        UltimaModificacion,
                        IdConexionUltimaModificacion,
                        IdReservado,
                        RowId,
                        RowIdGenerado,
                        ValorCotizacionProveedor,
                        PrecioDeCostoNetoMonedaOrigen,
                        Bonificacion1MonedaOrigen,
                        Bonificacion2MonedaOrigen,
                        Bonificacion3MonedaOrigen,
                        Bonificacion4MonedaOrigen,
                        Bonificacion5MonedaOrigen,
                        PorcentajeBonificacion1,
                        PorcentajeBonificacion2,
                        PorcentajeBonificacion3,
                        PorcentajeBonificacion4,
                        PorcentajeBonificacion5,
                        Estado,
                        PrecioDeCostoMonedaOrigen};
                this.Rows.Add(rowtpu_ComprobantesDetRow);
                return rowtpu_ComprobantesDetRow;
            }
            
            public tpu_ComprobantesDetRow FindByIdComprobanteOrdinal(string IdComprobante, long Ordinal) {
                return ((tpu_ComprobantesDetRow)(this.Rows.Find(new object[] {
                            IdComprobante,
                            Ordinal})));
            }
            
            public System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            public override DataTable Clone() {
                tpu_ComprobantesDetDataTable cln = ((tpu_ComprobantesDetDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            protected override DataTable CreateInstance() {
                return new tpu_ComprobantesDetDataTable();
            }
            
            internal void InitVars() {
                this.columnIdComprobante = this.Columns["IdComprobante"];
                this.columnOrdinal = this.Columns["Ordinal"];
                this.columnIdProducto = this.Columns["IdProducto"];
                this.columnCantidad = this.Columns["Cantidad"];
                this.columnImpuestosDirectos = this.Columns["ImpuestosDirectos"];
                this.columnImpuestosIndirectos = this.Columns["ImpuestosIndirectos"];
                this.columnIdMonedaOrigen = this.Columns["IdMonedaOrigen"];
                this.columnIdMonedaCierre = this.Columns["IdMonedaCierre"];
                this.columnIdEmpresa = this.Columns["IdEmpresa"];
                this.columnIdSucursal = this.Columns["IdSucursal"];
                this.columnPrecioDeCosto = this.Columns["PrecioDeCosto"];
                this.columnIdCotizacionCierre = this.Columns["IdCotizacionCierre"];
                this.columnFechaCreacion = this.Columns["FechaCreacion"];
                this.columnIdConexionCreacion = this.Columns["IdConexionCreacion"];
                this.columnUltimaModificacion = this.Columns["UltimaModificacion"];
                this.columnIdConexionUltimaModificacion = this.Columns["IdConexionUltimaModificacion"];
                this.columnIdReservado = this.Columns["IdReservado"];
                this.columnRowId = this.Columns["RowId"];
                this.columnRowIdGenerado = this.Columns["RowIdGenerado"];
                this.columnValorCotizacionProveedor = this.Columns["ValorCotizacionProveedor"];
                this.columnPrecioDeCostoNetoMonedaOrigen = this.Columns["PrecioDeCostoNetoMonedaOrigen"];
                this.columnBonificacion1MonedaOrigen = this.Columns["Bonificacion1MonedaOrigen"];
                this.columnBonificacion2MonedaOrigen = this.Columns["Bonificacion2MonedaOrigen"];
                this.columnBonificacion3MonedaOrigen = this.Columns["Bonificacion3MonedaOrigen"];
                this.columnBonificacion4MonedaOrigen = this.Columns["Bonificacion4MonedaOrigen"];
                this.columnBonificacion5MonedaOrigen = this.Columns["Bonificacion5MonedaOrigen"];
                this.columnPorcentajeBonificacion1 = this.Columns["PorcentajeBonificacion1"];
                this.columnPorcentajeBonificacion2 = this.Columns["PorcentajeBonificacion2"];
                this.columnPorcentajeBonificacion3 = this.Columns["PorcentajeBonificacion3"];
                this.columnPorcentajeBonificacion4 = this.Columns["PorcentajeBonificacion4"];
                this.columnPorcentajeBonificacion5 = this.Columns["PorcentajeBonificacion5"];
                this.columnEstado = this.Columns["Estado"];
                this.columnPrecioDeCostoMonedaOrigen = this.Columns["PrecioDeCostoMonedaOrigen"];
            }
            
            private void InitClass() {
                this.columnIdComprobante = new DataColumn("IdComprobante", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdComprobante);
                this.columnOrdinal = new DataColumn("Ordinal", typeof(long), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnOrdinal);
                this.columnIdProducto = new DataColumn("IdProducto", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdProducto);
                this.columnCantidad = new DataColumn("Cantidad", typeof(System.Decimal), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnCantidad);
                this.columnImpuestosDirectos = new DataColumn("ImpuestosDirectos", typeof(System.Decimal), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnImpuestosDirectos);
                this.columnImpuestosIndirectos = new DataColumn("ImpuestosIndirectos", typeof(System.Decimal), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnImpuestosIndirectos);
                this.columnIdMonedaOrigen = new DataColumn("IdMonedaOrigen", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdMonedaOrigen);
                this.columnIdMonedaCierre = new DataColumn("IdMonedaCierre", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdMonedaCierre);
                this.columnIdEmpresa = new DataColumn("IdEmpresa", typeof(long), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdEmpresa);
                this.columnIdSucursal = new DataColumn("IdSucursal", typeof(long), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdSucursal);
                this.columnPrecioDeCosto = new DataColumn("PrecioDeCosto", typeof(System.Decimal), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnPrecioDeCosto);
                this.columnIdCotizacionCierre = new DataColumn("IdCotizacionCierre", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdCotizacionCierre);
                this.columnFechaCreacion = new DataColumn("FechaCreacion", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnFechaCreacion);
                this.columnIdConexionCreacion = new DataColumn("IdConexionCreacion", typeof(long), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdConexionCreacion);
                this.columnUltimaModificacion = new DataColumn("UltimaModificacion", typeof(System.Byte[]), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnUltimaModificacion);
                this.columnIdConexionUltimaModificacion = new DataColumn("IdConexionUltimaModificacion", typeof(long), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdConexionUltimaModificacion);
                this.columnIdReservado = new DataColumn("IdReservado", typeof(long), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdReservado);
                this.columnRowId = new DataColumn("RowId", typeof(System.Guid), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnRowId);
                this.columnRowIdGenerado = new DataColumn("RowIdGenerado", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnRowIdGenerado);
                this.columnValorCotizacionProveedor = new DataColumn("ValorCotizacionProveedor", typeof(System.Decimal), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnValorCotizacionProveedor);
                this.columnPrecioDeCostoNetoMonedaOrigen = new DataColumn("PrecioDeCostoNetoMonedaOrigen", typeof(System.Decimal), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnPrecioDeCostoNetoMonedaOrigen);
                this.columnBonificacion1MonedaOrigen = new DataColumn("Bonificacion1MonedaOrigen", typeof(System.Decimal), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnBonificacion1MonedaOrigen);
                this.columnBonificacion2MonedaOrigen = new DataColumn("Bonificacion2MonedaOrigen", typeof(System.Decimal), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnBonificacion2MonedaOrigen);
                this.columnBonificacion3MonedaOrigen = new DataColumn("Bonificacion3MonedaOrigen", typeof(System.Decimal), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnBonificacion3MonedaOrigen);
                this.columnBonificacion4MonedaOrigen = new DataColumn("Bonificacion4MonedaOrigen", typeof(System.Decimal), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnBonificacion4MonedaOrigen);
                this.columnBonificacion5MonedaOrigen = new DataColumn("Bonificacion5MonedaOrigen", typeof(System.Decimal), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnBonificacion5MonedaOrigen);
                this.columnPorcentajeBonificacion1 = new DataColumn("PorcentajeBonificacion1", typeof(System.Decimal), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnPorcentajeBonificacion1);
                this.columnPorcentajeBonificacion2 = new DataColumn("PorcentajeBonificacion2", typeof(System.Decimal), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnPorcentajeBonificacion2);
                this.columnPorcentajeBonificacion3 = new DataColumn("PorcentajeBonificacion3", typeof(System.Decimal), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnPorcentajeBonificacion3);
                this.columnPorcentajeBonificacion4 = new DataColumn("PorcentajeBonificacion4", typeof(System.Decimal), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnPorcentajeBonificacion4);
                this.columnPorcentajeBonificacion5 = new DataColumn("PorcentajeBonificacion5", typeof(System.Decimal), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnPorcentajeBonificacion5);
                this.columnEstado = new DataColumn("Estado", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnEstado);
                this.columnPrecioDeCostoMonedaOrigen = new DataColumn("PrecioDeCostoMonedaOrigen", typeof(System.Decimal), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnPrecioDeCostoMonedaOrigen);
                this.Constraints.Add(new UniqueConstraint("tpu_ComprobantesDetKey1", new DataColumn[] {
                                this.columnIdComprobante,
                                this.columnOrdinal}, true));
                this.columnIdComprobante.AllowDBNull = false;
                this.columnOrdinal.AllowDBNull = false;
                this.columnUltimaModificacion.ReadOnly = true;
            }
            
            public tpu_ComprobantesDetRow Newtpu_ComprobantesDetRow() {
                return ((tpu_ComprobantesDetRow)(this.NewRow()));
            }
            
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder) {
                return new tpu_ComprobantesDetRow(builder);
            }
            
            protected override System.Type GetRowType() {
                return typeof(tpu_ComprobantesDetRow);
            }
            
            protected override void OnRowChanged(DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.tpu_ComprobantesDetRowChanged != null)) {
                    this.tpu_ComprobantesDetRowChanged(this, new tpu_ComprobantesDetRowChangeEvent(((tpu_ComprobantesDetRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowChanging(DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.tpu_ComprobantesDetRowChanging != null)) {
                    this.tpu_ComprobantesDetRowChanging(this, new tpu_ComprobantesDetRowChangeEvent(((tpu_ComprobantesDetRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleted(DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.tpu_ComprobantesDetRowDeleted != null)) {
                    this.tpu_ComprobantesDetRowDeleted(this, new tpu_ComprobantesDetRowChangeEvent(((tpu_ComprobantesDetRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleting(DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.tpu_ComprobantesDetRowDeleting != null)) {
                    this.tpu_ComprobantesDetRowDeleting(this, new tpu_ComprobantesDetRowChangeEvent(((tpu_ComprobantesDetRow)(e.Row)), e.Action));
                }
            }
            
            public void Removetpu_ComprobantesDetRow(tpu_ComprobantesDetRow row) {
                this.Rows.Remove(row);
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class tpu_ComprobantesDetRow : DataRow {
            
            private tpu_ComprobantesDetDataTable tabletpu_ComprobantesDet;
            
            internal tpu_ComprobantesDetRow(DataRowBuilder rb) : 
                    base(rb) {
                this.tabletpu_ComprobantesDet = ((tpu_ComprobantesDetDataTable)(this.Table));
            }
            
            public string IdComprobante {
                get {
                    return ((string)(this[this.tabletpu_ComprobantesDet.IdComprobanteColumn]));
                }
                set {
                    this[this.tabletpu_ComprobantesDet.IdComprobanteColumn] = value;
                }
            }
            
            public long Ordinal {
                get {
                    return ((long)(this[this.tabletpu_ComprobantesDet.OrdinalColumn]));
                }
                set {
                    this[this.tabletpu_ComprobantesDet.OrdinalColumn] = value;
                }
            }
            
            public string IdProducto {
                get {
                    try {
                        return ((string)(this[this.tabletpu_ComprobantesDet.IdProductoColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletpu_ComprobantesDet.IdProductoColumn] = value;
                }
            }
            
            public System.Decimal Cantidad {
                get {
                    try {
                        return ((System.Decimal)(this[this.tabletpu_ComprobantesDet.CantidadColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletpu_ComprobantesDet.CantidadColumn] = value;
                }
            }
            
            public System.Decimal ImpuestosDirectos {
                get {
                    try {
                        return ((System.Decimal)(this[this.tabletpu_ComprobantesDet.ImpuestosDirectosColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletpu_ComprobantesDet.ImpuestosDirectosColumn] = value;
                }
            }
            
            public System.Decimal ImpuestosIndirectos {
                get {
                    try {
                        return ((System.Decimal)(this[this.tabletpu_ComprobantesDet.ImpuestosIndirectosColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletpu_ComprobantesDet.ImpuestosIndirectosColumn] = value;
                }
            }
            
            public string IdMonedaOrigen {
                get {
                    try {
                        return ((string)(this[this.tabletpu_ComprobantesDet.IdMonedaOrigenColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletpu_ComprobantesDet.IdMonedaOrigenColumn] = value;
                }
            }
            
            public string IdMonedaCierre {
                get {
                    try {
                        return ((string)(this[this.tabletpu_ComprobantesDet.IdMonedaCierreColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletpu_ComprobantesDet.IdMonedaCierreColumn] = value;
                }
            }
            
            public long IdEmpresa {
                get {
                    try {
                        return ((long)(this[this.tabletpu_ComprobantesDet.IdEmpresaColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletpu_ComprobantesDet.IdEmpresaColumn] = value;
                }
            }
            
            public long IdSucursal {
                get {
                    try {
                        return ((long)(this[this.tabletpu_ComprobantesDet.IdSucursalColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletpu_ComprobantesDet.IdSucursalColumn] = value;
                }
            }
            
            public System.Decimal PrecioDeCosto {
                get {
                    try {
                        return ((System.Decimal)(this[this.tabletpu_ComprobantesDet.PrecioDeCostoColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletpu_ComprobantesDet.PrecioDeCostoColumn] = value;
                }
            }
            
            public string IdCotizacionCierre {
                get {
                    try {
                        return ((string)(this[this.tabletpu_ComprobantesDet.IdCotizacionCierreColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletpu_ComprobantesDet.IdCotizacionCierreColumn] = value;
                }
            }
            
            public System.DateTime FechaCreacion {
                get {
                    try {
                        return ((System.DateTime)(this[this.tabletpu_ComprobantesDet.FechaCreacionColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletpu_ComprobantesDet.FechaCreacionColumn] = value;
                }
            }
            
            public long IdConexionCreacion {
                get {
                    try {
                        return ((long)(this[this.tabletpu_ComprobantesDet.IdConexionCreacionColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletpu_ComprobantesDet.IdConexionCreacionColumn] = value;
                }
            }
            
            public System.Byte[] UltimaModificacion {
                get {
                    try {
                        return ((System.Byte[])(this[this.tabletpu_ComprobantesDet.UltimaModificacionColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletpu_ComprobantesDet.UltimaModificacionColumn] = value;
                }
            }
            
            public long IdConexionUltimaModificacion {
                get {
                    try {
                        return ((long)(this[this.tabletpu_ComprobantesDet.IdConexionUltimaModificacionColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletpu_ComprobantesDet.IdConexionUltimaModificacionColumn] = value;
                }
            }
            
            public long IdReservado {
                get {
                    try {
                        return ((long)(this[this.tabletpu_ComprobantesDet.IdReservadoColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletpu_ComprobantesDet.IdReservadoColumn] = value;
                }
            }
            
            public System.Guid RowId {
                get {
                    try {
                        return ((System.Guid)(this[this.tabletpu_ComprobantesDet.RowIdColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletpu_ComprobantesDet.RowIdColumn] = value;
                }
            }
            
            public string RowIdGenerado {
                get {
                    try {
                        return ((string)(this[this.tabletpu_ComprobantesDet.RowIdGeneradoColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletpu_ComprobantesDet.RowIdGeneradoColumn] = value;
                }
            }
            
            public System.Decimal ValorCotizacionProveedor {
                get {
                    try {
                        return ((System.Decimal)(this[this.tabletpu_ComprobantesDet.ValorCotizacionProveedorColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletpu_ComprobantesDet.ValorCotizacionProveedorColumn] = value;
                }
            }
            
            public System.Decimal PrecioDeCostoNetoMonedaOrigen {
                get {
                    try {
                        return ((System.Decimal)(this[this.tabletpu_ComprobantesDet.PrecioDeCostoNetoMonedaOrigenColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletpu_ComprobantesDet.PrecioDeCostoNetoMonedaOrigenColumn] = value;
                }
            }
            
            public System.Decimal Bonificacion1MonedaOrigen {
                get {
                    try {
                        return ((System.Decimal)(this[this.tabletpu_ComprobantesDet.Bonificacion1MonedaOrigenColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletpu_ComprobantesDet.Bonificacion1MonedaOrigenColumn] = value;
                }
            }
            
            public System.Decimal Bonificacion2MonedaOrigen {
                get {
                    try {
                        return ((System.Decimal)(this[this.tabletpu_ComprobantesDet.Bonificacion2MonedaOrigenColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletpu_ComprobantesDet.Bonificacion2MonedaOrigenColumn] = value;
                }
            }
            
            public System.Decimal Bonificacion3MonedaOrigen {
                get {
                    try {
                        return ((System.Decimal)(this[this.tabletpu_ComprobantesDet.Bonificacion3MonedaOrigenColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletpu_ComprobantesDet.Bonificacion3MonedaOrigenColumn] = value;
                }
            }
            
            public System.Decimal Bonificacion4MonedaOrigen {
                get {
                    try {
                        return ((System.Decimal)(this[this.tabletpu_ComprobantesDet.Bonificacion4MonedaOrigenColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletpu_ComprobantesDet.Bonificacion4MonedaOrigenColumn] = value;
                }
            }
            
            public System.Decimal Bonificacion5MonedaOrigen {
                get {
                    try {
                        return ((System.Decimal)(this[this.tabletpu_ComprobantesDet.Bonificacion5MonedaOrigenColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletpu_ComprobantesDet.Bonificacion5MonedaOrigenColumn] = value;
                }
            }
            
            public System.Decimal PorcentajeBonificacion1 {
                get {
                    try {
                        return ((System.Decimal)(this[this.tabletpu_ComprobantesDet.PorcentajeBonificacion1Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletpu_ComprobantesDet.PorcentajeBonificacion1Column] = value;
                }
            }
            
            public System.Decimal PorcentajeBonificacion2 {
                get {
                    try {
                        return ((System.Decimal)(this[this.tabletpu_ComprobantesDet.PorcentajeBonificacion2Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletpu_ComprobantesDet.PorcentajeBonificacion2Column] = value;
                }
            }
            
            public System.Decimal PorcentajeBonificacion3 {
                get {
                    try {
                        return ((System.Decimal)(this[this.tabletpu_ComprobantesDet.PorcentajeBonificacion3Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletpu_ComprobantesDet.PorcentajeBonificacion3Column] = value;
                }
            }
            
            public System.Decimal PorcentajeBonificacion4 {
                get {
                    try {
                        return ((System.Decimal)(this[this.tabletpu_ComprobantesDet.PorcentajeBonificacion4Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletpu_ComprobantesDet.PorcentajeBonificacion4Column] = value;
                }
            }
            
            public System.Decimal PorcentajeBonificacion5 {
                get {
                    try {
                        return ((System.Decimal)(this[this.tabletpu_ComprobantesDet.PorcentajeBonificacion5Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletpu_ComprobantesDet.PorcentajeBonificacion5Column] = value;
                }
            }
            
            public string Estado {
                get {
                    if (this.IsEstadoNull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tabletpu_ComprobantesDet.EstadoColumn]));
                    }
                }
                set {
                    this[this.tabletpu_ComprobantesDet.EstadoColumn] = value;
                }
            }
            
            public System.Decimal PrecioDeCostoMonedaOrigen {
                get {
                    try {
                        return ((System.Decimal)(this[this.tabletpu_ComprobantesDet.PrecioDeCostoMonedaOrigenColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletpu_ComprobantesDet.PrecioDeCostoMonedaOrigenColumn] = value;
                }
            }
            
            public bool IsIdProductoNull() {
                return this.IsNull(this.tabletpu_ComprobantesDet.IdProductoColumn);
            }
            
            public void SetIdProductoNull() {
                this[this.tabletpu_ComprobantesDet.IdProductoColumn] = System.Convert.DBNull;
            }
            
            public bool IsCantidadNull() {
                return this.IsNull(this.tabletpu_ComprobantesDet.CantidadColumn);
            }
            
            public void SetCantidadNull() {
                this[this.tabletpu_ComprobantesDet.CantidadColumn] = System.Convert.DBNull;
            }
            
            public bool IsImpuestosDirectosNull() {
                return this.IsNull(this.tabletpu_ComprobantesDet.ImpuestosDirectosColumn);
            }
            
            public void SetImpuestosDirectosNull() {
                this[this.tabletpu_ComprobantesDet.ImpuestosDirectosColumn] = System.Convert.DBNull;
            }
            
            public bool IsImpuestosIndirectosNull() {
                return this.IsNull(this.tabletpu_ComprobantesDet.ImpuestosIndirectosColumn);
            }
            
            public void SetImpuestosIndirectosNull() {
                this[this.tabletpu_ComprobantesDet.ImpuestosIndirectosColumn] = System.Convert.DBNull;
            }
            
            public bool IsIdMonedaOrigenNull() {
                return this.IsNull(this.tabletpu_ComprobantesDet.IdMonedaOrigenColumn);
            }
            
            public void SetIdMonedaOrigenNull() {
                this[this.tabletpu_ComprobantesDet.IdMonedaOrigenColumn] = System.Convert.DBNull;
            }
            
            public bool IsIdMonedaCierreNull() {
                return this.IsNull(this.tabletpu_ComprobantesDet.IdMonedaCierreColumn);
            }
            
            public void SetIdMonedaCierreNull() {
                this[this.tabletpu_ComprobantesDet.IdMonedaCierreColumn] = System.Convert.DBNull;
            }
            
            public bool IsIdEmpresaNull() {
                return this.IsNull(this.tabletpu_ComprobantesDet.IdEmpresaColumn);
            }
            
            public void SetIdEmpresaNull() {
                this[this.tabletpu_ComprobantesDet.IdEmpresaColumn] = System.Convert.DBNull;
            }
            
            public bool IsIdSucursalNull() {
                return this.IsNull(this.tabletpu_ComprobantesDet.IdSucursalColumn);
            }
            
            public void SetIdSucursalNull() {
                this[this.tabletpu_ComprobantesDet.IdSucursalColumn] = System.Convert.DBNull;
            }
            
            public bool IsPrecioDeCostoNull() {
                return this.IsNull(this.tabletpu_ComprobantesDet.PrecioDeCostoColumn);
            }
            
            public void SetPrecioDeCostoNull() {
                this[this.tabletpu_ComprobantesDet.PrecioDeCostoColumn] = System.Convert.DBNull;
            }
            
            public bool IsIdCotizacionCierreNull() {
                return this.IsNull(this.tabletpu_ComprobantesDet.IdCotizacionCierreColumn);
            }
            
            public void SetIdCotizacionCierreNull() {
                this[this.tabletpu_ComprobantesDet.IdCotizacionCierreColumn] = System.Convert.DBNull;
            }
            
            public bool IsFechaCreacionNull() {
                return this.IsNull(this.tabletpu_ComprobantesDet.FechaCreacionColumn);
            }
            
            public void SetFechaCreacionNull() {
                this[this.tabletpu_ComprobantesDet.FechaCreacionColumn] = System.Convert.DBNull;
            }
            
            public bool IsIdConexionCreacionNull() {
                return this.IsNull(this.tabletpu_ComprobantesDet.IdConexionCreacionColumn);
            }
            
            public void SetIdConexionCreacionNull() {
                this[this.tabletpu_ComprobantesDet.IdConexionCreacionColumn] = System.Convert.DBNull;
            }
            
            public bool IsUltimaModificacionNull() {
                return this.IsNull(this.tabletpu_ComprobantesDet.UltimaModificacionColumn);
            }
            
            public void SetUltimaModificacionNull() {
                this[this.tabletpu_ComprobantesDet.UltimaModificacionColumn] = System.Convert.DBNull;
            }
            
            public bool IsIdConexionUltimaModificacionNull() {
                return this.IsNull(this.tabletpu_ComprobantesDet.IdConexionUltimaModificacionColumn);
            }
            
            public void SetIdConexionUltimaModificacionNull() {
                this[this.tabletpu_ComprobantesDet.IdConexionUltimaModificacionColumn] = System.Convert.DBNull;
            }
            
            public bool IsIdReservadoNull() {
                return this.IsNull(this.tabletpu_ComprobantesDet.IdReservadoColumn);
            }
            
            public void SetIdReservadoNull() {
                this[this.tabletpu_ComprobantesDet.IdReservadoColumn] = System.Convert.DBNull;
            }
            
            public bool IsRowIdNull() {
                return this.IsNull(this.tabletpu_ComprobantesDet.RowIdColumn);
            }
            
            public void SetRowIdNull() {
                this[this.tabletpu_ComprobantesDet.RowIdColumn] = System.Convert.DBNull;
            }
            
            public bool IsRowIdGeneradoNull() {
                return this.IsNull(this.tabletpu_ComprobantesDet.RowIdGeneradoColumn);
            }
            
            public void SetRowIdGeneradoNull() {
                this[this.tabletpu_ComprobantesDet.RowIdGeneradoColumn] = System.Convert.DBNull;
            }
            
            public bool IsValorCotizacionProveedorNull() {
                return this.IsNull(this.tabletpu_ComprobantesDet.ValorCotizacionProveedorColumn);
            }
            
            public void SetValorCotizacionProveedorNull() {
                this[this.tabletpu_ComprobantesDet.ValorCotizacionProveedorColumn] = System.Convert.DBNull;
            }
            
            public bool IsPrecioDeCostoNetoMonedaOrigenNull() {
                return this.IsNull(this.tabletpu_ComprobantesDet.PrecioDeCostoNetoMonedaOrigenColumn);
            }
            
            public void SetPrecioDeCostoNetoMonedaOrigenNull() {
                this[this.tabletpu_ComprobantesDet.PrecioDeCostoNetoMonedaOrigenColumn] = System.Convert.DBNull;
            }
            
            public bool IsBonificacion1MonedaOrigenNull() {
                return this.IsNull(this.tabletpu_ComprobantesDet.Bonificacion1MonedaOrigenColumn);
            }
            
            public void SetBonificacion1MonedaOrigenNull() {
                this[this.tabletpu_ComprobantesDet.Bonificacion1MonedaOrigenColumn] = System.Convert.DBNull;
            }
            
            public bool IsBonificacion2MonedaOrigenNull() {
                return this.IsNull(this.tabletpu_ComprobantesDet.Bonificacion2MonedaOrigenColumn);
            }
            
            public void SetBonificacion2MonedaOrigenNull() {
                this[this.tabletpu_ComprobantesDet.Bonificacion2MonedaOrigenColumn] = System.Convert.DBNull;
            }
            
            public bool IsBonificacion3MonedaOrigenNull() {
                return this.IsNull(this.tabletpu_ComprobantesDet.Bonificacion3MonedaOrigenColumn);
            }
            
            public void SetBonificacion3MonedaOrigenNull() {
                this[this.tabletpu_ComprobantesDet.Bonificacion3MonedaOrigenColumn] = System.Convert.DBNull;
            }
            
            public bool IsBonificacion4MonedaOrigenNull() {
                return this.IsNull(this.tabletpu_ComprobantesDet.Bonificacion4MonedaOrigenColumn);
            }
            
            public void SetBonificacion4MonedaOrigenNull() {
                this[this.tabletpu_ComprobantesDet.Bonificacion4MonedaOrigenColumn] = System.Convert.DBNull;
            }
            
            public bool IsBonificacion5MonedaOrigenNull() {
                return this.IsNull(this.tabletpu_ComprobantesDet.Bonificacion5MonedaOrigenColumn);
            }
            
            public void SetBonificacion5MonedaOrigenNull() {
                this[this.tabletpu_ComprobantesDet.Bonificacion5MonedaOrigenColumn] = System.Convert.DBNull;
            }
            
            public bool IsPorcentajeBonificacion1Null() {
                return this.IsNull(this.tabletpu_ComprobantesDet.PorcentajeBonificacion1Column);
            }
            
            public void SetPorcentajeBonificacion1Null() {
                this[this.tabletpu_ComprobantesDet.PorcentajeBonificacion1Column] = System.Convert.DBNull;
            }
            
            public bool IsPorcentajeBonificacion2Null() {
                return this.IsNull(this.tabletpu_ComprobantesDet.PorcentajeBonificacion2Column);
            }
            
            public void SetPorcentajeBonificacion2Null() {
                this[this.tabletpu_ComprobantesDet.PorcentajeBonificacion2Column] = System.Convert.DBNull;
            }
            
            public bool IsPorcentajeBonificacion3Null() {
                return this.IsNull(this.tabletpu_ComprobantesDet.PorcentajeBonificacion3Column);
            }
            
            public void SetPorcentajeBonificacion3Null() {
                this[this.tabletpu_ComprobantesDet.PorcentajeBonificacion3Column] = System.Convert.DBNull;
            }
            
            public bool IsPorcentajeBonificacion4Null() {
                return this.IsNull(this.tabletpu_ComprobantesDet.PorcentajeBonificacion4Column);
            }
            
            public void SetPorcentajeBonificacion4Null() {
                this[this.tabletpu_ComprobantesDet.PorcentajeBonificacion4Column] = System.Convert.DBNull;
            }
            
            public bool IsPorcentajeBonificacion5Null() {
                return this.IsNull(this.tabletpu_ComprobantesDet.PorcentajeBonificacion5Column);
            }
            
            public void SetPorcentajeBonificacion5Null() {
                this[this.tabletpu_ComprobantesDet.PorcentajeBonificacion5Column] = System.Convert.DBNull;
            }
            
            public bool IsEstadoNull() {
                return this.IsNull(this.tabletpu_ComprobantesDet.EstadoColumn);
            }
            
            public void SetEstadoNull() {
                this[this.tabletpu_ComprobantesDet.EstadoColumn] = System.Convert.DBNull;
            }
            
            public bool IsPrecioDeCostoMonedaOrigenNull() {
                return this.IsNull(this.tabletpu_ComprobantesDet.PrecioDeCostoMonedaOrigenColumn);
            }
            
            public void SetPrecioDeCostoMonedaOrigenNull() {
                this[this.tabletpu_ComprobantesDet.PrecioDeCostoMonedaOrigenColumn] = System.Convert.DBNull;
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class tpu_ComprobantesDetRowChangeEvent : EventArgs {
            
            private tpu_ComprobantesDetRow eventRow;
            
            private DataRowAction eventAction;
            
            public tpu_ComprobantesDetRowChangeEvent(tpu_ComprobantesDetRow row, DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            public tpu_ComprobantesDetRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            public DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
