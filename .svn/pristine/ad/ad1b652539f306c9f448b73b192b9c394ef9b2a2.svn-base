//------------------------------------------------------------------------------
// <autogenerated>
//     This code was generated by a tool.
//     Runtime Version: 1.1.4322.573
//
//     Changes to this file may cause incorrect behavior and will be lost if 
//     the code is regenerated.
// </autogenerated>
//------------------------------------------------------------------------------

namespace mz.erp.commontypes.data {
    using System;
    using System.Data;
    using System.Xml;
    using System.Runtime.Serialization;
    
    
    [Serializable()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Diagnostics.DebuggerStepThrough()]
    [System.ComponentModel.ToolboxItem(true)]
    public class sy_UsuariosDataset : DataSet {
        
        private sy_UsuariosDataTable tablesy_Usuarios;
        
        public sy_UsuariosDataset() {
            this.InitClass();
            System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            this.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        protected sy_UsuariosDataset(SerializationInfo info, StreamingContext context) {
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((strSchema != null)) {
                DataSet ds = new DataSet();
                ds.ReadXmlSchema(new XmlTextReader(new System.IO.StringReader(strSchema)));
                if ((ds.Tables["sy_Usuarios"] != null)) {
                    this.Tables.Add(new sy_UsuariosDataTable(ds.Tables["sy_Usuarios"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.InitClass();
            }
            this.GetSerializationData(info, context);
            System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            this.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public sy_UsuariosDataTable sy_Usuarios {
            get {
                return this.tablesy_Usuarios;
            }
        }
        
        public override DataSet Clone() {
            sy_UsuariosDataset cln = ((sy_UsuariosDataset)(base.Clone()));
            cln.InitVars();
            return cln;
        }
        
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        protected override void ReadXmlSerializable(XmlReader reader) {
            this.Reset();
            DataSet ds = new DataSet();
            ds.ReadXml(reader);
            if ((ds.Tables["sy_Usuarios"] != null)) {
                this.Tables.Add(new sy_UsuariosDataTable(ds.Tables["sy_Usuarios"]));
            }
            this.DataSetName = ds.DataSetName;
            this.Prefix = ds.Prefix;
            this.Namespace = ds.Namespace;
            this.Locale = ds.Locale;
            this.CaseSensitive = ds.CaseSensitive;
            this.EnforceConstraints = ds.EnforceConstraints;
            this.Merge(ds, false, System.Data.MissingSchemaAction.Add);
            this.InitVars();
        }
        
        protected override System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            System.IO.MemoryStream stream = new System.IO.MemoryStream();
            this.WriteXmlSchema(new XmlTextWriter(stream, null));
            stream.Position = 0;
            return System.Xml.Schema.XmlSchema.Read(new XmlTextReader(stream), null);
        }
        
        internal void InitVars() {
            this.tablesy_Usuarios = ((sy_UsuariosDataTable)(this.Tables["sy_Usuarios"]));
            if ((this.tablesy_Usuarios != null)) {
                this.tablesy_Usuarios.InitVars();
            }
        }
        
        private void InitClass() {
            this.DataSetName = "sy_UsuariosDataset";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/sy_Usuarios.xsd";
            this.Locale = new System.Globalization.CultureInfo("en-US");
            this.CaseSensitive = false;
            this.EnforceConstraints = true;
            this.tablesy_Usuarios = new sy_UsuariosDataTable();
            this.Tables.Add(this.tablesy_Usuarios);
        }
        
        private bool ShouldSerializesy_Usuarios() {
            return false;
        }
        
        private void SchemaChanged(object sender, System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        public delegate void sy_UsuariosRowChangeEventHandler(object sender, sy_UsuariosRowChangeEvent e);
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class sy_UsuariosDataTable : DataTable, System.Collections.IEnumerable {
            
            private DataColumn columnIdUsuario;
            
            private DataColumn columnNombre;
            
            private DataColumn columnClave;
            
            private DataColumn columnCantidadConexionesFallida;
            
            private DataColumn columnUltimaConexion;
            
            private DataColumn columnExpiracion;
            
            private DataColumn columnDiasValidezClave;
            
            private DataColumn columnVencimientoClave;
            
            private DataColumn columnBloqueado;
            
            private DataColumn columnIntentosPermitidosConexion;
            
            private DataColumn columnHabilitacionCuenta;
            
            private DataColumn columnAdministrador;
            
            private DataColumn columnClaveNuncaCaduca;
            
            private DataColumn columnPermiteCambioClave;
            
            private DataColumn columnResponsableUltimaModificacion;
            
            private DataColumn columnPerfilUtilizado;
            
            private DataColumn columnActivo;
            
            private DataColumn columnFechaCreacion;
            
            private DataColumn columnIdConexionCreacion;
            
            private DataColumn columnUltimaModificacion;
            
            private DataColumn columnIdConexionUltimaModificacion;
            
            private DataColumn columnRowId;
            
            private DataColumn columnIdPersona;
            
            private DataColumn columnEquipo;
            
            internal sy_UsuariosDataTable() : 
                    base("sy_Usuarios") {
                this.InitClass();
            }
            
            internal sy_UsuariosDataTable(DataTable table) : 
                    base(table.TableName) {
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
                this.DisplayExpression = table.DisplayExpression;
            }
            
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            internal DataColumn IdUsuarioColumn {
                get {
                    return this.columnIdUsuario;
                }
            }
            
            internal DataColumn NombreColumn {
                get {
                    return this.columnNombre;
                }
            }
            
            internal DataColumn ClaveColumn {
                get {
                    return this.columnClave;
                }
            }
            
            internal DataColumn CantidadConexionesFallidaColumn {
                get {
                    return this.columnCantidadConexionesFallida;
                }
            }
            
            internal DataColumn UltimaConexionColumn {
                get {
                    return this.columnUltimaConexion;
                }
            }
            
            internal DataColumn ExpiracionColumn {
                get {
                    return this.columnExpiracion;
                }
            }
            
            internal DataColumn DiasValidezClaveColumn {
                get {
                    return this.columnDiasValidezClave;
                }
            }
            
            internal DataColumn VencimientoClaveColumn {
                get {
                    return this.columnVencimientoClave;
                }
            }
            
            internal DataColumn BloqueadoColumn {
                get {
                    return this.columnBloqueado;
                }
            }
            
            internal DataColumn IntentosPermitidosConexionColumn {
                get {
                    return this.columnIntentosPermitidosConexion;
                }
            }
            
            internal DataColumn HabilitacionCuentaColumn {
                get {
                    return this.columnHabilitacionCuenta;
                }
            }
            
            internal DataColumn AdministradorColumn {
                get {
                    return this.columnAdministrador;
                }
            }
            
            internal DataColumn ClaveNuncaCaducaColumn {
                get {
                    return this.columnClaveNuncaCaduca;
                }
            }
            
            internal DataColumn PermiteCambioClaveColumn {
                get {
                    return this.columnPermiteCambioClave;
                }
            }
            
            internal DataColumn ResponsableUltimaModificacionColumn {
                get {
                    return this.columnResponsableUltimaModificacion;
                }
            }
            
            internal DataColumn PerfilUtilizadoColumn {
                get {
                    return this.columnPerfilUtilizado;
                }
            }
            
            internal DataColumn ActivoColumn {
                get {
                    return this.columnActivo;
                }
            }
            
            internal DataColumn FechaCreacionColumn {
                get {
                    return this.columnFechaCreacion;
                }
            }
            
            internal DataColumn IdConexionCreacionColumn {
                get {
                    return this.columnIdConexionCreacion;
                }
            }
            
            internal DataColumn UltimaModificacionColumn {
                get {
                    return this.columnUltimaModificacion;
                }
            }
            
            internal DataColumn IdConexionUltimaModificacionColumn {
                get {
                    return this.columnIdConexionUltimaModificacion;
                }
            }
            
            internal DataColumn RowIdColumn {
                get {
                    return this.columnRowId;
                }
            }
            
            internal DataColumn IdPersonaColumn {
                get {
                    return this.columnIdPersona;
                }
            }
            
            internal DataColumn EquipoColumn {
                get {
                    return this.columnEquipo;
                }
            }
            
            public sy_UsuariosRow this[int index] {
                get {
                    return ((sy_UsuariosRow)(this.Rows[index]));
                }
            }
            
            public event sy_UsuariosRowChangeEventHandler sy_UsuariosRowChanged;
            
            public event sy_UsuariosRowChangeEventHandler sy_UsuariosRowChanging;
            
            public event sy_UsuariosRowChangeEventHandler sy_UsuariosRowDeleted;
            
            public event sy_UsuariosRowChangeEventHandler sy_UsuariosRowDeleting;
            
            public void Addsy_UsuariosRow(sy_UsuariosRow row) {
                this.Rows.Add(row);
            }
            
            public sy_UsuariosRow Addsy_UsuariosRow(
                        string IdUsuario, 
                        string Nombre, 
                        string Clave, 
                        System.Byte CantidadConexionesFallida, 
                        System.DateTime UltimaConexion, 
                        System.DateTime Expiracion, 
                        short DiasValidezClave, 
                        System.DateTime VencimientoClave, 
                        bool Bloqueado, 
                        System.Byte IntentosPermitidosConexion, 
                        System.DateTime HabilitacionCuenta, 
                        bool Administrador, 
                        bool ClaveNuncaCaduca, 
                        bool PermiteCambioClave, 
                        long ResponsableUltimaModificacion, 
                        long PerfilUtilizado, 
                        bool Activo, 
                        System.DateTime FechaCreacion, 
                        long IdConexionCreacion, 
                        System.Byte[] UltimaModificacion, 
                        long IdConexionUltimaModificacion, 
                        System.Guid RowId, 
                        string IdPersona, 
                        long Equipo) {
                sy_UsuariosRow rowsy_UsuariosRow = ((sy_UsuariosRow)(this.NewRow()));
                rowsy_UsuariosRow.ItemArray = new object[] {
                        IdUsuario,
                        Nombre,
                        Clave,
                        CantidadConexionesFallida,
                        UltimaConexion,
                        Expiracion,
                        DiasValidezClave,
                        VencimientoClave,
                        Bloqueado,
                        IntentosPermitidosConexion,
                        HabilitacionCuenta,
                        Administrador,
                        ClaveNuncaCaduca,
                        PermiteCambioClave,
                        ResponsableUltimaModificacion,
                        PerfilUtilizado,
                        Activo,
                        FechaCreacion,
                        IdConexionCreacion,
                        UltimaModificacion,
                        IdConexionUltimaModificacion,
                        RowId,
                        IdPersona,
                        Equipo};
                this.Rows.Add(rowsy_UsuariosRow);
                return rowsy_UsuariosRow;
            }
            
            public sy_UsuariosRow FindByIdUsuario(string IdUsuario) {
                return ((sy_UsuariosRow)(this.Rows.Find(new object[] {
                            IdUsuario})));
            }
            
            public System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            public override DataTable Clone() {
                sy_UsuariosDataTable cln = ((sy_UsuariosDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            protected override DataTable CreateInstance() {
                return new sy_UsuariosDataTable();
            }
            
            internal void InitVars() {
                this.columnIdUsuario = this.Columns["IdUsuario"];
                this.columnNombre = this.Columns["Nombre"];
                this.columnClave = this.Columns["Clave"];
                this.columnCantidadConexionesFallida = this.Columns["CantidadConexionesFallida"];
                this.columnUltimaConexion = this.Columns["UltimaConexion"];
                this.columnExpiracion = this.Columns["Expiracion"];
                this.columnDiasValidezClave = this.Columns["DiasValidezClave"];
                this.columnVencimientoClave = this.Columns["VencimientoClave"];
                this.columnBloqueado = this.Columns["Bloqueado"];
                this.columnIntentosPermitidosConexion = this.Columns["IntentosPermitidosConexion"];
                this.columnHabilitacionCuenta = this.Columns["HabilitacionCuenta"];
                this.columnAdministrador = this.Columns["Administrador"];
                this.columnClaveNuncaCaduca = this.Columns["ClaveNuncaCaduca"];
                this.columnPermiteCambioClave = this.Columns["PermiteCambioClave"];
                this.columnResponsableUltimaModificacion = this.Columns["ResponsableUltimaModificacion"];
                this.columnPerfilUtilizado = this.Columns["PerfilUtilizado"];
                this.columnActivo = this.Columns["Activo"];
                this.columnFechaCreacion = this.Columns["FechaCreacion"];
                this.columnIdConexionCreacion = this.Columns["IdConexionCreacion"];
                this.columnUltimaModificacion = this.Columns["UltimaModificacion"];
                this.columnIdConexionUltimaModificacion = this.Columns["IdConexionUltimaModificacion"];
                this.columnRowId = this.Columns["RowId"];
                this.columnIdPersona = this.Columns["IdPersona"];
                this.columnEquipo = this.Columns["Equipo"];
            }
            
            private void InitClass() {
                this.columnIdUsuario = new DataColumn("IdUsuario", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdUsuario);
                this.columnNombre = new DataColumn("Nombre", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnNombre);
                this.columnClave = new DataColumn("Clave", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnClave);
                this.columnCantidadConexionesFallida = new DataColumn("CantidadConexionesFallida", typeof(System.Byte), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnCantidadConexionesFallida);
                this.columnUltimaConexion = new DataColumn("UltimaConexion", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnUltimaConexion);
                this.columnExpiracion = new DataColumn("Expiracion", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnExpiracion);
                this.columnDiasValidezClave = new DataColumn("DiasValidezClave", typeof(short), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnDiasValidezClave);
                this.columnVencimientoClave = new DataColumn("VencimientoClave", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnVencimientoClave);
                this.columnBloqueado = new DataColumn("Bloqueado", typeof(bool), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnBloqueado);
                this.columnIntentosPermitidosConexion = new DataColumn("IntentosPermitidosConexion", typeof(System.Byte), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIntentosPermitidosConexion);
                this.columnHabilitacionCuenta = new DataColumn("HabilitacionCuenta", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnHabilitacionCuenta);
                this.columnAdministrador = new DataColumn("Administrador", typeof(bool), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnAdministrador);
                this.columnClaveNuncaCaduca = new DataColumn("ClaveNuncaCaduca", typeof(bool), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnClaveNuncaCaduca);
                this.columnPermiteCambioClave = new DataColumn("PermiteCambioClave", typeof(bool), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnPermiteCambioClave);
                this.columnResponsableUltimaModificacion = new DataColumn("ResponsableUltimaModificacion", typeof(long), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnResponsableUltimaModificacion);
                this.columnPerfilUtilizado = new DataColumn("PerfilUtilizado", typeof(long), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnPerfilUtilizado);
                this.columnActivo = new DataColumn("Activo", typeof(bool), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnActivo);
                this.columnFechaCreacion = new DataColumn("FechaCreacion", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnFechaCreacion);
                this.columnIdConexionCreacion = new DataColumn("IdConexionCreacion", typeof(long), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdConexionCreacion);
                this.columnUltimaModificacion = new DataColumn("UltimaModificacion", typeof(System.Byte[]), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnUltimaModificacion);
                this.columnIdConexionUltimaModificacion = new DataColumn("IdConexionUltimaModificacion", typeof(long), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdConexionUltimaModificacion);
                this.columnRowId = new DataColumn("RowId", typeof(System.Guid), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnRowId);
                this.columnIdPersona = new DataColumn("IdPersona", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdPersona);
                this.columnEquipo = new DataColumn("Equipo", typeof(long), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnEquipo);
                this.Constraints.Add(new UniqueConstraint("sy_UsuariosDatasetKey1", new DataColumn[] {
                                this.columnIdUsuario}, true));
                this.columnIdUsuario.AllowDBNull = false;
                this.columnIdUsuario.Unique = true;
                this.columnNombre.AllowDBNull = false;
                this.columnClave.AllowDBNull = false;
                this.columnCantidadConexionesFallida.AllowDBNull = false;
                this.columnVencimientoClave.AllowDBNull = false;
                this.columnIntentosPermitidosConexion.AllowDBNull = false;
                this.columnFechaCreacion.AllowDBNull = false;
                this.columnIdConexionCreacion.AllowDBNull = false;
                this.columnUltimaModificacion.ReadOnly = true;
            }
            
            public sy_UsuariosRow Newsy_UsuariosRow() {
                return ((sy_UsuariosRow)(this.NewRow()));
            }
            
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder) {
                return new sy_UsuariosRow(builder);
            }
            
            protected override System.Type GetRowType() {
                return typeof(sy_UsuariosRow);
            }
            
            protected override void OnRowChanged(DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.sy_UsuariosRowChanged != null)) {
                    this.sy_UsuariosRowChanged(this, new sy_UsuariosRowChangeEvent(((sy_UsuariosRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowChanging(DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.sy_UsuariosRowChanging != null)) {
                    this.sy_UsuariosRowChanging(this, new sy_UsuariosRowChangeEvent(((sy_UsuariosRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleted(DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.sy_UsuariosRowDeleted != null)) {
                    this.sy_UsuariosRowDeleted(this, new sy_UsuariosRowChangeEvent(((sy_UsuariosRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleting(DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.sy_UsuariosRowDeleting != null)) {
                    this.sy_UsuariosRowDeleting(this, new sy_UsuariosRowChangeEvent(((sy_UsuariosRow)(e.Row)), e.Action));
                }
            }
            
            public void Removesy_UsuariosRow(sy_UsuariosRow row) {
                this.Rows.Remove(row);
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class sy_UsuariosRow : DataRow {
            
            private sy_UsuariosDataTable tablesy_Usuarios;
            
            internal sy_UsuariosRow(DataRowBuilder rb) : 
                    base(rb) {
                this.tablesy_Usuarios = ((sy_UsuariosDataTable)(this.Table));
            }
            
            public string IdUsuario {
                get {
                    return ((string)(this[this.tablesy_Usuarios.IdUsuarioColumn]));
                }
                set {
                    this[this.tablesy_Usuarios.IdUsuarioColumn] = value;
                }
            }
            
            public string Nombre {
                get {
                    return ((string)(this[this.tablesy_Usuarios.NombreColumn]));
                }
                set {
                    this[this.tablesy_Usuarios.NombreColumn] = value;
                }
            }
            
            public string Clave {
                get {
                    return ((string)(this[this.tablesy_Usuarios.ClaveColumn]));
                }
                set {
                    this[this.tablesy_Usuarios.ClaveColumn] = value;
                }
            }
            
            public System.Byte CantidadConexionesFallida {
                get {
                    return ((System.Byte)(this[this.tablesy_Usuarios.CantidadConexionesFallidaColumn]));
                }
                set {
                    this[this.tablesy_Usuarios.CantidadConexionesFallidaColumn] = value;
                }
            }
            
            public System.DateTime UltimaConexion {
                get {
                    try {
                        return ((System.DateTime)(this[this.tablesy_Usuarios.UltimaConexionColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tablesy_Usuarios.UltimaConexionColumn] = value;
                }
            }
            
            public System.DateTime Expiracion {
                get {
                    try {
                        return ((System.DateTime)(this[this.tablesy_Usuarios.ExpiracionColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tablesy_Usuarios.ExpiracionColumn] = value;
                }
            }
            
            public short DiasValidezClave {
                get {
                    try {
                        return ((short)(this[this.tablesy_Usuarios.DiasValidezClaveColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tablesy_Usuarios.DiasValidezClaveColumn] = value;
                }
            }
            
            public System.DateTime VencimientoClave {
                get {
                    return ((System.DateTime)(this[this.tablesy_Usuarios.VencimientoClaveColumn]));
                }
                set {
                    this[this.tablesy_Usuarios.VencimientoClaveColumn] = value;
                }
            }
            
            public bool Bloqueado {
                get {
                    try {
                        return ((bool)(this[this.tablesy_Usuarios.BloqueadoColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tablesy_Usuarios.BloqueadoColumn] = value;
                }
            }
            
            public System.Byte IntentosPermitidosConexion {
                get {
                    return ((System.Byte)(this[this.tablesy_Usuarios.IntentosPermitidosConexionColumn]));
                }
                set {
                    this[this.tablesy_Usuarios.IntentosPermitidosConexionColumn] = value;
                }
            }
            
            public System.DateTime HabilitacionCuenta {
                get {
                    try {
                        return ((System.DateTime)(this[this.tablesy_Usuarios.HabilitacionCuentaColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tablesy_Usuarios.HabilitacionCuentaColumn] = value;
                }
            }
            
            public bool Administrador {
                get {
                    try {
                        return ((bool)(this[this.tablesy_Usuarios.AdministradorColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tablesy_Usuarios.AdministradorColumn] = value;
                }
            }
            
            public bool ClaveNuncaCaduca {
                get {
                    try {
                        return ((bool)(this[this.tablesy_Usuarios.ClaveNuncaCaducaColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tablesy_Usuarios.ClaveNuncaCaducaColumn] = value;
                }
            }
            
            public bool PermiteCambioClave {
                get {
                    try {
                        return ((bool)(this[this.tablesy_Usuarios.PermiteCambioClaveColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tablesy_Usuarios.PermiteCambioClaveColumn] = value;
                }
            }
            
            public long ResponsableUltimaModificacion {
                get {
                    try {
                        return ((long)(this[this.tablesy_Usuarios.ResponsableUltimaModificacionColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tablesy_Usuarios.ResponsableUltimaModificacionColumn] = value;
                }
            }
            
            public long PerfilUtilizado {
                get {
                    try {
                        return ((long)(this[this.tablesy_Usuarios.PerfilUtilizadoColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tablesy_Usuarios.PerfilUtilizadoColumn] = value;
                }
            }
            
            public bool Activo {
                get {
                    try {
                        return ((bool)(this[this.tablesy_Usuarios.ActivoColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tablesy_Usuarios.ActivoColumn] = value;
                }
            }
            
            public System.DateTime FechaCreacion {
                get {
                    return ((System.DateTime)(this[this.tablesy_Usuarios.FechaCreacionColumn]));
                }
                set {
                    this[this.tablesy_Usuarios.FechaCreacionColumn] = value;
                }
            }
            
            public long IdConexionCreacion {
                get {
                    return ((long)(this[this.tablesy_Usuarios.IdConexionCreacionColumn]));
                }
                set {
                    this[this.tablesy_Usuarios.IdConexionCreacionColumn] = value;
                }
            }
            
            public System.Byte[] UltimaModificacion {
                get {
                    try {
                        return ((System.Byte[])(this[this.tablesy_Usuarios.UltimaModificacionColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tablesy_Usuarios.UltimaModificacionColumn] = value;
                }
            }
            
            public long IdConexionUltimaModificacion {
                get {
                    try {
                        return ((long)(this[this.tablesy_Usuarios.IdConexionUltimaModificacionColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tablesy_Usuarios.IdConexionUltimaModificacionColumn] = value;
                }
            }
            
            public System.Guid RowId {
                get {
                    try {
                        return ((System.Guid)(this[this.tablesy_Usuarios.RowIdColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tablesy_Usuarios.RowIdColumn] = value;
                }
            }
            
            public string IdPersona {
                get {
                    try {
                        return ((string)(this[this.tablesy_Usuarios.IdPersonaColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tablesy_Usuarios.IdPersonaColumn] = value;
                }
            }
            
            public long Equipo {
                get {
                    try {
                        return ((long)(this[this.tablesy_Usuarios.EquipoColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tablesy_Usuarios.EquipoColumn] = value;
                }
            }
            
            public bool IsUltimaConexionNull() {
                return this.IsNull(this.tablesy_Usuarios.UltimaConexionColumn);
            }
            
            public void SetUltimaConexionNull() {
                this[this.tablesy_Usuarios.UltimaConexionColumn] = System.Convert.DBNull;
            }
            
            public bool IsExpiracionNull() {
                return this.IsNull(this.tablesy_Usuarios.ExpiracionColumn);
            }
            
            public void SetExpiracionNull() {
                this[this.tablesy_Usuarios.ExpiracionColumn] = System.Convert.DBNull;
            }
            
            public bool IsDiasValidezClaveNull() {
                return this.IsNull(this.tablesy_Usuarios.DiasValidezClaveColumn);
            }
            
            public void SetDiasValidezClaveNull() {
                this[this.tablesy_Usuarios.DiasValidezClaveColumn] = System.Convert.DBNull;
            }
            
            public bool IsBloqueadoNull() {
                return this.IsNull(this.tablesy_Usuarios.BloqueadoColumn);
            }
            
            public void SetBloqueadoNull() {
                this[this.tablesy_Usuarios.BloqueadoColumn] = System.Convert.DBNull;
            }
            
            public bool IsHabilitacionCuentaNull() {
                return this.IsNull(this.tablesy_Usuarios.HabilitacionCuentaColumn);
            }
            
            public void SetHabilitacionCuentaNull() {
                this[this.tablesy_Usuarios.HabilitacionCuentaColumn] = System.Convert.DBNull;
            }
            
            public bool IsAdministradorNull() {
                return this.IsNull(this.tablesy_Usuarios.AdministradorColumn);
            }
            
            public void SetAdministradorNull() {
                this[this.tablesy_Usuarios.AdministradorColumn] = System.Convert.DBNull;
            }
            
            public bool IsClaveNuncaCaducaNull() {
                return this.IsNull(this.tablesy_Usuarios.ClaveNuncaCaducaColumn);
            }
            
            public void SetClaveNuncaCaducaNull() {
                this[this.tablesy_Usuarios.ClaveNuncaCaducaColumn] = System.Convert.DBNull;
            }
            
            public bool IsPermiteCambioClaveNull() {
                return this.IsNull(this.tablesy_Usuarios.PermiteCambioClaveColumn);
            }
            
            public void SetPermiteCambioClaveNull() {
                this[this.tablesy_Usuarios.PermiteCambioClaveColumn] = System.Convert.DBNull;
            }
            
            public bool IsResponsableUltimaModificacionNull() {
                return this.IsNull(this.tablesy_Usuarios.ResponsableUltimaModificacionColumn);
            }
            
            public void SetResponsableUltimaModificacionNull() {
                this[this.tablesy_Usuarios.ResponsableUltimaModificacionColumn] = System.Convert.DBNull;
            }
            
            public bool IsPerfilUtilizadoNull() {
                return this.IsNull(this.tablesy_Usuarios.PerfilUtilizadoColumn);
            }
            
            public void SetPerfilUtilizadoNull() {
                this[this.tablesy_Usuarios.PerfilUtilizadoColumn] = System.Convert.DBNull;
            }
            
            public bool IsActivoNull() {
                return this.IsNull(this.tablesy_Usuarios.ActivoColumn);
            }
            
            public void SetActivoNull() {
                this[this.tablesy_Usuarios.ActivoColumn] = System.Convert.DBNull;
            }
            
            public bool IsUltimaModificacionNull() {
                return this.IsNull(this.tablesy_Usuarios.UltimaModificacionColumn);
            }
            
            public void SetUltimaModificacionNull() {
                this[this.tablesy_Usuarios.UltimaModificacionColumn] = System.Convert.DBNull;
            }
            
            public bool IsIdConexionUltimaModificacionNull() {
                return this.IsNull(this.tablesy_Usuarios.IdConexionUltimaModificacionColumn);
            }
            
            public void SetIdConexionUltimaModificacionNull() {
                this[this.tablesy_Usuarios.IdConexionUltimaModificacionColumn] = System.Convert.DBNull;
            }
            
            public bool IsRowIdNull() {
                return this.IsNull(this.tablesy_Usuarios.RowIdColumn);
            }
            
            public void SetRowIdNull() {
                this[this.tablesy_Usuarios.RowIdColumn] = System.Convert.DBNull;
            }
            
            public bool IsIdPersonaNull() {
                return this.IsNull(this.tablesy_Usuarios.IdPersonaColumn);
            }
            
            public void SetIdPersonaNull() {
                this[this.tablesy_Usuarios.IdPersonaColumn] = System.Convert.DBNull;
            }
            
            public bool IsEquipoNull() {
                return this.IsNull(this.tablesy_Usuarios.EquipoColumn);
            }
            
            public void SetEquipoNull() {
                this[this.tablesy_Usuarios.EquipoColumn] = System.Convert.DBNull;
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class sy_UsuariosRowChangeEvent : EventArgs {
            
            private sy_UsuariosRow eventRow;
            
            private DataRowAction eventAction;
            
            public sy_UsuariosRowChangeEvent(sy_UsuariosRow row, DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            public sy_UsuariosRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            public DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
