//------------------------------------------------------------------------------
// <autogenerated>
//     This code was generated by a tool.
//     Runtime Version: 1.1.4322.2407
//
//     Changes to this file may cause incorrect behavior and will be lost if 
//     the code is regenerated.
// </autogenerated>
//------------------------------------------------------------------------------

namespace mz.erp.commontypes.data {
    using System;
    using System.Data;
    using System.Xml;
    using System.Runtime.Serialization;
    
    
    [Serializable()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Diagnostics.DebuggerStepThrough()]
    [System.ComponentModel.ToolboxItem(true)]
    public class tpu_ComprobantesDeCompraConfirmacionDePreciosDataset : DataSet {
        
        private tpu_ComprobantesDeCompraConfirmacionDePreciosDataTable tabletpu_ComprobantesDeCompraConfirmacionDePrecios;
        
        public tpu_ComprobantesDeCompraConfirmacionDePreciosDataset() {
            this.InitClass();
            System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            this.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        protected tpu_ComprobantesDeCompraConfirmacionDePreciosDataset(SerializationInfo info, StreamingContext context) {
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((strSchema != null)) {
                DataSet ds = new DataSet();
                ds.ReadXmlSchema(new XmlTextReader(new System.IO.StringReader(strSchema)));
                if ((ds.Tables["tpu_ComprobantesDeCompraConfirmacionDePrecios"] != null)) {
                    this.Tables.Add(new tpu_ComprobantesDeCompraConfirmacionDePreciosDataTable(ds.Tables["tpu_ComprobantesDeCompraConfirmacionDePrecios"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.InitClass();
            }
            this.GetSerializationData(info, context);
            System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            this.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public tpu_ComprobantesDeCompraConfirmacionDePreciosDataTable tpu_ComprobantesDeCompraConfirmacionDePrecios {
            get {
                return this.tabletpu_ComprobantesDeCompraConfirmacionDePrecios;
            }
        }
        
        public override DataSet Clone() {
            tpu_ComprobantesDeCompraConfirmacionDePreciosDataset cln = ((tpu_ComprobantesDeCompraConfirmacionDePreciosDataset)(base.Clone()));
            cln.InitVars();
            return cln;
        }
        
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        protected override void ReadXmlSerializable(XmlReader reader) {
            this.Reset();
            DataSet ds = new DataSet();
            ds.ReadXml(reader);
            if ((ds.Tables["tpu_ComprobantesDeCompraConfirmacionDePrecios"] != null)) {
                this.Tables.Add(new tpu_ComprobantesDeCompraConfirmacionDePreciosDataTable(ds.Tables["tpu_ComprobantesDeCompraConfirmacionDePrecios"]));
            }
            this.DataSetName = ds.DataSetName;
            this.Prefix = ds.Prefix;
            this.Namespace = ds.Namespace;
            this.Locale = ds.Locale;
            this.CaseSensitive = ds.CaseSensitive;
            this.EnforceConstraints = ds.EnforceConstraints;
            this.Merge(ds, false, System.Data.MissingSchemaAction.Add);
            this.InitVars();
        }
        
        protected override System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            System.IO.MemoryStream stream = new System.IO.MemoryStream();
            this.WriteXmlSchema(new XmlTextWriter(stream, null));
            stream.Position = 0;
            return System.Xml.Schema.XmlSchema.Read(new XmlTextReader(stream), null);
        }
        
        internal void InitVars() {
            this.tabletpu_ComprobantesDeCompraConfirmacionDePrecios = ((tpu_ComprobantesDeCompraConfirmacionDePreciosDataTable)(this.Tables["tpu_ComprobantesDeCompraConfirmacionDePrecios"]));
            if ((this.tabletpu_ComprobantesDeCompraConfirmacionDePrecios != null)) {
                this.tabletpu_ComprobantesDeCompraConfirmacionDePrecios.InitVars();
            }
        }
        
        private void InitClass() {
            this.DataSetName = "tpu_ComprobantesDeCompraConfirmacionDePreciosDataset";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/tpu_ComprobantesDeCompraConfirmacionDePrecios.xsd";
            this.Locale = new System.Globalization.CultureInfo("en-US");
            this.CaseSensitive = false;
            this.EnforceConstraints = true;
            this.tabletpu_ComprobantesDeCompraConfirmacionDePrecios = new tpu_ComprobantesDeCompraConfirmacionDePreciosDataTable();
            this.Tables.Add(this.tabletpu_ComprobantesDeCompraConfirmacionDePrecios);
        }
        
        private bool ShouldSerializetpu_ComprobantesDeCompraConfirmacionDePrecios() {
            return false;
        }
        
        private void SchemaChanged(object sender, System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        public delegate void tpu_ComprobantesDeCompraConfirmacionDePreciosRowChangeEventHandler(object sender, tpu_ComprobantesDeCompraConfirmacionDePreciosRowChangeEvent e);
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class tpu_ComprobantesDeCompraConfirmacionDePreciosDataTable : DataTable, System.Collections.IEnumerable {
            
            private DataColumn columnIdComprobante;
            
            private DataColumn columnIdComprobanteFactura;
            
            private DataColumn columnIdProveedor;
            
            private DataColumn columnIdAutorizacion;
            
            private DataColumn columnIdTipoDeComprobante;
            
            private DataColumn columnEstado;
            
            private DataColumn columnNumeroFactura;
            
            private DataColumn columnIdResponsable;
            
            private DataColumn columnObservaciones;
            
            private DataColumn columnIdMonedaOriginal;
            
            private DataColumn columnIdFuenteDeCambioOriginal;
            
            private DataColumn columnIdCotizacionOriginal;
            
            private DataColumn columnValorCotizacionOriginal;
            
            private DataColumn columnFechaCreacion;
            
            private DataColumn columnIdConexionCreacion;
            
            private DataColumn columnUltimaModificacion;
            
            private DataColumn columnIdConexionUltimaModificacion;
            
            private DataColumn columnIdReservado;
            
            private DataColumn columnRowId;
            
            private DataColumn columnIdSucursal;
            
            private DataColumn columnIdEmpresa;
            
            internal tpu_ComprobantesDeCompraConfirmacionDePreciosDataTable() : 
                    base("tpu_ComprobantesDeCompraConfirmacionDePrecios") {
                this.InitClass();
            }
            
            internal tpu_ComprobantesDeCompraConfirmacionDePreciosDataTable(DataTable table) : 
                    base(table.TableName) {
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
                this.DisplayExpression = table.DisplayExpression;
            }
            
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            internal DataColumn IdComprobanteColumn {
                get {
                    return this.columnIdComprobante;
                }
            }
            
            internal DataColumn IdComprobanteFacturaColumn {
                get {
                    return this.columnIdComprobanteFactura;
                }
            }
            
            internal DataColumn IdProveedorColumn {
                get {
                    return this.columnIdProveedor;
                }
            }
            
            internal DataColumn IdAutorizacionColumn {
                get {
                    return this.columnIdAutorizacion;
                }
            }
            
            internal DataColumn IdTipoDeComprobanteColumn {
                get {
                    return this.columnIdTipoDeComprobante;
                }
            }
            
            internal DataColumn EstadoColumn {
                get {
                    return this.columnEstado;
                }
            }
            
            internal DataColumn NumeroFacturaColumn {
                get {
                    return this.columnNumeroFactura;
                }
            }
            
            internal DataColumn IdResponsableColumn {
                get {
                    return this.columnIdResponsable;
                }
            }
            
            internal DataColumn ObservacionesColumn {
                get {
                    return this.columnObservaciones;
                }
            }
            
            internal DataColumn IdMonedaOriginalColumn {
                get {
                    return this.columnIdMonedaOriginal;
                }
            }
            
            internal DataColumn IdFuenteDeCambioOriginalColumn {
                get {
                    return this.columnIdFuenteDeCambioOriginal;
                }
            }
            
            internal DataColumn IdCotizacionOriginalColumn {
                get {
                    return this.columnIdCotizacionOriginal;
                }
            }
            
            internal DataColumn ValorCotizacionOriginalColumn {
                get {
                    return this.columnValorCotizacionOriginal;
                }
            }
            
            internal DataColumn FechaCreacionColumn {
                get {
                    return this.columnFechaCreacion;
                }
            }
            
            internal DataColumn IdConexionCreacionColumn {
                get {
                    return this.columnIdConexionCreacion;
                }
            }
            
            internal DataColumn UltimaModificacionColumn {
                get {
                    return this.columnUltimaModificacion;
                }
            }
            
            internal DataColumn IdConexionUltimaModificacionColumn {
                get {
                    return this.columnIdConexionUltimaModificacion;
                }
            }
            
            internal DataColumn IdReservadoColumn {
                get {
                    return this.columnIdReservado;
                }
            }
            
            internal DataColumn RowIdColumn {
                get {
                    return this.columnRowId;
                }
            }
            
            internal DataColumn IdSucursalColumn {
                get {
                    return this.columnIdSucursal;
                }
            }
            
            internal DataColumn IdEmpresaColumn {
                get {
                    return this.columnIdEmpresa;
                }
            }
            
            public tpu_ComprobantesDeCompraConfirmacionDePreciosRow this[int index] {
                get {
                    return ((tpu_ComprobantesDeCompraConfirmacionDePreciosRow)(this.Rows[index]));
                }
            }
            
            public event tpu_ComprobantesDeCompraConfirmacionDePreciosRowChangeEventHandler tpu_ComprobantesDeCompraConfirmacionDePreciosRowChanged;
            
            public event tpu_ComprobantesDeCompraConfirmacionDePreciosRowChangeEventHandler tpu_ComprobantesDeCompraConfirmacionDePreciosRowChanging;
            
            public event tpu_ComprobantesDeCompraConfirmacionDePreciosRowChangeEventHandler tpu_ComprobantesDeCompraConfirmacionDePreciosRowDeleted;
            
            public event tpu_ComprobantesDeCompraConfirmacionDePreciosRowChangeEventHandler tpu_ComprobantesDeCompraConfirmacionDePreciosRowDeleting;
            
            public void Addtpu_ComprobantesDeCompraConfirmacionDePreciosRow(tpu_ComprobantesDeCompraConfirmacionDePreciosRow row) {
                this.Rows.Add(row);
            }
            
            public tpu_ComprobantesDeCompraConfirmacionDePreciosRow Addtpu_ComprobantesDeCompraConfirmacionDePreciosRow(
                        string IdComprobante, 
                        string IdComprobanteFactura, 
                        string IdProveedor, 
                        string IdAutorizacion, 
                        string IdTipoDeComprobante, 
                        string Estado, 
                        string NumeroFactura, 
                        string IdResponsable, 
                        string Observaciones, 
                        string IdMonedaOriginal, 
                        string IdFuenteDeCambioOriginal, 
                        string IdCotizacionOriginal, 
                        System.Decimal ValorCotizacionOriginal, 
                        System.DateTime FechaCreacion, 
                        long IdConexionCreacion, 
                        System.Byte[] UltimaModificacion, 
                        long IdConexionUltimaModificacion, 
                        long IdReservado, 
                        System.Guid RowId, 
                        long IdSucursal, 
                        long IdEmpresa) {
                tpu_ComprobantesDeCompraConfirmacionDePreciosRow rowtpu_ComprobantesDeCompraConfirmacionDePreciosRow = ((tpu_ComprobantesDeCompraConfirmacionDePreciosRow)(this.NewRow()));
                rowtpu_ComprobantesDeCompraConfirmacionDePreciosRow.ItemArray = new object[] {
                        IdComprobante,
                        IdComprobanteFactura,
                        IdProveedor,
                        IdAutorizacion,
                        IdTipoDeComprobante,
                        Estado,
                        NumeroFactura,
                        IdResponsable,
                        Observaciones,
                        IdMonedaOriginal,
                        IdFuenteDeCambioOriginal,
                        IdCotizacionOriginal,
                        ValorCotizacionOriginal,
                        FechaCreacion,
                        IdConexionCreacion,
                        UltimaModificacion,
                        IdConexionUltimaModificacion,
                        IdReservado,
                        RowId,
                        IdSucursal,
                        IdEmpresa};
                this.Rows.Add(rowtpu_ComprobantesDeCompraConfirmacionDePreciosRow);
                return rowtpu_ComprobantesDeCompraConfirmacionDePreciosRow;
            }
            
            public tpu_ComprobantesDeCompraConfirmacionDePreciosRow FindByIdComprobante(string IdComprobante) {
                return ((tpu_ComprobantesDeCompraConfirmacionDePreciosRow)(this.Rows.Find(new object[] {
                            IdComprobante})));
            }
            
            public System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            public override DataTable Clone() {
                tpu_ComprobantesDeCompraConfirmacionDePreciosDataTable cln = ((tpu_ComprobantesDeCompraConfirmacionDePreciosDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            protected override DataTable CreateInstance() {
                return new tpu_ComprobantesDeCompraConfirmacionDePreciosDataTable();
            }
            
            internal void InitVars() {
                this.columnIdComprobante = this.Columns["IdComprobante"];
                this.columnIdComprobanteFactura = this.Columns["IdComprobanteFactura"];
                this.columnIdProveedor = this.Columns["IdProveedor"];
                this.columnIdAutorizacion = this.Columns["IdAutorizacion"];
                this.columnIdTipoDeComprobante = this.Columns["IdTipoDeComprobante"];
                this.columnEstado = this.Columns["Estado"];
                this.columnNumeroFactura = this.Columns["NumeroFactura"];
                this.columnIdResponsable = this.Columns["IdResponsable"];
                this.columnObservaciones = this.Columns["Observaciones"];
                this.columnIdMonedaOriginal = this.Columns["IdMonedaOriginal"];
                this.columnIdFuenteDeCambioOriginal = this.Columns["IdFuenteDeCambioOriginal"];
                this.columnIdCotizacionOriginal = this.Columns["IdCotizacionOriginal"];
                this.columnValorCotizacionOriginal = this.Columns["ValorCotizacionOriginal"];
                this.columnFechaCreacion = this.Columns["FechaCreacion"];
                this.columnIdConexionCreacion = this.Columns["IdConexionCreacion"];
                this.columnUltimaModificacion = this.Columns["UltimaModificacion"];
                this.columnIdConexionUltimaModificacion = this.Columns["IdConexionUltimaModificacion"];
                this.columnIdReservado = this.Columns["IdReservado"];
                this.columnRowId = this.Columns["RowId"];
                this.columnIdSucursal = this.Columns["IdSucursal"];
                this.columnIdEmpresa = this.Columns["IdEmpresa"];
            }
            
            private void InitClass() {
                this.columnIdComprobante = new DataColumn("IdComprobante", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdComprobante);
                this.columnIdComprobanteFactura = new DataColumn("IdComprobanteFactura", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdComprobanteFactura);
                this.columnIdProveedor = new DataColumn("IdProveedor", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdProveedor);
                this.columnIdAutorizacion = new DataColumn("IdAutorizacion", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdAutorizacion);
                this.columnIdTipoDeComprobante = new DataColumn("IdTipoDeComprobante", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdTipoDeComprobante);
                this.columnEstado = new DataColumn("Estado", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnEstado);
                this.columnNumeroFactura = new DataColumn("NumeroFactura", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnNumeroFactura);
                this.columnIdResponsable = new DataColumn("IdResponsable", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdResponsable);
                this.columnObservaciones = new DataColumn("Observaciones", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnObservaciones);
                this.columnIdMonedaOriginal = new DataColumn("IdMonedaOriginal", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdMonedaOriginal);
                this.columnIdFuenteDeCambioOriginal = new DataColumn("IdFuenteDeCambioOriginal", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdFuenteDeCambioOriginal);
                this.columnIdCotizacionOriginal = new DataColumn("IdCotizacionOriginal", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdCotizacionOriginal);
                this.columnValorCotizacionOriginal = new DataColumn("ValorCotizacionOriginal", typeof(System.Decimal), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnValorCotizacionOriginal);
                this.columnFechaCreacion = new DataColumn("FechaCreacion", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnFechaCreacion);
                this.columnIdConexionCreacion = new DataColumn("IdConexionCreacion", typeof(long), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdConexionCreacion);
                this.columnUltimaModificacion = new DataColumn("UltimaModificacion", typeof(System.Byte[]), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnUltimaModificacion);
                this.columnIdConexionUltimaModificacion = new DataColumn("IdConexionUltimaModificacion", typeof(long), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdConexionUltimaModificacion);
                this.columnIdReservado = new DataColumn("IdReservado", typeof(long), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdReservado);
                this.columnRowId = new DataColumn("RowId", typeof(System.Guid), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnRowId);
                this.columnIdSucursal = new DataColumn("IdSucursal", typeof(long), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdSucursal);
                this.columnIdEmpresa = new DataColumn("IdEmpresa", typeof(long), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdEmpresa);
                this.Constraints.Add(new UniqueConstraint("tpu_ComprobantesDeCompraConfirmacionDePreciosDatasetKey1", new DataColumn[] {
                                this.columnIdComprobante}, true));
                this.columnIdComprobante.AllowDBNull = false;
                this.columnIdComprobante.Unique = true;
                this.columnIdProveedor.AllowDBNull = false;
                this.columnIdTipoDeComprobante.AllowDBNull = false;
                this.columnNumeroFactura.AllowDBNull = false;
                this.columnIdResponsable.AllowDBNull = false;
                this.columnUltimaModificacion.ReadOnly = true;
            }
            
            public tpu_ComprobantesDeCompraConfirmacionDePreciosRow Newtpu_ComprobantesDeCompraConfirmacionDePreciosRow() {
                return ((tpu_ComprobantesDeCompraConfirmacionDePreciosRow)(this.NewRow()));
            }
            
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder) {
                return new tpu_ComprobantesDeCompraConfirmacionDePreciosRow(builder);
            }
            
            protected override System.Type GetRowType() {
                return typeof(tpu_ComprobantesDeCompraConfirmacionDePreciosRow);
            }
            
            protected override void OnRowChanged(DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.tpu_ComprobantesDeCompraConfirmacionDePreciosRowChanged != null)) {
                    this.tpu_ComprobantesDeCompraConfirmacionDePreciosRowChanged(this, new tpu_ComprobantesDeCompraConfirmacionDePreciosRowChangeEvent(((tpu_ComprobantesDeCompraConfirmacionDePreciosRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowChanging(DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.tpu_ComprobantesDeCompraConfirmacionDePreciosRowChanging != null)) {
                    this.tpu_ComprobantesDeCompraConfirmacionDePreciosRowChanging(this, new tpu_ComprobantesDeCompraConfirmacionDePreciosRowChangeEvent(((tpu_ComprobantesDeCompraConfirmacionDePreciosRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleted(DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.tpu_ComprobantesDeCompraConfirmacionDePreciosRowDeleted != null)) {
                    this.tpu_ComprobantesDeCompraConfirmacionDePreciosRowDeleted(this, new tpu_ComprobantesDeCompraConfirmacionDePreciosRowChangeEvent(((tpu_ComprobantesDeCompraConfirmacionDePreciosRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleting(DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.tpu_ComprobantesDeCompraConfirmacionDePreciosRowDeleting != null)) {
                    this.tpu_ComprobantesDeCompraConfirmacionDePreciosRowDeleting(this, new tpu_ComprobantesDeCompraConfirmacionDePreciosRowChangeEvent(((tpu_ComprobantesDeCompraConfirmacionDePreciosRow)(e.Row)), e.Action));
                }
            }
            
            public void Removetpu_ComprobantesDeCompraConfirmacionDePreciosRow(tpu_ComprobantesDeCompraConfirmacionDePreciosRow row) {
                this.Rows.Remove(row);
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class tpu_ComprobantesDeCompraConfirmacionDePreciosRow : DataRow {
            
            private tpu_ComprobantesDeCompraConfirmacionDePreciosDataTable tabletpu_ComprobantesDeCompraConfirmacionDePrecios;
            
            internal tpu_ComprobantesDeCompraConfirmacionDePreciosRow(DataRowBuilder rb) : 
                    base(rb) {
                this.tabletpu_ComprobantesDeCompraConfirmacionDePrecios = ((tpu_ComprobantesDeCompraConfirmacionDePreciosDataTable)(this.Table));
            }
            
            public string IdComprobante {
                get {
                    return ((string)(this[this.tabletpu_ComprobantesDeCompraConfirmacionDePrecios.IdComprobanteColumn]));
                }
                set {
                    this[this.tabletpu_ComprobantesDeCompraConfirmacionDePrecios.IdComprobanteColumn] = value;
                }
            }
            
            public string IdComprobanteFactura {
                get {
                    try {
                        return ((string)(this[this.tabletpu_ComprobantesDeCompraConfirmacionDePrecios.IdComprobanteFacturaColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletpu_ComprobantesDeCompraConfirmacionDePrecios.IdComprobanteFacturaColumn] = value;
                }
            }
            
            public string IdProveedor {
                get {
                    return ((string)(this[this.tabletpu_ComprobantesDeCompraConfirmacionDePrecios.IdProveedorColumn]));
                }
                set {
                    this[this.tabletpu_ComprobantesDeCompraConfirmacionDePrecios.IdProveedorColumn] = value;
                }
            }
            
            public string IdAutorizacion {
                get {
                    try {
                        return ((string)(this[this.tabletpu_ComprobantesDeCompraConfirmacionDePrecios.IdAutorizacionColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletpu_ComprobantesDeCompraConfirmacionDePrecios.IdAutorizacionColumn] = value;
                }
            }
            
            public string IdTipoDeComprobante {
                get {
                    return ((string)(this[this.tabletpu_ComprobantesDeCompraConfirmacionDePrecios.IdTipoDeComprobanteColumn]));
                }
                set {
                    this[this.tabletpu_ComprobantesDeCompraConfirmacionDePrecios.IdTipoDeComprobanteColumn] = value;
                }
            }
            
            public string Estado {
                get {
                    try {
                        return ((string)(this[this.tabletpu_ComprobantesDeCompraConfirmacionDePrecios.EstadoColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletpu_ComprobantesDeCompraConfirmacionDePrecios.EstadoColumn] = value;
                }
            }
            
            public string NumeroFactura {
                get {
                    return ((string)(this[this.tabletpu_ComprobantesDeCompraConfirmacionDePrecios.NumeroFacturaColumn]));
                }
                set {
                    this[this.tabletpu_ComprobantesDeCompraConfirmacionDePrecios.NumeroFacturaColumn] = value;
                }
            }
            
            public string IdResponsable {
                get {
                    return ((string)(this[this.tabletpu_ComprobantesDeCompraConfirmacionDePrecios.IdResponsableColumn]));
                }
                set {
                    this[this.tabletpu_ComprobantesDeCompraConfirmacionDePrecios.IdResponsableColumn] = value;
                }
            }
            
            public string Observaciones {
                get {
                    try {
                        return ((string)(this[this.tabletpu_ComprobantesDeCompraConfirmacionDePrecios.ObservacionesColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletpu_ComprobantesDeCompraConfirmacionDePrecios.ObservacionesColumn] = value;
                }
            }
            
            public string IdMonedaOriginal {
                get {
                    try {
                        return ((string)(this[this.tabletpu_ComprobantesDeCompraConfirmacionDePrecios.IdMonedaOriginalColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletpu_ComprobantesDeCompraConfirmacionDePrecios.IdMonedaOriginalColumn] = value;
                }
            }
            
            public string IdFuenteDeCambioOriginal {
                get {
                    try {
                        return ((string)(this[this.tabletpu_ComprobantesDeCompraConfirmacionDePrecios.IdFuenteDeCambioOriginalColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletpu_ComprobantesDeCompraConfirmacionDePrecios.IdFuenteDeCambioOriginalColumn] = value;
                }
            }
            
            public string IdCotizacionOriginal {
                get {
                    try {
                        return ((string)(this[this.tabletpu_ComprobantesDeCompraConfirmacionDePrecios.IdCotizacionOriginalColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletpu_ComprobantesDeCompraConfirmacionDePrecios.IdCotizacionOriginalColumn] = value;
                }
            }
            
            public System.Decimal ValorCotizacionOriginal {
                get {
                    try {
                        return ((System.Decimal)(this[this.tabletpu_ComprobantesDeCompraConfirmacionDePrecios.ValorCotizacionOriginalColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletpu_ComprobantesDeCompraConfirmacionDePrecios.ValorCotizacionOriginalColumn] = value;
                }
            }
            
            public System.DateTime FechaCreacion {
                get {
                    try {
                        return ((System.DateTime)(this[this.tabletpu_ComprobantesDeCompraConfirmacionDePrecios.FechaCreacionColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletpu_ComprobantesDeCompraConfirmacionDePrecios.FechaCreacionColumn] = value;
                }
            }
            
            public long IdConexionCreacion {
                get {
                    try {
                        return ((long)(this[this.tabletpu_ComprobantesDeCompraConfirmacionDePrecios.IdConexionCreacionColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletpu_ComprobantesDeCompraConfirmacionDePrecios.IdConexionCreacionColumn] = value;
                }
            }
            
            public System.Byte[] UltimaModificacion {
                get {
                    try {
                        return ((System.Byte[])(this[this.tabletpu_ComprobantesDeCompraConfirmacionDePrecios.UltimaModificacionColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletpu_ComprobantesDeCompraConfirmacionDePrecios.UltimaModificacionColumn] = value;
                }
            }
            
            public long IdConexionUltimaModificacion {
                get {
                    try {
                        return ((long)(this[this.tabletpu_ComprobantesDeCompraConfirmacionDePrecios.IdConexionUltimaModificacionColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletpu_ComprobantesDeCompraConfirmacionDePrecios.IdConexionUltimaModificacionColumn] = value;
                }
            }
            
            public long IdReservado {
                get {
                    try {
                        return ((long)(this[this.tabletpu_ComprobantesDeCompraConfirmacionDePrecios.IdReservadoColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletpu_ComprobantesDeCompraConfirmacionDePrecios.IdReservadoColumn] = value;
                }
            }
            
            public System.Guid RowId {
                get {
                    try {
                        return ((System.Guid)(this[this.tabletpu_ComprobantesDeCompraConfirmacionDePrecios.RowIdColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletpu_ComprobantesDeCompraConfirmacionDePrecios.RowIdColumn] = value;
                }
            }
            
            public long IdSucursal {
                get {
                    try {
                        return ((long)(this[this.tabletpu_ComprobantesDeCompraConfirmacionDePrecios.IdSucursalColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletpu_ComprobantesDeCompraConfirmacionDePrecios.IdSucursalColumn] = value;
                }
            }
            
            public long IdEmpresa {
                get {
                    try {
                        return ((long)(this[this.tabletpu_ComprobantesDeCompraConfirmacionDePrecios.IdEmpresaColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletpu_ComprobantesDeCompraConfirmacionDePrecios.IdEmpresaColumn] = value;
                }
            }
            
            public bool IsIdComprobanteFacturaNull() {
                return this.IsNull(this.tabletpu_ComprobantesDeCompraConfirmacionDePrecios.IdComprobanteFacturaColumn);
            }
            
            public void SetIdComprobanteFacturaNull() {
                this[this.tabletpu_ComprobantesDeCompraConfirmacionDePrecios.IdComprobanteFacturaColumn] = System.Convert.DBNull;
            }
            
            public bool IsIdAutorizacionNull() {
                return this.IsNull(this.tabletpu_ComprobantesDeCompraConfirmacionDePrecios.IdAutorizacionColumn);
            }
            
            public void SetIdAutorizacionNull() {
                this[this.tabletpu_ComprobantesDeCompraConfirmacionDePrecios.IdAutorizacionColumn] = System.Convert.DBNull;
            }
            
            public bool IsEstadoNull() {
                return this.IsNull(this.tabletpu_ComprobantesDeCompraConfirmacionDePrecios.EstadoColumn);
            }
            
            public void SetEstadoNull() {
                this[this.tabletpu_ComprobantesDeCompraConfirmacionDePrecios.EstadoColumn] = System.Convert.DBNull;
            }
            
            public bool IsObservacionesNull() {
                return this.IsNull(this.tabletpu_ComprobantesDeCompraConfirmacionDePrecios.ObservacionesColumn);
            }
            
            public void SetObservacionesNull() {
                this[this.tabletpu_ComprobantesDeCompraConfirmacionDePrecios.ObservacionesColumn] = System.Convert.DBNull;
            }
            
            public bool IsIdMonedaOriginalNull() {
                return this.IsNull(this.tabletpu_ComprobantesDeCompraConfirmacionDePrecios.IdMonedaOriginalColumn);
            }
            
            public void SetIdMonedaOriginalNull() {
                this[this.tabletpu_ComprobantesDeCompraConfirmacionDePrecios.IdMonedaOriginalColumn] = System.Convert.DBNull;
            }
            
            public bool IsIdFuenteDeCambioOriginalNull() {
                return this.IsNull(this.tabletpu_ComprobantesDeCompraConfirmacionDePrecios.IdFuenteDeCambioOriginalColumn);
            }
            
            public void SetIdFuenteDeCambioOriginalNull() {
                this[this.tabletpu_ComprobantesDeCompraConfirmacionDePrecios.IdFuenteDeCambioOriginalColumn] = System.Convert.DBNull;
            }
            
            public bool IsIdCotizacionOriginalNull() {
                return this.IsNull(this.tabletpu_ComprobantesDeCompraConfirmacionDePrecios.IdCotizacionOriginalColumn);
            }
            
            public void SetIdCotizacionOriginalNull() {
                this[this.tabletpu_ComprobantesDeCompraConfirmacionDePrecios.IdCotizacionOriginalColumn] = System.Convert.DBNull;
            }
            
            public bool IsValorCotizacionOriginalNull() {
                return this.IsNull(this.tabletpu_ComprobantesDeCompraConfirmacionDePrecios.ValorCotizacionOriginalColumn);
            }
            
            public void SetValorCotizacionOriginalNull() {
                this[this.tabletpu_ComprobantesDeCompraConfirmacionDePrecios.ValorCotizacionOriginalColumn] = System.Convert.DBNull;
            }
            
            public bool IsFechaCreacionNull() {
                return this.IsNull(this.tabletpu_ComprobantesDeCompraConfirmacionDePrecios.FechaCreacionColumn);
            }
            
            public void SetFechaCreacionNull() {
                this[this.tabletpu_ComprobantesDeCompraConfirmacionDePrecios.FechaCreacionColumn] = System.Convert.DBNull;
            }
            
            public bool IsIdConexionCreacionNull() {
                return this.IsNull(this.tabletpu_ComprobantesDeCompraConfirmacionDePrecios.IdConexionCreacionColumn);
            }
            
            public void SetIdConexionCreacionNull() {
                this[this.tabletpu_ComprobantesDeCompraConfirmacionDePrecios.IdConexionCreacionColumn] = System.Convert.DBNull;
            }
            
            public bool IsUltimaModificacionNull() {
                return this.IsNull(this.tabletpu_ComprobantesDeCompraConfirmacionDePrecios.UltimaModificacionColumn);
            }
            
            public void SetUltimaModificacionNull() {
                this[this.tabletpu_ComprobantesDeCompraConfirmacionDePrecios.UltimaModificacionColumn] = System.Convert.DBNull;
            }
            
            public bool IsIdConexionUltimaModificacionNull() {
                return this.IsNull(this.tabletpu_ComprobantesDeCompraConfirmacionDePrecios.IdConexionUltimaModificacionColumn);
            }
            
            public void SetIdConexionUltimaModificacionNull() {
                this[this.tabletpu_ComprobantesDeCompraConfirmacionDePrecios.IdConexionUltimaModificacionColumn] = System.Convert.DBNull;
            }
            
            public bool IsIdReservadoNull() {
                return this.IsNull(this.tabletpu_ComprobantesDeCompraConfirmacionDePrecios.IdReservadoColumn);
            }
            
            public void SetIdReservadoNull() {
                this[this.tabletpu_ComprobantesDeCompraConfirmacionDePrecios.IdReservadoColumn] = System.Convert.DBNull;
            }
            
            public bool IsRowIdNull() {
                return this.IsNull(this.tabletpu_ComprobantesDeCompraConfirmacionDePrecios.RowIdColumn);
            }
            
            public void SetRowIdNull() {
                this[this.tabletpu_ComprobantesDeCompraConfirmacionDePrecios.RowIdColumn] = System.Convert.DBNull;
            }
            
            public bool IsIdSucursalNull() {
                return this.IsNull(this.tabletpu_ComprobantesDeCompraConfirmacionDePrecios.IdSucursalColumn);
            }
            
            public void SetIdSucursalNull() {
                this[this.tabletpu_ComprobantesDeCompraConfirmacionDePrecios.IdSucursalColumn] = System.Convert.DBNull;
            }
            
            public bool IsIdEmpresaNull() {
                return this.IsNull(this.tabletpu_ComprobantesDeCompraConfirmacionDePrecios.IdEmpresaColumn);
            }
            
            public void SetIdEmpresaNull() {
                this[this.tabletpu_ComprobantesDeCompraConfirmacionDePrecios.IdEmpresaColumn] = System.Convert.DBNull;
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class tpu_ComprobantesDeCompraConfirmacionDePreciosRowChangeEvent : EventArgs {
            
            private tpu_ComprobantesDeCompraConfirmacionDePreciosRow eventRow;
            
            private DataRowAction eventAction;
            
            public tpu_ComprobantesDeCompraConfirmacionDePreciosRowChangeEvent(tpu_ComprobantesDeCompraConfirmacionDePreciosRow row, DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            public tpu_ComprobantesDeCompraConfirmacionDePreciosRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            public DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
