//------------------------------------------------------------------------------
// <autogenerated>
//     This code was generated by a tool.
//     Runtime Version: 1.1.4322.2032
//
//     Changes to this file may cause incorrect behavior and will be lost if 
//     the code is regenerated.
// </autogenerated>
//------------------------------------------------------------------------------

namespace mz.erp.commontypes.data {
    using System;
    using System.Data;
    using System.Xml;
    using System.Runtime.Serialization;
    
    
    [Serializable()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Diagnostics.DebuggerStepThrough()]
    [System.ComponentModel.ToolboxItem(true)]
    public class sy_SentenciasReplicacionDataset : DataSet {
        
        private sy_SentenciasReplicacionDataTable tablesy_SentenciasReplicacion;
        
        public sy_SentenciasReplicacionDataset() {
            this.InitClass();
            System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            this.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        protected sy_SentenciasReplicacionDataset(SerializationInfo info, StreamingContext context) {
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((strSchema != null)) {
                DataSet ds = new DataSet();
                ds.ReadXmlSchema(new XmlTextReader(new System.IO.StringReader(strSchema)));
                if ((ds.Tables["sy_SentenciasReplicacion"] != null)) {
                    this.Tables.Add(new sy_SentenciasReplicacionDataTable(ds.Tables["sy_SentenciasReplicacion"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.InitClass();
            }
            this.GetSerializationData(info, context);
            System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            this.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public sy_SentenciasReplicacionDataTable sy_SentenciasReplicacion {
            get {
                return this.tablesy_SentenciasReplicacion;
            }
        }
        
        public override DataSet Clone() {
            sy_SentenciasReplicacionDataset cln = ((sy_SentenciasReplicacionDataset)(base.Clone()));
            cln.InitVars();
            return cln;
        }
        
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        protected override void ReadXmlSerializable(XmlReader reader) {
            this.Reset();
            DataSet ds = new DataSet();
            ds.ReadXml(reader);
            if ((ds.Tables["sy_SentenciasReplicacion"] != null)) {
                this.Tables.Add(new sy_SentenciasReplicacionDataTable(ds.Tables["sy_SentenciasReplicacion"]));
            }
            this.DataSetName = ds.DataSetName;
            this.Prefix = ds.Prefix;
            this.Namespace = ds.Namespace;
            this.Locale = ds.Locale;
            this.CaseSensitive = ds.CaseSensitive;
            this.EnforceConstraints = ds.EnforceConstraints;
            this.Merge(ds, false, System.Data.MissingSchemaAction.Add);
            this.InitVars();
        }
        
        protected override System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            System.IO.MemoryStream stream = new System.IO.MemoryStream();
            this.WriteXmlSchema(new XmlTextWriter(stream, null));
            stream.Position = 0;
            return System.Xml.Schema.XmlSchema.Read(new XmlTextReader(stream), null);
        }
        
        internal void InitVars() {
            this.tablesy_SentenciasReplicacion = ((sy_SentenciasReplicacionDataTable)(this.Tables["sy_SentenciasReplicacion"]));
            if ((this.tablesy_SentenciasReplicacion != null)) {
                this.tablesy_SentenciasReplicacion.InitVars();
            }
        }
        
        private void InitClass() {
            this.DataSetName = "sy_SentenciasReplicacionDataset";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/sy_SentenciasReplicacion.xsd";
            this.Locale = new System.Globalization.CultureInfo("en-US");
            this.CaseSensitive = false;
            this.EnforceConstraints = true;
            this.tablesy_SentenciasReplicacion = new sy_SentenciasReplicacionDataTable();
            this.Tables.Add(this.tablesy_SentenciasReplicacion);
        }
        
        private bool ShouldSerializesy_SentenciasReplicacion() {
            return false;
        }
        
        private void SchemaChanged(object sender, System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        public delegate void sy_SentenciasReplicacionRowChangeEventHandler(object sender, sy_SentenciasReplicacionRowChangeEvent e);
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class sy_SentenciasReplicacionDataTable : DataTable, System.Collections.IEnumerable {
            
            private DataColumn columnIdSentenciaReplicacion;
            
            private DataColumn columnIdTabla;
            
            private DataColumn columnIdTipoSentencia;
            
            private DataColumn columnSentencia;
            
            private DataColumn columnSentenciaRowId;
            
            private DataColumn columnNombreArchivo;
            
            private DataColumn columnFechaCreacion;
            
            private DataColumn columnIdConexionCreacion;
            
            private DataColumn columnUltimaModificacion;
            
            private DataColumn columnIdConexionUltimaModificacion;
            
            private DataColumn columnRowId;
            
            private DataColumn columnIdSucursalGeneradora;
            
            private DataColumn columnIdConexion;
            
            private DataColumn columnDestino;
            
            private DataColumn columnVersionBD;
            
            internal sy_SentenciasReplicacionDataTable() : 
                    base("sy_SentenciasReplicacion") {
                this.InitClass();
            }
            
            internal sy_SentenciasReplicacionDataTable(DataTable table) : 
                    base(table.TableName) {
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
                this.DisplayExpression = table.DisplayExpression;
            }
            
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            internal DataColumn IdSentenciaReplicacionColumn {
                get {
                    return this.columnIdSentenciaReplicacion;
                }
            }
            
            internal DataColumn IdTablaColumn {
                get {
                    return this.columnIdTabla;
                }
            }
            
            internal DataColumn IdTipoSentenciaColumn {
                get {
                    return this.columnIdTipoSentencia;
                }
            }
            
            internal DataColumn SentenciaColumn {
                get {
                    return this.columnSentencia;
                }
            }
            
            internal DataColumn SentenciaRowIdColumn {
                get {
                    return this.columnSentenciaRowId;
                }
            }
            
            internal DataColumn NombreArchivoColumn {
                get {
                    return this.columnNombreArchivo;
                }
            }
            
            internal DataColumn FechaCreacionColumn {
                get {
                    return this.columnFechaCreacion;
                }
            }
            
            internal DataColumn IdConexionCreacionColumn {
                get {
                    return this.columnIdConexionCreacion;
                }
            }
            
            internal DataColumn UltimaModificacionColumn {
                get {
                    return this.columnUltimaModificacion;
                }
            }
            
            internal DataColumn IdConexionUltimaModificacionColumn {
                get {
                    return this.columnIdConexionUltimaModificacion;
                }
            }
            
            internal DataColumn RowIdColumn {
                get {
                    return this.columnRowId;
                }
            }
            
            internal DataColumn IdSucursalGeneradoraColumn {
                get {
                    return this.columnIdSucursalGeneradora;
                }
            }
            
            internal DataColumn IdConexionColumn {
                get {
                    return this.columnIdConexion;
                }
            }
            
            internal DataColumn DestinoColumn {
                get {
                    return this.columnDestino;
                }
            }
            
            internal DataColumn VersionBDColumn {
                get {
                    return this.columnVersionBD;
                }
            }
            
            public sy_SentenciasReplicacionRow this[int index] {
                get {
                    return ((sy_SentenciasReplicacionRow)(this.Rows[index]));
                }
            }
            
            public event sy_SentenciasReplicacionRowChangeEventHandler sy_SentenciasReplicacionRowChanged;
            
            public event sy_SentenciasReplicacionRowChangeEventHandler sy_SentenciasReplicacionRowChanging;
            
            public event sy_SentenciasReplicacionRowChangeEventHandler sy_SentenciasReplicacionRowDeleted;
            
            public event sy_SentenciasReplicacionRowChangeEventHandler sy_SentenciasReplicacionRowDeleting;
            
            public void Addsy_SentenciasReplicacionRow(sy_SentenciasReplicacionRow row) {
                this.Rows.Add(row);
            }
            
            public sy_SentenciasReplicacionRow Addsy_SentenciasReplicacionRow(string IdTabla, string IdTipoSentencia, string Sentencia, System.Guid SentenciaRowId, string NombreArchivo, System.DateTime FechaCreacion, long IdConexionCreacion, System.Byte[] UltimaModificacion, long IdConexionUltimaModificacion, System.Guid RowId, long IdSucursalGeneradora, long IdConexion, string Destino, string VersionBD) {
                sy_SentenciasReplicacionRow rowsy_SentenciasReplicacionRow = ((sy_SentenciasReplicacionRow)(this.NewRow()));
                rowsy_SentenciasReplicacionRow.ItemArray = new object[] {
                        null,
                        IdTabla,
                        IdTipoSentencia,
                        Sentencia,
                        SentenciaRowId,
                        NombreArchivo,
                        FechaCreacion,
                        IdConexionCreacion,
                        UltimaModificacion,
                        IdConexionUltimaModificacion,
                        RowId,
                        IdSucursalGeneradora,
                        IdConexion,
                        Destino,
                        VersionBD};
                this.Rows.Add(rowsy_SentenciasReplicacionRow);
                return rowsy_SentenciasReplicacionRow;
            }
            
            public sy_SentenciasReplicacionRow FindByIdSentenciaReplicacion(long IdSentenciaReplicacion) {
                return ((sy_SentenciasReplicacionRow)(this.Rows.Find(new object[] {
                            IdSentenciaReplicacion})));
            }
            
            public System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            public override DataTable Clone() {
                sy_SentenciasReplicacionDataTable cln = ((sy_SentenciasReplicacionDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            protected override DataTable CreateInstance() {
                return new sy_SentenciasReplicacionDataTable();
            }
            
            internal void InitVars() {
                this.columnIdSentenciaReplicacion = this.Columns["IdSentenciaReplicacion"];
                this.columnIdTabla = this.Columns["IdTabla"];
                this.columnIdTipoSentencia = this.Columns["IdTipoSentencia"];
                this.columnSentencia = this.Columns["Sentencia"];
                this.columnSentenciaRowId = this.Columns["SentenciaRowId"];
                this.columnNombreArchivo = this.Columns["NombreArchivo"];
                this.columnFechaCreacion = this.Columns["FechaCreacion"];
                this.columnIdConexionCreacion = this.Columns["IdConexionCreacion"];
                this.columnUltimaModificacion = this.Columns["UltimaModificacion"];
                this.columnIdConexionUltimaModificacion = this.Columns["IdConexionUltimaModificacion"];
                this.columnRowId = this.Columns["RowId"];
                this.columnIdSucursalGeneradora = this.Columns["IdSucursalGeneradora"];
                this.columnIdConexion = this.Columns["IdConexion"];
                this.columnDestino = this.Columns["Destino"];
                this.columnVersionBD = this.Columns["VersionBD"];
            }
            
            private void InitClass() {
                this.columnIdSentenciaReplicacion = new DataColumn("IdSentenciaReplicacion", typeof(long), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdSentenciaReplicacion);
                this.columnIdTabla = new DataColumn("IdTabla", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdTabla);
                this.columnIdTipoSentencia = new DataColumn("IdTipoSentencia", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdTipoSentencia);
                this.columnSentencia = new DataColumn("Sentencia", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnSentencia);
                this.columnSentenciaRowId = new DataColumn("SentenciaRowId", typeof(System.Guid), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnSentenciaRowId);
                this.columnNombreArchivo = new DataColumn("NombreArchivo", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnNombreArchivo);
                this.columnFechaCreacion = new DataColumn("FechaCreacion", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnFechaCreacion);
                this.columnIdConexionCreacion = new DataColumn("IdConexionCreacion", typeof(long), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdConexionCreacion);
                this.columnUltimaModificacion = new DataColumn("UltimaModificacion", typeof(System.Byte[]), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnUltimaModificacion);
                this.columnIdConexionUltimaModificacion = new DataColumn("IdConexionUltimaModificacion", typeof(long), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdConexionUltimaModificacion);
                this.columnRowId = new DataColumn("RowId", typeof(System.Guid), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnRowId);
                this.columnIdSucursalGeneradora = new DataColumn("IdSucursalGeneradora", typeof(long), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdSucursalGeneradora);
                this.columnIdConexion = new DataColumn("IdConexion", typeof(long), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdConexion);
                this.columnDestino = new DataColumn("Destino", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnDestino);
                this.columnVersionBD = new DataColumn("VersionBD", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnVersionBD);
                this.Constraints.Add(new UniqueConstraint("sy_SentenciasReplicacionDatasetKey1", new DataColumn[] {
                                this.columnIdSentenciaReplicacion}, true));
                this.columnIdSentenciaReplicacion.AutoIncrement = true;
                this.columnIdSentenciaReplicacion.AllowDBNull = false;
                this.columnIdSentenciaReplicacion.ReadOnly = true;
                this.columnIdSentenciaReplicacion.Unique = true;
                this.columnIdTabla.AllowDBNull = false;
                this.columnIdTipoSentencia.AllowDBNull = false;
                this.columnSentencia.AllowDBNull = false;
                this.columnFechaCreacion.AllowDBNull = false;
                this.columnIdConexionCreacion.AllowDBNull = false;
                this.columnUltimaModificacion.ReadOnly = true;
                this.columnIdConexion.AllowDBNull = false;
            }
            
            public sy_SentenciasReplicacionRow Newsy_SentenciasReplicacionRow() {
                return ((sy_SentenciasReplicacionRow)(this.NewRow()));
            }
            
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder) {
                return new sy_SentenciasReplicacionRow(builder);
            }
            
            protected override System.Type GetRowType() {
                return typeof(sy_SentenciasReplicacionRow);
            }
            
            protected override void OnRowChanged(DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.sy_SentenciasReplicacionRowChanged != null)) {
                    this.sy_SentenciasReplicacionRowChanged(this, new sy_SentenciasReplicacionRowChangeEvent(((sy_SentenciasReplicacionRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowChanging(DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.sy_SentenciasReplicacionRowChanging != null)) {
                    this.sy_SentenciasReplicacionRowChanging(this, new sy_SentenciasReplicacionRowChangeEvent(((sy_SentenciasReplicacionRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleted(DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.sy_SentenciasReplicacionRowDeleted != null)) {
                    this.sy_SentenciasReplicacionRowDeleted(this, new sy_SentenciasReplicacionRowChangeEvent(((sy_SentenciasReplicacionRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleting(DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.sy_SentenciasReplicacionRowDeleting != null)) {
                    this.sy_SentenciasReplicacionRowDeleting(this, new sy_SentenciasReplicacionRowChangeEvent(((sy_SentenciasReplicacionRow)(e.Row)), e.Action));
                }
            }
            
            public void Removesy_SentenciasReplicacionRow(sy_SentenciasReplicacionRow row) {
                this.Rows.Remove(row);
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class sy_SentenciasReplicacionRow : DataRow {
            
            private sy_SentenciasReplicacionDataTable tablesy_SentenciasReplicacion;
            
            internal sy_SentenciasReplicacionRow(DataRowBuilder rb) : 
                    base(rb) {
                this.tablesy_SentenciasReplicacion = ((sy_SentenciasReplicacionDataTable)(this.Table));
            }
            
            public long IdSentenciaReplicacion {
                get {
                    return ((long)(this[this.tablesy_SentenciasReplicacion.IdSentenciaReplicacionColumn]));
                }
                set {
                    this[this.tablesy_SentenciasReplicacion.IdSentenciaReplicacionColumn] = value;
                }
            }
            
            public string IdTabla {
                get {
                    return ((string)(this[this.tablesy_SentenciasReplicacion.IdTablaColumn]));
                }
                set {
                    this[this.tablesy_SentenciasReplicacion.IdTablaColumn] = value;
                }
            }
            
            public string IdTipoSentencia {
                get {
                    return ((string)(this[this.tablesy_SentenciasReplicacion.IdTipoSentenciaColumn]));
                }
                set {
                    this[this.tablesy_SentenciasReplicacion.IdTipoSentenciaColumn] = value;
                }
            }
            
            public string Sentencia {
                get {
                    return ((string)(this[this.tablesy_SentenciasReplicacion.SentenciaColumn]));
                }
                set {
                    this[this.tablesy_SentenciasReplicacion.SentenciaColumn] = value;
                }
            }
            
            public System.Guid SentenciaRowId {
                get {
                    try {
                        return ((System.Guid)(this[this.tablesy_SentenciasReplicacion.SentenciaRowIdColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tablesy_SentenciasReplicacion.SentenciaRowIdColumn] = value;
                }
            }
            
            public string NombreArchivo {
                get {
                    try {
                        return ((string)(this[this.tablesy_SentenciasReplicacion.NombreArchivoColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tablesy_SentenciasReplicacion.NombreArchivoColumn] = value;
                }
            }
            
            public System.DateTime FechaCreacion {
                get {
                    return ((System.DateTime)(this[this.tablesy_SentenciasReplicacion.FechaCreacionColumn]));
                }
                set {
                    this[this.tablesy_SentenciasReplicacion.FechaCreacionColumn] = value;
                }
            }
            
            public long IdConexionCreacion {
                get {
                    return ((long)(this[this.tablesy_SentenciasReplicacion.IdConexionCreacionColumn]));
                }
                set {
                    this[this.tablesy_SentenciasReplicacion.IdConexionCreacionColumn] = value;
                }
            }
            
            public System.Byte[] UltimaModificacion {
                get {
                    try {
                        return ((System.Byte[])(this[this.tablesy_SentenciasReplicacion.UltimaModificacionColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tablesy_SentenciasReplicacion.UltimaModificacionColumn] = value;
                }
            }
            
            public long IdConexionUltimaModificacion {
                get {
                    try {
                        return ((long)(this[this.tablesy_SentenciasReplicacion.IdConexionUltimaModificacionColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tablesy_SentenciasReplicacion.IdConexionUltimaModificacionColumn] = value;
                }
            }
            
            public System.Guid RowId {
                get {
                    try {
                        return ((System.Guid)(this[this.tablesy_SentenciasReplicacion.RowIdColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tablesy_SentenciasReplicacion.RowIdColumn] = value;
                }
            }
            
            public long IdSucursalGeneradora {
                get {
                    try {
                        return ((long)(this[this.tablesy_SentenciasReplicacion.IdSucursalGeneradoraColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tablesy_SentenciasReplicacion.IdSucursalGeneradoraColumn] = value;
                }
            }
            
            public long IdConexion {
                get {
                    return ((long)(this[this.tablesy_SentenciasReplicacion.IdConexionColumn]));
                }
                set {
                    this[this.tablesy_SentenciasReplicacion.IdConexionColumn] = value;
                }
            }
            
            public string Destino {
                get {
                    try {
                        return ((string)(this[this.tablesy_SentenciasReplicacion.DestinoColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tablesy_SentenciasReplicacion.DestinoColumn] = value;
                }
            }
            
            public string VersionBD {
                get {
                    try {
                        return ((string)(this[this.tablesy_SentenciasReplicacion.VersionBDColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tablesy_SentenciasReplicacion.VersionBDColumn] = value;
                }
            }
            
            public bool IsSentenciaRowIdNull() {
                return this.IsNull(this.tablesy_SentenciasReplicacion.SentenciaRowIdColumn);
            }
            
            public void SetSentenciaRowIdNull() {
                this[this.tablesy_SentenciasReplicacion.SentenciaRowIdColumn] = System.Convert.DBNull;
            }
            
            public bool IsNombreArchivoNull() {
                return this.IsNull(this.tablesy_SentenciasReplicacion.NombreArchivoColumn);
            }
            
            public void SetNombreArchivoNull() {
                this[this.tablesy_SentenciasReplicacion.NombreArchivoColumn] = System.Convert.DBNull;
            }
            
            public bool IsUltimaModificacionNull() {
                return this.IsNull(this.tablesy_SentenciasReplicacion.UltimaModificacionColumn);
            }
            
            public void SetUltimaModificacionNull() {
                this[this.tablesy_SentenciasReplicacion.UltimaModificacionColumn] = System.Convert.DBNull;
            }
            
            public bool IsIdConexionUltimaModificacionNull() {
                return this.IsNull(this.tablesy_SentenciasReplicacion.IdConexionUltimaModificacionColumn);
            }
            
            public void SetIdConexionUltimaModificacionNull() {
                this[this.tablesy_SentenciasReplicacion.IdConexionUltimaModificacionColumn] = System.Convert.DBNull;
            }
            
            public bool IsRowIdNull() {
                return this.IsNull(this.tablesy_SentenciasReplicacion.RowIdColumn);
            }
            
            public void SetRowIdNull() {
                this[this.tablesy_SentenciasReplicacion.RowIdColumn] = System.Convert.DBNull;
            }
            
            public bool IsIdSucursalGeneradoraNull() {
                return this.IsNull(this.tablesy_SentenciasReplicacion.IdSucursalGeneradoraColumn);
            }
            
            public void SetIdSucursalGeneradoraNull() {
                this[this.tablesy_SentenciasReplicacion.IdSucursalGeneradoraColumn] = System.Convert.DBNull;
            }
            
            public bool IsDestinoNull() {
                return this.IsNull(this.tablesy_SentenciasReplicacion.DestinoColumn);
            }
            
            public void SetDestinoNull() {
                this[this.tablesy_SentenciasReplicacion.DestinoColumn] = System.Convert.DBNull;
            }
            
            public bool IsVersionBDNull() {
                return this.IsNull(this.tablesy_SentenciasReplicacion.VersionBDColumn);
            }
            
            public void SetVersionBDNull() {
                this[this.tablesy_SentenciasReplicacion.VersionBDColumn] = System.Convert.DBNull;
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class sy_SentenciasReplicacionRowChangeEvent : EventArgs {
            
            private sy_SentenciasReplicacionRow eventRow;
            
            private DataRowAction eventAction;
            
            public sy_SentenciasReplicacionRowChangeEvent(sy_SentenciasReplicacionRow row, DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            public sy_SentenciasReplicacionRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            public DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
