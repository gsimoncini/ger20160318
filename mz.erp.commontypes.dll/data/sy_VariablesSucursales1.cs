//------------------------------------------------------------------------------
// <autogenerated>
//     This code was generated by a tool.
//     Runtime Version: 1.1.4322.573
//
//     Changes to this file may cause incorrect behavior and will be lost if 
//     the code is regenerated.
// </autogenerated>
//------------------------------------------------------------------------------

namespace mz.erp.commontypes.data {
    using System;
    using System.Data;
    using System.Xml;
    using System.Runtime.Serialization;
    
    
    [Serializable()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Diagnostics.DebuggerStepThrough()]
    [System.ComponentModel.ToolboxItem(true)]
    public class sy_VariablesSucursalesDataset : DataSet {
        
        private sy_VariablesSucursalesDataTable tablesy_VariablesSucursales;
        
        public sy_VariablesSucursalesDataset() {
            this.InitClass();
            System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            this.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        protected sy_VariablesSucursalesDataset(SerializationInfo info, StreamingContext context) {
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((strSchema != null)) {
                DataSet ds = new DataSet();
                ds.ReadXmlSchema(new XmlTextReader(new System.IO.StringReader(strSchema)));
                if ((ds.Tables["sy_VariablesSucursales"] != null)) {
                    this.Tables.Add(new sy_VariablesSucursalesDataTable(ds.Tables["sy_VariablesSucursales"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.InitClass();
            }
            this.GetSerializationData(info, context);
            System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            this.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public sy_VariablesSucursalesDataTable sy_VariablesSucursales {
            get {
                return this.tablesy_VariablesSucursales;
            }
        }
        
        public override DataSet Clone() {
            sy_VariablesSucursalesDataset cln = ((sy_VariablesSucursalesDataset)(base.Clone()));
            cln.InitVars();
            return cln;
        }
        
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        protected override void ReadXmlSerializable(XmlReader reader) {
            this.Reset();
            DataSet ds = new DataSet();
            ds.ReadXml(reader);
            if ((ds.Tables["sy_VariablesSucursales"] != null)) {
                this.Tables.Add(new sy_VariablesSucursalesDataTable(ds.Tables["sy_VariablesSucursales"]));
            }
            this.DataSetName = ds.DataSetName;
            this.Prefix = ds.Prefix;
            this.Namespace = ds.Namespace;
            this.Locale = ds.Locale;
            this.CaseSensitive = ds.CaseSensitive;
            this.EnforceConstraints = ds.EnforceConstraints;
            this.Merge(ds, false, System.Data.MissingSchemaAction.Add);
            this.InitVars();
        }
        
        protected override System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            System.IO.MemoryStream stream = new System.IO.MemoryStream();
            this.WriteXmlSchema(new XmlTextWriter(stream, null));
            stream.Position = 0;
            return System.Xml.Schema.XmlSchema.Read(new XmlTextReader(stream), null);
        }
        
        internal void InitVars() {
            this.tablesy_VariablesSucursales = ((sy_VariablesSucursalesDataTable)(this.Tables["sy_VariablesSucursales"]));
            if ((this.tablesy_VariablesSucursales != null)) {
                this.tablesy_VariablesSucursales.InitVars();
            }
        }
        
        private void InitClass() {
            this.DataSetName = "sy_VariablesSucursalesDataset";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/sy_VariablesSucursales.xsd";
            this.Locale = new System.Globalization.CultureInfo("en-US");
            this.CaseSensitive = false;
            this.EnforceConstraints = true;
            this.tablesy_VariablesSucursales = new sy_VariablesSucursalesDataTable();
            this.Tables.Add(this.tablesy_VariablesSucursales);
        }
        
        private bool ShouldSerializesy_VariablesSucursales() {
            return false;
        }
        
        private void SchemaChanged(object sender, System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        public delegate void sy_VariablesSucursalesRowChangeEventHandler(object sender, sy_VariablesSucursalesRowChangeEvent e);
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class sy_VariablesSucursalesDataTable : DataTable, System.Collections.IEnumerable {
            
            private DataColumn columnIdVariable;
            
            private DataColumn columnIdEmpresa;
            
            private DataColumn columnIdSucursal;
            
            private DataColumn columnValor;
            
            private DataColumn columnFechaCreacion;
            
            private DataColumn columnIdConecxionCreacion;
            
            private DataColumn columnUltimaModificacion;
            
            private DataColumn columnIdConexionUltimaModificacion;
            
            private DataColumn columnRowId;
            
            internal sy_VariablesSucursalesDataTable() : 
                    base("sy_VariablesSucursales") {
                this.InitClass();
            }
            
            internal sy_VariablesSucursalesDataTable(DataTable table) : 
                    base(table.TableName) {
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
                this.DisplayExpression = table.DisplayExpression;
            }
            
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            internal DataColumn IdVariableColumn {
                get {
                    return this.columnIdVariable;
                }
            }
            
            internal DataColumn IdEmpresaColumn {
                get {
                    return this.columnIdEmpresa;
                }
            }
            
            internal DataColumn IdSucursalColumn {
                get {
                    return this.columnIdSucursal;
                }
            }
            
            internal DataColumn ValorColumn {
                get {
                    return this.columnValor;
                }
            }
            
            internal DataColumn FechaCreacionColumn {
                get {
                    return this.columnFechaCreacion;
                }
            }
            
            internal DataColumn IdConecxionCreacionColumn {
                get {
                    return this.columnIdConecxionCreacion;
                }
            }
            
            internal DataColumn UltimaModificacionColumn {
                get {
                    return this.columnUltimaModificacion;
                }
            }
            
            internal DataColumn IdConexionUltimaModificacionColumn {
                get {
                    return this.columnIdConexionUltimaModificacion;
                }
            }
            
            internal DataColumn RowIdColumn {
                get {
                    return this.columnRowId;
                }
            }
            
            public sy_VariablesSucursalesRow this[int index] {
                get {
                    return ((sy_VariablesSucursalesRow)(this.Rows[index]));
                }
            }
            
            public event sy_VariablesSucursalesRowChangeEventHandler sy_VariablesSucursalesRowChanged;
            
            public event sy_VariablesSucursalesRowChangeEventHandler sy_VariablesSucursalesRowChanging;
            
            public event sy_VariablesSucursalesRowChangeEventHandler sy_VariablesSucursalesRowDeleted;
            
            public event sy_VariablesSucursalesRowChangeEventHandler sy_VariablesSucursalesRowDeleting;
            
            public void Addsy_VariablesSucursalesRow(sy_VariablesSucursalesRow row) {
                this.Rows.Add(row);
            }
            
            public sy_VariablesSucursalesRow Addsy_VariablesSucursalesRow(string IdVariable, long IdEmpresa, long IdSucursal, string Valor, System.DateTime FechaCreacion, long IdConecxionCreacion, System.Byte[] UltimaModificacion, long IdConexionUltimaModificacion, System.Guid RowId) {
                sy_VariablesSucursalesRow rowsy_VariablesSucursalesRow = ((sy_VariablesSucursalesRow)(this.NewRow()));
                rowsy_VariablesSucursalesRow.ItemArray = new object[] {
                        IdVariable,
                        IdEmpresa,
                        IdSucursal,
                        Valor,
                        FechaCreacion,
                        IdConecxionCreacion,
                        UltimaModificacion,
                        IdConexionUltimaModificacion,
                        RowId};
                this.Rows.Add(rowsy_VariablesSucursalesRow);
                return rowsy_VariablesSucursalesRow;
            }
            
            public sy_VariablesSucursalesRow FindByIdVariableIdEmpresaIdSucursal(string IdVariable, long IdEmpresa, long IdSucursal) {
                return ((sy_VariablesSucursalesRow)(this.Rows.Find(new object[] {
                            IdVariable,
                            IdEmpresa,
                            IdSucursal})));
            }
            
            public System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            public override DataTable Clone() {
                sy_VariablesSucursalesDataTable cln = ((sy_VariablesSucursalesDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            protected override DataTable CreateInstance() {
                return new sy_VariablesSucursalesDataTable();
            }
            
            internal void InitVars() {
                this.columnIdVariable = this.Columns["IdVariable"];
                this.columnIdEmpresa = this.Columns["IdEmpresa"];
                this.columnIdSucursal = this.Columns["IdSucursal"];
                this.columnValor = this.Columns["Valor"];
                this.columnFechaCreacion = this.Columns["FechaCreacion"];
                this.columnIdConecxionCreacion = this.Columns["IdConecxionCreacion"];
                this.columnUltimaModificacion = this.Columns["UltimaModificacion"];
                this.columnIdConexionUltimaModificacion = this.Columns["IdConexionUltimaModificacion"];
                this.columnRowId = this.Columns["RowId"];
            }
            
            private void InitClass() {
                this.columnIdVariable = new DataColumn("IdVariable", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdVariable);
                this.columnIdEmpresa = new DataColumn("IdEmpresa", typeof(long), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdEmpresa);
                this.columnIdSucursal = new DataColumn("IdSucursal", typeof(long), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdSucursal);
                this.columnValor = new DataColumn("Valor", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnValor);
                this.columnFechaCreacion = new DataColumn("FechaCreacion", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnFechaCreacion);
                this.columnIdConecxionCreacion = new DataColumn("IdConecxionCreacion", typeof(long), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdConecxionCreacion);
                this.columnUltimaModificacion = new DataColumn("UltimaModificacion", typeof(System.Byte[]), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnUltimaModificacion);
                this.columnIdConexionUltimaModificacion = new DataColumn("IdConexionUltimaModificacion", typeof(long), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdConexionUltimaModificacion);
                this.columnRowId = new DataColumn("RowId", typeof(System.Guid), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnRowId);
                this.Constraints.Add(new UniqueConstraint("sy_VariablesSucursalesKey1", new DataColumn[] {
                                this.columnIdVariable,
                                this.columnIdEmpresa,
                                this.columnIdSucursal}, true));
                this.columnIdVariable.AllowDBNull = false;
                this.columnIdEmpresa.AllowDBNull = false;
                this.columnIdSucursal.AllowDBNull = false;
                this.columnValor.AllowDBNull = false;
                this.columnFechaCreacion.AllowDBNull = false;
                this.columnIdConecxionCreacion.AllowDBNull = false;
                this.columnUltimaModificacion.ReadOnly = true;
            }
            
            public sy_VariablesSucursalesRow Newsy_VariablesSucursalesRow() {
                return ((sy_VariablesSucursalesRow)(this.NewRow()));
            }
            
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder) {
                return new sy_VariablesSucursalesRow(builder);
            }
            
            protected override System.Type GetRowType() {
                return typeof(sy_VariablesSucursalesRow);
            }
            
            protected override void OnRowChanged(DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.sy_VariablesSucursalesRowChanged != null)) {
                    this.sy_VariablesSucursalesRowChanged(this, new sy_VariablesSucursalesRowChangeEvent(((sy_VariablesSucursalesRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowChanging(DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.sy_VariablesSucursalesRowChanging != null)) {
                    this.sy_VariablesSucursalesRowChanging(this, new sy_VariablesSucursalesRowChangeEvent(((sy_VariablesSucursalesRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleted(DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.sy_VariablesSucursalesRowDeleted != null)) {
                    this.sy_VariablesSucursalesRowDeleted(this, new sy_VariablesSucursalesRowChangeEvent(((sy_VariablesSucursalesRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleting(DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.sy_VariablesSucursalesRowDeleting != null)) {
                    this.sy_VariablesSucursalesRowDeleting(this, new sy_VariablesSucursalesRowChangeEvent(((sy_VariablesSucursalesRow)(e.Row)), e.Action));
                }
            }
            
            public void Removesy_VariablesSucursalesRow(sy_VariablesSucursalesRow row) {
                this.Rows.Remove(row);
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class sy_VariablesSucursalesRow : DataRow {
            
            private sy_VariablesSucursalesDataTable tablesy_VariablesSucursales;
            
            internal sy_VariablesSucursalesRow(DataRowBuilder rb) : 
                    base(rb) {
                this.tablesy_VariablesSucursales = ((sy_VariablesSucursalesDataTable)(this.Table));
            }
            
            public string IdVariable {
                get {
                    return ((string)(this[this.tablesy_VariablesSucursales.IdVariableColumn]));
                }
                set {
                    this[this.tablesy_VariablesSucursales.IdVariableColumn] = value;
                }
            }
            
            public long IdEmpresa {
                get {
                    return ((long)(this[this.tablesy_VariablesSucursales.IdEmpresaColumn]));
                }
                set {
                    this[this.tablesy_VariablesSucursales.IdEmpresaColumn] = value;
                }
            }
            
            public long IdSucursal {
                get {
                    return ((long)(this[this.tablesy_VariablesSucursales.IdSucursalColumn]));
                }
                set {
                    this[this.tablesy_VariablesSucursales.IdSucursalColumn] = value;
                }
            }
            
            public string Valor {
                get {
                    return ((string)(this[this.tablesy_VariablesSucursales.ValorColumn]));
                }
                set {
                    this[this.tablesy_VariablesSucursales.ValorColumn] = value;
                }
            }
            
            public System.DateTime FechaCreacion {
                get {
                    return ((System.DateTime)(this[this.tablesy_VariablesSucursales.FechaCreacionColumn]));
                }
                set {
                    this[this.tablesy_VariablesSucursales.FechaCreacionColumn] = value;
                }
            }
            
            public long IdConecxionCreacion {
                get {
                    return ((long)(this[this.tablesy_VariablesSucursales.IdConecxionCreacionColumn]));
                }
                set {
                    this[this.tablesy_VariablesSucursales.IdConecxionCreacionColumn] = value;
                }
            }
            
            public System.Byte[] UltimaModificacion {
                get {
                    try {
                        return ((System.Byte[])(this[this.tablesy_VariablesSucursales.UltimaModificacionColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tablesy_VariablesSucursales.UltimaModificacionColumn] = value;
                }
            }
            
            public long IdConexionUltimaModificacion {
                get {
                    try {
                        return ((long)(this[this.tablesy_VariablesSucursales.IdConexionUltimaModificacionColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tablesy_VariablesSucursales.IdConexionUltimaModificacionColumn] = value;
                }
            }
            
            public System.Guid RowId {
                get {
                    try {
                        return ((System.Guid)(this[this.tablesy_VariablesSucursales.RowIdColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tablesy_VariablesSucursales.RowIdColumn] = value;
                }
            }
            
            public bool IsUltimaModificacionNull() {
                return this.IsNull(this.tablesy_VariablesSucursales.UltimaModificacionColumn);
            }
            
            public void SetUltimaModificacionNull() {
                this[this.tablesy_VariablesSucursales.UltimaModificacionColumn] = System.Convert.DBNull;
            }
            
            public bool IsIdConexionUltimaModificacionNull() {
                return this.IsNull(this.tablesy_VariablesSucursales.IdConexionUltimaModificacionColumn);
            }
            
            public void SetIdConexionUltimaModificacionNull() {
                this[this.tablesy_VariablesSucursales.IdConexionUltimaModificacionColumn] = System.Convert.DBNull;
            }
            
            public bool IsRowIdNull() {
                return this.IsNull(this.tablesy_VariablesSucursales.RowIdColumn);
            }
            
            public void SetRowIdNull() {
                this[this.tablesy_VariablesSucursales.RowIdColumn] = System.Convert.DBNull;
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class sy_VariablesSucursalesRowChangeEvent : EventArgs {
            
            private sy_VariablesSucursalesRow eventRow;
            
            private DataRowAction eventAction;
            
            public sy_VariablesSucursalesRowChangeEvent(sy_VariablesSucursalesRow row, DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            public sy_VariablesSucursalesRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            public DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
