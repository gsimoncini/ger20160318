//------------------------------------------------------------------------------
// <autogenerated>
//     This code was generated by a tool.
//     Runtime Version: 1.1.4322.2407
//
//     Changes to this file may cause incorrect behavior and will be lost if 
//     the code is regenerated.
// </autogenerated>
//------------------------------------------------------------------------------

namespace mz.erp.commontypes.data {
    using System;
    using System.Data;
    using System.Xml;
    using System.Runtime.Serialization;
    
    
    [Serializable()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Diagnostics.DebuggerStepThrough()]
    [System.ComponentModel.ToolboxItem(true)]
    public class tsa_ComprobantesDetAuxiliaresDataset : DataSet {
        
        private tsa_ComprobantesDetAuxiliaresDataTable tabletsa_ComprobantesDetAuxiliares;
        
        public tsa_ComprobantesDetAuxiliaresDataset() {
            this.InitClass();
            System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            this.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        protected tsa_ComprobantesDetAuxiliaresDataset(SerializationInfo info, StreamingContext context) {
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((strSchema != null)) {
                DataSet ds = new DataSet();
                ds.ReadXmlSchema(new XmlTextReader(new System.IO.StringReader(strSchema)));
                if ((ds.Tables["tsa_ComprobantesDetAuxiliares"] != null)) {
                    this.Tables.Add(new tsa_ComprobantesDetAuxiliaresDataTable(ds.Tables["tsa_ComprobantesDetAuxiliares"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.InitClass();
            }
            this.GetSerializationData(info, context);
            System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            this.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public tsa_ComprobantesDetAuxiliaresDataTable tsa_ComprobantesDetAuxiliares {
            get {
                return this.tabletsa_ComprobantesDetAuxiliares;
            }
        }
        
        public override DataSet Clone() {
            tsa_ComprobantesDetAuxiliaresDataset cln = ((tsa_ComprobantesDetAuxiliaresDataset)(base.Clone()));
            cln.InitVars();
            return cln;
        }
        
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        protected override void ReadXmlSerializable(XmlReader reader) {
            this.Reset();
            DataSet ds = new DataSet();
            ds.ReadXml(reader);
            if ((ds.Tables["tsa_ComprobantesDetAuxiliares"] != null)) {
                this.Tables.Add(new tsa_ComprobantesDetAuxiliaresDataTable(ds.Tables["tsa_ComprobantesDetAuxiliares"]));
            }
            this.DataSetName = ds.DataSetName;
            this.Prefix = ds.Prefix;
            this.Namespace = ds.Namespace;
            this.Locale = ds.Locale;
            this.CaseSensitive = ds.CaseSensitive;
            this.EnforceConstraints = ds.EnforceConstraints;
            this.Merge(ds, false, System.Data.MissingSchemaAction.Add);
            this.InitVars();
        }
        
        protected override System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            System.IO.MemoryStream stream = new System.IO.MemoryStream();
            this.WriteXmlSchema(new XmlTextWriter(stream, null));
            stream.Position = 0;
            return System.Xml.Schema.XmlSchema.Read(new XmlTextReader(stream), null);
        }
        
        internal void InitVars() {
            this.tabletsa_ComprobantesDetAuxiliares = ((tsa_ComprobantesDetAuxiliaresDataTable)(this.Tables["tsa_ComprobantesDetAuxiliares"]));
            if ((this.tabletsa_ComprobantesDetAuxiliares != null)) {
                this.tabletsa_ComprobantesDetAuxiliares.InitVars();
            }
        }
        
        private void InitClass() {
            this.DataSetName = "tsa_ComprobantesDetAuxiliaresDataset";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/tsa_ComprobantesDetAuxiliares.xsd";
            this.Locale = new System.Globalization.CultureInfo("en-US");
            this.CaseSensitive = false;
            this.EnforceConstraints = true;
            this.tabletsa_ComprobantesDetAuxiliares = new tsa_ComprobantesDetAuxiliaresDataTable();
            this.Tables.Add(this.tabletsa_ComprobantesDetAuxiliares);
        }
        
        private bool ShouldSerializetsa_ComprobantesDetAuxiliares() {
            return false;
        }
        
        private void SchemaChanged(object sender, System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        public delegate void tsa_ComprobantesDetAuxiliaresRowChangeEventHandler(object sender, tsa_ComprobantesDetAuxiliaresRowChangeEvent e);
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class tsa_ComprobantesDetAuxiliaresDataTable : DataTable, System.Collections.IEnumerable {
            
            private DataColumn columnIdComprobante;
            
            private DataColumn columnOrdinal;
            
            private DataColumn columnIdEmpresa;
            
            private DataColumn columnIdSucursal;
            
            private DataColumn columnContadorOrigen;
            
            private DataColumn columnContadorDestino;
            
            private DataColumn columnFechaCreacion;
            
            private DataColumn columnIdConexionCreacion;
            
            private DataColumn columnUltimaModificacion;
            
            private DataColumn columnIdConexionUltimaModificacion;
            
            private DataColumn columnIdReservado;
            
            private DataColumn columnRowId;
            
            private DataColumn columnVisible;
            
            private DataColumn columnIdOrdenReparacion;
            
            private DataColumn columnIdComprobantesPredecesores;
            
            private DataColumn columnIdComprobantesSucesores;
            
            private DataColumn columnIdTiposComprobantesPredecesores;
            
            private DataColumn columnIdTiposComprobantesSucesores;
            
            private DataColumn columnIdInstanciaOrdenReparacion;
            
            private DataColumn columnIdRepuestoOrdenReparacion;
            
            private DataColumn columnIdTareaRealizada;
            
            private DataColumn columnIdResponsableOrigen;
            
            private DataColumn columnEquipo;
            
            private DataColumn columnOrdinalesPredecesores;
            
            private DataColumn columnOrdinalesSucesores;
            
            internal tsa_ComprobantesDetAuxiliaresDataTable() : 
                    base("tsa_ComprobantesDetAuxiliares") {
                this.InitClass();
            }
            
            internal tsa_ComprobantesDetAuxiliaresDataTable(DataTable table) : 
                    base(table.TableName) {
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
                this.DisplayExpression = table.DisplayExpression;
            }
            
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            internal DataColumn IdComprobanteColumn {
                get {
                    return this.columnIdComprobante;
                }
            }
            
            internal DataColumn OrdinalColumn {
                get {
                    return this.columnOrdinal;
                }
            }
            
            internal DataColumn IdEmpresaColumn {
                get {
                    return this.columnIdEmpresa;
                }
            }
            
            internal DataColumn IdSucursalColumn {
                get {
                    return this.columnIdSucursal;
                }
            }
            
            internal DataColumn ContadorOrigenColumn {
                get {
                    return this.columnContadorOrigen;
                }
            }
            
            internal DataColumn ContadorDestinoColumn {
                get {
                    return this.columnContadorDestino;
                }
            }
            
            internal DataColumn FechaCreacionColumn {
                get {
                    return this.columnFechaCreacion;
                }
            }
            
            internal DataColumn IdConexionCreacionColumn {
                get {
                    return this.columnIdConexionCreacion;
                }
            }
            
            internal DataColumn UltimaModificacionColumn {
                get {
                    return this.columnUltimaModificacion;
                }
            }
            
            internal DataColumn IdConexionUltimaModificacionColumn {
                get {
                    return this.columnIdConexionUltimaModificacion;
                }
            }
            
            internal DataColumn IdReservadoColumn {
                get {
                    return this.columnIdReservado;
                }
            }
            
            internal DataColumn RowIdColumn {
                get {
                    return this.columnRowId;
                }
            }
            
            internal DataColumn VisibleColumn {
                get {
                    return this.columnVisible;
                }
            }
            
            internal DataColumn IdOrdenReparacionColumn {
                get {
                    return this.columnIdOrdenReparacion;
                }
            }
            
            internal DataColumn IdComprobantesPredecesoresColumn {
                get {
                    return this.columnIdComprobantesPredecesores;
                }
            }
            
            internal DataColumn IdComprobantesSucesoresColumn {
                get {
                    return this.columnIdComprobantesSucesores;
                }
            }
            
            internal DataColumn IdTiposComprobantesPredecesoresColumn {
                get {
                    return this.columnIdTiposComprobantesPredecesores;
                }
            }
            
            internal DataColumn IdTiposComprobantesSucesoresColumn {
                get {
                    return this.columnIdTiposComprobantesSucesores;
                }
            }
            
            internal DataColumn IdInstanciaOrdenReparacionColumn {
                get {
                    return this.columnIdInstanciaOrdenReparacion;
                }
            }
            
            internal DataColumn IdRepuestoOrdenReparacionColumn {
                get {
                    return this.columnIdRepuestoOrdenReparacion;
                }
            }
            
            internal DataColumn IdTareaRealizadaColumn {
                get {
                    return this.columnIdTareaRealizada;
                }
            }
            
            internal DataColumn IdResponsableOrigenColumn {
                get {
                    return this.columnIdResponsableOrigen;
                }
            }
            
            internal DataColumn EquipoColumn {
                get {
                    return this.columnEquipo;
                }
            }
            
            internal DataColumn OrdinalesPredecesoresColumn {
                get {
                    return this.columnOrdinalesPredecesores;
                }
            }
            
            internal DataColumn OrdinalesSucesoresColumn {
                get {
                    return this.columnOrdinalesSucesores;
                }
            }
            
            public tsa_ComprobantesDetAuxiliaresRow this[int index] {
                get {
                    return ((tsa_ComprobantesDetAuxiliaresRow)(this.Rows[index]));
                }
            }
            
            public event tsa_ComprobantesDetAuxiliaresRowChangeEventHandler tsa_ComprobantesDetAuxiliaresRowChanged;
            
            public event tsa_ComprobantesDetAuxiliaresRowChangeEventHandler tsa_ComprobantesDetAuxiliaresRowChanging;
            
            public event tsa_ComprobantesDetAuxiliaresRowChangeEventHandler tsa_ComprobantesDetAuxiliaresRowDeleted;
            
            public event tsa_ComprobantesDetAuxiliaresRowChangeEventHandler tsa_ComprobantesDetAuxiliaresRowDeleting;
            
            public void Addtsa_ComprobantesDetAuxiliaresRow(tsa_ComprobantesDetAuxiliaresRow row) {
                this.Rows.Add(row);
            }
            
            public tsa_ComprobantesDetAuxiliaresRow Addtsa_ComprobantesDetAuxiliaresRow(
                        string IdComprobante, 
                        long Ordinal, 
                        long IdEmpresa, 
                        long IdSucursal, 
                        long ContadorOrigen, 
                        long ContadorDestino, 
                        System.DateTime FechaCreacion, 
                        long IdConexionCreacion, 
                        System.Byte[] UltimaModificacion, 
                        long IdConexionUltimaModificacion, 
                        long IdReservado, 
                        System.Guid RowId, 
                        bool Visible, 
                        long IdOrdenReparacion, 
                        string IdComprobantesPredecesores, 
                        string IdComprobantesSucesores, 
                        string IdTiposComprobantesPredecesores, 
                        string IdTiposComprobantesSucesores, 
                        long IdInstanciaOrdenReparacion, 
                        long IdRepuestoOrdenReparacion, 
                        long IdTareaRealizada, 
                        string IdResponsableOrigen, 
                        long Equipo, 
                        string OrdinalesPredecesores, 
                        string OrdinalesSucesores) {
                tsa_ComprobantesDetAuxiliaresRow rowtsa_ComprobantesDetAuxiliaresRow = ((tsa_ComprobantesDetAuxiliaresRow)(this.NewRow()));
                rowtsa_ComprobantesDetAuxiliaresRow.ItemArray = new object[] {
                        IdComprobante,
                        Ordinal,
                        IdEmpresa,
                        IdSucursal,
                        ContadorOrigen,
                        ContadorDestino,
                        FechaCreacion,
                        IdConexionCreacion,
                        UltimaModificacion,
                        IdConexionUltimaModificacion,
                        IdReservado,
                        RowId,
                        Visible,
                        IdOrdenReparacion,
                        IdComprobantesPredecesores,
                        IdComprobantesSucesores,
                        IdTiposComprobantesPredecesores,
                        IdTiposComprobantesSucesores,
                        IdInstanciaOrdenReparacion,
                        IdRepuestoOrdenReparacion,
                        IdTareaRealizada,
                        IdResponsableOrigen,
                        Equipo,
                        OrdinalesPredecesores,
                        OrdinalesSucesores};
                this.Rows.Add(rowtsa_ComprobantesDetAuxiliaresRow);
                return rowtsa_ComprobantesDetAuxiliaresRow;
            }
            
            public tsa_ComprobantesDetAuxiliaresRow FindByIdComprobanteOrdinal(string IdComprobante, long Ordinal) {
                return ((tsa_ComprobantesDetAuxiliaresRow)(this.Rows.Find(new object[] {
                            IdComprobante,
                            Ordinal})));
            }
            
            public System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            public override DataTable Clone() {
                tsa_ComprobantesDetAuxiliaresDataTable cln = ((tsa_ComprobantesDetAuxiliaresDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            protected override DataTable CreateInstance() {
                return new tsa_ComprobantesDetAuxiliaresDataTable();
            }
            
            internal void InitVars() {
                this.columnIdComprobante = this.Columns["IdComprobante"];
                this.columnOrdinal = this.Columns["Ordinal"];
                this.columnIdEmpresa = this.Columns["IdEmpresa"];
                this.columnIdSucursal = this.Columns["IdSucursal"];
                this.columnContadorOrigen = this.Columns["ContadorOrigen"];
                this.columnContadorDestino = this.Columns["ContadorDestino"];
                this.columnFechaCreacion = this.Columns["FechaCreacion"];
                this.columnIdConexionCreacion = this.Columns["IdConexionCreacion"];
                this.columnUltimaModificacion = this.Columns["UltimaModificacion"];
                this.columnIdConexionUltimaModificacion = this.Columns["IdConexionUltimaModificacion"];
                this.columnIdReservado = this.Columns["IdReservado"];
                this.columnRowId = this.Columns["RowId"];
                this.columnVisible = this.Columns["Visible"];
                this.columnIdOrdenReparacion = this.Columns["IdOrdenReparacion"];
                this.columnIdComprobantesPredecesores = this.Columns["IdComprobantesPredecesores"];
                this.columnIdComprobantesSucesores = this.Columns["IdComprobantesSucesores"];
                this.columnIdTiposComprobantesPredecesores = this.Columns["IdTiposComprobantesPredecesores"];
                this.columnIdTiposComprobantesSucesores = this.Columns["IdTiposComprobantesSucesores"];
                this.columnIdInstanciaOrdenReparacion = this.Columns["IdInstanciaOrdenReparacion"];
                this.columnIdRepuestoOrdenReparacion = this.Columns["IdRepuestoOrdenReparacion"];
                this.columnIdTareaRealizada = this.Columns["IdTareaRealizada"];
                this.columnIdResponsableOrigen = this.Columns["IdResponsableOrigen"];
                this.columnEquipo = this.Columns["Equipo"];
                this.columnOrdinalesPredecesores = this.Columns["OrdinalesPredecesores"];
                this.columnOrdinalesSucesores = this.Columns["OrdinalesSucesores"];
            }
            
            private void InitClass() {
                this.columnIdComprobante = new DataColumn("IdComprobante", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdComprobante);
                this.columnOrdinal = new DataColumn("Ordinal", typeof(long), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnOrdinal);
                this.columnIdEmpresa = new DataColumn("IdEmpresa", typeof(long), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdEmpresa);
                this.columnIdSucursal = new DataColumn("IdSucursal", typeof(long), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdSucursal);
                this.columnContadorOrigen = new DataColumn("ContadorOrigen", typeof(long), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnContadorOrigen);
                this.columnContadorDestino = new DataColumn("ContadorDestino", typeof(long), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnContadorDestino);
                this.columnFechaCreacion = new DataColumn("FechaCreacion", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnFechaCreacion);
                this.columnIdConexionCreacion = new DataColumn("IdConexionCreacion", typeof(long), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdConexionCreacion);
                this.columnUltimaModificacion = new DataColumn("UltimaModificacion", typeof(System.Byte[]), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnUltimaModificacion);
                this.columnIdConexionUltimaModificacion = new DataColumn("IdConexionUltimaModificacion", typeof(long), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdConexionUltimaModificacion);
                this.columnIdReservado = new DataColumn("IdReservado", typeof(long), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdReservado);
                this.columnRowId = new DataColumn("RowId", typeof(System.Guid), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnRowId);
                this.columnVisible = new DataColumn("Visible", typeof(bool), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnVisible);
                this.columnIdOrdenReparacion = new DataColumn("IdOrdenReparacion", typeof(long), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdOrdenReparacion);
                this.columnIdComprobantesPredecesores = new DataColumn("IdComprobantesPredecesores", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdComprobantesPredecesores);
                this.columnIdComprobantesSucesores = new DataColumn("IdComprobantesSucesores", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdComprobantesSucesores);
                this.columnIdTiposComprobantesPredecesores = new DataColumn("IdTiposComprobantesPredecesores", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdTiposComprobantesPredecesores);
                this.columnIdTiposComprobantesSucesores = new DataColumn("IdTiposComprobantesSucesores", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdTiposComprobantesSucesores);
                this.columnIdInstanciaOrdenReparacion = new DataColumn("IdInstanciaOrdenReparacion", typeof(long), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdInstanciaOrdenReparacion);
                this.columnIdRepuestoOrdenReparacion = new DataColumn("IdRepuestoOrdenReparacion", typeof(long), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdRepuestoOrdenReparacion);
                this.columnIdTareaRealizada = new DataColumn("IdTareaRealizada", typeof(long), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdTareaRealizada);
                this.columnIdResponsableOrigen = new DataColumn("IdResponsableOrigen", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdResponsableOrigen);
                this.columnEquipo = new DataColumn("Equipo", typeof(long), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnEquipo);
                this.columnOrdinalesPredecesores = new DataColumn("OrdinalesPredecesores", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnOrdinalesPredecesores);
                this.columnOrdinalesSucesores = new DataColumn("OrdinalesSucesores", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnOrdinalesSucesores);
                this.Constraints.Add(new UniqueConstraint("tsa_ComprobantesDetAuxiliaresDatasetKey1", new DataColumn[] {
                                this.columnIdComprobante,
                                this.columnOrdinal}, true));
                this.columnIdComprobante.AllowDBNull = false;
                this.columnOrdinal.AllowDBNull = false;
                this.columnUltimaModificacion.ReadOnly = true;
            }
            
            public tsa_ComprobantesDetAuxiliaresRow Newtsa_ComprobantesDetAuxiliaresRow() {
                return ((tsa_ComprobantesDetAuxiliaresRow)(this.NewRow()));
            }
            
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder) {
                return new tsa_ComprobantesDetAuxiliaresRow(builder);
            }
            
            protected override System.Type GetRowType() {
                return typeof(tsa_ComprobantesDetAuxiliaresRow);
            }
            
            protected override void OnRowChanged(DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.tsa_ComprobantesDetAuxiliaresRowChanged != null)) {
                    this.tsa_ComprobantesDetAuxiliaresRowChanged(this, new tsa_ComprobantesDetAuxiliaresRowChangeEvent(((tsa_ComprobantesDetAuxiliaresRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowChanging(DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.tsa_ComprobantesDetAuxiliaresRowChanging != null)) {
                    this.tsa_ComprobantesDetAuxiliaresRowChanging(this, new tsa_ComprobantesDetAuxiliaresRowChangeEvent(((tsa_ComprobantesDetAuxiliaresRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleted(DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.tsa_ComprobantesDetAuxiliaresRowDeleted != null)) {
                    this.tsa_ComprobantesDetAuxiliaresRowDeleted(this, new tsa_ComprobantesDetAuxiliaresRowChangeEvent(((tsa_ComprobantesDetAuxiliaresRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleting(DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.tsa_ComprobantesDetAuxiliaresRowDeleting != null)) {
                    this.tsa_ComprobantesDetAuxiliaresRowDeleting(this, new tsa_ComprobantesDetAuxiliaresRowChangeEvent(((tsa_ComprobantesDetAuxiliaresRow)(e.Row)), e.Action));
                }
            }
            
            public void Removetsa_ComprobantesDetAuxiliaresRow(tsa_ComprobantesDetAuxiliaresRow row) {
                this.Rows.Remove(row);
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class tsa_ComprobantesDetAuxiliaresRow : DataRow {
            
            private tsa_ComprobantesDetAuxiliaresDataTable tabletsa_ComprobantesDetAuxiliares;
            
            internal tsa_ComprobantesDetAuxiliaresRow(DataRowBuilder rb) : 
                    base(rb) {
                this.tabletsa_ComprobantesDetAuxiliares = ((tsa_ComprobantesDetAuxiliaresDataTable)(this.Table));
            }
            
            public string IdComprobante {
                get {
                    return ((string)(this[this.tabletsa_ComprobantesDetAuxiliares.IdComprobanteColumn]));
                }
                set {
                    this[this.tabletsa_ComprobantesDetAuxiliares.IdComprobanteColumn] = value;
                }
            }
            
            public long Ordinal {
                get {
                    return ((long)(this[this.tabletsa_ComprobantesDetAuxiliares.OrdinalColumn]));
                }
                set {
                    this[this.tabletsa_ComprobantesDetAuxiliares.OrdinalColumn] = value;
                }
            }
            
            public long IdEmpresa {
                get {
                    try {
                        return ((long)(this[this.tabletsa_ComprobantesDetAuxiliares.IdEmpresaColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletsa_ComprobantesDetAuxiliares.IdEmpresaColumn] = value;
                }
            }
            
            public long IdSucursal {
                get {
                    try {
                        return ((long)(this[this.tabletsa_ComprobantesDetAuxiliares.IdSucursalColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletsa_ComprobantesDetAuxiliares.IdSucursalColumn] = value;
                }
            }
            
            public long ContadorOrigen {
                get {
                    try {
                        return ((long)(this[this.tabletsa_ComprobantesDetAuxiliares.ContadorOrigenColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletsa_ComprobantesDetAuxiliares.ContadorOrigenColumn] = value;
                }
            }
            
            public long ContadorDestino {
                get {
                    try {
                        return ((long)(this[this.tabletsa_ComprobantesDetAuxiliares.ContadorDestinoColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletsa_ComprobantesDetAuxiliares.ContadorDestinoColumn] = value;
                }
            }
            
            public System.DateTime FechaCreacion {
                get {
                    try {
                        return ((System.DateTime)(this[this.tabletsa_ComprobantesDetAuxiliares.FechaCreacionColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletsa_ComprobantesDetAuxiliares.FechaCreacionColumn] = value;
                }
            }
            
            public long IdConexionCreacion {
                get {
                    try {
                        return ((long)(this[this.tabletsa_ComprobantesDetAuxiliares.IdConexionCreacionColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletsa_ComprobantesDetAuxiliares.IdConexionCreacionColumn] = value;
                }
            }
            
            public System.Byte[] UltimaModificacion {
                get {
                    try {
                        return ((System.Byte[])(this[this.tabletsa_ComprobantesDetAuxiliares.UltimaModificacionColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletsa_ComprobantesDetAuxiliares.UltimaModificacionColumn] = value;
                }
            }
            
            public long IdConexionUltimaModificacion {
                get {
                    try {
                        return ((long)(this[this.tabletsa_ComprobantesDetAuxiliares.IdConexionUltimaModificacionColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletsa_ComprobantesDetAuxiliares.IdConexionUltimaModificacionColumn] = value;
                }
            }
            
            public long IdReservado {
                get {
                    try {
                        return ((long)(this[this.tabletsa_ComprobantesDetAuxiliares.IdReservadoColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletsa_ComprobantesDetAuxiliares.IdReservadoColumn] = value;
                }
            }
            
            public System.Guid RowId {
                get {
                    try {
                        return ((System.Guid)(this[this.tabletsa_ComprobantesDetAuxiliares.RowIdColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletsa_ComprobantesDetAuxiliares.RowIdColumn] = value;
                }
            }
            
            public bool Visible {
                get {
                    try {
                        return ((bool)(this[this.tabletsa_ComprobantesDetAuxiliares.VisibleColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletsa_ComprobantesDetAuxiliares.VisibleColumn] = value;
                }
            }
            
            public long IdOrdenReparacion {
                get {
                    try {
                        return ((long)(this[this.tabletsa_ComprobantesDetAuxiliares.IdOrdenReparacionColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletsa_ComprobantesDetAuxiliares.IdOrdenReparacionColumn] = value;
                }
            }
            
            public string IdComprobantesPredecesores {
                get {
                    try {
                        return ((string)(this[this.tabletsa_ComprobantesDetAuxiliares.IdComprobantesPredecesoresColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletsa_ComprobantesDetAuxiliares.IdComprobantesPredecesoresColumn] = value;
                }
            }
            
            public string IdComprobantesSucesores {
                get {
                    try {
                        return ((string)(this[this.tabletsa_ComprobantesDetAuxiliares.IdComprobantesSucesoresColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletsa_ComprobantesDetAuxiliares.IdComprobantesSucesoresColumn] = value;
                }
            }
            
            public string IdTiposComprobantesPredecesores {
                get {
                    try {
                        return ((string)(this[this.tabletsa_ComprobantesDetAuxiliares.IdTiposComprobantesPredecesoresColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletsa_ComprobantesDetAuxiliares.IdTiposComprobantesPredecesoresColumn] = value;
                }
            }
            
            public string IdTiposComprobantesSucesores {
                get {
                    try {
                        return ((string)(this[this.tabletsa_ComprobantesDetAuxiliares.IdTiposComprobantesSucesoresColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletsa_ComprobantesDetAuxiliares.IdTiposComprobantesSucesoresColumn] = value;
                }
            }
            
            public long IdInstanciaOrdenReparacion {
                get {
                    try {
                        return ((long)(this[this.tabletsa_ComprobantesDetAuxiliares.IdInstanciaOrdenReparacionColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletsa_ComprobantesDetAuxiliares.IdInstanciaOrdenReparacionColumn] = value;
                }
            }
            
            public long IdRepuestoOrdenReparacion {
                get {
                    try {
                        return ((long)(this[this.tabletsa_ComprobantesDetAuxiliares.IdRepuestoOrdenReparacionColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletsa_ComprobantesDetAuxiliares.IdRepuestoOrdenReparacionColumn] = value;
                }
            }
            
            public long IdTareaRealizada {
                get {
                    try {
                        return ((long)(this[this.tabletsa_ComprobantesDetAuxiliares.IdTareaRealizadaColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletsa_ComprobantesDetAuxiliares.IdTareaRealizadaColumn] = value;
                }
            }
            
            public string IdResponsableOrigen {
                get {
                    try {
                        return ((string)(this[this.tabletsa_ComprobantesDetAuxiliares.IdResponsableOrigenColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletsa_ComprobantesDetAuxiliares.IdResponsableOrigenColumn] = value;
                }
            }
            
            public long Equipo {
                get {
                    try {
                        return ((long)(this[this.tabletsa_ComprobantesDetAuxiliares.EquipoColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletsa_ComprobantesDetAuxiliares.EquipoColumn] = value;
                }
            }
            
            public string OrdinalesPredecesores {
                get {
                    if (this.IsOrdinalesPredecesoresNull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tabletsa_ComprobantesDetAuxiliares.OrdinalesPredecesoresColumn]));
                    }
                }
                set {
                    this[this.tabletsa_ComprobantesDetAuxiliares.OrdinalesPredecesoresColumn] = value;
                }
            }
            
            public string OrdinalesSucesores {
                get {
                    if (this.IsOrdinalesSucesoresNull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tabletsa_ComprobantesDetAuxiliares.OrdinalesSucesoresColumn]));
                    }
                }
                set {
                    this[this.tabletsa_ComprobantesDetAuxiliares.OrdinalesSucesoresColumn] = value;
                }
            }
            
            public bool IsIdEmpresaNull() {
                return this.IsNull(this.tabletsa_ComprobantesDetAuxiliares.IdEmpresaColumn);
            }
            
            public void SetIdEmpresaNull() {
                this[this.tabletsa_ComprobantesDetAuxiliares.IdEmpresaColumn] = System.Convert.DBNull;
            }
            
            public bool IsIdSucursalNull() {
                return this.IsNull(this.tabletsa_ComprobantesDetAuxiliares.IdSucursalColumn);
            }
            
            public void SetIdSucursalNull() {
                this[this.tabletsa_ComprobantesDetAuxiliares.IdSucursalColumn] = System.Convert.DBNull;
            }
            
            public bool IsContadorOrigenNull() {
                return this.IsNull(this.tabletsa_ComprobantesDetAuxiliares.ContadorOrigenColumn);
            }
            
            public void SetContadorOrigenNull() {
                this[this.tabletsa_ComprobantesDetAuxiliares.ContadorOrigenColumn] = System.Convert.DBNull;
            }
            
            public bool IsContadorDestinoNull() {
                return this.IsNull(this.tabletsa_ComprobantesDetAuxiliares.ContadorDestinoColumn);
            }
            
            public void SetContadorDestinoNull() {
                this[this.tabletsa_ComprobantesDetAuxiliares.ContadorDestinoColumn] = System.Convert.DBNull;
            }
            
            public bool IsFechaCreacionNull() {
                return this.IsNull(this.tabletsa_ComprobantesDetAuxiliares.FechaCreacionColumn);
            }
            
            public void SetFechaCreacionNull() {
                this[this.tabletsa_ComprobantesDetAuxiliares.FechaCreacionColumn] = System.Convert.DBNull;
            }
            
            public bool IsIdConexionCreacionNull() {
                return this.IsNull(this.tabletsa_ComprobantesDetAuxiliares.IdConexionCreacionColumn);
            }
            
            public void SetIdConexionCreacionNull() {
                this[this.tabletsa_ComprobantesDetAuxiliares.IdConexionCreacionColumn] = System.Convert.DBNull;
            }
            
            public bool IsUltimaModificacionNull() {
                return this.IsNull(this.tabletsa_ComprobantesDetAuxiliares.UltimaModificacionColumn);
            }
            
            public void SetUltimaModificacionNull() {
                this[this.tabletsa_ComprobantesDetAuxiliares.UltimaModificacionColumn] = System.Convert.DBNull;
            }
            
            public bool IsIdConexionUltimaModificacionNull() {
                return this.IsNull(this.tabletsa_ComprobantesDetAuxiliares.IdConexionUltimaModificacionColumn);
            }
            
            public void SetIdConexionUltimaModificacionNull() {
                this[this.tabletsa_ComprobantesDetAuxiliares.IdConexionUltimaModificacionColumn] = System.Convert.DBNull;
            }
            
            public bool IsIdReservadoNull() {
                return this.IsNull(this.tabletsa_ComprobantesDetAuxiliares.IdReservadoColumn);
            }
            
            public void SetIdReservadoNull() {
                this[this.tabletsa_ComprobantesDetAuxiliares.IdReservadoColumn] = System.Convert.DBNull;
            }
            
            public bool IsRowIdNull() {
                return this.IsNull(this.tabletsa_ComprobantesDetAuxiliares.RowIdColumn);
            }
            
            public void SetRowIdNull() {
                this[this.tabletsa_ComprobantesDetAuxiliares.RowIdColumn] = System.Convert.DBNull;
            }
            
            public bool IsVisibleNull() {
                return this.IsNull(this.tabletsa_ComprobantesDetAuxiliares.VisibleColumn);
            }
            
            public void SetVisibleNull() {
                this[this.tabletsa_ComprobantesDetAuxiliares.VisibleColumn] = System.Convert.DBNull;
            }
            
            public bool IsIdOrdenReparacionNull() {
                return this.IsNull(this.tabletsa_ComprobantesDetAuxiliares.IdOrdenReparacionColumn);
            }
            
            public void SetIdOrdenReparacionNull() {
                this[this.tabletsa_ComprobantesDetAuxiliares.IdOrdenReparacionColumn] = System.Convert.DBNull;
            }
            
            public bool IsIdComprobantesPredecesoresNull() {
                return this.IsNull(this.tabletsa_ComprobantesDetAuxiliares.IdComprobantesPredecesoresColumn);
            }
            
            public void SetIdComprobantesPredecesoresNull() {
                this[this.tabletsa_ComprobantesDetAuxiliares.IdComprobantesPredecesoresColumn] = System.Convert.DBNull;
            }
            
            public bool IsIdComprobantesSucesoresNull() {
                return this.IsNull(this.tabletsa_ComprobantesDetAuxiliares.IdComprobantesSucesoresColumn);
            }
            
            public void SetIdComprobantesSucesoresNull() {
                this[this.tabletsa_ComprobantesDetAuxiliares.IdComprobantesSucesoresColumn] = System.Convert.DBNull;
            }
            
            public bool IsIdTiposComprobantesPredecesoresNull() {
                return this.IsNull(this.tabletsa_ComprobantesDetAuxiliares.IdTiposComprobantesPredecesoresColumn);
            }
            
            public void SetIdTiposComprobantesPredecesoresNull() {
                this[this.tabletsa_ComprobantesDetAuxiliares.IdTiposComprobantesPredecesoresColumn] = System.Convert.DBNull;
            }
            
            public bool IsIdTiposComprobantesSucesoresNull() {
                return this.IsNull(this.tabletsa_ComprobantesDetAuxiliares.IdTiposComprobantesSucesoresColumn);
            }
            
            public void SetIdTiposComprobantesSucesoresNull() {
                this[this.tabletsa_ComprobantesDetAuxiliares.IdTiposComprobantesSucesoresColumn] = System.Convert.DBNull;
            }
            
            public bool IsIdInstanciaOrdenReparacionNull() {
                return this.IsNull(this.tabletsa_ComprobantesDetAuxiliares.IdInstanciaOrdenReparacionColumn);
            }
            
            public void SetIdInstanciaOrdenReparacionNull() {
                this[this.tabletsa_ComprobantesDetAuxiliares.IdInstanciaOrdenReparacionColumn] = System.Convert.DBNull;
            }
            
            public bool IsIdRepuestoOrdenReparacionNull() {
                return this.IsNull(this.tabletsa_ComprobantesDetAuxiliares.IdRepuestoOrdenReparacionColumn);
            }
            
            public void SetIdRepuestoOrdenReparacionNull() {
                this[this.tabletsa_ComprobantesDetAuxiliares.IdRepuestoOrdenReparacionColumn] = System.Convert.DBNull;
            }
            
            public bool IsIdTareaRealizadaNull() {
                return this.IsNull(this.tabletsa_ComprobantesDetAuxiliares.IdTareaRealizadaColumn);
            }
            
            public void SetIdTareaRealizadaNull() {
                this[this.tabletsa_ComprobantesDetAuxiliares.IdTareaRealizadaColumn] = System.Convert.DBNull;
            }
            
            public bool IsIdResponsableOrigenNull() {
                return this.IsNull(this.tabletsa_ComprobantesDetAuxiliares.IdResponsableOrigenColumn);
            }
            
            public void SetIdResponsableOrigenNull() {
                this[this.tabletsa_ComprobantesDetAuxiliares.IdResponsableOrigenColumn] = System.Convert.DBNull;
            }
            
            public bool IsEquipoNull() {
                return this.IsNull(this.tabletsa_ComprobantesDetAuxiliares.EquipoColumn);
            }
            
            public void SetEquipoNull() {
                this[this.tabletsa_ComprobantesDetAuxiliares.EquipoColumn] = System.Convert.DBNull;
            }
            
            public bool IsOrdinalesPredecesoresNull() {
                return this.IsNull(this.tabletsa_ComprobantesDetAuxiliares.OrdinalesPredecesoresColumn);
            }
            
            public void SetOrdinalesPredecesoresNull() {
                this[this.tabletsa_ComprobantesDetAuxiliares.OrdinalesPredecesoresColumn] = System.Convert.DBNull;
            }
            
            public bool IsOrdinalesSucesoresNull() {
                return this.IsNull(this.tabletsa_ComprobantesDetAuxiliares.OrdinalesSucesoresColumn);
            }
            
            public void SetOrdinalesSucesoresNull() {
                this[this.tabletsa_ComprobantesDetAuxiliares.OrdinalesSucesoresColumn] = System.Convert.DBNull;
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class tsa_ComprobantesDetAuxiliaresRowChangeEvent : EventArgs {
            
            private tsa_ComprobantesDetAuxiliaresRow eventRow;
            
            private DataRowAction eventAction;
            
            public tsa_ComprobantesDetAuxiliaresRowChangeEvent(tsa_ComprobantesDetAuxiliaresRow row, DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            public tsa_ComprobantesDetAuxiliaresRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            public DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
