//------------------------------------------------------------------------------
// <autogenerated>
//     This code was generated by a tool.
//     Runtime Version: 1.1.4322.573
//
//     Changes to this file may cause incorrect behavior and will be lost if 
//     the code is regenerated.
// </autogenerated>
//------------------------------------------------------------------------------

namespace mz.erp.commontypes.data {
    using System;
    using System.Data;
    using System.Xml;
    using System.Runtime.Serialization;
    
    
    [Serializable()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Diagnostics.DebuggerStepThrough()]
    [System.ComponentModel.ToolboxItem(true)]
    public class tfi_MovimientoBancarioDataset : DataSet {
        
        private tfi_MovimientoBancarioDataTable tabletfi_MovimientoBancario;
        
        public tfi_MovimientoBancarioDataset() {
            this.InitClass();
            System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            this.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        protected tfi_MovimientoBancarioDataset(SerializationInfo info, StreamingContext context) {
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((strSchema != null)) {
                DataSet ds = new DataSet();
                ds.ReadXmlSchema(new XmlTextReader(new System.IO.StringReader(strSchema)));
                if ((ds.Tables["tfi_MovimientoBancario"] != null)) {
                    this.Tables.Add(new tfi_MovimientoBancarioDataTable(ds.Tables["tfi_MovimientoBancario"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.InitClass();
            }
            this.GetSerializationData(info, context);
            System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            this.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public tfi_MovimientoBancarioDataTable tfi_MovimientoBancario {
            get {
                return this.tabletfi_MovimientoBancario;
            }
        }
        
        public override DataSet Clone() {
            tfi_MovimientoBancarioDataset cln = ((tfi_MovimientoBancarioDataset)(base.Clone()));
            cln.InitVars();
            return cln;
        }
        
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        protected override void ReadXmlSerializable(XmlReader reader) {
            this.Reset();
            DataSet ds = new DataSet();
            ds.ReadXml(reader);
            if ((ds.Tables["tfi_MovimientoBancario"] != null)) {
                this.Tables.Add(new tfi_MovimientoBancarioDataTable(ds.Tables["tfi_MovimientoBancario"]));
            }
            this.DataSetName = ds.DataSetName;
            this.Prefix = ds.Prefix;
            this.Namespace = ds.Namespace;
            this.Locale = ds.Locale;
            this.CaseSensitive = ds.CaseSensitive;
            this.EnforceConstraints = ds.EnforceConstraints;
            this.Merge(ds, false, System.Data.MissingSchemaAction.Add);
            this.InitVars();
        }
        
        protected override System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            System.IO.MemoryStream stream = new System.IO.MemoryStream();
            this.WriteXmlSchema(new XmlTextWriter(stream, null));
            stream.Position = 0;
            return System.Xml.Schema.XmlSchema.Read(new XmlTextReader(stream), null);
        }
        
        internal void InitVars() {
            this.tabletfi_MovimientoBancario = ((tfi_MovimientoBancarioDataTable)(this.Tables["tfi_MovimientoBancario"]));
            if ((this.tabletfi_MovimientoBancario != null)) {
                this.tabletfi_MovimientoBancario.InitVars();
            }
        }
        
        private void InitClass() {
            this.DataSetName = "tfi_MovimientoBancarioDataset";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/tfi_MovimientoBancario.xsd";
            this.Locale = new System.Globalization.CultureInfo("en-US");
            this.CaseSensitive = false;
            this.EnforceConstraints = true;
            this.tabletfi_MovimientoBancario = new tfi_MovimientoBancarioDataTable();
            this.Tables.Add(this.tabletfi_MovimientoBancario);
        }
        
        private bool ShouldSerializetfi_MovimientoBancario() {
            return false;
        }
        
        private void SchemaChanged(object sender, System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        public delegate void tfi_MovimientoBancarioRowChangeEventHandler(object sender, tfi_MovimientoBancarioRowChangeEvent e);
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class tfi_MovimientoBancarioDataTable : DataTable, System.Collections.IEnumerable {
            
            private DataColumn columnIdMovimientoBancario;
            
            private DataColumn columnIdTipoMovimiento;
            
            private DataColumn columnIdCuenta;
            
            private DataColumn columnIdValor;
            
            private DataColumn columnNroCheque;
            
            private DataColumn columnTotal;
            
            private DataColumn columnFechaConciliacion;
            
            private DataColumn columnFechaCreacion;
            
            private DataColumn columnIdConexionCreacion;
            
            private DataColumn columnUltimaModificacion;
            
            private DataColumn columnIdConexionUltimaModificacion;
            
            private DataColumn columnIdReservado;
            
            private DataColumn columnIdEmpresa;
            
            private DataColumn columnRowId;
            
            private DataColumn columnFechaImputacion;
            
            internal tfi_MovimientoBancarioDataTable() : 
                    base("tfi_MovimientoBancario") {
                this.InitClass();
            }
            
            internal tfi_MovimientoBancarioDataTable(DataTable table) : 
                    base(table.TableName) {
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
                this.DisplayExpression = table.DisplayExpression;
            }
            
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            internal DataColumn IdMovimientoBancarioColumn {
                get {
                    return this.columnIdMovimientoBancario;
                }
            }
            
            internal DataColumn IdTipoMovimientoColumn {
                get {
                    return this.columnIdTipoMovimiento;
                }
            }
            
            internal DataColumn IdCuentaColumn {
                get {
                    return this.columnIdCuenta;
                }
            }
            
            internal DataColumn IdValorColumn {
                get {
                    return this.columnIdValor;
                }
            }
            
            internal DataColumn NroChequeColumn {
                get {
                    return this.columnNroCheque;
                }
            }
            
            internal DataColumn TotalColumn {
                get {
                    return this.columnTotal;
                }
            }
            
            internal DataColumn FechaConciliacionColumn {
                get {
                    return this.columnFechaConciliacion;
                }
            }
            
            internal DataColumn FechaCreacionColumn {
                get {
                    return this.columnFechaCreacion;
                }
            }
            
            internal DataColumn IdConexionCreacionColumn {
                get {
                    return this.columnIdConexionCreacion;
                }
            }
            
            internal DataColumn UltimaModificacionColumn {
                get {
                    return this.columnUltimaModificacion;
                }
            }
            
            internal DataColumn IdConexionUltimaModificacionColumn {
                get {
                    return this.columnIdConexionUltimaModificacion;
                }
            }
            
            internal DataColumn IdReservadoColumn {
                get {
                    return this.columnIdReservado;
                }
            }
            
            internal DataColumn IdEmpresaColumn {
                get {
                    return this.columnIdEmpresa;
                }
            }
            
            internal DataColumn RowIdColumn {
                get {
                    return this.columnRowId;
                }
            }
            
            internal DataColumn FechaImputacionColumn {
                get {
                    return this.columnFechaImputacion;
                }
            }
            
            public tfi_MovimientoBancarioRow this[int index] {
                get {
                    return ((tfi_MovimientoBancarioRow)(this.Rows[index]));
                }
            }
            
            public event tfi_MovimientoBancarioRowChangeEventHandler tfi_MovimientoBancarioRowChanged;
            
            public event tfi_MovimientoBancarioRowChangeEventHandler tfi_MovimientoBancarioRowChanging;
            
            public event tfi_MovimientoBancarioRowChangeEventHandler tfi_MovimientoBancarioRowDeleted;
            
            public event tfi_MovimientoBancarioRowChangeEventHandler tfi_MovimientoBancarioRowDeleting;
            
            public void Addtfi_MovimientoBancarioRow(tfi_MovimientoBancarioRow row) {
                this.Rows.Add(row);
            }
            
            public tfi_MovimientoBancarioRow Addtfi_MovimientoBancarioRow(string IdMovimientoBancario, string IdTipoMovimiento, string IdCuenta, string IdValor, string NroCheque, System.Decimal Total, System.DateTime FechaConciliacion, System.DateTime FechaCreacion, long IdConexionCreacion, System.Byte[] UltimaModificacion, long IdConexionUltimaModificacion, long IdReservado, long IdEmpresa, System.Guid RowId, System.DateTime FechaImputacion) {
                tfi_MovimientoBancarioRow rowtfi_MovimientoBancarioRow = ((tfi_MovimientoBancarioRow)(this.NewRow()));
                rowtfi_MovimientoBancarioRow.ItemArray = new object[] {
                        IdMovimientoBancario,
                        IdTipoMovimiento,
                        IdCuenta,
                        IdValor,
                        NroCheque,
                        Total,
                        FechaConciliacion,
                        FechaCreacion,
                        IdConexionCreacion,
                        UltimaModificacion,
                        IdConexionUltimaModificacion,
                        IdReservado,
                        IdEmpresa,
                        RowId,
                        FechaImputacion};
                this.Rows.Add(rowtfi_MovimientoBancarioRow);
                return rowtfi_MovimientoBancarioRow;
            }
            
            public tfi_MovimientoBancarioRow FindByIdMovimientoBancario(string IdMovimientoBancario) {
                return ((tfi_MovimientoBancarioRow)(this.Rows.Find(new object[] {
                            IdMovimientoBancario})));
            }
            
            public System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            public override DataTable Clone() {
                tfi_MovimientoBancarioDataTable cln = ((tfi_MovimientoBancarioDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            protected override DataTable CreateInstance() {
                return new tfi_MovimientoBancarioDataTable();
            }
            
            internal void InitVars() {
                this.columnIdMovimientoBancario = this.Columns["IdMovimientoBancario"];
                this.columnIdTipoMovimiento = this.Columns["IdTipoMovimiento"];
                this.columnIdCuenta = this.Columns["IdCuenta"];
                this.columnIdValor = this.Columns["IdValor"];
                this.columnNroCheque = this.Columns["NroCheque"];
                this.columnTotal = this.Columns["Total"];
                this.columnFechaConciliacion = this.Columns["FechaConciliacion"];
                this.columnFechaCreacion = this.Columns["FechaCreacion"];
                this.columnIdConexionCreacion = this.Columns["IdConexionCreacion"];
                this.columnUltimaModificacion = this.Columns["UltimaModificacion"];
                this.columnIdConexionUltimaModificacion = this.Columns["IdConexionUltimaModificacion"];
                this.columnIdReservado = this.Columns["IdReservado"];
                this.columnIdEmpresa = this.Columns["IdEmpresa"];
                this.columnRowId = this.Columns["RowId"];
                this.columnFechaImputacion = this.Columns["FechaImputacion"];
            }
            
            private void InitClass() {
                this.columnIdMovimientoBancario = new DataColumn("IdMovimientoBancario", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdMovimientoBancario);
                this.columnIdTipoMovimiento = new DataColumn("IdTipoMovimiento", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdTipoMovimiento);
                this.columnIdCuenta = new DataColumn("IdCuenta", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdCuenta);
                this.columnIdValor = new DataColumn("IdValor", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdValor);
                this.columnNroCheque = new DataColumn("NroCheque", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnNroCheque);
                this.columnTotal = new DataColumn("Total", typeof(System.Decimal), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnTotal);
                this.columnFechaConciliacion = new DataColumn("FechaConciliacion", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnFechaConciliacion);
                this.columnFechaCreacion = new DataColumn("FechaCreacion", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnFechaCreacion);
                this.columnIdConexionCreacion = new DataColumn("IdConexionCreacion", typeof(long), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdConexionCreacion);
                this.columnUltimaModificacion = new DataColumn("UltimaModificacion", typeof(System.Byte[]), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnUltimaModificacion);
                this.columnIdConexionUltimaModificacion = new DataColumn("IdConexionUltimaModificacion", typeof(long), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdConexionUltimaModificacion);
                this.columnIdReservado = new DataColumn("IdReservado", typeof(long), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdReservado);
                this.columnIdEmpresa = new DataColumn("IdEmpresa", typeof(long), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdEmpresa);
                this.columnRowId = new DataColumn("RowId", typeof(System.Guid), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnRowId);
                this.columnFechaImputacion = new DataColumn("FechaImputacion", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnFechaImputacion);
                this.Constraints.Add(new UniqueConstraint("tfi_MovimientoBancarioKey1", new DataColumn[] {
                                this.columnIdMovimientoBancario}, true));
                this.columnIdMovimientoBancario.AllowDBNull = false;
                this.columnIdMovimientoBancario.Unique = true;
                this.columnIdTipoMovimiento.AllowDBNull = false;
                this.columnIdCuenta.AllowDBNull = false;
                this.columnTotal.AllowDBNull = false;
                this.columnUltimaModificacion.ReadOnly = true;
            }
            
            public tfi_MovimientoBancarioRow Newtfi_MovimientoBancarioRow() {
                return ((tfi_MovimientoBancarioRow)(this.NewRow()));
            }
            
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder) {
                return new tfi_MovimientoBancarioRow(builder);
            }
            
            protected override System.Type GetRowType() {
                return typeof(tfi_MovimientoBancarioRow);
            }
            
            protected override void OnRowChanged(DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.tfi_MovimientoBancarioRowChanged != null)) {
                    this.tfi_MovimientoBancarioRowChanged(this, new tfi_MovimientoBancarioRowChangeEvent(((tfi_MovimientoBancarioRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowChanging(DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.tfi_MovimientoBancarioRowChanging != null)) {
                    this.tfi_MovimientoBancarioRowChanging(this, new tfi_MovimientoBancarioRowChangeEvent(((tfi_MovimientoBancarioRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleted(DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.tfi_MovimientoBancarioRowDeleted != null)) {
                    this.tfi_MovimientoBancarioRowDeleted(this, new tfi_MovimientoBancarioRowChangeEvent(((tfi_MovimientoBancarioRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleting(DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.tfi_MovimientoBancarioRowDeleting != null)) {
                    this.tfi_MovimientoBancarioRowDeleting(this, new tfi_MovimientoBancarioRowChangeEvent(((tfi_MovimientoBancarioRow)(e.Row)), e.Action));
                }
            }
            
            public void Removetfi_MovimientoBancarioRow(tfi_MovimientoBancarioRow row) {
                this.Rows.Remove(row);
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class tfi_MovimientoBancarioRow : DataRow {
            
            private tfi_MovimientoBancarioDataTable tabletfi_MovimientoBancario;
            
            internal tfi_MovimientoBancarioRow(DataRowBuilder rb) : 
                    base(rb) {
                this.tabletfi_MovimientoBancario = ((tfi_MovimientoBancarioDataTable)(this.Table));
            }
            
            public string IdMovimientoBancario {
                get {
                    return ((string)(this[this.tabletfi_MovimientoBancario.IdMovimientoBancarioColumn]));
                }
                set {
                    this[this.tabletfi_MovimientoBancario.IdMovimientoBancarioColumn] = value;
                }
            }
            
            public string IdTipoMovimiento {
                get {
                    return ((string)(this[this.tabletfi_MovimientoBancario.IdTipoMovimientoColumn]));
                }
                set {
                    this[this.tabletfi_MovimientoBancario.IdTipoMovimientoColumn] = value;
                }
            }
            
            public string IdCuenta {
                get {
                    return ((string)(this[this.tabletfi_MovimientoBancario.IdCuentaColumn]));
                }
                set {
                    this[this.tabletfi_MovimientoBancario.IdCuentaColumn] = value;
                }
            }
            
            public string IdValor {
                get {
                    try {
                        return ((string)(this[this.tabletfi_MovimientoBancario.IdValorColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletfi_MovimientoBancario.IdValorColumn] = value;
                }
            }
            
            public string NroCheque {
                get {
                    try {
                        return ((string)(this[this.tabletfi_MovimientoBancario.NroChequeColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletfi_MovimientoBancario.NroChequeColumn] = value;
                }
            }
            
            public System.Decimal Total {
                get {
                    return ((System.Decimal)(this[this.tabletfi_MovimientoBancario.TotalColumn]));
                }
                set {
                    this[this.tabletfi_MovimientoBancario.TotalColumn] = value;
                }
            }
            
            public System.DateTime FechaConciliacion {
                get {
                    try {
                        return ((System.DateTime)(this[this.tabletfi_MovimientoBancario.FechaConciliacionColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletfi_MovimientoBancario.FechaConciliacionColumn] = value;
                }
            }
            
            public System.DateTime FechaCreacion {
                get {
                    try {
                        return ((System.DateTime)(this[this.tabletfi_MovimientoBancario.FechaCreacionColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletfi_MovimientoBancario.FechaCreacionColumn] = value;
                }
            }
            
            public long IdConexionCreacion {
                get {
                    try {
                        return ((long)(this[this.tabletfi_MovimientoBancario.IdConexionCreacionColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletfi_MovimientoBancario.IdConexionCreacionColumn] = value;
                }
            }
            
            public System.Byte[] UltimaModificacion {
                get {
                    try {
                        return ((System.Byte[])(this[this.tabletfi_MovimientoBancario.UltimaModificacionColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletfi_MovimientoBancario.UltimaModificacionColumn] = value;
                }
            }
            
            public long IdConexionUltimaModificacion {
                get {
                    try {
                        return ((long)(this[this.tabletfi_MovimientoBancario.IdConexionUltimaModificacionColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletfi_MovimientoBancario.IdConexionUltimaModificacionColumn] = value;
                }
            }
            
            public long IdReservado {
                get {
                    try {
                        return ((long)(this[this.tabletfi_MovimientoBancario.IdReservadoColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletfi_MovimientoBancario.IdReservadoColumn] = value;
                }
            }
            
            public long IdEmpresa {
                get {
                    try {
                        return ((long)(this[this.tabletfi_MovimientoBancario.IdEmpresaColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletfi_MovimientoBancario.IdEmpresaColumn] = value;
                }
            }
            
            public System.Guid RowId {
                get {
                    try {
                        return ((System.Guid)(this[this.tabletfi_MovimientoBancario.RowIdColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletfi_MovimientoBancario.RowIdColumn] = value;
                }
            }
            
            public System.DateTime FechaImputacion {
                get {
                    try {
                        return ((System.DateTime)(this[this.tabletfi_MovimientoBancario.FechaImputacionColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletfi_MovimientoBancario.FechaImputacionColumn] = value;
                }
            }
            
            public bool IsIdValorNull() {
                return this.IsNull(this.tabletfi_MovimientoBancario.IdValorColumn);
            }
            
            public void SetIdValorNull() {
                this[this.tabletfi_MovimientoBancario.IdValorColumn] = System.Convert.DBNull;
            }
            
            public bool IsNroChequeNull() {
                return this.IsNull(this.tabletfi_MovimientoBancario.NroChequeColumn);
            }
            
            public void SetNroChequeNull() {
                this[this.tabletfi_MovimientoBancario.NroChequeColumn] = System.Convert.DBNull;
            }
            
            public bool IsFechaConciliacionNull() {
                return this.IsNull(this.tabletfi_MovimientoBancario.FechaConciliacionColumn);
            }
            
            public void SetFechaConciliacionNull() {
                this[this.tabletfi_MovimientoBancario.FechaConciliacionColumn] = System.Convert.DBNull;
            }
            
            public bool IsFechaCreacionNull() {
                return this.IsNull(this.tabletfi_MovimientoBancario.FechaCreacionColumn);
            }
            
            public void SetFechaCreacionNull() {
                this[this.tabletfi_MovimientoBancario.FechaCreacionColumn] = System.Convert.DBNull;
            }
            
            public bool IsIdConexionCreacionNull() {
                return this.IsNull(this.tabletfi_MovimientoBancario.IdConexionCreacionColumn);
            }
            
            public void SetIdConexionCreacionNull() {
                this[this.tabletfi_MovimientoBancario.IdConexionCreacionColumn] = System.Convert.DBNull;
            }
            
            public bool IsUltimaModificacionNull() {
                return this.IsNull(this.tabletfi_MovimientoBancario.UltimaModificacionColumn);
            }
            
            public void SetUltimaModificacionNull() {
                this[this.tabletfi_MovimientoBancario.UltimaModificacionColumn] = System.Convert.DBNull;
            }
            
            public bool IsIdConexionUltimaModificacionNull() {
                return this.IsNull(this.tabletfi_MovimientoBancario.IdConexionUltimaModificacionColumn);
            }
            
            public void SetIdConexionUltimaModificacionNull() {
                this[this.tabletfi_MovimientoBancario.IdConexionUltimaModificacionColumn] = System.Convert.DBNull;
            }
            
            public bool IsIdReservadoNull() {
                return this.IsNull(this.tabletfi_MovimientoBancario.IdReservadoColumn);
            }
            
            public void SetIdReservadoNull() {
                this[this.tabletfi_MovimientoBancario.IdReservadoColumn] = System.Convert.DBNull;
            }
            
            public bool IsIdEmpresaNull() {
                return this.IsNull(this.tabletfi_MovimientoBancario.IdEmpresaColumn);
            }
            
            public void SetIdEmpresaNull() {
                this[this.tabletfi_MovimientoBancario.IdEmpresaColumn] = System.Convert.DBNull;
            }
            
            public bool IsRowIdNull() {
                return this.IsNull(this.tabletfi_MovimientoBancario.RowIdColumn);
            }
            
            public void SetRowIdNull() {
                this[this.tabletfi_MovimientoBancario.RowIdColumn] = System.Convert.DBNull;
            }
            
            public bool IsFechaImputacionNull() {
                return this.IsNull(this.tabletfi_MovimientoBancario.FechaImputacionColumn);
            }
            
            public void SetFechaImputacionNull() {
                this[this.tabletfi_MovimientoBancario.FechaImputacionColumn] = System.Convert.DBNull;
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class tfi_MovimientoBancarioRowChangeEvent : EventArgs {
            
            private tfi_MovimientoBancarioRow eventRow;
            
            private DataRowAction eventAction;
            
            public tfi_MovimientoBancarioRowChangeEvent(tfi_MovimientoBancarioRow row, DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            public tfi_MovimientoBancarioRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            public DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
