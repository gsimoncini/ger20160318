//------------------------------------------------------------------------------
// <autogenerated>
//     This code was generated by a tool.
//     Runtime Version: 1.1.4322.2407
//
//     Changes to this file may cause incorrect behavior and will be lost if 
//     the code is regenerated.
// </autogenerated>
//------------------------------------------------------------------------------

namespace mz.erp.commontypes.data {
    using System;
    using System.Data;
    using System.Xml;
    using System.Runtime.Serialization;
    
    
    [Serializable()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Diagnostics.DebuggerStepThrough()]
    [System.ComponentModel.ToolboxItem(true)]
    public class st_TipoEquipoFallaDataset : DataSet {
        
        private st_TipoEquipoFallaDataTable tablest_TipoEquipoFalla;
        
        public st_TipoEquipoFallaDataset() {
            this.InitClass();
            System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            this.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        protected st_TipoEquipoFallaDataset(SerializationInfo info, StreamingContext context) {
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((strSchema != null)) {
                DataSet ds = new DataSet();
                ds.ReadXmlSchema(new XmlTextReader(new System.IO.StringReader(strSchema)));
                if ((ds.Tables["st_TipoEquipoFalla"] != null)) {
                    this.Tables.Add(new st_TipoEquipoFallaDataTable(ds.Tables["st_TipoEquipoFalla"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.InitClass();
            }
            this.GetSerializationData(info, context);
            System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            this.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public st_TipoEquipoFallaDataTable st_TipoEquipoFalla {
            get {
                return this.tablest_TipoEquipoFalla;
            }
        }
        
        public override DataSet Clone() {
            st_TipoEquipoFallaDataset cln = ((st_TipoEquipoFallaDataset)(base.Clone()));
            cln.InitVars();
            return cln;
        }
        
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        protected override void ReadXmlSerializable(XmlReader reader) {
            this.Reset();
            DataSet ds = new DataSet();
            ds.ReadXml(reader);
            if ((ds.Tables["st_TipoEquipoFalla"] != null)) {
                this.Tables.Add(new st_TipoEquipoFallaDataTable(ds.Tables["st_TipoEquipoFalla"]));
            }
            this.DataSetName = ds.DataSetName;
            this.Prefix = ds.Prefix;
            this.Namespace = ds.Namespace;
            this.Locale = ds.Locale;
            this.CaseSensitive = ds.CaseSensitive;
            this.EnforceConstraints = ds.EnforceConstraints;
            this.Merge(ds, false, System.Data.MissingSchemaAction.Add);
            this.InitVars();
        }
        
        protected override System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            System.IO.MemoryStream stream = new System.IO.MemoryStream();
            this.WriteXmlSchema(new XmlTextWriter(stream, null));
            stream.Position = 0;
            return System.Xml.Schema.XmlSchema.Read(new XmlTextReader(stream), null);
        }
        
        internal void InitVars() {
            this.tablest_TipoEquipoFalla = ((st_TipoEquipoFallaDataTable)(this.Tables["st_TipoEquipoFalla"]));
            if ((this.tablest_TipoEquipoFalla != null)) {
                this.tablest_TipoEquipoFalla.InitVars();
            }
        }
        
        private void InitClass() {
            this.DataSetName = "st_TipoEquipoFallaDataset";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/st_TipoEquipoFalla.xsd";
            this.Locale = new System.Globalization.CultureInfo("en-US");
            this.CaseSensitive = false;
            this.EnforceConstraints = true;
            this.tablest_TipoEquipoFalla = new st_TipoEquipoFallaDataTable();
            this.Tables.Add(this.tablest_TipoEquipoFalla);
        }
        
        private bool ShouldSerializest_TipoEquipoFalla() {
            return false;
        }
        
        private void SchemaChanged(object sender, System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        public delegate void st_TipoEquipoFallaRowChangeEventHandler(object sender, st_TipoEquipoFallaRowChangeEvent e);
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class st_TipoEquipoFallaDataTable : DataTable, System.Collections.IEnumerable {
            
            private DataColumn columnIdTipoEquipoFalla;
            
            private DataColumn columnIdTipoEquipo;
            
            private DataColumn columnIdFalla;
            
            private DataColumn columnImporteMinimo;
            
            private DataColumn columnImportePresupuesto;
            
            private DataColumn columnFechaCreacion;
            
            private DataColumn columnIdConexionCreacion;
            
            private DataColumn columnUltimaModificacion;
            
            private DataColumn columnIdConexionUltimaModificacion;
            
            private DataColumn columnRowId;
            
            internal st_TipoEquipoFallaDataTable() : 
                    base("st_TipoEquipoFalla") {
                this.InitClass();
            }
            
            internal st_TipoEquipoFallaDataTable(DataTable table) : 
                    base(table.TableName) {
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
                this.DisplayExpression = table.DisplayExpression;
            }
            
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            internal DataColumn IdTipoEquipoFallaColumn {
                get {
                    return this.columnIdTipoEquipoFalla;
                }
            }
            
            internal DataColumn IdTipoEquipoColumn {
                get {
                    return this.columnIdTipoEquipo;
                }
            }
            
            internal DataColumn IdFallaColumn {
                get {
                    return this.columnIdFalla;
                }
            }
            
            internal DataColumn ImporteMinimoColumn {
                get {
                    return this.columnImporteMinimo;
                }
            }
            
            internal DataColumn ImportePresupuestoColumn {
                get {
                    return this.columnImportePresupuesto;
                }
            }
            
            internal DataColumn FechaCreacionColumn {
                get {
                    return this.columnFechaCreacion;
                }
            }
            
            internal DataColumn IdConexionCreacionColumn {
                get {
                    return this.columnIdConexionCreacion;
                }
            }
            
            internal DataColumn UltimaModificacionColumn {
                get {
                    return this.columnUltimaModificacion;
                }
            }
            
            internal DataColumn IdConexionUltimaModificacionColumn {
                get {
                    return this.columnIdConexionUltimaModificacion;
                }
            }
            
            internal DataColumn RowIdColumn {
                get {
                    return this.columnRowId;
                }
            }
            
            public st_TipoEquipoFallaRow this[int index] {
                get {
                    return ((st_TipoEquipoFallaRow)(this.Rows[index]));
                }
            }
            
            public event st_TipoEquipoFallaRowChangeEventHandler st_TipoEquipoFallaRowChanged;
            
            public event st_TipoEquipoFallaRowChangeEventHandler st_TipoEquipoFallaRowChanging;
            
            public event st_TipoEquipoFallaRowChangeEventHandler st_TipoEquipoFallaRowDeleted;
            
            public event st_TipoEquipoFallaRowChangeEventHandler st_TipoEquipoFallaRowDeleting;
            
            public void Addst_TipoEquipoFallaRow(st_TipoEquipoFallaRow row) {
                this.Rows.Add(row);
            }
            
            public st_TipoEquipoFallaRow Addst_TipoEquipoFallaRow(long IdTipoEquipoFalla, long IdTipoEquipo, long IdFalla, System.Decimal ImporteMinimo, System.Decimal ImportePresupuesto, System.DateTime FechaCreacion, long IdConexionCreacion, System.Byte[] UltimaModificacion, long IdConexionUltimaModificacion, System.Guid RowId) {
                st_TipoEquipoFallaRow rowst_TipoEquipoFallaRow = ((st_TipoEquipoFallaRow)(this.NewRow()));
                rowst_TipoEquipoFallaRow.ItemArray = new object[] {
                        IdTipoEquipoFalla,
                        IdTipoEquipo,
                        IdFalla,
                        ImporteMinimo,
                        ImportePresupuesto,
                        FechaCreacion,
                        IdConexionCreacion,
                        UltimaModificacion,
                        IdConexionUltimaModificacion,
                        RowId};
                this.Rows.Add(rowst_TipoEquipoFallaRow);
                return rowst_TipoEquipoFallaRow;
            }
            
            public st_TipoEquipoFallaRow FindByIdTipoEquipoFalla(long IdTipoEquipoFalla) {
                return ((st_TipoEquipoFallaRow)(this.Rows.Find(new object[] {
                            IdTipoEquipoFalla})));
            }
            
            public System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            public override DataTable Clone() {
                st_TipoEquipoFallaDataTable cln = ((st_TipoEquipoFallaDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            protected override DataTable CreateInstance() {
                return new st_TipoEquipoFallaDataTable();
            }
            
            internal void InitVars() {
                this.columnIdTipoEquipoFalla = this.Columns["IdTipoEquipoFalla"];
                this.columnIdTipoEquipo = this.Columns["IdTipoEquipo"];
                this.columnIdFalla = this.Columns["IdFalla"];
                this.columnImporteMinimo = this.Columns["ImporteMinimo"];
                this.columnImportePresupuesto = this.Columns["ImportePresupuesto"];
                this.columnFechaCreacion = this.Columns["FechaCreacion"];
                this.columnIdConexionCreacion = this.Columns["IdConexionCreacion"];
                this.columnUltimaModificacion = this.Columns["UltimaModificacion"];
                this.columnIdConexionUltimaModificacion = this.Columns["IdConexionUltimaModificacion"];
                this.columnRowId = this.Columns["RowId"];
            }
            
            private void InitClass() {
                this.columnIdTipoEquipoFalla = new DataColumn("IdTipoEquipoFalla", typeof(long), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdTipoEquipoFalla);
                this.columnIdTipoEquipo = new DataColumn("IdTipoEquipo", typeof(long), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdTipoEquipo);
                this.columnIdFalla = new DataColumn("IdFalla", typeof(long), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdFalla);
                this.columnImporteMinimo = new DataColumn("ImporteMinimo", typeof(System.Decimal), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnImporteMinimo);
                this.columnImportePresupuesto = new DataColumn("ImportePresupuesto", typeof(System.Decimal), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnImportePresupuesto);
                this.columnFechaCreacion = new DataColumn("FechaCreacion", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnFechaCreacion);
                this.columnIdConexionCreacion = new DataColumn("IdConexionCreacion", typeof(long), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdConexionCreacion);
                this.columnUltimaModificacion = new DataColumn("UltimaModificacion", typeof(System.Byte[]), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnUltimaModificacion);
                this.columnIdConexionUltimaModificacion = new DataColumn("IdConexionUltimaModificacion", typeof(long), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdConexionUltimaModificacion);
                this.columnRowId = new DataColumn("RowId", typeof(System.Guid), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnRowId);
                this.Constraints.Add(new UniqueConstraint("st_TipoEquipoFallaKey1", new DataColumn[] {
                                this.columnIdTipoEquipoFalla}, true));
                this.columnIdTipoEquipoFalla.AllowDBNull = false;
                this.columnIdTipoEquipoFalla.Unique = true;
                this.columnIdTipoEquipo.AllowDBNull = false;
                this.columnIdFalla.AllowDBNull = false;
                this.columnImporteMinimo.AllowDBNull = false;
                this.columnImportePresupuesto.AllowDBNull = false;
                this.columnIdConexionCreacion.AllowDBNull = false;
                this.columnUltimaModificacion.ReadOnly = true;
            }
            
            public st_TipoEquipoFallaRow Newst_TipoEquipoFallaRow() {
                return ((st_TipoEquipoFallaRow)(this.NewRow()));
            }
            
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder) {
                return new st_TipoEquipoFallaRow(builder);
            }
            
            protected override System.Type GetRowType() {
                return typeof(st_TipoEquipoFallaRow);
            }
            
            protected override void OnRowChanged(DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.st_TipoEquipoFallaRowChanged != null)) {
                    this.st_TipoEquipoFallaRowChanged(this, new st_TipoEquipoFallaRowChangeEvent(((st_TipoEquipoFallaRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowChanging(DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.st_TipoEquipoFallaRowChanging != null)) {
                    this.st_TipoEquipoFallaRowChanging(this, new st_TipoEquipoFallaRowChangeEvent(((st_TipoEquipoFallaRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleted(DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.st_TipoEquipoFallaRowDeleted != null)) {
                    this.st_TipoEquipoFallaRowDeleted(this, new st_TipoEquipoFallaRowChangeEvent(((st_TipoEquipoFallaRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleting(DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.st_TipoEquipoFallaRowDeleting != null)) {
                    this.st_TipoEquipoFallaRowDeleting(this, new st_TipoEquipoFallaRowChangeEvent(((st_TipoEquipoFallaRow)(e.Row)), e.Action));
                }
            }
            
            public void Removest_TipoEquipoFallaRow(st_TipoEquipoFallaRow row) {
                this.Rows.Remove(row);
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class st_TipoEquipoFallaRow : DataRow {
            
            private st_TipoEquipoFallaDataTable tablest_TipoEquipoFalla;
            
            internal st_TipoEquipoFallaRow(DataRowBuilder rb) : 
                    base(rb) {
                this.tablest_TipoEquipoFalla = ((st_TipoEquipoFallaDataTable)(this.Table));
            }
            
            public long IdTipoEquipoFalla {
                get {
                    return ((long)(this[this.tablest_TipoEquipoFalla.IdTipoEquipoFallaColumn]));
                }
                set {
                    this[this.tablest_TipoEquipoFalla.IdTipoEquipoFallaColumn] = value;
                }
            }
            
            public long IdTipoEquipo {
                get {
                    return ((long)(this[this.tablest_TipoEquipoFalla.IdTipoEquipoColumn]));
                }
                set {
                    this[this.tablest_TipoEquipoFalla.IdTipoEquipoColumn] = value;
                }
            }
            
            public long IdFalla {
                get {
                    return ((long)(this[this.tablest_TipoEquipoFalla.IdFallaColumn]));
                }
                set {
                    this[this.tablest_TipoEquipoFalla.IdFallaColumn] = value;
                }
            }
            
            public System.Decimal ImporteMinimo {
                get {
                    return ((System.Decimal)(this[this.tablest_TipoEquipoFalla.ImporteMinimoColumn]));
                }
                set {
                    this[this.tablest_TipoEquipoFalla.ImporteMinimoColumn] = value;
                }
            }
            
            public System.Decimal ImportePresupuesto {
                get {
                    return ((System.Decimal)(this[this.tablest_TipoEquipoFalla.ImportePresupuestoColumn]));
                }
                set {
                    this[this.tablest_TipoEquipoFalla.ImportePresupuestoColumn] = value;
                }
            }
            
            public System.DateTime FechaCreacion {
                get {
                    try {
                        return ((System.DateTime)(this[this.tablest_TipoEquipoFalla.FechaCreacionColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tablest_TipoEquipoFalla.FechaCreacionColumn] = value;
                }
            }
            
            public long IdConexionCreacion {
                get {
                    return ((long)(this[this.tablest_TipoEquipoFalla.IdConexionCreacionColumn]));
                }
                set {
                    this[this.tablest_TipoEquipoFalla.IdConexionCreacionColumn] = value;
                }
            }
            
            public System.Byte[] UltimaModificacion {
                get {
                    try {
                        return ((System.Byte[])(this[this.tablest_TipoEquipoFalla.UltimaModificacionColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tablest_TipoEquipoFalla.UltimaModificacionColumn] = value;
                }
            }
            
            public long IdConexionUltimaModificacion {
                get {
                    try {
                        return ((long)(this[this.tablest_TipoEquipoFalla.IdConexionUltimaModificacionColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tablest_TipoEquipoFalla.IdConexionUltimaModificacionColumn] = value;
                }
            }
            
            public System.Guid RowId {
                get {
                    try {
                        return ((System.Guid)(this[this.tablest_TipoEquipoFalla.RowIdColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tablest_TipoEquipoFalla.RowIdColumn] = value;
                }
            }
            
            public bool IsFechaCreacionNull() {
                return this.IsNull(this.tablest_TipoEquipoFalla.FechaCreacionColumn);
            }
            
            public void SetFechaCreacionNull() {
                this[this.tablest_TipoEquipoFalla.FechaCreacionColumn] = System.Convert.DBNull;
            }
            
            public bool IsUltimaModificacionNull() {
                return this.IsNull(this.tablest_TipoEquipoFalla.UltimaModificacionColumn);
            }
            
            public void SetUltimaModificacionNull() {
                this[this.tablest_TipoEquipoFalla.UltimaModificacionColumn] = System.Convert.DBNull;
            }
            
            public bool IsIdConexionUltimaModificacionNull() {
                return this.IsNull(this.tablest_TipoEquipoFalla.IdConexionUltimaModificacionColumn);
            }
            
            public void SetIdConexionUltimaModificacionNull() {
                this[this.tablest_TipoEquipoFalla.IdConexionUltimaModificacionColumn] = System.Convert.DBNull;
            }
            
            public bool IsRowIdNull() {
                return this.IsNull(this.tablest_TipoEquipoFalla.RowIdColumn);
            }
            
            public void SetRowIdNull() {
                this[this.tablest_TipoEquipoFalla.RowIdColumn] = System.Convert.DBNull;
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class st_TipoEquipoFallaRowChangeEvent : EventArgs {
            
            private st_TipoEquipoFallaRow eventRow;
            
            private DataRowAction eventAction;
            
            public st_TipoEquipoFallaRowChangeEvent(st_TipoEquipoFallaRow row, DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            public st_TipoEquipoFallaRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            public DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
