//------------------------------------------------------------------------------
// <autogenerated>
//     This code was generated by a tool.
//     Runtime Version: 1.1.4322.2407
//
//     Changes to this file may cause incorrect behavior and will be lost if 
//     the code is regenerated.
// </autogenerated>
//------------------------------------------------------------------------------

namespace mz.erp.commontypes.data {
    using System;
    using System.Data;
    using System.Xml;
    using System.Runtime.Serialization;
    
    
    [Serializable()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Diagnostics.DebuggerStepThrough()]
    [System.ComponentModel.ToolboxItem(true)]
    public class tsa_ComprobantesDetDataset : DataSet {
        
        private tsa_ComprobantesDetDataTable tabletsa_ComprobantesDet;
        
        public tsa_ComprobantesDetDataset() {
            this.InitClass();
            System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            this.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        protected tsa_ComprobantesDetDataset(SerializationInfo info, StreamingContext context) {
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((strSchema != null)) {
                DataSet ds = new DataSet();
                ds.ReadXmlSchema(new XmlTextReader(new System.IO.StringReader(strSchema)));
                if ((ds.Tables["tsa_ComprobantesDet"] != null)) {
                    this.Tables.Add(new tsa_ComprobantesDetDataTable(ds.Tables["tsa_ComprobantesDet"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.InitClass();
            }
            this.GetSerializationData(info, context);
            System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            this.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public tsa_ComprobantesDetDataTable tsa_ComprobantesDet {
            get {
                return this.tabletsa_ComprobantesDet;
            }
        }
        
        public override DataSet Clone() {
            tsa_ComprobantesDetDataset cln = ((tsa_ComprobantesDetDataset)(base.Clone()));
            cln.InitVars();
            return cln;
        }
        
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        protected override void ReadXmlSerializable(XmlReader reader) {
            this.Reset();
            DataSet ds = new DataSet();
            ds.ReadXml(reader);
            if ((ds.Tables["tsa_ComprobantesDet"] != null)) {
                this.Tables.Add(new tsa_ComprobantesDetDataTable(ds.Tables["tsa_ComprobantesDet"]));
            }
            this.DataSetName = ds.DataSetName;
            this.Prefix = ds.Prefix;
            this.Namespace = ds.Namespace;
            this.Locale = ds.Locale;
            this.CaseSensitive = ds.CaseSensitive;
            this.EnforceConstraints = ds.EnforceConstraints;
            this.Merge(ds, false, System.Data.MissingSchemaAction.Add);
            this.InitVars();
        }
        
        protected override System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            System.IO.MemoryStream stream = new System.IO.MemoryStream();
            this.WriteXmlSchema(new XmlTextWriter(stream, null));
            stream.Position = 0;
            return System.Xml.Schema.XmlSchema.Read(new XmlTextReader(stream), null);
        }
        
        internal void InitVars() {
            this.tabletsa_ComprobantesDet = ((tsa_ComprobantesDetDataTable)(this.Tables["tsa_ComprobantesDet"]));
            if ((this.tabletsa_ComprobantesDet != null)) {
                this.tabletsa_ComprobantesDet.InitVars();
            }
        }
        
        private void InitClass() {
            this.DataSetName = "tsa_ComprobantesDetDataset";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/tsa_ComprobantesDet.xsd";
            this.Locale = new System.Globalization.CultureInfo("en-US");
            this.CaseSensitive = false;
            this.EnforceConstraints = true;
            this.tabletsa_ComprobantesDet = new tsa_ComprobantesDetDataTable();
            this.Tables.Add(this.tabletsa_ComprobantesDet);
        }
        
        private bool ShouldSerializetsa_ComprobantesDet() {
            return false;
        }
        
        private void SchemaChanged(object sender, System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        public delegate void tsa_ComprobantesDetRowChangeEventHandler(object sender, tsa_ComprobantesDetRowChangeEvent e);
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class tsa_ComprobantesDetDataTable : DataTable, System.Collections.IEnumerable {
            
            private DataColumn columnIdComprobante;
            
            private DataColumn columnOrdinal;
            
            private DataColumn columnIdEmpresa;
            
            private DataColumn columnIdSucursal;
            
            private DataColumn columnIdTipoDeComprobante;
            
            private DataColumn columnFecha;
            
            private DataColumn columnNumero;
            
            private DataColumn columnIdProducto;
            
            private DataColumn columnCantidad;
            
            private DataColumn columnPrecioFinal;
            
            private DataColumn columnPrecioBruto;
            
            private DataColumn columnPrecioNeto;
            
            private DataColumn columnDescuentosAplicados;
            
            private DataColumn columnBonificacionRecargoFinanciero;
            
            private DataColumn columnBonificacionRecargoCuenta;
            
            private DataColumn columnBonificacionRecargoProducto;
            
            private DataColumn columnPrecioDeCosto;
            
            private DataColumn columnImpuestosDirectos;
            
            private DataColumn columnImpuestosIndirectos;
            
            private DataColumn columnIdMonedaOrigen;
            
            private DataColumn columnIdMonedaCierre;
            
            private DataColumn columnIdCotizacionCierre;
            
            private DataColumn columnFechaCreacion;
            
            private DataColumn columnIdConexionCreacion;
            
            private DataColumn columnUltimaModificacion;
            
            private DataColumn columnIdConexionUltimaModificacion;
            
            private DataColumn columnIdReservado;
            
            private DataColumn columnRowId;
            
            private DataColumn columnRowIdGenerado;
            
            private DataColumn columnVisible;
            
            private DataColumn columnIdListaDePrecio;
            
            private DataColumn columnCoeficienteListaDePrecio;
            
            private DataColumn columnModoDeAplicacion;
            
            private DataColumn columnPrecioNetoOriginal;
            
            private DataColumn columnPrecioBrutoOriginal;
            
            private DataColumn columnPrecioFinalOriginal;
            
            private DataColumn columnMaxDescuentoPorcentualOriginal;
            
            private DataColumn columnMaxDescuentoOriginal;
            
            private DataColumn columnDescuentoAplicadoVendedor;
            
            private DataColumn columnDescuentoPorcentualAplicadoVendedor;
            
            private DataColumn columnPrecioDeCostoDirectoOriginal;
            
            private DataColumn columnPrecioDeCostoIndirectoOriginal;
            
            private DataColumn columnPrecioDeCostoRefOriginal;
            
            private DataColumn columnCoeficiente1Original;
            
            private DataColumn columnCoeficiente2Original;
            
            private DataColumn columnCoeficiente3Original;
            
            private DataColumn columnCoeficiente4Original;
            
            private DataColumn columnCoeficiente5Original;
            
            private DataColumn columnCoeficiente6Original;
            
            private DataColumn columnCoeficiente7Original;
            
            private DataColumn columnCoeficiente8Original;
            
            private DataColumn columnCoeficiente9Original;
            
            private DataColumn columnCoeficiente10Original;
            
            private DataColumn columnCodigoSecundarioOriginal;
            
            private DataColumn columnPorcentajeDescuentoFijoAplicado;
            
            private DataColumn columnPrecioDeCostoReposicionOriginal;
            
            private DataColumn columnPrecioDeCostoPromedioPonderadoOriginal;
            
            private DataColumn columnPrecioDeVentaMercadoBolsaOriginal;
            
            private DataColumn columnPrecioDeVentaMercadoCadenaOriginal;
            
            private DataColumn columnPrecioDeVentaMercadoCompetenciaDirectaOriginal;
            
            private DataColumn columnUsaPrecioDeCostoReposicionOriginal;
            
            private DataColumn columnIdCotizacionCierrePrecioDeCostoRefOriginal;
            
            internal tsa_ComprobantesDetDataTable() : 
                    base("tsa_ComprobantesDet") {
                this.InitClass();
            }
            
            internal tsa_ComprobantesDetDataTable(DataTable table) : 
                    base(table.TableName) {
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
                this.DisplayExpression = table.DisplayExpression;
            }
            
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            internal DataColumn IdComprobanteColumn {
                get {
                    return this.columnIdComprobante;
                }
            }
            
            internal DataColumn OrdinalColumn {
                get {
                    return this.columnOrdinal;
                }
            }
            
            internal DataColumn IdEmpresaColumn {
                get {
                    return this.columnIdEmpresa;
                }
            }
            
            internal DataColumn IdSucursalColumn {
                get {
                    return this.columnIdSucursal;
                }
            }
            
            internal DataColumn IdTipoDeComprobanteColumn {
                get {
                    return this.columnIdTipoDeComprobante;
                }
            }
            
            internal DataColumn FechaColumn {
                get {
                    return this.columnFecha;
                }
            }
            
            internal DataColumn NumeroColumn {
                get {
                    return this.columnNumero;
                }
            }
            
            internal DataColumn IdProductoColumn {
                get {
                    return this.columnIdProducto;
                }
            }
            
            internal DataColumn CantidadColumn {
                get {
                    return this.columnCantidad;
                }
            }
            
            internal DataColumn PrecioFinalColumn {
                get {
                    return this.columnPrecioFinal;
                }
            }
            
            internal DataColumn PrecioBrutoColumn {
                get {
                    return this.columnPrecioBruto;
                }
            }
            
            internal DataColumn PrecioNetoColumn {
                get {
                    return this.columnPrecioNeto;
                }
            }
            
            internal DataColumn DescuentosAplicadosColumn {
                get {
                    return this.columnDescuentosAplicados;
                }
            }
            
            internal DataColumn BonificacionRecargoFinancieroColumn {
                get {
                    return this.columnBonificacionRecargoFinanciero;
                }
            }
            
            internal DataColumn BonificacionRecargoCuentaColumn {
                get {
                    return this.columnBonificacionRecargoCuenta;
                }
            }
            
            internal DataColumn BonificacionRecargoProductoColumn {
                get {
                    return this.columnBonificacionRecargoProducto;
                }
            }
            
            internal DataColumn PrecioDeCostoColumn {
                get {
                    return this.columnPrecioDeCosto;
                }
            }
            
            internal DataColumn ImpuestosDirectosColumn {
                get {
                    return this.columnImpuestosDirectos;
                }
            }
            
            internal DataColumn ImpuestosIndirectosColumn {
                get {
                    return this.columnImpuestosIndirectos;
                }
            }
            
            internal DataColumn IdMonedaOrigenColumn {
                get {
                    return this.columnIdMonedaOrigen;
                }
            }
            
            internal DataColumn IdMonedaCierreColumn {
                get {
                    return this.columnIdMonedaCierre;
                }
            }
            
            internal DataColumn IdCotizacionCierreColumn {
                get {
                    return this.columnIdCotizacionCierre;
                }
            }
            
            internal DataColumn FechaCreacionColumn {
                get {
                    return this.columnFechaCreacion;
                }
            }
            
            internal DataColumn IdConexionCreacionColumn {
                get {
                    return this.columnIdConexionCreacion;
                }
            }
            
            internal DataColumn UltimaModificacionColumn {
                get {
                    return this.columnUltimaModificacion;
                }
            }
            
            internal DataColumn IdConexionUltimaModificacionColumn {
                get {
                    return this.columnIdConexionUltimaModificacion;
                }
            }
            
            internal DataColumn IdReservadoColumn {
                get {
                    return this.columnIdReservado;
                }
            }
            
            internal DataColumn RowIdColumn {
                get {
                    return this.columnRowId;
                }
            }
            
            internal DataColumn RowIdGeneradoColumn {
                get {
                    return this.columnRowIdGenerado;
                }
            }
            
            internal DataColumn VisibleColumn {
                get {
                    return this.columnVisible;
                }
            }
            
            internal DataColumn IdListaDePrecioColumn {
                get {
                    return this.columnIdListaDePrecio;
                }
            }
            
            internal DataColumn CoeficienteListaDePrecioColumn {
                get {
                    return this.columnCoeficienteListaDePrecio;
                }
            }
            
            internal DataColumn ModoDeAplicacionColumn {
                get {
                    return this.columnModoDeAplicacion;
                }
            }
            
            internal DataColumn PrecioNetoOriginalColumn {
                get {
                    return this.columnPrecioNetoOriginal;
                }
            }
            
            internal DataColumn PrecioBrutoOriginalColumn {
                get {
                    return this.columnPrecioBrutoOriginal;
                }
            }
            
            internal DataColumn PrecioFinalOriginalColumn {
                get {
                    return this.columnPrecioFinalOriginal;
                }
            }
            
            internal DataColumn MaxDescuentoPorcentualOriginalColumn {
                get {
                    return this.columnMaxDescuentoPorcentualOriginal;
                }
            }
            
            internal DataColumn MaxDescuentoOriginalColumn {
                get {
                    return this.columnMaxDescuentoOriginal;
                }
            }
            
            internal DataColumn DescuentoAplicadoVendedorColumn {
                get {
                    return this.columnDescuentoAplicadoVendedor;
                }
            }
            
            internal DataColumn DescuentoPorcentualAplicadoVendedorColumn {
                get {
                    return this.columnDescuentoPorcentualAplicadoVendedor;
                }
            }
            
            internal DataColumn PrecioDeCostoDirectoOriginalColumn {
                get {
                    return this.columnPrecioDeCostoDirectoOriginal;
                }
            }
            
            internal DataColumn PrecioDeCostoIndirectoOriginalColumn {
                get {
                    return this.columnPrecioDeCostoIndirectoOriginal;
                }
            }
            
            internal DataColumn PrecioDeCostoRefOriginalColumn {
                get {
                    return this.columnPrecioDeCostoRefOriginal;
                }
            }
            
            internal DataColumn Coeficiente1OriginalColumn {
                get {
                    return this.columnCoeficiente1Original;
                }
            }
            
            internal DataColumn Coeficiente2OriginalColumn {
                get {
                    return this.columnCoeficiente2Original;
                }
            }
            
            internal DataColumn Coeficiente3OriginalColumn {
                get {
                    return this.columnCoeficiente3Original;
                }
            }
            
            internal DataColumn Coeficiente4OriginalColumn {
                get {
                    return this.columnCoeficiente4Original;
                }
            }
            
            internal DataColumn Coeficiente5OriginalColumn {
                get {
                    return this.columnCoeficiente5Original;
                }
            }
            
            internal DataColumn Coeficiente6OriginalColumn {
                get {
                    return this.columnCoeficiente6Original;
                }
            }
            
            internal DataColumn Coeficiente7OriginalColumn {
                get {
                    return this.columnCoeficiente7Original;
                }
            }
            
            internal DataColumn Coeficiente8OriginalColumn {
                get {
                    return this.columnCoeficiente8Original;
                }
            }
            
            internal DataColumn Coeficiente9OriginalColumn {
                get {
                    return this.columnCoeficiente9Original;
                }
            }
            
            internal DataColumn Coeficiente10OriginalColumn {
                get {
                    return this.columnCoeficiente10Original;
                }
            }
            
            internal DataColumn CodigoSecundarioOriginalColumn {
                get {
                    return this.columnCodigoSecundarioOriginal;
                }
            }
            
            internal DataColumn PorcentajeDescuentoFijoAplicadoColumn {
                get {
                    return this.columnPorcentajeDescuentoFijoAplicado;
                }
            }
            
            internal DataColumn PrecioDeCostoReposicionOriginalColumn {
                get {
                    return this.columnPrecioDeCostoReposicionOriginal;
                }
            }
            
            internal DataColumn PrecioDeCostoPromedioPonderadoOriginalColumn {
                get {
                    return this.columnPrecioDeCostoPromedioPonderadoOriginal;
                }
            }
            
            internal DataColumn PrecioDeVentaMercadoBolsaOriginalColumn {
                get {
                    return this.columnPrecioDeVentaMercadoBolsaOriginal;
                }
            }
            
            internal DataColumn PrecioDeVentaMercadoCadenaOriginalColumn {
                get {
                    return this.columnPrecioDeVentaMercadoCadenaOriginal;
                }
            }
            
            internal DataColumn PrecioDeVentaMercadoCompetenciaDirectaOriginalColumn {
                get {
                    return this.columnPrecioDeVentaMercadoCompetenciaDirectaOriginal;
                }
            }
            
            internal DataColumn UsaPrecioDeCostoReposicionOriginalColumn {
                get {
                    return this.columnUsaPrecioDeCostoReposicionOriginal;
                }
            }
            
            internal DataColumn IdCotizacionCierrePrecioDeCostoRefOriginalColumn {
                get {
                    return this.columnIdCotizacionCierrePrecioDeCostoRefOriginal;
                }
            }
            
            public tsa_ComprobantesDetRow this[int index] {
                get {
                    return ((tsa_ComprobantesDetRow)(this.Rows[index]));
                }
            }
            
            public event tsa_ComprobantesDetRowChangeEventHandler tsa_ComprobantesDetRowChanged;
            
            public event tsa_ComprobantesDetRowChangeEventHandler tsa_ComprobantesDetRowChanging;
            
            public event tsa_ComprobantesDetRowChangeEventHandler tsa_ComprobantesDetRowDeleted;
            
            public event tsa_ComprobantesDetRowChangeEventHandler tsa_ComprobantesDetRowDeleting;
            
            public void Addtsa_ComprobantesDetRow(tsa_ComprobantesDetRow row) {
                this.Rows.Add(row);
            }
            
            public tsa_ComprobantesDetRow Addtsa_ComprobantesDetRow(
                        string IdComprobante, 
                        long Ordinal, 
                        long IdEmpresa, 
                        long IdSucursal, 
                        string IdTipoDeComprobante, 
                        System.DateTime Fecha, 
                        string Numero, 
                        string IdProducto, 
                        System.Decimal Cantidad, 
                        System.Decimal PrecioFinal, 
                        System.Decimal PrecioBruto, 
                        System.Decimal PrecioNeto, 
                        System.Decimal DescuentosAplicados, 
                        System.Decimal BonificacionRecargoFinanciero, 
                        System.Decimal BonificacionRecargoCuenta, 
                        System.Decimal BonificacionRecargoProducto, 
                        System.Decimal PrecioDeCosto, 
                        System.Decimal ImpuestosDirectos, 
                        System.Decimal ImpuestosIndirectos, 
                        string IdMonedaOrigen, 
                        string IdMonedaCierre, 
                        string IdCotizacionCierre, 
                        System.DateTime FechaCreacion, 
                        long IdConexionCreacion, 
                        System.Byte[] UltimaModificacion, 
                        long IdConexionUltimaModificacion, 
                        long IdReservado, 
                        System.Guid RowId, 
                        string RowIdGenerado, 
                        bool Visible, 
                        string IdListaDePrecio, 
                        System.Decimal CoeficienteListaDePrecio, 
                        string ModoDeAplicacion, 
                        System.Decimal PrecioNetoOriginal, 
                        System.Decimal PrecioBrutoOriginal, 
                        System.Decimal PrecioFinalOriginal, 
                        System.Decimal MaxDescuentoPorcentualOriginal, 
                        System.Decimal MaxDescuentoOriginal, 
                        System.Decimal DescuentoAplicadoVendedor, 
                        System.Decimal DescuentoPorcentualAplicadoVendedor, 
                        System.Decimal PrecioDeCostoDirectoOriginal, 
                        System.Decimal PrecioDeCostoIndirectoOriginal, 
                        System.Decimal PrecioDeCostoRefOriginal, 
                        System.Decimal Coeficiente1Original, 
                        System.Decimal Coeficiente2Original, 
                        System.Decimal Coeficiente3Original, 
                        System.Decimal Coeficiente4Original, 
                        System.Decimal Coeficiente5Original, 
                        System.Decimal Coeficiente6Original, 
                        System.Decimal Coeficiente7Original, 
                        System.Decimal Coeficiente8Original, 
                        System.Decimal Coeficiente9Original, 
                        System.Decimal Coeficiente10Original, 
                        string CodigoSecundarioOriginal, 
                        System.Decimal PorcentajeDescuentoFijoAplicado, 
                        System.Decimal PrecioDeCostoReposicionOriginal, 
                        System.Decimal PrecioDeCostoPromedioPonderadoOriginal, 
                        System.Decimal PrecioDeVentaMercadoBolsaOriginal, 
                        System.Decimal PrecioDeVentaMercadoCadenaOriginal, 
                        System.Decimal PrecioDeVentaMercadoCompetenciaDirectaOriginal, 
                        bool UsaPrecioDeCostoReposicionOriginal, 
                        string IdCotizacionCierrePrecioDeCostoRefOriginal) {
                tsa_ComprobantesDetRow rowtsa_ComprobantesDetRow = ((tsa_ComprobantesDetRow)(this.NewRow()));
                rowtsa_ComprobantesDetRow.ItemArray = new object[] {
                        IdComprobante,
                        Ordinal,
                        IdEmpresa,
                        IdSucursal,
                        IdTipoDeComprobante,
                        Fecha,
                        Numero,
                        IdProducto,
                        Cantidad,
                        PrecioFinal,
                        PrecioBruto,
                        PrecioNeto,
                        DescuentosAplicados,
                        BonificacionRecargoFinanciero,
                        BonificacionRecargoCuenta,
                        BonificacionRecargoProducto,
                        PrecioDeCosto,
                        ImpuestosDirectos,
                        ImpuestosIndirectos,
                        IdMonedaOrigen,
                        IdMonedaCierre,
                        IdCotizacionCierre,
                        FechaCreacion,
                        IdConexionCreacion,
                        UltimaModificacion,
                        IdConexionUltimaModificacion,
                        IdReservado,
                        RowId,
                        RowIdGenerado,
                        Visible,
                        IdListaDePrecio,
                        CoeficienteListaDePrecio,
                        ModoDeAplicacion,
                        PrecioNetoOriginal,
                        PrecioBrutoOriginal,
                        PrecioFinalOriginal,
                        MaxDescuentoPorcentualOriginal,
                        MaxDescuentoOriginal,
                        DescuentoAplicadoVendedor,
                        DescuentoPorcentualAplicadoVendedor,
                        PrecioDeCostoDirectoOriginal,
                        PrecioDeCostoIndirectoOriginal,
                        PrecioDeCostoRefOriginal,
                        Coeficiente1Original,
                        Coeficiente2Original,
                        Coeficiente3Original,
                        Coeficiente4Original,
                        Coeficiente5Original,
                        Coeficiente6Original,
                        Coeficiente7Original,
                        Coeficiente8Original,
                        Coeficiente9Original,
                        Coeficiente10Original,
                        CodigoSecundarioOriginal,
                        PorcentajeDescuentoFijoAplicado,
                        PrecioDeCostoReposicionOriginal,
                        PrecioDeCostoPromedioPonderadoOriginal,
                        PrecioDeVentaMercadoBolsaOriginal,
                        PrecioDeVentaMercadoCadenaOriginal,
                        PrecioDeVentaMercadoCompetenciaDirectaOriginal,
                        UsaPrecioDeCostoReposicionOriginal,
                        IdCotizacionCierrePrecioDeCostoRefOriginal};
                this.Rows.Add(rowtsa_ComprobantesDetRow);
                return rowtsa_ComprobantesDetRow;
            }
            
            public tsa_ComprobantesDetRow FindByIdComprobanteOrdinal(string IdComprobante, long Ordinal) {
                return ((tsa_ComprobantesDetRow)(this.Rows.Find(new object[] {
                            IdComprobante,
                            Ordinal})));
            }
            
            public System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            public override DataTable Clone() {
                tsa_ComprobantesDetDataTable cln = ((tsa_ComprobantesDetDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            protected override DataTable CreateInstance() {
                return new tsa_ComprobantesDetDataTable();
            }
            
            internal void InitVars() {
                this.columnIdComprobante = this.Columns["IdComprobante"];
                this.columnOrdinal = this.Columns["Ordinal"];
                this.columnIdEmpresa = this.Columns["IdEmpresa"];
                this.columnIdSucursal = this.Columns["IdSucursal"];
                this.columnIdTipoDeComprobante = this.Columns["IdTipoDeComprobante"];
                this.columnFecha = this.Columns["Fecha"];
                this.columnNumero = this.Columns["Numero"];
                this.columnIdProducto = this.Columns["IdProducto"];
                this.columnCantidad = this.Columns["Cantidad"];
                this.columnPrecioFinal = this.Columns["PrecioFinal"];
                this.columnPrecioBruto = this.Columns["PrecioBruto"];
                this.columnPrecioNeto = this.Columns["PrecioNeto"];
                this.columnDescuentosAplicados = this.Columns["DescuentosAplicados"];
                this.columnBonificacionRecargoFinanciero = this.Columns["BonificacionRecargoFinanciero"];
                this.columnBonificacionRecargoCuenta = this.Columns["BonificacionRecargoCuenta"];
                this.columnBonificacionRecargoProducto = this.Columns["BonificacionRecargoProducto"];
                this.columnPrecioDeCosto = this.Columns["PrecioDeCosto"];
                this.columnImpuestosDirectos = this.Columns["ImpuestosDirectos"];
                this.columnImpuestosIndirectos = this.Columns["ImpuestosIndirectos"];
                this.columnIdMonedaOrigen = this.Columns["IdMonedaOrigen"];
                this.columnIdMonedaCierre = this.Columns["IdMonedaCierre"];
                this.columnIdCotizacionCierre = this.Columns["IdCotizacionCierre"];
                this.columnFechaCreacion = this.Columns["FechaCreacion"];
                this.columnIdConexionCreacion = this.Columns["IdConexionCreacion"];
                this.columnUltimaModificacion = this.Columns["UltimaModificacion"];
                this.columnIdConexionUltimaModificacion = this.Columns["IdConexionUltimaModificacion"];
                this.columnIdReservado = this.Columns["IdReservado"];
                this.columnRowId = this.Columns["RowId"];
                this.columnRowIdGenerado = this.Columns["RowIdGenerado"];
                this.columnVisible = this.Columns["Visible"];
                this.columnIdListaDePrecio = this.Columns["IdListaDePrecio"];
                this.columnCoeficienteListaDePrecio = this.Columns["CoeficienteListaDePrecio"];
                this.columnModoDeAplicacion = this.Columns["ModoDeAplicacion"];
                this.columnPrecioNetoOriginal = this.Columns["PrecioNetoOriginal"];
                this.columnPrecioBrutoOriginal = this.Columns["PrecioBrutoOriginal"];
                this.columnPrecioFinalOriginal = this.Columns["PrecioFinalOriginal"];
                this.columnMaxDescuentoPorcentualOriginal = this.Columns["MaxDescuentoPorcentualOriginal"];
                this.columnMaxDescuentoOriginal = this.Columns["MaxDescuentoOriginal"];
                this.columnDescuentoAplicadoVendedor = this.Columns["DescuentoAplicadoVendedor"];
                this.columnDescuentoPorcentualAplicadoVendedor = this.Columns["DescuentoPorcentualAplicadoVendedor"];
                this.columnPrecioDeCostoDirectoOriginal = this.Columns["PrecioDeCostoDirectoOriginal"];
                this.columnPrecioDeCostoIndirectoOriginal = this.Columns["PrecioDeCostoIndirectoOriginal"];
                this.columnPrecioDeCostoRefOriginal = this.Columns["PrecioDeCostoRefOriginal"];
                this.columnCoeficiente1Original = this.Columns["Coeficiente1Original"];
                this.columnCoeficiente2Original = this.Columns["Coeficiente2Original"];
                this.columnCoeficiente3Original = this.Columns["Coeficiente3Original"];
                this.columnCoeficiente4Original = this.Columns["Coeficiente4Original"];
                this.columnCoeficiente5Original = this.Columns["Coeficiente5Original"];
                this.columnCoeficiente6Original = this.Columns["Coeficiente6Original"];
                this.columnCoeficiente7Original = this.Columns["Coeficiente7Original"];
                this.columnCoeficiente8Original = this.Columns["Coeficiente8Original"];
                this.columnCoeficiente9Original = this.Columns["Coeficiente9Original"];
                this.columnCoeficiente10Original = this.Columns["Coeficiente10Original"];
                this.columnCodigoSecundarioOriginal = this.Columns["CodigoSecundarioOriginal"];
                this.columnPorcentajeDescuentoFijoAplicado = this.Columns["PorcentajeDescuentoFijoAplicado"];
                this.columnPrecioDeCostoReposicionOriginal = this.Columns["PrecioDeCostoReposicionOriginal"];
                this.columnPrecioDeCostoPromedioPonderadoOriginal = this.Columns["PrecioDeCostoPromedioPonderadoOriginal"];
                this.columnPrecioDeVentaMercadoBolsaOriginal = this.Columns["PrecioDeVentaMercadoBolsaOriginal"];
                this.columnPrecioDeVentaMercadoCadenaOriginal = this.Columns["PrecioDeVentaMercadoCadenaOriginal"];
                this.columnPrecioDeVentaMercadoCompetenciaDirectaOriginal = this.Columns["PrecioDeVentaMercadoCompetenciaDirectaOriginal"];
                this.columnUsaPrecioDeCostoReposicionOriginal = this.Columns["UsaPrecioDeCostoReposicionOriginal"];
                this.columnIdCotizacionCierrePrecioDeCostoRefOriginal = this.Columns["IdCotizacionCierrePrecioDeCostoRefOriginal"];
            }
            
            private void InitClass() {
                this.columnIdComprobante = new DataColumn("IdComprobante", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdComprobante);
                this.columnOrdinal = new DataColumn("Ordinal", typeof(long), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnOrdinal);
                this.columnIdEmpresa = new DataColumn("IdEmpresa", typeof(long), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdEmpresa);
                this.columnIdSucursal = new DataColumn("IdSucursal", typeof(long), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdSucursal);
                this.columnIdTipoDeComprobante = new DataColumn("IdTipoDeComprobante", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdTipoDeComprobante);
                this.columnFecha = new DataColumn("Fecha", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnFecha);
                this.columnNumero = new DataColumn("Numero", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnNumero);
                this.columnIdProducto = new DataColumn("IdProducto", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdProducto);
                this.columnCantidad = new DataColumn("Cantidad", typeof(System.Decimal), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnCantidad);
                this.columnPrecioFinal = new DataColumn("PrecioFinal", typeof(System.Decimal), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnPrecioFinal);
                this.columnPrecioBruto = new DataColumn("PrecioBruto", typeof(System.Decimal), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnPrecioBruto);
                this.columnPrecioNeto = new DataColumn("PrecioNeto", typeof(System.Decimal), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnPrecioNeto);
                this.columnDescuentosAplicados = new DataColumn("DescuentosAplicados", typeof(System.Decimal), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnDescuentosAplicados);
                this.columnBonificacionRecargoFinanciero = new DataColumn("BonificacionRecargoFinanciero", typeof(System.Decimal), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnBonificacionRecargoFinanciero);
                this.columnBonificacionRecargoCuenta = new DataColumn("BonificacionRecargoCuenta", typeof(System.Decimal), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnBonificacionRecargoCuenta);
                this.columnBonificacionRecargoProducto = new DataColumn("BonificacionRecargoProducto", typeof(System.Decimal), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnBonificacionRecargoProducto);
                this.columnPrecioDeCosto = new DataColumn("PrecioDeCosto", typeof(System.Decimal), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnPrecioDeCosto);
                this.columnImpuestosDirectos = new DataColumn("ImpuestosDirectos", typeof(System.Decimal), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnImpuestosDirectos);
                this.columnImpuestosIndirectos = new DataColumn("ImpuestosIndirectos", typeof(System.Decimal), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnImpuestosIndirectos);
                this.columnIdMonedaOrigen = new DataColumn("IdMonedaOrigen", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdMonedaOrigen);
                this.columnIdMonedaCierre = new DataColumn("IdMonedaCierre", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdMonedaCierre);
                this.columnIdCotizacionCierre = new DataColumn("IdCotizacionCierre", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdCotizacionCierre);
                this.columnFechaCreacion = new DataColumn("FechaCreacion", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnFechaCreacion);
                this.columnIdConexionCreacion = new DataColumn("IdConexionCreacion", typeof(long), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdConexionCreacion);
                this.columnUltimaModificacion = new DataColumn("UltimaModificacion", typeof(System.Byte[]), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnUltimaModificacion);
                this.columnIdConexionUltimaModificacion = new DataColumn("IdConexionUltimaModificacion", typeof(long), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdConexionUltimaModificacion);
                this.columnIdReservado = new DataColumn("IdReservado", typeof(long), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdReservado);
                this.columnRowId = new DataColumn("RowId", typeof(System.Guid), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnRowId);
                this.columnRowIdGenerado = new DataColumn("RowIdGenerado", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnRowIdGenerado);
                this.columnVisible = new DataColumn("Visible", typeof(bool), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnVisible);
                this.columnIdListaDePrecio = new DataColumn("IdListaDePrecio", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdListaDePrecio);
                this.columnCoeficienteListaDePrecio = new DataColumn("CoeficienteListaDePrecio", typeof(System.Decimal), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnCoeficienteListaDePrecio);
                this.columnModoDeAplicacion = new DataColumn("ModoDeAplicacion", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnModoDeAplicacion);
                this.columnPrecioNetoOriginal = new DataColumn("PrecioNetoOriginal", typeof(System.Decimal), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnPrecioNetoOriginal);
                this.columnPrecioBrutoOriginal = new DataColumn("PrecioBrutoOriginal", typeof(System.Decimal), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnPrecioBrutoOriginal);
                this.columnPrecioFinalOriginal = new DataColumn("PrecioFinalOriginal", typeof(System.Decimal), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnPrecioFinalOriginal);
                this.columnMaxDescuentoPorcentualOriginal = new DataColumn("MaxDescuentoPorcentualOriginal", typeof(System.Decimal), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnMaxDescuentoPorcentualOriginal);
                this.columnMaxDescuentoOriginal = new DataColumn("MaxDescuentoOriginal", typeof(System.Decimal), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnMaxDescuentoOriginal);
                this.columnDescuentoAplicadoVendedor = new DataColumn("DescuentoAplicadoVendedor", typeof(System.Decimal), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnDescuentoAplicadoVendedor);
                this.columnDescuentoPorcentualAplicadoVendedor = new DataColumn("DescuentoPorcentualAplicadoVendedor", typeof(System.Decimal), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnDescuentoPorcentualAplicadoVendedor);
                this.columnPrecioDeCostoDirectoOriginal = new DataColumn("PrecioDeCostoDirectoOriginal", typeof(System.Decimal), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnPrecioDeCostoDirectoOriginal);
                this.columnPrecioDeCostoIndirectoOriginal = new DataColumn("PrecioDeCostoIndirectoOriginal", typeof(System.Decimal), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnPrecioDeCostoIndirectoOriginal);
                this.columnPrecioDeCostoRefOriginal = new DataColumn("PrecioDeCostoRefOriginal", typeof(System.Decimal), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnPrecioDeCostoRefOriginal);
                this.columnCoeficiente1Original = new DataColumn("Coeficiente1Original", typeof(System.Decimal), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnCoeficiente1Original);
                this.columnCoeficiente2Original = new DataColumn("Coeficiente2Original", typeof(System.Decimal), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnCoeficiente2Original);
                this.columnCoeficiente3Original = new DataColumn("Coeficiente3Original", typeof(System.Decimal), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnCoeficiente3Original);
                this.columnCoeficiente4Original = new DataColumn("Coeficiente4Original", typeof(System.Decimal), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnCoeficiente4Original);
                this.columnCoeficiente5Original = new DataColumn("Coeficiente5Original", typeof(System.Decimal), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnCoeficiente5Original);
                this.columnCoeficiente6Original = new DataColumn("Coeficiente6Original", typeof(System.Decimal), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnCoeficiente6Original);
                this.columnCoeficiente7Original = new DataColumn("Coeficiente7Original", typeof(System.Decimal), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnCoeficiente7Original);
                this.columnCoeficiente8Original = new DataColumn("Coeficiente8Original", typeof(System.Decimal), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnCoeficiente8Original);
                this.columnCoeficiente9Original = new DataColumn("Coeficiente9Original", typeof(System.Decimal), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnCoeficiente9Original);
                this.columnCoeficiente10Original = new DataColumn("Coeficiente10Original", typeof(System.Decimal), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnCoeficiente10Original);
                this.columnCodigoSecundarioOriginal = new DataColumn("CodigoSecundarioOriginal", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnCodigoSecundarioOriginal);
                this.columnPorcentajeDescuentoFijoAplicado = new DataColumn("PorcentajeDescuentoFijoAplicado", typeof(System.Decimal), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnPorcentajeDescuentoFijoAplicado);
                this.columnPrecioDeCostoReposicionOriginal = new DataColumn("PrecioDeCostoReposicionOriginal", typeof(System.Decimal), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnPrecioDeCostoReposicionOriginal);
                this.columnPrecioDeCostoPromedioPonderadoOriginal = new DataColumn("PrecioDeCostoPromedioPonderadoOriginal", typeof(System.Decimal), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnPrecioDeCostoPromedioPonderadoOriginal);
                this.columnPrecioDeVentaMercadoBolsaOriginal = new DataColumn("PrecioDeVentaMercadoBolsaOriginal", typeof(System.Decimal), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnPrecioDeVentaMercadoBolsaOriginal);
                this.columnPrecioDeVentaMercadoCadenaOriginal = new DataColumn("PrecioDeVentaMercadoCadenaOriginal", typeof(System.Decimal), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnPrecioDeVentaMercadoCadenaOriginal);
                this.columnPrecioDeVentaMercadoCompetenciaDirectaOriginal = new DataColumn("PrecioDeVentaMercadoCompetenciaDirectaOriginal", typeof(System.Decimal), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnPrecioDeVentaMercadoCompetenciaDirectaOriginal);
                this.columnUsaPrecioDeCostoReposicionOriginal = new DataColumn("UsaPrecioDeCostoReposicionOriginal", typeof(bool), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnUsaPrecioDeCostoReposicionOriginal);
                this.columnIdCotizacionCierrePrecioDeCostoRefOriginal = new DataColumn("IdCotizacionCierrePrecioDeCostoRefOriginal", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdCotizacionCierrePrecioDeCostoRefOriginal);
                this.Constraints.Add(new UniqueConstraint("tsa_ComprobantesDetDatasetKey1", new DataColumn[] {
                                this.columnIdComprobante,
                                this.columnOrdinal}, true));
                this.columnIdComprobante.AllowDBNull = false;
                this.columnOrdinal.AllowDBNull = false;
                this.columnUltimaModificacion.ReadOnly = true;
            }
            
            public tsa_ComprobantesDetRow Newtsa_ComprobantesDetRow() {
                return ((tsa_ComprobantesDetRow)(this.NewRow()));
            }
            
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder) {
                return new tsa_ComprobantesDetRow(builder);
            }
            
            protected override System.Type GetRowType() {
                return typeof(tsa_ComprobantesDetRow);
            }
            
            protected override void OnRowChanged(DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.tsa_ComprobantesDetRowChanged != null)) {
                    this.tsa_ComprobantesDetRowChanged(this, new tsa_ComprobantesDetRowChangeEvent(((tsa_ComprobantesDetRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowChanging(DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.tsa_ComprobantesDetRowChanging != null)) {
                    this.tsa_ComprobantesDetRowChanging(this, new tsa_ComprobantesDetRowChangeEvent(((tsa_ComprobantesDetRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleted(DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.tsa_ComprobantesDetRowDeleted != null)) {
                    this.tsa_ComprobantesDetRowDeleted(this, new tsa_ComprobantesDetRowChangeEvent(((tsa_ComprobantesDetRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleting(DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.tsa_ComprobantesDetRowDeleting != null)) {
                    this.tsa_ComprobantesDetRowDeleting(this, new tsa_ComprobantesDetRowChangeEvent(((tsa_ComprobantesDetRow)(e.Row)), e.Action));
                }
            }
            
            public void Removetsa_ComprobantesDetRow(tsa_ComprobantesDetRow row) {
                this.Rows.Remove(row);
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class tsa_ComprobantesDetRow : DataRow {
            
            private tsa_ComprobantesDetDataTable tabletsa_ComprobantesDet;
            
            internal tsa_ComprobantesDetRow(DataRowBuilder rb) : 
                    base(rb) {
                this.tabletsa_ComprobantesDet = ((tsa_ComprobantesDetDataTable)(this.Table));
            }
            
            public string IdComprobante {
                get {
                    return ((string)(this[this.tabletsa_ComprobantesDet.IdComprobanteColumn]));
                }
                set {
                    this[this.tabletsa_ComprobantesDet.IdComprobanteColumn] = value;
                }
            }
            
            public long Ordinal {
                get {
                    return ((long)(this[this.tabletsa_ComprobantesDet.OrdinalColumn]));
                }
                set {
                    this[this.tabletsa_ComprobantesDet.OrdinalColumn] = value;
                }
            }
            
            public long IdEmpresa {
                get {
                    try {
                        return ((long)(this[this.tabletsa_ComprobantesDet.IdEmpresaColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletsa_ComprobantesDet.IdEmpresaColumn] = value;
                }
            }
            
            public long IdSucursal {
                get {
                    try {
                        return ((long)(this[this.tabletsa_ComprobantesDet.IdSucursalColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletsa_ComprobantesDet.IdSucursalColumn] = value;
                }
            }
            
            public string IdTipoDeComprobante {
                get {
                    try {
                        return ((string)(this[this.tabletsa_ComprobantesDet.IdTipoDeComprobanteColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletsa_ComprobantesDet.IdTipoDeComprobanteColumn] = value;
                }
            }
            
            public System.DateTime Fecha {
                get {
                    try {
                        return ((System.DateTime)(this[this.tabletsa_ComprobantesDet.FechaColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletsa_ComprobantesDet.FechaColumn] = value;
                }
            }
            
            public string Numero {
                get {
                    try {
                        return ((string)(this[this.tabletsa_ComprobantesDet.NumeroColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletsa_ComprobantesDet.NumeroColumn] = value;
                }
            }
            
            public string IdProducto {
                get {
                    try {
                        return ((string)(this[this.tabletsa_ComprobantesDet.IdProductoColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletsa_ComprobantesDet.IdProductoColumn] = value;
                }
            }
            
            public System.Decimal Cantidad {
                get {
                    try {
                        return ((System.Decimal)(this[this.tabletsa_ComprobantesDet.CantidadColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletsa_ComprobantesDet.CantidadColumn] = value;
                }
            }
            
            public System.Decimal PrecioFinal {
                get {
                    try {
                        return ((System.Decimal)(this[this.tabletsa_ComprobantesDet.PrecioFinalColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletsa_ComprobantesDet.PrecioFinalColumn] = value;
                }
            }
            
            public System.Decimal PrecioBruto {
                get {
                    try {
                        return ((System.Decimal)(this[this.tabletsa_ComprobantesDet.PrecioBrutoColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletsa_ComprobantesDet.PrecioBrutoColumn] = value;
                }
            }
            
            public System.Decimal PrecioNeto {
                get {
                    try {
                        return ((System.Decimal)(this[this.tabletsa_ComprobantesDet.PrecioNetoColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletsa_ComprobantesDet.PrecioNetoColumn] = value;
                }
            }
            
            public System.Decimal DescuentosAplicados {
                get {
                    try {
                        return ((System.Decimal)(this[this.tabletsa_ComprobantesDet.DescuentosAplicadosColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletsa_ComprobantesDet.DescuentosAplicadosColumn] = value;
                }
            }
            
            public System.Decimal BonificacionRecargoFinanciero {
                get {
                    try {
                        return ((System.Decimal)(this[this.tabletsa_ComprobantesDet.BonificacionRecargoFinancieroColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletsa_ComprobantesDet.BonificacionRecargoFinancieroColumn] = value;
                }
            }
            
            public System.Decimal BonificacionRecargoCuenta {
                get {
                    try {
                        return ((System.Decimal)(this[this.tabletsa_ComprobantesDet.BonificacionRecargoCuentaColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletsa_ComprobantesDet.BonificacionRecargoCuentaColumn] = value;
                }
            }
            
            public System.Decimal BonificacionRecargoProducto {
                get {
                    try {
                        return ((System.Decimal)(this[this.tabletsa_ComprobantesDet.BonificacionRecargoProductoColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletsa_ComprobantesDet.BonificacionRecargoProductoColumn] = value;
                }
            }
            
            public System.Decimal PrecioDeCosto {
                get {
                    try {
                        return ((System.Decimal)(this[this.tabletsa_ComprobantesDet.PrecioDeCostoColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletsa_ComprobantesDet.PrecioDeCostoColumn] = value;
                }
            }
            
            public System.Decimal ImpuestosDirectos {
                get {
                    try {
                        return ((System.Decimal)(this[this.tabletsa_ComprobantesDet.ImpuestosDirectosColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletsa_ComprobantesDet.ImpuestosDirectosColumn] = value;
                }
            }
            
            public System.Decimal ImpuestosIndirectos {
                get {
                    try {
                        return ((System.Decimal)(this[this.tabletsa_ComprobantesDet.ImpuestosIndirectosColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletsa_ComprobantesDet.ImpuestosIndirectosColumn] = value;
                }
            }
            
            public string IdMonedaOrigen {
                get {
                    try {
                        return ((string)(this[this.tabletsa_ComprobantesDet.IdMonedaOrigenColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletsa_ComprobantesDet.IdMonedaOrigenColumn] = value;
                }
            }
            
            public string IdMonedaCierre {
                get {
                    try {
                        return ((string)(this[this.tabletsa_ComprobantesDet.IdMonedaCierreColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletsa_ComprobantesDet.IdMonedaCierreColumn] = value;
                }
            }
            
            public string IdCotizacionCierre {
                get {
                    try {
                        return ((string)(this[this.tabletsa_ComprobantesDet.IdCotizacionCierreColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletsa_ComprobantesDet.IdCotizacionCierreColumn] = value;
                }
            }
            
            public System.DateTime FechaCreacion {
                get {
                    try {
                        return ((System.DateTime)(this[this.tabletsa_ComprobantesDet.FechaCreacionColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletsa_ComprobantesDet.FechaCreacionColumn] = value;
                }
            }
            
            public long IdConexionCreacion {
                get {
                    try {
                        return ((long)(this[this.tabletsa_ComprobantesDet.IdConexionCreacionColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletsa_ComprobantesDet.IdConexionCreacionColumn] = value;
                }
            }
            
            public System.Byte[] UltimaModificacion {
                get {
                    try {
                        return ((System.Byte[])(this[this.tabletsa_ComprobantesDet.UltimaModificacionColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletsa_ComprobantesDet.UltimaModificacionColumn] = value;
                }
            }
            
            public long IdConexionUltimaModificacion {
                get {
                    try {
                        return ((long)(this[this.tabletsa_ComprobantesDet.IdConexionUltimaModificacionColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletsa_ComprobantesDet.IdConexionUltimaModificacionColumn] = value;
                }
            }
            
            public long IdReservado {
                get {
                    try {
                        return ((long)(this[this.tabletsa_ComprobantesDet.IdReservadoColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletsa_ComprobantesDet.IdReservadoColumn] = value;
                }
            }
            
            public System.Guid RowId {
                get {
                    try {
                        return ((System.Guid)(this[this.tabletsa_ComprobantesDet.RowIdColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletsa_ComprobantesDet.RowIdColumn] = value;
                }
            }
            
            public string RowIdGenerado {
                get {
                    try {
                        return ((string)(this[this.tabletsa_ComprobantesDet.RowIdGeneradoColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletsa_ComprobantesDet.RowIdGeneradoColumn] = value;
                }
            }
            
            public bool Visible {
                get {
                    try {
                        return ((bool)(this[this.tabletsa_ComprobantesDet.VisibleColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletsa_ComprobantesDet.VisibleColumn] = value;
                }
            }
            
            public string IdListaDePrecio {
                get {
                    try {
                        return ((string)(this[this.tabletsa_ComprobantesDet.IdListaDePrecioColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletsa_ComprobantesDet.IdListaDePrecioColumn] = value;
                }
            }
            
            public System.Decimal CoeficienteListaDePrecio {
                get {
                    try {
                        return ((System.Decimal)(this[this.tabletsa_ComprobantesDet.CoeficienteListaDePrecioColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletsa_ComprobantesDet.CoeficienteListaDePrecioColumn] = value;
                }
            }
            
            public string ModoDeAplicacion {
                get {
                    try {
                        return ((string)(this[this.tabletsa_ComprobantesDet.ModoDeAplicacionColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletsa_ComprobantesDet.ModoDeAplicacionColumn] = value;
                }
            }
            
            public System.Decimal PrecioNetoOriginal {
                get {
                    try {
                        return ((System.Decimal)(this[this.tabletsa_ComprobantesDet.PrecioNetoOriginalColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletsa_ComprobantesDet.PrecioNetoOriginalColumn] = value;
                }
            }
            
            public System.Decimal PrecioBrutoOriginal {
                get {
                    try {
                        return ((System.Decimal)(this[this.tabletsa_ComprobantesDet.PrecioBrutoOriginalColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletsa_ComprobantesDet.PrecioBrutoOriginalColumn] = value;
                }
            }
            
            public System.Decimal PrecioFinalOriginal {
                get {
                    try {
                        return ((System.Decimal)(this[this.tabletsa_ComprobantesDet.PrecioFinalOriginalColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletsa_ComprobantesDet.PrecioFinalOriginalColumn] = value;
                }
            }
            
            public System.Decimal MaxDescuentoPorcentualOriginal {
                get {
                    try {
                        return ((System.Decimal)(this[this.tabletsa_ComprobantesDet.MaxDescuentoPorcentualOriginalColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletsa_ComprobantesDet.MaxDescuentoPorcentualOriginalColumn] = value;
                }
            }
            
            public System.Decimal MaxDescuentoOriginal {
                get {
                    try {
                        return ((System.Decimal)(this[this.tabletsa_ComprobantesDet.MaxDescuentoOriginalColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletsa_ComprobantesDet.MaxDescuentoOriginalColumn] = value;
                }
            }
            
            public System.Decimal DescuentoAplicadoVendedor {
                get {
                    try {
                        return ((System.Decimal)(this[this.tabletsa_ComprobantesDet.DescuentoAplicadoVendedorColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletsa_ComprobantesDet.DescuentoAplicadoVendedorColumn] = value;
                }
            }
            
            public System.Decimal DescuentoPorcentualAplicadoVendedor {
                get {
                    try {
                        return ((System.Decimal)(this[this.tabletsa_ComprobantesDet.DescuentoPorcentualAplicadoVendedorColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletsa_ComprobantesDet.DescuentoPorcentualAplicadoVendedorColumn] = value;
                }
            }
            
            public System.Decimal PrecioDeCostoDirectoOriginal {
                get {
                    try {
                        return ((System.Decimal)(this[this.tabletsa_ComprobantesDet.PrecioDeCostoDirectoOriginalColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletsa_ComprobantesDet.PrecioDeCostoDirectoOriginalColumn] = value;
                }
            }
            
            public System.Decimal PrecioDeCostoIndirectoOriginal {
                get {
                    try {
                        return ((System.Decimal)(this[this.tabletsa_ComprobantesDet.PrecioDeCostoIndirectoOriginalColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletsa_ComprobantesDet.PrecioDeCostoIndirectoOriginalColumn] = value;
                }
            }
            
            public System.Decimal PrecioDeCostoRefOriginal {
                get {
                    try {
                        return ((System.Decimal)(this[this.tabletsa_ComprobantesDet.PrecioDeCostoRefOriginalColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletsa_ComprobantesDet.PrecioDeCostoRefOriginalColumn] = value;
                }
            }
            
            public System.Decimal Coeficiente1Original {
                get {
                    try {
                        return ((System.Decimal)(this[this.tabletsa_ComprobantesDet.Coeficiente1OriginalColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletsa_ComprobantesDet.Coeficiente1OriginalColumn] = value;
                }
            }
            
            public System.Decimal Coeficiente2Original {
                get {
                    try {
                        return ((System.Decimal)(this[this.tabletsa_ComprobantesDet.Coeficiente2OriginalColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletsa_ComprobantesDet.Coeficiente2OriginalColumn] = value;
                }
            }
            
            public System.Decimal Coeficiente3Original {
                get {
                    try {
                        return ((System.Decimal)(this[this.tabletsa_ComprobantesDet.Coeficiente3OriginalColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletsa_ComprobantesDet.Coeficiente3OriginalColumn] = value;
                }
            }
            
            public System.Decimal Coeficiente4Original {
                get {
                    try {
                        return ((System.Decimal)(this[this.tabletsa_ComprobantesDet.Coeficiente4OriginalColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletsa_ComprobantesDet.Coeficiente4OriginalColumn] = value;
                }
            }
            
            public System.Decimal Coeficiente5Original {
                get {
                    try {
                        return ((System.Decimal)(this[this.tabletsa_ComprobantesDet.Coeficiente5OriginalColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletsa_ComprobantesDet.Coeficiente5OriginalColumn] = value;
                }
            }
            
            public System.Decimal Coeficiente6Original {
                get {
                    try {
                        return ((System.Decimal)(this[this.tabletsa_ComprobantesDet.Coeficiente6OriginalColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletsa_ComprobantesDet.Coeficiente6OriginalColumn] = value;
                }
            }
            
            public System.Decimal Coeficiente7Original {
                get {
                    try {
                        return ((System.Decimal)(this[this.tabletsa_ComprobantesDet.Coeficiente7OriginalColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletsa_ComprobantesDet.Coeficiente7OriginalColumn] = value;
                }
            }
            
            public System.Decimal Coeficiente8Original {
                get {
                    try {
                        return ((System.Decimal)(this[this.tabletsa_ComprobantesDet.Coeficiente8OriginalColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletsa_ComprobantesDet.Coeficiente8OriginalColumn] = value;
                }
            }
            
            public System.Decimal Coeficiente9Original {
                get {
                    try {
                        return ((System.Decimal)(this[this.tabletsa_ComprobantesDet.Coeficiente9OriginalColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletsa_ComprobantesDet.Coeficiente9OriginalColumn] = value;
                }
            }
            
            public System.Decimal Coeficiente10Original {
                get {
                    try {
                        return ((System.Decimal)(this[this.tabletsa_ComprobantesDet.Coeficiente10OriginalColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletsa_ComprobantesDet.Coeficiente10OriginalColumn] = value;
                }
            }
            
            public string CodigoSecundarioOriginal {
                get {
                    try {
                        return ((string)(this[this.tabletsa_ComprobantesDet.CodigoSecundarioOriginalColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletsa_ComprobantesDet.CodigoSecundarioOriginalColumn] = value;
                }
            }
            
            public System.Decimal PorcentajeDescuentoFijoAplicado {
                get {
                    try {
                        return ((System.Decimal)(this[this.tabletsa_ComprobantesDet.PorcentajeDescuentoFijoAplicadoColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletsa_ComprobantesDet.PorcentajeDescuentoFijoAplicadoColumn] = value;
                }
            }
            
            public System.Decimal PrecioDeCostoReposicionOriginal {
                get {
                    try {
                        return ((System.Decimal)(this[this.tabletsa_ComprobantesDet.PrecioDeCostoReposicionOriginalColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletsa_ComprobantesDet.PrecioDeCostoReposicionOriginalColumn] = value;
                }
            }
            
            public System.Decimal PrecioDeCostoPromedioPonderadoOriginal {
                get {
                    try {
                        return ((System.Decimal)(this[this.tabletsa_ComprobantesDet.PrecioDeCostoPromedioPonderadoOriginalColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletsa_ComprobantesDet.PrecioDeCostoPromedioPonderadoOriginalColumn] = value;
                }
            }
            
            public System.Decimal PrecioDeVentaMercadoBolsaOriginal {
                get {
                    try {
                        return ((System.Decimal)(this[this.tabletsa_ComprobantesDet.PrecioDeVentaMercadoBolsaOriginalColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletsa_ComprobantesDet.PrecioDeVentaMercadoBolsaOriginalColumn] = value;
                }
            }
            
            public System.Decimal PrecioDeVentaMercadoCadenaOriginal {
                get {
                    try {
                        return ((System.Decimal)(this[this.tabletsa_ComprobantesDet.PrecioDeVentaMercadoCadenaOriginalColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletsa_ComprobantesDet.PrecioDeVentaMercadoCadenaOriginalColumn] = value;
                }
            }
            
            public System.Decimal PrecioDeVentaMercadoCompetenciaDirectaOriginal {
                get {
                    try {
                        return ((System.Decimal)(this[this.tabletsa_ComprobantesDet.PrecioDeVentaMercadoCompetenciaDirectaOriginalColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletsa_ComprobantesDet.PrecioDeVentaMercadoCompetenciaDirectaOriginalColumn] = value;
                }
            }
            
            public bool UsaPrecioDeCostoReposicionOriginal {
                get {
                    try {
                        return ((bool)(this[this.tabletsa_ComprobantesDet.UsaPrecioDeCostoReposicionOriginalColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletsa_ComprobantesDet.UsaPrecioDeCostoReposicionOriginalColumn] = value;
                }
            }
            
            public string IdCotizacionCierrePrecioDeCostoRefOriginal {
                get {
                    try {
                        return ((string)(this[this.tabletsa_ComprobantesDet.IdCotizacionCierrePrecioDeCostoRefOriginalColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletsa_ComprobantesDet.IdCotizacionCierrePrecioDeCostoRefOriginalColumn] = value;
                }
            }
            
            public bool IsIdEmpresaNull() {
                return this.IsNull(this.tabletsa_ComprobantesDet.IdEmpresaColumn);
            }
            
            public void SetIdEmpresaNull() {
                this[this.tabletsa_ComprobantesDet.IdEmpresaColumn] = System.Convert.DBNull;
            }
            
            public bool IsIdSucursalNull() {
                return this.IsNull(this.tabletsa_ComprobantesDet.IdSucursalColumn);
            }
            
            public void SetIdSucursalNull() {
                this[this.tabletsa_ComprobantesDet.IdSucursalColumn] = System.Convert.DBNull;
            }
            
            public bool IsIdTipoDeComprobanteNull() {
                return this.IsNull(this.tabletsa_ComprobantesDet.IdTipoDeComprobanteColumn);
            }
            
            public void SetIdTipoDeComprobanteNull() {
                this[this.tabletsa_ComprobantesDet.IdTipoDeComprobanteColumn] = System.Convert.DBNull;
            }
            
            public bool IsFechaNull() {
                return this.IsNull(this.tabletsa_ComprobantesDet.FechaColumn);
            }
            
            public void SetFechaNull() {
                this[this.tabletsa_ComprobantesDet.FechaColumn] = System.Convert.DBNull;
            }
            
            public bool IsNumeroNull() {
                return this.IsNull(this.tabletsa_ComprobantesDet.NumeroColumn);
            }
            
            public void SetNumeroNull() {
                this[this.tabletsa_ComprobantesDet.NumeroColumn] = System.Convert.DBNull;
            }
            
            public bool IsIdProductoNull() {
                return this.IsNull(this.tabletsa_ComprobantesDet.IdProductoColumn);
            }
            
            public void SetIdProductoNull() {
                this[this.tabletsa_ComprobantesDet.IdProductoColumn] = System.Convert.DBNull;
            }
            
            public bool IsCantidadNull() {
                return this.IsNull(this.tabletsa_ComprobantesDet.CantidadColumn);
            }
            
            public void SetCantidadNull() {
                this[this.tabletsa_ComprobantesDet.CantidadColumn] = System.Convert.DBNull;
            }
            
            public bool IsPrecioFinalNull() {
                return this.IsNull(this.tabletsa_ComprobantesDet.PrecioFinalColumn);
            }
            
            public void SetPrecioFinalNull() {
                this[this.tabletsa_ComprobantesDet.PrecioFinalColumn] = System.Convert.DBNull;
            }
            
            public bool IsPrecioBrutoNull() {
                return this.IsNull(this.tabletsa_ComprobantesDet.PrecioBrutoColumn);
            }
            
            public void SetPrecioBrutoNull() {
                this[this.tabletsa_ComprobantesDet.PrecioBrutoColumn] = System.Convert.DBNull;
            }
            
            public bool IsPrecioNetoNull() {
                return this.IsNull(this.tabletsa_ComprobantesDet.PrecioNetoColumn);
            }
            
            public void SetPrecioNetoNull() {
                this[this.tabletsa_ComprobantesDet.PrecioNetoColumn] = System.Convert.DBNull;
            }
            
            public bool IsDescuentosAplicadosNull() {
                return this.IsNull(this.tabletsa_ComprobantesDet.DescuentosAplicadosColumn);
            }
            
            public void SetDescuentosAplicadosNull() {
                this[this.tabletsa_ComprobantesDet.DescuentosAplicadosColumn] = System.Convert.DBNull;
            }
            
            public bool IsBonificacionRecargoFinancieroNull() {
                return this.IsNull(this.tabletsa_ComprobantesDet.BonificacionRecargoFinancieroColumn);
            }
            
            public void SetBonificacionRecargoFinancieroNull() {
                this[this.tabletsa_ComprobantesDet.BonificacionRecargoFinancieroColumn] = System.Convert.DBNull;
            }
            
            public bool IsBonificacionRecargoCuentaNull() {
                return this.IsNull(this.tabletsa_ComprobantesDet.BonificacionRecargoCuentaColumn);
            }
            
            public void SetBonificacionRecargoCuentaNull() {
                this[this.tabletsa_ComprobantesDet.BonificacionRecargoCuentaColumn] = System.Convert.DBNull;
            }
            
            public bool IsBonificacionRecargoProductoNull() {
                return this.IsNull(this.tabletsa_ComprobantesDet.BonificacionRecargoProductoColumn);
            }
            
            public void SetBonificacionRecargoProductoNull() {
                this[this.tabletsa_ComprobantesDet.BonificacionRecargoProductoColumn] = System.Convert.DBNull;
            }
            
            public bool IsPrecioDeCostoNull() {
                return this.IsNull(this.tabletsa_ComprobantesDet.PrecioDeCostoColumn);
            }
            
            public void SetPrecioDeCostoNull() {
                this[this.tabletsa_ComprobantesDet.PrecioDeCostoColumn] = System.Convert.DBNull;
            }
            
            public bool IsImpuestosDirectosNull() {
                return this.IsNull(this.tabletsa_ComprobantesDet.ImpuestosDirectosColumn);
            }
            
            public void SetImpuestosDirectosNull() {
                this[this.tabletsa_ComprobantesDet.ImpuestosDirectosColumn] = System.Convert.DBNull;
            }
            
            public bool IsImpuestosIndirectosNull() {
                return this.IsNull(this.tabletsa_ComprobantesDet.ImpuestosIndirectosColumn);
            }
            
            public void SetImpuestosIndirectosNull() {
                this[this.tabletsa_ComprobantesDet.ImpuestosIndirectosColumn] = System.Convert.DBNull;
            }
            
            public bool IsIdMonedaOrigenNull() {
                return this.IsNull(this.tabletsa_ComprobantesDet.IdMonedaOrigenColumn);
            }
            
            public void SetIdMonedaOrigenNull() {
                this[this.tabletsa_ComprobantesDet.IdMonedaOrigenColumn] = System.Convert.DBNull;
            }
            
            public bool IsIdMonedaCierreNull() {
                return this.IsNull(this.tabletsa_ComprobantesDet.IdMonedaCierreColumn);
            }
            
            public void SetIdMonedaCierreNull() {
                this[this.tabletsa_ComprobantesDet.IdMonedaCierreColumn] = System.Convert.DBNull;
            }
            
            public bool IsIdCotizacionCierreNull() {
                return this.IsNull(this.tabletsa_ComprobantesDet.IdCotizacionCierreColumn);
            }
            
            public void SetIdCotizacionCierreNull() {
                this[this.tabletsa_ComprobantesDet.IdCotizacionCierreColumn] = System.Convert.DBNull;
            }
            
            public bool IsFechaCreacionNull() {
                return this.IsNull(this.tabletsa_ComprobantesDet.FechaCreacionColumn);
            }
            
            public void SetFechaCreacionNull() {
                this[this.tabletsa_ComprobantesDet.FechaCreacionColumn] = System.Convert.DBNull;
            }
            
            public bool IsIdConexionCreacionNull() {
                return this.IsNull(this.tabletsa_ComprobantesDet.IdConexionCreacionColumn);
            }
            
            public void SetIdConexionCreacionNull() {
                this[this.tabletsa_ComprobantesDet.IdConexionCreacionColumn] = System.Convert.DBNull;
            }
            
            public bool IsUltimaModificacionNull() {
                return this.IsNull(this.tabletsa_ComprobantesDet.UltimaModificacionColumn);
            }
            
            public void SetUltimaModificacionNull() {
                this[this.tabletsa_ComprobantesDet.UltimaModificacionColumn] = System.Convert.DBNull;
            }
            
            public bool IsIdConexionUltimaModificacionNull() {
                return this.IsNull(this.tabletsa_ComprobantesDet.IdConexionUltimaModificacionColumn);
            }
            
            public void SetIdConexionUltimaModificacionNull() {
                this[this.tabletsa_ComprobantesDet.IdConexionUltimaModificacionColumn] = System.Convert.DBNull;
            }
            
            public bool IsIdReservadoNull() {
                return this.IsNull(this.tabletsa_ComprobantesDet.IdReservadoColumn);
            }
            
            public void SetIdReservadoNull() {
                this[this.tabletsa_ComprobantesDet.IdReservadoColumn] = System.Convert.DBNull;
            }
            
            public bool IsRowIdNull() {
                return this.IsNull(this.tabletsa_ComprobantesDet.RowIdColumn);
            }
            
            public void SetRowIdNull() {
                this[this.tabletsa_ComprobantesDet.RowIdColumn] = System.Convert.DBNull;
            }
            
            public bool IsRowIdGeneradoNull() {
                return this.IsNull(this.tabletsa_ComprobantesDet.RowIdGeneradoColumn);
            }
            
            public void SetRowIdGeneradoNull() {
                this[this.tabletsa_ComprobantesDet.RowIdGeneradoColumn] = System.Convert.DBNull;
            }
            
            public bool IsVisibleNull() {
                return this.IsNull(this.tabletsa_ComprobantesDet.VisibleColumn);
            }
            
            public void SetVisibleNull() {
                this[this.tabletsa_ComprobantesDet.VisibleColumn] = System.Convert.DBNull;
            }
            
            public bool IsIdListaDePrecioNull() {
                return this.IsNull(this.tabletsa_ComprobantesDet.IdListaDePrecioColumn);
            }
            
            public void SetIdListaDePrecioNull() {
                this[this.tabletsa_ComprobantesDet.IdListaDePrecioColumn] = System.Convert.DBNull;
            }
            
            public bool IsCoeficienteListaDePrecioNull() {
                return this.IsNull(this.tabletsa_ComprobantesDet.CoeficienteListaDePrecioColumn);
            }
            
            public void SetCoeficienteListaDePrecioNull() {
                this[this.tabletsa_ComprobantesDet.CoeficienteListaDePrecioColumn] = System.Convert.DBNull;
            }
            
            public bool IsModoDeAplicacionNull() {
                return this.IsNull(this.tabletsa_ComprobantesDet.ModoDeAplicacionColumn);
            }
            
            public void SetModoDeAplicacionNull() {
                this[this.tabletsa_ComprobantesDet.ModoDeAplicacionColumn] = System.Convert.DBNull;
            }
            
            public bool IsPrecioNetoOriginalNull() {
                return this.IsNull(this.tabletsa_ComprobantesDet.PrecioNetoOriginalColumn);
            }
            
            public void SetPrecioNetoOriginalNull() {
                this[this.tabletsa_ComprobantesDet.PrecioNetoOriginalColumn] = System.Convert.DBNull;
            }
            
            public bool IsPrecioBrutoOriginalNull() {
                return this.IsNull(this.tabletsa_ComprobantesDet.PrecioBrutoOriginalColumn);
            }
            
            public void SetPrecioBrutoOriginalNull() {
                this[this.tabletsa_ComprobantesDet.PrecioBrutoOriginalColumn] = System.Convert.DBNull;
            }
            
            public bool IsPrecioFinalOriginalNull() {
                return this.IsNull(this.tabletsa_ComprobantesDet.PrecioFinalOriginalColumn);
            }
            
            public void SetPrecioFinalOriginalNull() {
                this[this.tabletsa_ComprobantesDet.PrecioFinalOriginalColumn] = System.Convert.DBNull;
            }
            
            public bool IsMaxDescuentoPorcentualOriginalNull() {
                return this.IsNull(this.tabletsa_ComprobantesDet.MaxDescuentoPorcentualOriginalColumn);
            }
            
            public void SetMaxDescuentoPorcentualOriginalNull() {
                this[this.tabletsa_ComprobantesDet.MaxDescuentoPorcentualOriginalColumn] = System.Convert.DBNull;
            }
            
            public bool IsMaxDescuentoOriginalNull() {
                return this.IsNull(this.tabletsa_ComprobantesDet.MaxDescuentoOriginalColumn);
            }
            
            public void SetMaxDescuentoOriginalNull() {
                this[this.tabletsa_ComprobantesDet.MaxDescuentoOriginalColumn] = System.Convert.DBNull;
            }
            
            public bool IsDescuentoAplicadoVendedorNull() {
                return this.IsNull(this.tabletsa_ComprobantesDet.DescuentoAplicadoVendedorColumn);
            }
            
            public void SetDescuentoAplicadoVendedorNull() {
                this[this.tabletsa_ComprobantesDet.DescuentoAplicadoVendedorColumn] = System.Convert.DBNull;
            }
            
            public bool IsDescuentoPorcentualAplicadoVendedorNull() {
                return this.IsNull(this.tabletsa_ComprobantesDet.DescuentoPorcentualAplicadoVendedorColumn);
            }
            
            public void SetDescuentoPorcentualAplicadoVendedorNull() {
                this[this.tabletsa_ComprobantesDet.DescuentoPorcentualAplicadoVendedorColumn] = System.Convert.DBNull;
            }
            
            public bool IsPrecioDeCostoDirectoOriginalNull() {
                return this.IsNull(this.tabletsa_ComprobantesDet.PrecioDeCostoDirectoOriginalColumn);
            }
            
            public void SetPrecioDeCostoDirectoOriginalNull() {
                this[this.tabletsa_ComprobantesDet.PrecioDeCostoDirectoOriginalColumn] = System.Convert.DBNull;
            }
            
            public bool IsPrecioDeCostoIndirectoOriginalNull() {
                return this.IsNull(this.tabletsa_ComprobantesDet.PrecioDeCostoIndirectoOriginalColumn);
            }
            
            public void SetPrecioDeCostoIndirectoOriginalNull() {
                this[this.tabletsa_ComprobantesDet.PrecioDeCostoIndirectoOriginalColumn] = System.Convert.DBNull;
            }
            
            public bool IsPrecioDeCostoRefOriginalNull() {
                return this.IsNull(this.tabletsa_ComprobantesDet.PrecioDeCostoRefOriginalColumn);
            }
            
            public void SetPrecioDeCostoRefOriginalNull() {
                this[this.tabletsa_ComprobantesDet.PrecioDeCostoRefOriginalColumn] = System.Convert.DBNull;
            }
            
            public bool IsCoeficiente1OriginalNull() {
                return this.IsNull(this.tabletsa_ComprobantesDet.Coeficiente1OriginalColumn);
            }
            
            public void SetCoeficiente1OriginalNull() {
                this[this.tabletsa_ComprobantesDet.Coeficiente1OriginalColumn] = System.Convert.DBNull;
            }
            
            public bool IsCoeficiente2OriginalNull() {
                return this.IsNull(this.tabletsa_ComprobantesDet.Coeficiente2OriginalColumn);
            }
            
            public void SetCoeficiente2OriginalNull() {
                this[this.tabletsa_ComprobantesDet.Coeficiente2OriginalColumn] = System.Convert.DBNull;
            }
            
            public bool IsCoeficiente3OriginalNull() {
                return this.IsNull(this.tabletsa_ComprobantesDet.Coeficiente3OriginalColumn);
            }
            
            public void SetCoeficiente3OriginalNull() {
                this[this.tabletsa_ComprobantesDet.Coeficiente3OriginalColumn] = System.Convert.DBNull;
            }
            
            public bool IsCoeficiente4OriginalNull() {
                return this.IsNull(this.tabletsa_ComprobantesDet.Coeficiente4OriginalColumn);
            }
            
            public void SetCoeficiente4OriginalNull() {
                this[this.tabletsa_ComprobantesDet.Coeficiente4OriginalColumn] = System.Convert.DBNull;
            }
            
            public bool IsCoeficiente5OriginalNull() {
                return this.IsNull(this.tabletsa_ComprobantesDet.Coeficiente5OriginalColumn);
            }
            
            public void SetCoeficiente5OriginalNull() {
                this[this.tabletsa_ComprobantesDet.Coeficiente5OriginalColumn] = System.Convert.DBNull;
            }
            
            public bool IsCoeficiente6OriginalNull() {
                return this.IsNull(this.tabletsa_ComprobantesDet.Coeficiente6OriginalColumn);
            }
            
            public void SetCoeficiente6OriginalNull() {
                this[this.tabletsa_ComprobantesDet.Coeficiente6OriginalColumn] = System.Convert.DBNull;
            }
            
            public bool IsCoeficiente7OriginalNull() {
                return this.IsNull(this.tabletsa_ComprobantesDet.Coeficiente7OriginalColumn);
            }
            
            public void SetCoeficiente7OriginalNull() {
                this[this.tabletsa_ComprobantesDet.Coeficiente7OriginalColumn] = System.Convert.DBNull;
            }
            
            public bool IsCoeficiente8OriginalNull() {
                return this.IsNull(this.tabletsa_ComprobantesDet.Coeficiente8OriginalColumn);
            }
            
            public void SetCoeficiente8OriginalNull() {
                this[this.tabletsa_ComprobantesDet.Coeficiente8OriginalColumn] = System.Convert.DBNull;
            }
            
            public bool IsCoeficiente9OriginalNull() {
                return this.IsNull(this.tabletsa_ComprobantesDet.Coeficiente9OriginalColumn);
            }
            
            public void SetCoeficiente9OriginalNull() {
                this[this.tabletsa_ComprobantesDet.Coeficiente9OriginalColumn] = System.Convert.DBNull;
            }
            
            public bool IsCoeficiente10OriginalNull() {
                return this.IsNull(this.tabletsa_ComprobantesDet.Coeficiente10OriginalColumn);
            }
            
            public void SetCoeficiente10OriginalNull() {
                this[this.tabletsa_ComprobantesDet.Coeficiente10OriginalColumn] = System.Convert.DBNull;
            }
            
            public bool IsCodigoSecundarioOriginalNull() {
                return this.IsNull(this.tabletsa_ComprobantesDet.CodigoSecundarioOriginalColumn);
            }
            
            public void SetCodigoSecundarioOriginalNull() {
                this[this.tabletsa_ComprobantesDet.CodigoSecundarioOriginalColumn] = System.Convert.DBNull;
            }
            
            public bool IsPorcentajeDescuentoFijoAplicadoNull() {
                return this.IsNull(this.tabletsa_ComprobantesDet.PorcentajeDescuentoFijoAplicadoColumn);
            }
            
            public void SetPorcentajeDescuentoFijoAplicadoNull() {
                this[this.tabletsa_ComprobantesDet.PorcentajeDescuentoFijoAplicadoColumn] = System.Convert.DBNull;
            }
            
            public bool IsPrecioDeCostoReposicionOriginalNull() {
                return this.IsNull(this.tabletsa_ComprobantesDet.PrecioDeCostoReposicionOriginalColumn);
            }
            
            public void SetPrecioDeCostoReposicionOriginalNull() {
                this[this.tabletsa_ComprobantesDet.PrecioDeCostoReposicionOriginalColumn] = System.Convert.DBNull;
            }
            
            public bool IsPrecioDeCostoPromedioPonderadoOriginalNull() {
                return this.IsNull(this.tabletsa_ComprobantesDet.PrecioDeCostoPromedioPonderadoOriginalColumn);
            }
            
            public void SetPrecioDeCostoPromedioPonderadoOriginalNull() {
                this[this.tabletsa_ComprobantesDet.PrecioDeCostoPromedioPonderadoOriginalColumn] = System.Convert.DBNull;
            }
            
            public bool IsPrecioDeVentaMercadoBolsaOriginalNull() {
                return this.IsNull(this.tabletsa_ComprobantesDet.PrecioDeVentaMercadoBolsaOriginalColumn);
            }
            
            public void SetPrecioDeVentaMercadoBolsaOriginalNull() {
                this[this.tabletsa_ComprobantesDet.PrecioDeVentaMercadoBolsaOriginalColumn] = System.Convert.DBNull;
            }
            
            public bool IsPrecioDeVentaMercadoCadenaOriginalNull() {
                return this.IsNull(this.tabletsa_ComprobantesDet.PrecioDeVentaMercadoCadenaOriginalColumn);
            }
            
            public void SetPrecioDeVentaMercadoCadenaOriginalNull() {
                this[this.tabletsa_ComprobantesDet.PrecioDeVentaMercadoCadenaOriginalColumn] = System.Convert.DBNull;
            }
            
            public bool IsPrecioDeVentaMercadoCompetenciaDirectaOriginalNull() {
                return this.IsNull(this.tabletsa_ComprobantesDet.PrecioDeVentaMercadoCompetenciaDirectaOriginalColumn);
            }
            
            public void SetPrecioDeVentaMercadoCompetenciaDirectaOriginalNull() {
                this[this.tabletsa_ComprobantesDet.PrecioDeVentaMercadoCompetenciaDirectaOriginalColumn] = System.Convert.DBNull;
            }
            
            public bool IsUsaPrecioDeCostoReposicionOriginalNull() {
                return this.IsNull(this.tabletsa_ComprobantesDet.UsaPrecioDeCostoReposicionOriginalColumn);
            }
            
            public void SetUsaPrecioDeCostoReposicionOriginalNull() {
                this[this.tabletsa_ComprobantesDet.UsaPrecioDeCostoReposicionOriginalColumn] = System.Convert.DBNull;
            }
            
            public bool IsIdCotizacionCierrePrecioDeCostoRefOriginalNull() {
                return this.IsNull(this.tabletsa_ComprobantesDet.IdCotizacionCierrePrecioDeCostoRefOriginalColumn);
            }
            
            public void SetIdCotizacionCierrePrecioDeCostoRefOriginalNull() {
                this[this.tabletsa_ComprobantesDet.IdCotizacionCierrePrecioDeCostoRefOriginalColumn] = System.Convert.DBNull;
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class tsa_ComprobantesDetRowChangeEvent : EventArgs {
            
            private tsa_ComprobantesDetRow eventRow;
            
            private DataRowAction eventAction;
            
            public tsa_ComprobantesDetRowChangeEvent(tsa_ComprobantesDetRow row, DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            public tsa_ComprobantesDetRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            public DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
