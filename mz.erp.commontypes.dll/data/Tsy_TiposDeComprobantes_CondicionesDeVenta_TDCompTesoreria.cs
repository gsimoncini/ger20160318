//------------------------------------------------------------------------------
// <autogenerated>
//     This code was generated by a tool.
//     Runtime Version: 1.1.4322.2032
//
//     Changes to this file may cause incorrect behavior and will be lost if 
//     the code is regenerated.
// </autogenerated>
//------------------------------------------------------------------------------

namespace mz.erp.commontypes.data {
    using System;
    using System.Data;
    using System.Xml;
    using System.Runtime.Serialization;
    
    
    [Serializable()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Diagnostics.DebuggerStepThrough()]
    [System.ComponentModel.ToolboxItem(true)]
    public class Tsy_TiposDeComprobantes_CondicionesDeVenta_TDCompTesoreriaDataset : DataSet {
        
        private Tsy_TiposDeComprobantes_CondicionesDeVenta_TDCompTesoreriaDataTable tableTsy_TiposDeComprobantes_CondicionesDeVenta_TDCompTesoreria;
        
        public Tsy_TiposDeComprobantes_CondicionesDeVenta_TDCompTesoreriaDataset() {
            this.InitClass();
            System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            this.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        protected Tsy_TiposDeComprobantes_CondicionesDeVenta_TDCompTesoreriaDataset(SerializationInfo info, StreamingContext context) {
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((strSchema != null)) {
                DataSet ds = new DataSet();
                ds.ReadXmlSchema(new XmlTextReader(new System.IO.StringReader(strSchema)));
                if ((ds.Tables["Tsy_TiposDeComprobantes_CondicionesDeVenta_TDCompTesoreria"] != null)) {
                    this.Tables.Add(new Tsy_TiposDeComprobantes_CondicionesDeVenta_TDCompTesoreriaDataTable(ds.Tables["Tsy_TiposDeComprobantes_CondicionesDeVenta_TDCompTesoreria"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.InitClass();
            }
            this.GetSerializationData(info, context);
            System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            this.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public Tsy_TiposDeComprobantes_CondicionesDeVenta_TDCompTesoreriaDataTable Tsy_TiposDeComprobantes_CondicionesDeVenta_TDCompTesoreria {
            get {
                return this.tableTsy_TiposDeComprobantes_CondicionesDeVenta_TDCompTesoreria;
            }
        }
        
        public override DataSet Clone() {
            Tsy_TiposDeComprobantes_CondicionesDeVenta_TDCompTesoreriaDataset cln = ((Tsy_TiposDeComprobantes_CondicionesDeVenta_TDCompTesoreriaDataset)(base.Clone()));
            cln.InitVars();
            return cln;
        }
        
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        protected override void ReadXmlSerializable(XmlReader reader) {
            this.Reset();
            DataSet ds = new DataSet();
            ds.ReadXml(reader);
            if ((ds.Tables["Tsy_TiposDeComprobantes_CondicionesDeVenta_TDCompTesoreria"] != null)) {
                this.Tables.Add(new Tsy_TiposDeComprobantes_CondicionesDeVenta_TDCompTesoreriaDataTable(ds.Tables["Tsy_TiposDeComprobantes_CondicionesDeVenta_TDCompTesoreria"]));
            }
            this.DataSetName = ds.DataSetName;
            this.Prefix = ds.Prefix;
            this.Namespace = ds.Namespace;
            this.Locale = ds.Locale;
            this.CaseSensitive = ds.CaseSensitive;
            this.EnforceConstraints = ds.EnforceConstraints;
            this.Merge(ds, false, System.Data.MissingSchemaAction.Add);
            this.InitVars();
        }
        
        protected override System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            System.IO.MemoryStream stream = new System.IO.MemoryStream();
            this.WriteXmlSchema(new XmlTextWriter(stream, null));
            stream.Position = 0;
            return System.Xml.Schema.XmlSchema.Read(new XmlTextReader(stream), null);
        }
        
        internal void InitVars() {
            this.tableTsy_TiposDeComprobantes_CondicionesDeVenta_TDCompTesoreria = ((Tsy_TiposDeComprobantes_CondicionesDeVenta_TDCompTesoreriaDataTable)(this.Tables["Tsy_TiposDeComprobantes_CondicionesDeVenta_TDCompTesoreria"]));
            if ((this.tableTsy_TiposDeComprobantes_CondicionesDeVenta_TDCompTesoreria != null)) {
                this.tableTsy_TiposDeComprobantes_CondicionesDeVenta_TDCompTesoreria.InitVars();
            }
        }
        
        private void InitClass() {
            this.DataSetName = "Tsy_TiposDeComprobantes_CondicionesDeVenta_TDCompTesoreriaDataset";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/Tsy_TiposDeComprobantes_CondicionesDeVenta_TDCompTesoreria.xsd" +
"";
            this.Locale = new System.Globalization.CultureInfo("en-US");
            this.CaseSensitive = false;
            this.EnforceConstraints = true;
            this.tableTsy_TiposDeComprobantes_CondicionesDeVenta_TDCompTesoreria = new Tsy_TiposDeComprobantes_CondicionesDeVenta_TDCompTesoreriaDataTable();
            this.Tables.Add(this.tableTsy_TiposDeComprobantes_CondicionesDeVenta_TDCompTesoreria);
        }
        
        private bool ShouldSerializeTsy_TiposDeComprobantes_CondicionesDeVenta_TDCompTesoreria() {
            return false;
        }
        
        private void SchemaChanged(object sender, System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        public delegate void Tsy_TiposDeComprobantes_CondicionesDeVenta_TDCompTesoreriaRowChangeEventHandler(object sender, Tsy_TiposDeComprobantes_CondicionesDeVenta_TDCompTesoreriaRowChangeEvent e);
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class Tsy_TiposDeComprobantes_CondicionesDeVenta_TDCompTesoreriaDataTable : DataTable, System.Collections.IEnumerable {
            
            private DataColumn columnIdTiposDeComprobantesCondicionesDeVentaTDCompTesoreria;
            
            private DataColumn columnIdTipoDeComprobante;
            
            private DataColumn columnIdTDCompTesoreria;
            
            private DataColumn columnIdCondicionDeVenta;
            
            private DataColumn columnMetodoDeAsignacion;
            
            private DataColumn columnIdConexionCreacion;
            
            private DataColumn columnUltimaModificacion;
            
            private DataColumn columnIdConexionUltimaModificacion;
            
            private DataColumn columnIdReservado;
            
            private DataColumn columnRowId;
            
            private DataColumn columnIdEmpresa;
            
            private DataColumn columnIdSucursal;
            
            private DataColumn columnIdProceso;
            
            private DataColumn columnIdTarea;
            
            internal Tsy_TiposDeComprobantes_CondicionesDeVenta_TDCompTesoreriaDataTable() : 
                    base("Tsy_TiposDeComprobantes_CondicionesDeVenta_TDCompTesoreria") {
                this.InitClass();
            }
            
            internal Tsy_TiposDeComprobantes_CondicionesDeVenta_TDCompTesoreriaDataTable(DataTable table) : 
                    base(table.TableName) {
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
                this.DisplayExpression = table.DisplayExpression;
            }
            
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            internal DataColumn IdTiposDeComprobantesCondicionesDeVentaTDCompTesoreriaColumn {
                get {
                    return this.columnIdTiposDeComprobantesCondicionesDeVentaTDCompTesoreria;
                }
            }
            
            internal DataColumn IdTipoDeComprobanteColumn {
                get {
                    return this.columnIdTipoDeComprobante;
                }
            }
            
            internal DataColumn IdTDCompTesoreriaColumn {
                get {
                    return this.columnIdTDCompTesoreria;
                }
            }
            
            internal DataColumn IdCondicionDeVentaColumn {
                get {
                    return this.columnIdCondicionDeVenta;
                }
            }
            
            internal DataColumn MetodoDeAsignacionColumn {
                get {
                    return this.columnMetodoDeAsignacion;
                }
            }
            
            internal DataColumn IdConexionCreacionColumn {
                get {
                    return this.columnIdConexionCreacion;
                }
            }
            
            internal DataColumn UltimaModificacionColumn {
                get {
                    return this.columnUltimaModificacion;
                }
            }
            
            internal DataColumn IdConexionUltimaModificacionColumn {
                get {
                    return this.columnIdConexionUltimaModificacion;
                }
            }
            
            internal DataColumn IdReservadoColumn {
                get {
                    return this.columnIdReservado;
                }
            }
            
            internal DataColumn RowIdColumn {
                get {
                    return this.columnRowId;
                }
            }
            
            internal DataColumn IdEmpresaColumn {
                get {
                    return this.columnIdEmpresa;
                }
            }
            
            internal DataColumn IdSucursalColumn {
                get {
                    return this.columnIdSucursal;
                }
            }
            
            internal DataColumn IdProcesoColumn {
                get {
                    return this.columnIdProceso;
                }
            }
            
            internal DataColumn IdTareaColumn {
                get {
                    return this.columnIdTarea;
                }
            }
            
            public Tsy_TiposDeComprobantes_CondicionesDeVenta_TDCompTesoreriaRow this[int index] {
                get {
                    return ((Tsy_TiposDeComprobantes_CondicionesDeVenta_TDCompTesoreriaRow)(this.Rows[index]));
                }
            }
            
            public event Tsy_TiposDeComprobantes_CondicionesDeVenta_TDCompTesoreriaRowChangeEventHandler Tsy_TiposDeComprobantes_CondicionesDeVenta_TDCompTesoreriaRowChanged;
            
            public event Tsy_TiposDeComprobantes_CondicionesDeVenta_TDCompTesoreriaRowChangeEventHandler Tsy_TiposDeComprobantes_CondicionesDeVenta_TDCompTesoreriaRowChanging;
            
            public event Tsy_TiposDeComprobantes_CondicionesDeVenta_TDCompTesoreriaRowChangeEventHandler Tsy_TiposDeComprobantes_CondicionesDeVenta_TDCompTesoreriaRowDeleted;
            
            public event Tsy_TiposDeComprobantes_CondicionesDeVenta_TDCompTesoreriaRowChangeEventHandler Tsy_TiposDeComprobantes_CondicionesDeVenta_TDCompTesoreriaRowDeleting;
            
            public void AddTsy_TiposDeComprobantes_CondicionesDeVenta_TDCompTesoreriaRow(Tsy_TiposDeComprobantes_CondicionesDeVenta_TDCompTesoreriaRow row) {
                this.Rows.Add(row);
            }
            
            public Tsy_TiposDeComprobantes_CondicionesDeVenta_TDCompTesoreriaRow AddTsy_TiposDeComprobantes_CondicionesDeVenta_TDCompTesoreriaRow(string IdTiposDeComprobantesCondicionesDeVentaTDCompTesoreria, string IdTipoDeComprobante, string IdTDCompTesoreria, string IdCondicionDeVenta, string MetodoDeAsignacion, long IdConexionCreacion, System.Byte[] UltimaModificacion, long IdConexionUltimaModificacion, long IdReservado, System.Guid RowId, long IdEmpresa, long IdSucursal, long IdProceso, long IdTarea) {
                Tsy_TiposDeComprobantes_CondicionesDeVenta_TDCompTesoreriaRow rowTsy_TiposDeComprobantes_CondicionesDeVenta_TDCompTesoreriaRow = ((Tsy_TiposDeComprobantes_CondicionesDeVenta_TDCompTesoreriaRow)(this.NewRow()));
                rowTsy_TiposDeComprobantes_CondicionesDeVenta_TDCompTesoreriaRow.ItemArray = new object[] {
                        IdTiposDeComprobantesCondicionesDeVentaTDCompTesoreria,
                        IdTipoDeComprobante,
                        IdTDCompTesoreria,
                        IdCondicionDeVenta,
                        MetodoDeAsignacion,
                        IdConexionCreacion,
                        UltimaModificacion,
                        IdConexionUltimaModificacion,
                        IdReservado,
                        RowId,
                        IdEmpresa,
                        IdSucursal,
                        IdProceso,
                        IdTarea};
                this.Rows.Add(rowTsy_TiposDeComprobantes_CondicionesDeVenta_TDCompTesoreriaRow);
                return rowTsy_TiposDeComprobantes_CondicionesDeVenta_TDCompTesoreriaRow;
            }
            
            public Tsy_TiposDeComprobantes_CondicionesDeVenta_TDCompTesoreriaRow FindByIdTiposDeComprobantesCondicionesDeVentaTDCompTesoreria(string IdTiposDeComprobantesCondicionesDeVentaTDCompTesoreria) {
                return ((Tsy_TiposDeComprobantes_CondicionesDeVenta_TDCompTesoreriaRow)(this.Rows.Find(new object[] {
                            IdTiposDeComprobantesCondicionesDeVentaTDCompTesoreria})));
            }
            
            public System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            public override DataTable Clone() {
                Tsy_TiposDeComprobantes_CondicionesDeVenta_TDCompTesoreriaDataTable cln = ((Tsy_TiposDeComprobantes_CondicionesDeVenta_TDCompTesoreriaDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            protected override DataTable CreateInstance() {
                return new Tsy_TiposDeComprobantes_CondicionesDeVenta_TDCompTesoreriaDataTable();
            }
            
            internal void InitVars() {
                this.columnIdTiposDeComprobantesCondicionesDeVentaTDCompTesoreria = this.Columns["IdTiposDeComprobantesCondicionesDeVentaTDCompTesoreria"];
                this.columnIdTipoDeComprobante = this.Columns["IdTipoDeComprobante"];
                this.columnIdTDCompTesoreria = this.Columns["IdTDCompTesoreria"];
                this.columnIdCondicionDeVenta = this.Columns["IdCondicionDeVenta"];
                this.columnMetodoDeAsignacion = this.Columns["MetodoDeAsignacion"];
                this.columnIdConexionCreacion = this.Columns["IdConexionCreacion"];
                this.columnUltimaModificacion = this.Columns["UltimaModificacion"];
                this.columnIdConexionUltimaModificacion = this.Columns["IdConexionUltimaModificacion"];
                this.columnIdReservado = this.Columns["IdReservado"];
                this.columnRowId = this.Columns["RowId"];
                this.columnIdEmpresa = this.Columns["IdEmpresa"];
                this.columnIdSucursal = this.Columns["IdSucursal"];
                this.columnIdProceso = this.Columns["IdProceso"];
                this.columnIdTarea = this.Columns["IdTarea"];
            }
            
            private void InitClass() {
                this.columnIdTiposDeComprobantesCondicionesDeVentaTDCompTesoreria = new DataColumn("IdTiposDeComprobantesCondicionesDeVentaTDCompTesoreria", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdTiposDeComprobantesCondicionesDeVentaTDCompTesoreria);
                this.columnIdTipoDeComprobante = new DataColumn("IdTipoDeComprobante", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdTipoDeComprobante);
                this.columnIdTDCompTesoreria = new DataColumn("IdTDCompTesoreria", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdTDCompTesoreria);
                this.columnIdCondicionDeVenta = new DataColumn("IdCondicionDeVenta", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdCondicionDeVenta);
                this.columnMetodoDeAsignacion = new DataColumn("MetodoDeAsignacion", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnMetodoDeAsignacion);
                this.columnIdConexionCreacion = new DataColumn("IdConexionCreacion", typeof(long), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdConexionCreacion);
                this.columnUltimaModificacion = new DataColumn("UltimaModificacion", typeof(System.Byte[]), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnUltimaModificacion);
                this.columnIdConexionUltimaModificacion = new DataColumn("IdConexionUltimaModificacion", typeof(long), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdConexionUltimaModificacion);
                this.columnIdReservado = new DataColumn("IdReservado", typeof(long), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdReservado);
                this.columnRowId = new DataColumn("RowId", typeof(System.Guid), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnRowId);
                this.columnIdEmpresa = new DataColumn("IdEmpresa", typeof(long), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdEmpresa);
                this.columnIdSucursal = new DataColumn("IdSucursal", typeof(long), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdSucursal);
                this.columnIdProceso = new DataColumn("IdProceso", typeof(long), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdProceso);
                this.columnIdTarea = new DataColumn("IdTarea", typeof(long), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdTarea);
                this.Constraints.Add(new UniqueConstraint("Tsy_TiposDeComprobantes_CondicionesDeVenta_TDCompTesoreriaKey1", new DataColumn[] {
                                this.columnIdTiposDeComprobantesCondicionesDeVentaTDCompTesoreria}, true));
                this.columnIdTiposDeComprobantesCondicionesDeVentaTDCompTesoreria.AllowDBNull = false;
                this.columnIdTiposDeComprobantesCondicionesDeVentaTDCompTesoreria.Unique = true;
                this.columnIdTipoDeComprobante.AllowDBNull = false;
                this.columnIdCondicionDeVenta.AllowDBNull = false;
                this.columnMetodoDeAsignacion.AllowDBNull = false;
                this.columnUltimaModificacion.ReadOnly = true;
            }
            
            public Tsy_TiposDeComprobantes_CondicionesDeVenta_TDCompTesoreriaRow NewTsy_TiposDeComprobantes_CondicionesDeVenta_TDCompTesoreriaRow() {
                return ((Tsy_TiposDeComprobantes_CondicionesDeVenta_TDCompTesoreriaRow)(this.NewRow()));
            }
            
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder) {
                return new Tsy_TiposDeComprobantes_CondicionesDeVenta_TDCompTesoreriaRow(builder);
            }
            
            protected override System.Type GetRowType() {
                return typeof(Tsy_TiposDeComprobantes_CondicionesDeVenta_TDCompTesoreriaRow);
            }
            
            protected override void OnRowChanged(DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.Tsy_TiposDeComprobantes_CondicionesDeVenta_TDCompTesoreriaRowChanged != null)) {
                    this.Tsy_TiposDeComprobantes_CondicionesDeVenta_TDCompTesoreriaRowChanged(this, new Tsy_TiposDeComprobantes_CondicionesDeVenta_TDCompTesoreriaRowChangeEvent(((Tsy_TiposDeComprobantes_CondicionesDeVenta_TDCompTesoreriaRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowChanging(DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.Tsy_TiposDeComprobantes_CondicionesDeVenta_TDCompTesoreriaRowChanging != null)) {
                    this.Tsy_TiposDeComprobantes_CondicionesDeVenta_TDCompTesoreriaRowChanging(this, new Tsy_TiposDeComprobantes_CondicionesDeVenta_TDCompTesoreriaRowChangeEvent(((Tsy_TiposDeComprobantes_CondicionesDeVenta_TDCompTesoreriaRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleted(DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.Tsy_TiposDeComprobantes_CondicionesDeVenta_TDCompTesoreriaRowDeleted != null)) {
                    this.Tsy_TiposDeComprobantes_CondicionesDeVenta_TDCompTesoreriaRowDeleted(this, new Tsy_TiposDeComprobantes_CondicionesDeVenta_TDCompTesoreriaRowChangeEvent(((Tsy_TiposDeComprobantes_CondicionesDeVenta_TDCompTesoreriaRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleting(DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.Tsy_TiposDeComprobantes_CondicionesDeVenta_TDCompTesoreriaRowDeleting != null)) {
                    this.Tsy_TiposDeComprobantes_CondicionesDeVenta_TDCompTesoreriaRowDeleting(this, new Tsy_TiposDeComprobantes_CondicionesDeVenta_TDCompTesoreriaRowChangeEvent(((Tsy_TiposDeComprobantes_CondicionesDeVenta_TDCompTesoreriaRow)(e.Row)), e.Action));
                }
            }
            
            public void RemoveTsy_TiposDeComprobantes_CondicionesDeVenta_TDCompTesoreriaRow(Tsy_TiposDeComprobantes_CondicionesDeVenta_TDCompTesoreriaRow row) {
                this.Rows.Remove(row);
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class Tsy_TiposDeComprobantes_CondicionesDeVenta_TDCompTesoreriaRow : DataRow {
            
            private Tsy_TiposDeComprobantes_CondicionesDeVenta_TDCompTesoreriaDataTable tableTsy_TiposDeComprobantes_CondicionesDeVenta_TDCompTesoreria;
            
            internal Tsy_TiposDeComprobantes_CondicionesDeVenta_TDCompTesoreriaRow(DataRowBuilder rb) : 
                    base(rb) {
                this.tableTsy_TiposDeComprobantes_CondicionesDeVenta_TDCompTesoreria = ((Tsy_TiposDeComprobantes_CondicionesDeVenta_TDCompTesoreriaDataTable)(this.Table));
            }
            
            public string IdTiposDeComprobantesCondicionesDeVentaTDCompTesoreria {
                get {
                    return ((string)(this[this.tableTsy_TiposDeComprobantes_CondicionesDeVenta_TDCompTesoreria.IdTiposDeComprobantesCondicionesDeVentaTDCompTesoreriaColumn]));
                }
                set {
                    this[this.tableTsy_TiposDeComprobantes_CondicionesDeVenta_TDCompTesoreria.IdTiposDeComprobantesCondicionesDeVentaTDCompTesoreriaColumn] = value;
                }
            }
            
            public string IdTipoDeComprobante {
                get {
                    return ((string)(this[this.tableTsy_TiposDeComprobantes_CondicionesDeVenta_TDCompTesoreria.IdTipoDeComprobanteColumn]));
                }
                set {
                    this[this.tableTsy_TiposDeComprobantes_CondicionesDeVenta_TDCompTesoreria.IdTipoDeComprobanteColumn] = value;
                }
            }
            
            public string IdTDCompTesoreria {
                get {
                    try {
                        return ((string)(this[this.tableTsy_TiposDeComprobantes_CondicionesDeVenta_TDCompTesoreria.IdTDCompTesoreriaColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableTsy_TiposDeComprobantes_CondicionesDeVenta_TDCompTesoreria.IdTDCompTesoreriaColumn] = value;
                }
            }
            
            public string IdCondicionDeVenta {
                get {
                    return ((string)(this[this.tableTsy_TiposDeComprobantes_CondicionesDeVenta_TDCompTesoreria.IdCondicionDeVentaColumn]));
                }
                set {
                    this[this.tableTsy_TiposDeComprobantes_CondicionesDeVenta_TDCompTesoreria.IdCondicionDeVentaColumn] = value;
                }
            }
            
            public string MetodoDeAsignacion {
                get {
                    return ((string)(this[this.tableTsy_TiposDeComprobantes_CondicionesDeVenta_TDCompTesoreria.MetodoDeAsignacionColumn]));
                }
                set {
                    this[this.tableTsy_TiposDeComprobantes_CondicionesDeVenta_TDCompTesoreria.MetodoDeAsignacionColumn] = value;
                }
            }
            
            public long IdConexionCreacion {
                get {
                    try {
                        return ((long)(this[this.tableTsy_TiposDeComprobantes_CondicionesDeVenta_TDCompTesoreria.IdConexionCreacionColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableTsy_TiposDeComprobantes_CondicionesDeVenta_TDCompTesoreria.IdConexionCreacionColumn] = value;
                }
            }
            
            public System.Byte[] UltimaModificacion {
                get {
                    try {
                        return ((System.Byte[])(this[this.tableTsy_TiposDeComprobantes_CondicionesDeVenta_TDCompTesoreria.UltimaModificacionColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableTsy_TiposDeComprobantes_CondicionesDeVenta_TDCompTesoreria.UltimaModificacionColumn] = value;
                }
            }
            
            public long IdConexionUltimaModificacion {
                get {
                    try {
                        return ((long)(this[this.tableTsy_TiposDeComprobantes_CondicionesDeVenta_TDCompTesoreria.IdConexionUltimaModificacionColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableTsy_TiposDeComprobantes_CondicionesDeVenta_TDCompTesoreria.IdConexionUltimaModificacionColumn] = value;
                }
            }
            
            public long IdReservado {
                get {
                    try {
                        return ((long)(this[this.tableTsy_TiposDeComprobantes_CondicionesDeVenta_TDCompTesoreria.IdReservadoColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableTsy_TiposDeComprobantes_CondicionesDeVenta_TDCompTesoreria.IdReservadoColumn] = value;
                }
            }
            
            public System.Guid RowId {
                get {
                    try {
                        return ((System.Guid)(this[this.tableTsy_TiposDeComprobantes_CondicionesDeVenta_TDCompTesoreria.RowIdColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableTsy_TiposDeComprobantes_CondicionesDeVenta_TDCompTesoreria.RowIdColumn] = value;
                }
            }
            
            public long IdEmpresa {
                get {
                    try {
                        return ((long)(this[this.tableTsy_TiposDeComprobantes_CondicionesDeVenta_TDCompTesoreria.IdEmpresaColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableTsy_TiposDeComprobantes_CondicionesDeVenta_TDCompTesoreria.IdEmpresaColumn] = value;
                }
            }
            
            public long IdSucursal {
                get {
                    try {
                        return ((long)(this[this.tableTsy_TiposDeComprobantes_CondicionesDeVenta_TDCompTesoreria.IdSucursalColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableTsy_TiposDeComprobantes_CondicionesDeVenta_TDCompTesoreria.IdSucursalColumn] = value;
                }
            }
            
            public long IdProceso {
                get {
                    try {
                        return ((long)(this[this.tableTsy_TiposDeComprobantes_CondicionesDeVenta_TDCompTesoreria.IdProcesoColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableTsy_TiposDeComprobantes_CondicionesDeVenta_TDCompTesoreria.IdProcesoColumn] = value;
                }
            }
            
            public long IdTarea {
                get {
                    try {
                        return ((long)(this[this.tableTsy_TiposDeComprobantes_CondicionesDeVenta_TDCompTesoreria.IdTareaColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableTsy_TiposDeComprobantes_CondicionesDeVenta_TDCompTesoreria.IdTareaColumn] = value;
                }
            }
            
            public bool IsIdTDCompTesoreriaNull() {
                return this.IsNull(this.tableTsy_TiposDeComprobantes_CondicionesDeVenta_TDCompTesoreria.IdTDCompTesoreriaColumn);
            }
            
            public void SetIdTDCompTesoreriaNull() {
                this[this.tableTsy_TiposDeComprobantes_CondicionesDeVenta_TDCompTesoreria.IdTDCompTesoreriaColumn] = System.Convert.DBNull;
            }
            
            public bool IsIdConexionCreacionNull() {
                return this.IsNull(this.tableTsy_TiposDeComprobantes_CondicionesDeVenta_TDCompTesoreria.IdConexionCreacionColumn);
            }
            
            public void SetIdConexionCreacionNull() {
                this[this.tableTsy_TiposDeComprobantes_CondicionesDeVenta_TDCompTesoreria.IdConexionCreacionColumn] = System.Convert.DBNull;
            }
            
            public bool IsUltimaModificacionNull() {
                return this.IsNull(this.tableTsy_TiposDeComprobantes_CondicionesDeVenta_TDCompTesoreria.UltimaModificacionColumn);
            }
            
            public void SetUltimaModificacionNull() {
                this[this.tableTsy_TiposDeComprobantes_CondicionesDeVenta_TDCompTesoreria.UltimaModificacionColumn] = System.Convert.DBNull;
            }
            
            public bool IsIdConexionUltimaModificacionNull() {
                return this.IsNull(this.tableTsy_TiposDeComprobantes_CondicionesDeVenta_TDCompTesoreria.IdConexionUltimaModificacionColumn);
            }
            
            public void SetIdConexionUltimaModificacionNull() {
                this[this.tableTsy_TiposDeComprobantes_CondicionesDeVenta_TDCompTesoreria.IdConexionUltimaModificacionColumn] = System.Convert.DBNull;
            }
            
            public bool IsIdReservadoNull() {
                return this.IsNull(this.tableTsy_TiposDeComprobantes_CondicionesDeVenta_TDCompTesoreria.IdReservadoColumn);
            }
            
            public void SetIdReservadoNull() {
                this[this.tableTsy_TiposDeComprobantes_CondicionesDeVenta_TDCompTesoreria.IdReservadoColumn] = System.Convert.DBNull;
            }
            
            public bool IsRowIdNull() {
                return this.IsNull(this.tableTsy_TiposDeComprobantes_CondicionesDeVenta_TDCompTesoreria.RowIdColumn);
            }
            
            public void SetRowIdNull() {
                this[this.tableTsy_TiposDeComprobantes_CondicionesDeVenta_TDCompTesoreria.RowIdColumn] = System.Convert.DBNull;
            }
            
            public bool IsIdEmpresaNull() {
                return this.IsNull(this.tableTsy_TiposDeComprobantes_CondicionesDeVenta_TDCompTesoreria.IdEmpresaColumn);
            }
            
            public void SetIdEmpresaNull() {
                this[this.tableTsy_TiposDeComprobantes_CondicionesDeVenta_TDCompTesoreria.IdEmpresaColumn] = System.Convert.DBNull;
            }
            
            public bool IsIdSucursalNull() {
                return this.IsNull(this.tableTsy_TiposDeComprobantes_CondicionesDeVenta_TDCompTesoreria.IdSucursalColumn);
            }
            
            public void SetIdSucursalNull() {
                this[this.tableTsy_TiposDeComprobantes_CondicionesDeVenta_TDCompTesoreria.IdSucursalColumn] = System.Convert.DBNull;
            }
            
            public bool IsIdProcesoNull() {
                return this.IsNull(this.tableTsy_TiposDeComprobantes_CondicionesDeVenta_TDCompTesoreria.IdProcesoColumn);
            }
            
            public void SetIdProcesoNull() {
                this[this.tableTsy_TiposDeComprobantes_CondicionesDeVenta_TDCompTesoreria.IdProcesoColumn] = System.Convert.DBNull;
            }
            
            public bool IsIdTareaNull() {
                return this.IsNull(this.tableTsy_TiposDeComprobantes_CondicionesDeVenta_TDCompTesoreria.IdTareaColumn);
            }
            
            public void SetIdTareaNull() {
                this[this.tableTsy_TiposDeComprobantes_CondicionesDeVenta_TDCompTesoreria.IdTareaColumn] = System.Convert.DBNull;
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class Tsy_TiposDeComprobantes_CondicionesDeVenta_TDCompTesoreriaRowChangeEvent : EventArgs {
            
            private Tsy_TiposDeComprobantes_CondicionesDeVenta_TDCompTesoreriaRow eventRow;
            
            private DataRowAction eventAction;
            
            public Tsy_TiposDeComprobantes_CondicionesDeVenta_TDCompTesoreriaRowChangeEvent(Tsy_TiposDeComprobantes_CondicionesDeVenta_TDCompTesoreriaRow row, DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            public Tsy_TiposDeComprobantes_CondicionesDeVenta_TDCompTesoreriaRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            public DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
