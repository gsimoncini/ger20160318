//------------------------------------------------------------------------------
// <autogenerated>
//     This code was generated by a tool.
//     Runtime Version: 1.1.4322.573
//
//     Changes to this file may cause incorrect behavior and will be lost if 
//     the code is regenerated.
// </autogenerated>
//------------------------------------------------------------------------------

namespace mz.erp.commontypes.data {
    using System;
    using System.Data;
    using System.Xml;
    using System.Runtime.Serialization;
    
    
    [Serializable()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Diagnostics.DebuggerStepThrough()]
    [System.ComponentModel.ToolboxItem(true)]
    public class tfi_ValoresDataset : DataSet {
        
        private tfi_ValoresDataTable tabletfi_Valores;
        
        public tfi_ValoresDataset() {
            this.InitClass();
            System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            this.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        protected tfi_ValoresDataset(SerializationInfo info, StreamingContext context) {
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((strSchema != null)) {
                DataSet ds = new DataSet();
                ds.ReadXmlSchema(new XmlTextReader(new System.IO.StringReader(strSchema)));
                if ((ds.Tables["tfi_Valores"] != null)) {
                    this.Tables.Add(new tfi_ValoresDataTable(ds.Tables["tfi_Valores"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.InitClass();
            }
            this.GetSerializationData(info, context);
            System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            this.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public tfi_ValoresDataTable tfi_Valores {
            get {
                return this.tabletfi_Valores;
            }
        }
        
        public override DataSet Clone() {
            tfi_ValoresDataset cln = ((tfi_ValoresDataset)(base.Clone()));
            cln.InitVars();
            return cln;
        }
        
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        protected override void ReadXmlSerializable(XmlReader reader) {
            this.Reset();
            DataSet ds = new DataSet();
            ds.ReadXml(reader);
            if ((ds.Tables["tfi_Valores"] != null)) {
                this.Tables.Add(new tfi_ValoresDataTable(ds.Tables["tfi_Valores"]));
            }
            this.DataSetName = ds.DataSetName;
            this.Prefix = ds.Prefix;
            this.Namespace = ds.Namespace;
            this.Locale = ds.Locale;
            this.CaseSensitive = ds.CaseSensitive;
            this.EnforceConstraints = ds.EnforceConstraints;
            this.Merge(ds, false, System.Data.MissingSchemaAction.Add);
            this.InitVars();
        }
        
        protected override System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            System.IO.MemoryStream stream = new System.IO.MemoryStream();
            this.WriteXmlSchema(new XmlTextWriter(stream, null));
            stream.Position = 0;
            return System.Xml.Schema.XmlSchema.Read(new XmlTextReader(stream), null);
        }
        
        internal void InitVars() {
            this.tabletfi_Valores = ((tfi_ValoresDataTable)(this.Tables["tfi_Valores"]));
            if ((this.tabletfi_Valores != null)) {
                this.tabletfi_Valores.InitVars();
            }
        }
        
        private void InitClass() {
            this.DataSetName = "tfi_ValoresDataset";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/tfi_Valores.xsd";
            this.Locale = new System.Globalization.CultureInfo("en-US");
            this.CaseSensitive = false;
            this.EnforceConstraints = true;
            this.tabletfi_Valores = new tfi_ValoresDataTable();
            this.Tables.Add(this.tabletfi_Valores);
        }
        
        private bool ShouldSerializetfi_Valores() {
            return false;
        }
        
        private void SchemaChanged(object sender, System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        public delegate void tfi_ValoresRowChangeEventHandler(object sender, tfi_ValoresRowChangeEvent e);
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class tfi_ValoresDataTable : DataTable, System.Collections.IEnumerable {
            
            private DataColumn columnIdValor;
            
            private DataColumn columnIdTDCompTesoreria;
            
            private DataColumn columnNumero;
            
            private DataColumn columnIdEntidad;
            
            private DataColumn columnFecha;
            
            private DataColumn columnFechaVencimiento;
            
            private DataColumn columnValor;
            
            private DataColumn columnIdMoneda;
            
            private DataColumn columnIdCotizacionMoneda;
            
            private DataColumn columnFechaCreacion;
            
            private DataColumn columnIdConexionCreacion;
            
            private DataColumn columnUltimaModificacion;
            
            private DataColumn columnIdConexionUltimaModificacion;
            
            private DataColumn columnIdReservado;
            
            private DataColumn columnRowId;
            
            private DataColumn columnIdEmpresa;
            
            private DataColumn columnIdSucursal;
            
            private DataColumn columnIdInstanciaCaja;
            
            private DataColumn columnSigno;
            
            private DataColumn columnIdEstadoCheque;
            
            internal tfi_ValoresDataTable() : 
                    base("tfi_Valores") {
                this.InitClass();
            }
            
            internal tfi_ValoresDataTable(DataTable table) : 
                    base(table.TableName) {
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
                this.DisplayExpression = table.DisplayExpression;
            }
            
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            internal DataColumn IdValorColumn {
                get {
                    return this.columnIdValor;
                }
            }
            
            internal DataColumn IdTDCompTesoreriaColumn {
                get {
                    return this.columnIdTDCompTesoreria;
                }
            }
            
            internal DataColumn NumeroColumn {
                get {
                    return this.columnNumero;
                }
            }
            
            internal DataColumn IdEntidadColumn {
                get {
                    return this.columnIdEntidad;
                }
            }
            
            internal DataColumn FechaColumn {
                get {
                    return this.columnFecha;
                }
            }
            
            internal DataColumn FechaVencimientoColumn {
                get {
                    return this.columnFechaVencimiento;
                }
            }
            
            internal DataColumn ValorColumn {
                get {
                    return this.columnValor;
                }
            }
            
            internal DataColumn IdMonedaColumn {
                get {
                    return this.columnIdMoneda;
                }
            }
            
            internal DataColumn IdCotizacionMonedaColumn {
                get {
                    return this.columnIdCotizacionMoneda;
                }
            }
            
            internal DataColumn FechaCreacionColumn {
                get {
                    return this.columnFechaCreacion;
                }
            }
            
            internal DataColumn IdConexionCreacionColumn {
                get {
                    return this.columnIdConexionCreacion;
                }
            }
            
            internal DataColumn UltimaModificacionColumn {
                get {
                    return this.columnUltimaModificacion;
                }
            }
            
            internal DataColumn IdConexionUltimaModificacionColumn {
                get {
                    return this.columnIdConexionUltimaModificacion;
                }
            }
            
            internal DataColumn IdReservadoColumn {
                get {
                    return this.columnIdReservado;
                }
            }
            
            internal DataColumn RowIdColumn {
                get {
                    return this.columnRowId;
                }
            }
            
            internal DataColumn IdEmpresaColumn {
                get {
                    return this.columnIdEmpresa;
                }
            }
            
            internal DataColumn IdSucursalColumn {
                get {
                    return this.columnIdSucursal;
                }
            }
            
            internal DataColumn IdInstanciaCajaColumn {
                get {
                    return this.columnIdInstanciaCaja;
                }
            }
            
            internal DataColumn SignoColumn {
                get {
                    return this.columnSigno;
                }
            }
            
            internal DataColumn IdEstadoChequeColumn {
                get {
                    return this.columnIdEstadoCheque;
                }
            }
            
            public tfi_ValoresRow this[int index] {
                get {
                    return ((tfi_ValoresRow)(this.Rows[index]));
                }
            }
            
            public event tfi_ValoresRowChangeEventHandler tfi_ValoresRowChanged;
            
            public event tfi_ValoresRowChangeEventHandler tfi_ValoresRowChanging;
            
            public event tfi_ValoresRowChangeEventHandler tfi_ValoresRowDeleted;
            
            public event tfi_ValoresRowChangeEventHandler tfi_ValoresRowDeleting;
            
            public void Addtfi_ValoresRow(tfi_ValoresRow row) {
                this.Rows.Add(row);
            }
            
            public tfi_ValoresRow Addtfi_ValoresRow(
                        string IdValor, 
                        string IdTDCompTesoreria, 
                        string Numero, 
                        string IdEntidad, 
                        System.DateTime Fecha, 
                        System.DateTime FechaVencimiento, 
                        System.Decimal Valor, 
                        string IdMoneda, 
                        string IdCotizacionMoneda, 
                        System.DateTime FechaCreacion, 
                        long IdConexionCreacion, 
                        System.Byte[] UltimaModificacion, 
                        long IdConexionUltimaModificacion, 
                        long IdReservado, 
                        System.Guid RowId, 
                        long IdEmpresa, 
                        long IdSucursal, 
                        string IdInstanciaCaja, 
                        int Signo, 
                        string IdEstadoCheque) {
                tfi_ValoresRow rowtfi_ValoresRow = ((tfi_ValoresRow)(this.NewRow()));
                rowtfi_ValoresRow.ItemArray = new object[] {
                        IdValor,
                        IdTDCompTesoreria,
                        Numero,
                        IdEntidad,
                        Fecha,
                        FechaVencimiento,
                        Valor,
                        IdMoneda,
                        IdCotizacionMoneda,
                        FechaCreacion,
                        IdConexionCreacion,
                        UltimaModificacion,
                        IdConexionUltimaModificacion,
                        IdReservado,
                        RowId,
                        IdEmpresa,
                        IdSucursal,
                        IdInstanciaCaja,
                        Signo,
                        IdEstadoCheque};
                this.Rows.Add(rowtfi_ValoresRow);
                return rowtfi_ValoresRow;
            }
            
            public tfi_ValoresRow FindByIdValor(string IdValor) {
                return ((tfi_ValoresRow)(this.Rows.Find(new object[] {
                            IdValor})));
            }
            
            public System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            public override DataTable Clone() {
                tfi_ValoresDataTable cln = ((tfi_ValoresDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            protected override DataTable CreateInstance() {
                return new tfi_ValoresDataTable();
            }
            
            internal void InitVars() {
                this.columnIdValor = this.Columns["IdValor"];
                this.columnIdTDCompTesoreria = this.Columns["IdTDCompTesoreria"];
                this.columnNumero = this.Columns["Numero"];
                this.columnIdEntidad = this.Columns["IdEntidad"];
                this.columnFecha = this.Columns["Fecha"];
                this.columnFechaVencimiento = this.Columns["FechaVencimiento"];
                this.columnValor = this.Columns["Valor"];
                this.columnIdMoneda = this.Columns["IdMoneda"];
                this.columnIdCotizacionMoneda = this.Columns["IdCotizacionMoneda"];
                this.columnFechaCreacion = this.Columns["FechaCreacion"];
                this.columnIdConexionCreacion = this.Columns["IdConexionCreacion"];
                this.columnUltimaModificacion = this.Columns["UltimaModificacion"];
                this.columnIdConexionUltimaModificacion = this.Columns["IdConexionUltimaModificacion"];
                this.columnIdReservado = this.Columns["IdReservado"];
                this.columnRowId = this.Columns["RowId"];
                this.columnIdEmpresa = this.Columns["IdEmpresa"];
                this.columnIdSucursal = this.Columns["IdSucursal"];
                this.columnIdInstanciaCaja = this.Columns["IdInstanciaCaja"];
                this.columnSigno = this.Columns["Signo"];
                this.columnIdEstadoCheque = this.Columns["IdEstadoCheque"];
            }
            
            private void InitClass() {
                this.columnIdValor = new DataColumn("IdValor", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdValor);
                this.columnIdTDCompTesoreria = new DataColumn("IdTDCompTesoreria", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdTDCompTesoreria);
                this.columnNumero = new DataColumn("Numero", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnNumero);
                this.columnIdEntidad = new DataColumn("IdEntidad", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdEntidad);
                this.columnFecha = new DataColumn("Fecha", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnFecha);
                this.columnFechaVencimiento = new DataColumn("FechaVencimiento", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnFechaVencimiento);
                this.columnValor = new DataColumn("Valor", typeof(System.Decimal), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnValor);
                this.columnIdMoneda = new DataColumn("IdMoneda", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdMoneda);
                this.columnIdCotizacionMoneda = new DataColumn("IdCotizacionMoneda", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdCotizacionMoneda);
                this.columnFechaCreacion = new DataColumn("FechaCreacion", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnFechaCreacion);
                this.columnIdConexionCreacion = new DataColumn("IdConexionCreacion", typeof(long), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdConexionCreacion);
                this.columnUltimaModificacion = new DataColumn("UltimaModificacion", typeof(System.Byte[]), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnUltimaModificacion);
                this.columnIdConexionUltimaModificacion = new DataColumn("IdConexionUltimaModificacion", typeof(long), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdConexionUltimaModificacion);
                this.columnIdReservado = new DataColumn("IdReservado", typeof(long), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdReservado);
                this.columnRowId = new DataColumn("RowId", typeof(System.Guid), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnRowId);
                this.columnIdEmpresa = new DataColumn("IdEmpresa", typeof(long), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdEmpresa);
                this.columnIdSucursal = new DataColumn("IdSucursal", typeof(long), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdSucursal);
                this.columnIdInstanciaCaja = new DataColumn("IdInstanciaCaja", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdInstanciaCaja);
                this.columnSigno = new DataColumn("Signo", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnSigno);
                this.columnIdEstadoCheque = new DataColumn("IdEstadoCheque", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdEstadoCheque);
                this.Constraints.Add(new UniqueConstraint("tfi_ValoresKey1", new DataColumn[] {
                                this.columnIdValor}, true));
                this.columnIdValor.AllowDBNull = false;
                this.columnIdValor.Unique = true;
                this.columnIdTDCompTesoreria.AllowDBNull = false;
                this.columnUltimaModificacion.ReadOnly = true;
            }
            
            public tfi_ValoresRow Newtfi_ValoresRow() {
                return ((tfi_ValoresRow)(this.NewRow()));
            }
            
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder) {
                return new tfi_ValoresRow(builder);
            }
            
            protected override System.Type GetRowType() {
                return typeof(tfi_ValoresRow);
            }
            
            protected override void OnRowChanged(DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.tfi_ValoresRowChanged != null)) {
                    this.tfi_ValoresRowChanged(this, new tfi_ValoresRowChangeEvent(((tfi_ValoresRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowChanging(DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.tfi_ValoresRowChanging != null)) {
                    this.tfi_ValoresRowChanging(this, new tfi_ValoresRowChangeEvent(((tfi_ValoresRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleted(DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.tfi_ValoresRowDeleted != null)) {
                    this.tfi_ValoresRowDeleted(this, new tfi_ValoresRowChangeEvent(((tfi_ValoresRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleting(DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.tfi_ValoresRowDeleting != null)) {
                    this.tfi_ValoresRowDeleting(this, new tfi_ValoresRowChangeEvent(((tfi_ValoresRow)(e.Row)), e.Action));
                }
            }
            
            public void Removetfi_ValoresRow(tfi_ValoresRow row) {
                this.Rows.Remove(row);
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class tfi_ValoresRow : DataRow {
            
            private tfi_ValoresDataTable tabletfi_Valores;
            
            internal tfi_ValoresRow(DataRowBuilder rb) : 
                    base(rb) {
                this.tabletfi_Valores = ((tfi_ValoresDataTable)(this.Table));
            }
            
            public string IdValor {
                get {
                    return ((string)(this[this.tabletfi_Valores.IdValorColumn]));
                }
                set {
                    this[this.tabletfi_Valores.IdValorColumn] = value;
                }
            }
            
            public string IdTDCompTesoreria {
                get {
                    return ((string)(this[this.tabletfi_Valores.IdTDCompTesoreriaColumn]));
                }
                set {
                    this[this.tabletfi_Valores.IdTDCompTesoreriaColumn] = value;
                }
            }
            
            public string Numero {
                get {
                    try {
                        return ((string)(this[this.tabletfi_Valores.NumeroColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletfi_Valores.NumeroColumn] = value;
                }
            }
            
            public string IdEntidad {
                get {
                    try {
                        return ((string)(this[this.tabletfi_Valores.IdEntidadColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletfi_Valores.IdEntidadColumn] = value;
                }
            }
            
            public System.DateTime Fecha {
                get {
                    try {
                        return ((System.DateTime)(this[this.tabletfi_Valores.FechaColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletfi_Valores.FechaColumn] = value;
                }
            }
            
            public System.DateTime FechaVencimiento {
                get {
                    try {
                        return ((System.DateTime)(this[this.tabletfi_Valores.FechaVencimientoColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletfi_Valores.FechaVencimientoColumn] = value;
                }
            }
            
            public System.Decimal Valor {
                get {
                    try {
                        return ((System.Decimal)(this[this.tabletfi_Valores.ValorColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletfi_Valores.ValorColumn] = value;
                }
            }
            
            public string IdMoneda {
                get {
                    try {
                        return ((string)(this[this.tabletfi_Valores.IdMonedaColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletfi_Valores.IdMonedaColumn] = value;
                }
            }
            
            public string IdCotizacionMoneda {
                get {
                    try {
                        return ((string)(this[this.tabletfi_Valores.IdCotizacionMonedaColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletfi_Valores.IdCotizacionMonedaColumn] = value;
                }
            }
            
            public System.DateTime FechaCreacion {
                get {
                    try {
                        return ((System.DateTime)(this[this.tabletfi_Valores.FechaCreacionColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletfi_Valores.FechaCreacionColumn] = value;
                }
            }
            
            public long IdConexionCreacion {
                get {
                    try {
                        return ((long)(this[this.tabletfi_Valores.IdConexionCreacionColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletfi_Valores.IdConexionCreacionColumn] = value;
                }
            }
            
            public System.Byte[] UltimaModificacion {
                get {
                    try {
                        return ((System.Byte[])(this[this.tabletfi_Valores.UltimaModificacionColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletfi_Valores.UltimaModificacionColumn] = value;
                }
            }
            
            public long IdConexionUltimaModificacion {
                get {
                    try {
                        return ((long)(this[this.tabletfi_Valores.IdConexionUltimaModificacionColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletfi_Valores.IdConexionUltimaModificacionColumn] = value;
                }
            }
            
            public long IdReservado {
                get {
                    try {
                        return ((long)(this[this.tabletfi_Valores.IdReservadoColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletfi_Valores.IdReservadoColumn] = value;
                }
            }
            
            public System.Guid RowId {
                get {
                    try {
                        return ((System.Guid)(this[this.tabletfi_Valores.RowIdColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletfi_Valores.RowIdColumn] = value;
                }
            }
            
            public long IdEmpresa {
                get {
                    try {
                        return ((long)(this[this.tabletfi_Valores.IdEmpresaColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletfi_Valores.IdEmpresaColumn] = value;
                }
            }
            
            public long IdSucursal {
                get {
                    try {
                        return ((long)(this[this.tabletfi_Valores.IdSucursalColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletfi_Valores.IdSucursalColumn] = value;
                }
            }
            
            public string IdInstanciaCaja {
                get {
                    try {
                        return ((string)(this[this.tabletfi_Valores.IdInstanciaCajaColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletfi_Valores.IdInstanciaCajaColumn] = value;
                }
            }
            
            public int Signo {
                get {
                    try {
                        return ((int)(this[this.tabletfi_Valores.SignoColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletfi_Valores.SignoColumn] = value;
                }
            }
            
            public string IdEstadoCheque {
                get {
                    try {
                        return ((string)(this[this.tabletfi_Valores.IdEstadoChequeColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletfi_Valores.IdEstadoChequeColumn] = value;
                }
            }
            
            public bool IsNumeroNull() {
                return this.IsNull(this.tabletfi_Valores.NumeroColumn);
            }
            
            public void SetNumeroNull() {
                this[this.tabletfi_Valores.NumeroColumn] = System.Convert.DBNull;
            }
            
            public bool IsIdEntidadNull() {
                return this.IsNull(this.tabletfi_Valores.IdEntidadColumn);
            }
            
            public void SetIdEntidadNull() {
                this[this.tabletfi_Valores.IdEntidadColumn] = System.Convert.DBNull;
            }
            
            public bool IsFechaNull() {
                return this.IsNull(this.tabletfi_Valores.FechaColumn);
            }
            
            public void SetFechaNull() {
                this[this.tabletfi_Valores.FechaColumn] = System.Convert.DBNull;
            }
            
            public bool IsFechaVencimientoNull() {
                return this.IsNull(this.tabletfi_Valores.FechaVencimientoColumn);
            }
            
            public void SetFechaVencimientoNull() {
                this[this.tabletfi_Valores.FechaVencimientoColumn] = System.Convert.DBNull;
            }
            
            public bool IsValorNull() {
                return this.IsNull(this.tabletfi_Valores.ValorColumn);
            }
            
            public void SetValorNull() {
                this[this.tabletfi_Valores.ValorColumn] = System.Convert.DBNull;
            }
            
            public bool IsIdMonedaNull() {
                return this.IsNull(this.tabletfi_Valores.IdMonedaColumn);
            }
            
            public void SetIdMonedaNull() {
                this[this.tabletfi_Valores.IdMonedaColumn] = System.Convert.DBNull;
            }
            
            public bool IsIdCotizacionMonedaNull() {
                return this.IsNull(this.tabletfi_Valores.IdCotizacionMonedaColumn);
            }
            
            public void SetIdCotizacionMonedaNull() {
                this[this.tabletfi_Valores.IdCotizacionMonedaColumn] = System.Convert.DBNull;
            }
            
            public bool IsFechaCreacionNull() {
                return this.IsNull(this.tabletfi_Valores.FechaCreacionColumn);
            }
            
            public void SetFechaCreacionNull() {
                this[this.tabletfi_Valores.FechaCreacionColumn] = System.Convert.DBNull;
            }
            
            public bool IsIdConexionCreacionNull() {
                return this.IsNull(this.tabletfi_Valores.IdConexionCreacionColumn);
            }
            
            public void SetIdConexionCreacionNull() {
                this[this.tabletfi_Valores.IdConexionCreacionColumn] = System.Convert.DBNull;
            }
            
            public bool IsUltimaModificacionNull() {
                return this.IsNull(this.tabletfi_Valores.UltimaModificacionColumn);
            }
            
            public void SetUltimaModificacionNull() {
                this[this.tabletfi_Valores.UltimaModificacionColumn] = System.Convert.DBNull;
            }
            
            public bool IsIdConexionUltimaModificacionNull() {
                return this.IsNull(this.tabletfi_Valores.IdConexionUltimaModificacionColumn);
            }
            
            public void SetIdConexionUltimaModificacionNull() {
                this[this.tabletfi_Valores.IdConexionUltimaModificacionColumn] = System.Convert.DBNull;
            }
            
            public bool IsIdReservadoNull() {
                return this.IsNull(this.tabletfi_Valores.IdReservadoColumn);
            }
            
            public void SetIdReservadoNull() {
                this[this.tabletfi_Valores.IdReservadoColumn] = System.Convert.DBNull;
            }
            
            public bool IsRowIdNull() {
                return this.IsNull(this.tabletfi_Valores.RowIdColumn);
            }
            
            public void SetRowIdNull() {
                this[this.tabletfi_Valores.RowIdColumn] = System.Convert.DBNull;
            }
            
            public bool IsIdEmpresaNull() {
                return this.IsNull(this.tabletfi_Valores.IdEmpresaColumn);
            }
            
            public void SetIdEmpresaNull() {
                this[this.tabletfi_Valores.IdEmpresaColumn] = System.Convert.DBNull;
            }
            
            public bool IsIdSucursalNull() {
                return this.IsNull(this.tabletfi_Valores.IdSucursalColumn);
            }
            
            public void SetIdSucursalNull() {
                this[this.tabletfi_Valores.IdSucursalColumn] = System.Convert.DBNull;
            }
            
            public bool IsIdInstanciaCajaNull() {
                return this.IsNull(this.tabletfi_Valores.IdInstanciaCajaColumn);
            }
            
            public void SetIdInstanciaCajaNull() {
                this[this.tabletfi_Valores.IdInstanciaCajaColumn] = System.Convert.DBNull;
            }
            
            public bool IsSignoNull() {
                return this.IsNull(this.tabletfi_Valores.SignoColumn);
            }
            
            public void SetSignoNull() {
                this[this.tabletfi_Valores.SignoColumn] = System.Convert.DBNull;
            }
            
            public bool IsIdEstadoChequeNull() {
                return this.IsNull(this.tabletfi_Valores.IdEstadoChequeColumn);
            }
            
            public void SetIdEstadoChequeNull() {
                this[this.tabletfi_Valores.IdEstadoChequeColumn] = System.Convert.DBNull;
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class tfi_ValoresRowChangeEvent : EventArgs {
            
            private tfi_ValoresRow eventRow;
            
            private DataRowAction eventAction;
            
            public tfi_ValoresRowChangeEvent(tfi_ValoresRow row, DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            public tfi_ValoresRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            public DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
