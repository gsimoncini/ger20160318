//------------------------------------------------------------------------------
// <autogenerated>
//     This code was generated by a tool.
//     Runtime Version: 1.1.4322.2032
//
//     Changes to this file may cause incorrect behavior and will be lost if 
//     the code is regenerated.
// </autogenerated>
//------------------------------------------------------------------------------

namespace mz.erp.commontypes.data {
    using System;
    using System.Data;
    using System.Xml;
    using System.Runtime.Serialization;
    
    
    [Serializable()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Diagnostics.DebuggerStepThrough()]
    [System.ComponentModel.ToolboxItem(true)]
    public class tsh_PersonasDataset : DataSet {
        
        private tsh_PersonasDataTable tabletsh_Personas;
        
        public tsh_PersonasDataset() {
            this.InitClass();
            System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            this.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        protected tsh_PersonasDataset(SerializationInfo info, StreamingContext context) {
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((strSchema != null)) {
                DataSet ds = new DataSet();
                ds.ReadXmlSchema(new XmlTextReader(new System.IO.StringReader(strSchema)));
                if ((ds.Tables["tsh_Personas"] != null)) {
                    this.Tables.Add(new tsh_PersonasDataTable(ds.Tables["tsh_Personas"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.InitClass();
            }
            this.GetSerializationData(info, context);
            System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            this.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public tsh_PersonasDataTable tsh_Personas {
            get {
                return this.tabletsh_Personas;
            }
        }
        
        public override DataSet Clone() {
            tsh_PersonasDataset cln = ((tsh_PersonasDataset)(base.Clone()));
            cln.InitVars();
            return cln;
        }
        
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        protected override void ReadXmlSerializable(XmlReader reader) {
            this.Reset();
            DataSet ds = new DataSet();
            ds.ReadXml(reader);
            if ((ds.Tables["tsh_Personas"] != null)) {
                this.Tables.Add(new tsh_PersonasDataTable(ds.Tables["tsh_Personas"]));
            }
            this.DataSetName = ds.DataSetName;
            this.Prefix = ds.Prefix;
            this.Namespace = ds.Namespace;
            this.Locale = ds.Locale;
            this.CaseSensitive = ds.CaseSensitive;
            this.EnforceConstraints = ds.EnforceConstraints;
            this.Merge(ds, false, System.Data.MissingSchemaAction.Add);
            this.InitVars();
        }
        
        protected override System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            System.IO.MemoryStream stream = new System.IO.MemoryStream();
            this.WriteXmlSchema(new XmlTextWriter(stream, null));
            stream.Position = 0;
            return System.Xml.Schema.XmlSchema.Read(new XmlTextReader(stream), null);
        }
        
        internal void InitVars() {
            this.tabletsh_Personas = ((tsh_PersonasDataTable)(this.Tables["tsh_Personas"]));
            if ((this.tabletsh_Personas != null)) {
                this.tabletsh_Personas.InitVars();
            }
        }
        
        private void InitClass() {
            this.DataSetName = "tsh_PersonasDataset";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/tsh_Personas.xsd";
            this.Locale = new System.Globalization.CultureInfo("en-US");
            this.CaseSensitive = false;
            this.EnforceConstraints = true;
            this.tabletsh_Personas = new tsh_PersonasDataTable();
            this.Tables.Add(this.tabletsh_Personas);
        }
        
        private bool ShouldSerializetsh_Personas() {
            return false;
        }
        
        private void SchemaChanged(object sender, System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        public delegate void tsh_PersonasRowChangeEventHandler(object sender, tsh_PersonasRowChangeEvent e);
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class tsh_PersonasDataTable : DataTable, System.Collections.IEnumerable {
            
            private DataColumn columnIdPersona;
            
            private DataColumn columnNombre;
            
            private DataColumn columnComentarios;
            
            private DataColumn columnTelefonos;
            
            private DataColumn columnEmail;
            
            private DataColumn columnInstantMesseger;
            
            private DataColumn columnObservaciones;
            
            private DataColumn columnActivo;
            
            private DataColumn columnFechaCreacion;
            
            private DataColumn columnIdConexionCreacion;
            
            private DataColumn columnUltimaModificacion;
            
            private DataColumn columnIdConexionUltimaModificacion;
            
            private DataColumn columnIdReservado;
            
            private DataColumn columnRowId;
            
            private DataColumn columnIdTratamiento;
            
            private DataColumn columnIdEmpresa;
            
            private DataColumn columnIdSucursal;
            
            internal tsh_PersonasDataTable() : 
                    base("tsh_Personas") {
                this.InitClass();
            }
            
            internal tsh_PersonasDataTable(DataTable table) : 
                    base(table.TableName) {
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
                this.DisplayExpression = table.DisplayExpression;
            }
            
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            internal DataColumn IdPersonaColumn {
                get {
                    return this.columnIdPersona;
                }
            }
            
            internal DataColumn NombreColumn {
                get {
                    return this.columnNombre;
                }
            }
            
            internal DataColumn ComentariosColumn {
                get {
                    return this.columnComentarios;
                }
            }
            
            internal DataColumn TelefonosColumn {
                get {
                    return this.columnTelefonos;
                }
            }
            
            internal DataColumn EmailColumn {
                get {
                    return this.columnEmail;
                }
            }
            
            internal DataColumn InstantMessegerColumn {
                get {
                    return this.columnInstantMesseger;
                }
            }
            
            internal DataColumn ObservacionesColumn {
                get {
                    return this.columnObservaciones;
                }
            }
            
            internal DataColumn ActivoColumn {
                get {
                    return this.columnActivo;
                }
            }
            
            internal DataColumn FechaCreacionColumn {
                get {
                    return this.columnFechaCreacion;
                }
            }
            
            internal DataColumn IdConexionCreacionColumn {
                get {
                    return this.columnIdConexionCreacion;
                }
            }
            
            internal DataColumn UltimaModificacionColumn {
                get {
                    return this.columnUltimaModificacion;
                }
            }
            
            internal DataColumn IdConexionUltimaModificacionColumn {
                get {
                    return this.columnIdConexionUltimaModificacion;
                }
            }
            
            internal DataColumn IdReservadoColumn {
                get {
                    return this.columnIdReservado;
                }
            }
            
            internal DataColumn RowIdColumn {
                get {
                    return this.columnRowId;
                }
            }
            
            internal DataColumn IdTratamientoColumn {
                get {
                    return this.columnIdTratamiento;
                }
            }
            
            internal DataColumn IdEmpresaColumn {
                get {
                    return this.columnIdEmpresa;
                }
            }
            
            internal DataColumn IdSucursalColumn {
                get {
                    return this.columnIdSucursal;
                }
            }
            
            public tsh_PersonasRow this[int index] {
                get {
                    return ((tsh_PersonasRow)(this.Rows[index]));
                }
            }
            
            public event tsh_PersonasRowChangeEventHandler tsh_PersonasRowChanged;
            
            public event tsh_PersonasRowChangeEventHandler tsh_PersonasRowChanging;
            
            public event tsh_PersonasRowChangeEventHandler tsh_PersonasRowDeleted;
            
            public event tsh_PersonasRowChangeEventHandler tsh_PersonasRowDeleting;
            
            public void Addtsh_PersonasRow(tsh_PersonasRow row) {
                this.Rows.Add(row);
            }
            
            public tsh_PersonasRow Addtsh_PersonasRow(
                        string IdPersona, 
                        string Nombre, 
                        string Comentarios, 
                        string Telefonos, 
                        string Email, 
                        string InstantMesseger, 
                        string Observaciones, 
                        bool Activo, 
                        System.DateTime FechaCreacion, 
                        long IdConexionCreacion, 
                        System.Byte[] UltimaModificacion, 
                        long IdConexionUltimaModificacion, 
                        long IdReservado, 
                        System.Guid RowId, 
                        long IdTratamiento, 
                        long IdEmpresa, 
                        long IdSucursal) {
                tsh_PersonasRow rowtsh_PersonasRow = ((tsh_PersonasRow)(this.NewRow()));
                rowtsh_PersonasRow.ItemArray = new object[] {
                        IdPersona,
                        Nombre,
                        Comentarios,
                        Telefonos,
                        Email,
                        InstantMesseger,
                        Observaciones,
                        Activo,
                        FechaCreacion,
                        IdConexionCreacion,
                        UltimaModificacion,
                        IdConexionUltimaModificacion,
                        IdReservado,
                        RowId,
                        IdTratamiento,
                        IdEmpresa,
                        IdSucursal};
                this.Rows.Add(rowtsh_PersonasRow);
                return rowtsh_PersonasRow;
            }
            
            public tsh_PersonasRow FindByIdPersona(string IdPersona) {
                return ((tsh_PersonasRow)(this.Rows.Find(new object[] {
                            IdPersona})));
            }
            
            public System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            public override DataTable Clone() {
                tsh_PersonasDataTable cln = ((tsh_PersonasDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            protected override DataTable CreateInstance() {
                return new tsh_PersonasDataTable();
            }
            
            internal void InitVars() {
                this.columnIdPersona = this.Columns["IdPersona"];
                this.columnNombre = this.Columns["Nombre"];
                this.columnComentarios = this.Columns["Comentarios"];
                this.columnTelefonos = this.Columns["Telefonos"];
                this.columnEmail = this.Columns["Email"];
                this.columnInstantMesseger = this.Columns["InstantMesseger"];
                this.columnObservaciones = this.Columns["Observaciones"];
                this.columnActivo = this.Columns["Activo"];
                this.columnFechaCreacion = this.Columns["FechaCreacion"];
                this.columnIdConexionCreacion = this.Columns["IdConexionCreacion"];
                this.columnUltimaModificacion = this.Columns["UltimaModificacion"];
                this.columnIdConexionUltimaModificacion = this.Columns["IdConexionUltimaModificacion"];
                this.columnIdReservado = this.Columns["IdReservado"];
                this.columnRowId = this.Columns["RowId"];
                this.columnIdTratamiento = this.Columns["IdTratamiento"];
                this.columnIdEmpresa = this.Columns["IdEmpresa"];
                this.columnIdSucursal = this.Columns["IdSucursal"];
            }
            
            private void InitClass() {
                this.columnIdPersona = new DataColumn("IdPersona", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdPersona);
                this.columnNombre = new DataColumn("Nombre", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnNombre);
                this.columnComentarios = new DataColumn("Comentarios", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnComentarios);
                this.columnTelefonos = new DataColumn("Telefonos", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnTelefonos);
                this.columnEmail = new DataColumn("Email", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnEmail);
                this.columnInstantMesseger = new DataColumn("InstantMesseger", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnInstantMesseger);
                this.columnObservaciones = new DataColumn("Observaciones", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnObservaciones);
                this.columnActivo = new DataColumn("Activo", typeof(bool), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnActivo);
                this.columnFechaCreacion = new DataColumn("FechaCreacion", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnFechaCreacion);
                this.columnIdConexionCreacion = new DataColumn("IdConexionCreacion", typeof(long), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdConexionCreacion);
                this.columnUltimaModificacion = new DataColumn("UltimaModificacion", typeof(System.Byte[]), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnUltimaModificacion);
                this.columnIdConexionUltimaModificacion = new DataColumn("IdConexionUltimaModificacion", typeof(long), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdConexionUltimaModificacion);
                this.columnIdReservado = new DataColumn("IdReservado", typeof(long), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdReservado);
                this.columnRowId = new DataColumn("RowId", typeof(System.Guid), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnRowId);
                this.columnIdTratamiento = new DataColumn("IdTratamiento", typeof(long), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdTratamiento);
                this.columnIdEmpresa = new DataColumn("IdEmpresa", typeof(long), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdEmpresa);
                this.columnIdSucursal = new DataColumn("IdSucursal", typeof(long), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdSucursal);
                this.Constraints.Add(new UniqueConstraint("tsh_PersonasDatasetKey1", new DataColumn[] {
                                this.columnIdPersona}, true));
                this.columnIdPersona.AllowDBNull = false;
                this.columnIdPersona.Unique = true;
                this.columnNombre.AllowDBNull = false;
                this.columnUltimaModificacion.ReadOnly = true;
            }
            
            public tsh_PersonasRow Newtsh_PersonasRow() {
                return ((tsh_PersonasRow)(this.NewRow()));
            }
            
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder) {
                return new tsh_PersonasRow(builder);
            }
            
            protected override System.Type GetRowType() {
                return typeof(tsh_PersonasRow);
            }
            
            protected override void OnRowChanged(DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.tsh_PersonasRowChanged != null)) {
                    this.tsh_PersonasRowChanged(this, new tsh_PersonasRowChangeEvent(((tsh_PersonasRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowChanging(DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.tsh_PersonasRowChanging != null)) {
                    this.tsh_PersonasRowChanging(this, new tsh_PersonasRowChangeEvent(((tsh_PersonasRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleted(DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.tsh_PersonasRowDeleted != null)) {
                    this.tsh_PersonasRowDeleted(this, new tsh_PersonasRowChangeEvent(((tsh_PersonasRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleting(DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.tsh_PersonasRowDeleting != null)) {
                    this.tsh_PersonasRowDeleting(this, new tsh_PersonasRowChangeEvent(((tsh_PersonasRow)(e.Row)), e.Action));
                }
            }
            
            public void Removetsh_PersonasRow(tsh_PersonasRow row) {
                this.Rows.Remove(row);
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class tsh_PersonasRow : DataRow {
            
            private tsh_PersonasDataTable tabletsh_Personas;
            
            internal tsh_PersonasRow(DataRowBuilder rb) : 
                    base(rb) {
                this.tabletsh_Personas = ((tsh_PersonasDataTable)(this.Table));
            }
            
            public string IdPersona {
                get {
                    return ((string)(this[this.tabletsh_Personas.IdPersonaColumn]));
                }
                set {
                    this[this.tabletsh_Personas.IdPersonaColumn] = value;
                }
            }
            
            public string Nombre {
                get {
                    return ((string)(this[this.tabletsh_Personas.NombreColumn]));
                }
                set {
                    this[this.tabletsh_Personas.NombreColumn] = value;
                }
            }
            
            public string Comentarios {
                get {
                    try {
                        return ((string)(this[this.tabletsh_Personas.ComentariosColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletsh_Personas.ComentariosColumn] = value;
                }
            }
            
            public string Telefonos {
                get {
                    try {
                        return ((string)(this[this.tabletsh_Personas.TelefonosColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletsh_Personas.TelefonosColumn] = value;
                }
            }
            
            public string Email {
                get {
                    try {
                        return ((string)(this[this.tabletsh_Personas.EmailColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletsh_Personas.EmailColumn] = value;
                }
            }
            
            public string InstantMesseger {
                get {
                    try {
                        return ((string)(this[this.tabletsh_Personas.InstantMessegerColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletsh_Personas.InstantMessegerColumn] = value;
                }
            }
            
            public string Observaciones {
                get {
                    try {
                        return ((string)(this[this.tabletsh_Personas.ObservacionesColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletsh_Personas.ObservacionesColumn] = value;
                }
            }
            
            public bool Activo {
                get {
                    try {
                        return ((bool)(this[this.tabletsh_Personas.ActivoColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletsh_Personas.ActivoColumn] = value;
                }
            }
            
            public System.DateTime FechaCreacion {
                get {
                    try {
                        return ((System.DateTime)(this[this.tabletsh_Personas.FechaCreacionColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletsh_Personas.FechaCreacionColumn] = value;
                }
            }
            
            public long IdConexionCreacion {
                get {
                    try {
                        return ((long)(this[this.tabletsh_Personas.IdConexionCreacionColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletsh_Personas.IdConexionCreacionColumn] = value;
                }
            }
            
            public System.Byte[] UltimaModificacion {
                get {
                    try {
                        return ((System.Byte[])(this[this.tabletsh_Personas.UltimaModificacionColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletsh_Personas.UltimaModificacionColumn] = value;
                }
            }
            
            public long IdConexionUltimaModificacion {
                get {
                    try {
                        return ((long)(this[this.tabletsh_Personas.IdConexionUltimaModificacionColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletsh_Personas.IdConexionUltimaModificacionColumn] = value;
                }
            }
            
            public long IdReservado {
                get {
                    try {
                        return ((long)(this[this.tabletsh_Personas.IdReservadoColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletsh_Personas.IdReservadoColumn] = value;
                }
            }
            
            public System.Guid RowId {
                get {
                    try {
                        return ((System.Guid)(this[this.tabletsh_Personas.RowIdColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletsh_Personas.RowIdColumn] = value;
                }
            }
            
            public long IdTratamiento {
                get {
                    try {
                        return ((long)(this[this.tabletsh_Personas.IdTratamientoColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletsh_Personas.IdTratamientoColumn] = value;
                }
            }
            
            public long IdEmpresa {
                get {
                    try {
                        return ((long)(this[this.tabletsh_Personas.IdEmpresaColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletsh_Personas.IdEmpresaColumn] = value;
                }
            }
            
            public long IdSucursal {
                get {
                    try {
                        return ((long)(this[this.tabletsh_Personas.IdSucursalColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletsh_Personas.IdSucursalColumn] = value;
                }
            }
            
            public bool IsComentariosNull() {
                return this.IsNull(this.tabletsh_Personas.ComentariosColumn);
            }
            
            public void SetComentariosNull() {
                this[this.tabletsh_Personas.ComentariosColumn] = System.Convert.DBNull;
            }
            
            public bool IsTelefonosNull() {
                return this.IsNull(this.tabletsh_Personas.TelefonosColumn);
            }
            
            public void SetTelefonosNull() {
                this[this.tabletsh_Personas.TelefonosColumn] = System.Convert.DBNull;
            }
            
            public bool IsEmailNull() {
                return this.IsNull(this.tabletsh_Personas.EmailColumn);
            }
            
            public void SetEmailNull() {
                this[this.tabletsh_Personas.EmailColumn] = System.Convert.DBNull;
            }
            
            public bool IsInstantMessegerNull() {
                return this.IsNull(this.tabletsh_Personas.InstantMessegerColumn);
            }
            
            public void SetInstantMessegerNull() {
                this[this.tabletsh_Personas.InstantMessegerColumn] = System.Convert.DBNull;
            }
            
            public bool IsObservacionesNull() {
                return this.IsNull(this.tabletsh_Personas.ObservacionesColumn);
            }
            
            public void SetObservacionesNull() {
                this[this.tabletsh_Personas.ObservacionesColumn] = System.Convert.DBNull;
            }
            
            public bool IsActivoNull() {
                return this.IsNull(this.tabletsh_Personas.ActivoColumn);
            }
            
            public void SetActivoNull() {
                this[this.tabletsh_Personas.ActivoColumn] = System.Convert.DBNull;
            }
            
            public bool IsFechaCreacionNull() {
                return this.IsNull(this.tabletsh_Personas.FechaCreacionColumn);
            }
            
            public void SetFechaCreacionNull() {
                this[this.tabletsh_Personas.FechaCreacionColumn] = System.Convert.DBNull;
            }
            
            public bool IsIdConexionCreacionNull() {
                return this.IsNull(this.tabletsh_Personas.IdConexionCreacionColumn);
            }
            
            public void SetIdConexionCreacionNull() {
                this[this.tabletsh_Personas.IdConexionCreacionColumn] = System.Convert.DBNull;
            }
            
            public bool IsUltimaModificacionNull() {
                return this.IsNull(this.tabletsh_Personas.UltimaModificacionColumn);
            }
            
            public void SetUltimaModificacionNull() {
                this[this.tabletsh_Personas.UltimaModificacionColumn] = System.Convert.DBNull;
            }
            
            public bool IsIdConexionUltimaModificacionNull() {
                return this.IsNull(this.tabletsh_Personas.IdConexionUltimaModificacionColumn);
            }
            
            public void SetIdConexionUltimaModificacionNull() {
                this[this.tabletsh_Personas.IdConexionUltimaModificacionColumn] = System.Convert.DBNull;
            }
            
            public bool IsIdReservadoNull() {
                return this.IsNull(this.tabletsh_Personas.IdReservadoColumn);
            }
            
            public void SetIdReservadoNull() {
                this[this.tabletsh_Personas.IdReservadoColumn] = System.Convert.DBNull;
            }
            
            public bool IsRowIdNull() {
                return this.IsNull(this.tabletsh_Personas.RowIdColumn);
            }
            
            public void SetRowIdNull() {
                this[this.tabletsh_Personas.RowIdColumn] = System.Convert.DBNull;
            }
            
            public bool IsIdTratamientoNull() {
                return this.IsNull(this.tabletsh_Personas.IdTratamientoColumn);
            }
            
            public void SetIdTratamientoNull() {
                this[this.tabletsh_Personas.IdTratamientoColumn] = System.Convert.DBNull;
            }
            
            public bool IsIdEmpresaNull() {
                return this.IsNull(this.tabletsh_Personas.IdEmpresaColumn);
            }
            
            public void SetIdEmpresaNull() {
                this[this.tabletsh_Personas.IdEmpresaColumn] = System.Convert.DBNull;
            }
            
            public bool IsIdSucursalNull() {
                return this.IsNull(this.tabletsh_Personas.IdSucursalColumn);
            }
            
            public void SetIdSucursalNull() {
                this[this.tabletsh_Personas.IdSucursalColumn] = System.Convert.DBNull;
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class tsh_PersonasRowChangeEvent : EventArgs {
            
            private tsh_PersonasRow eventRow;
            
            private DataRowAction eventAction;
            
            public tsh_PersonasRowChangeEvent(tsh_PersonasRow row, DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            public tsh_PersonasRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            public DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
