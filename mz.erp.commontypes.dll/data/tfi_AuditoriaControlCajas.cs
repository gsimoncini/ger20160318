//------------------------------------------------------------------------------
// <autogenerated>
//     This code was generated by a tool.
//     Runtime Version: 1.1.4322.2407
//
//     Changes to this file may cause incorrect behavior and will be lost if 
//     the code is regenerated.
// </autogenerated>
//------------------------------------------------------------------------------

namespace mz.erp.commontypes.data {
    using System;
    using System.Data;
    using System.Xml;
    using System.Runtime.Serialization;
    
    
    [Serializable()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Diagnostics.DebuggerStepThrough()]
    [System.ComponentModel.ToolboxItem(true)]
    public class tfi_AuditoriaControlCajasDataset : DataSet {
        
        private tfi_AuditoriaControlCajasDataTable tabletfi_AuditoriaControlCajas;
        
        public tfi_AuditoriaControlCajasDataset() {
            this.InitClass();
            System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            this.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        protected tfi_AuditoriaControlCajasDataset(SerializationInfo info, StreamingContext context) {
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((strSchema != null)) {
                DataSet ds = new DataSet();
                ds.ReadXmlSchema(new XmlTextReader(new System.IO.StringReader(strSchema)));
                if ((ds.Tables["tfi_AuditoriaControlCajas"] != null)) {
                    this.Tables.Add(new tfi_AuditoriaControlCajasDataTable(ds.Tables["tfi_AuditoriaControlCajas"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.InitClass();
            }
            this.GetSerializationData(info, context);
            System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            this.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public tfi_AuditoriaControlCajasDataTable tfi_AuditoriaControlCajas {
            get {
                return this.tabletfi_AuditoriaControlCajas;
            }
        }
        
        public override DataSet Clone() {
            tfi_AuditoriaControlCajasDataset cln = ((tfi_AuditoriaControlCajasDataset)(base.Clone()));
            cln.InitVars();
            return cln;
        }
        
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        protected override void ReadXmlSerializable(XmlReader reader) {
            this.Reset();
            DataSet ds = new DataSet();
            ds.ReadXml(reader);
            if ((ds.Tables["tfi_AuditoriaControlCajas"] != null)) {
                this.Tables.Add(new tfi_AuditoriaControlCajasDataTable(ds.Tables["tfi_AuditoriaControlCajas"]));
            }
            this.DataSetName = ds.DataSetName;
            this.Prefix = ds.Prefix;
            this.Namespace = ds.Namespace;
            this.Locale = ds.Locale;
            this.CaseSensitive = ds.CaseSensitive;
            this.EnforceConstraints = ds.EnforceConstraints;
            this.Merge(ds, false, System.Data.MissingSchemaAction.Add);
            this.InitVars();
        }
        
        protected override System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            System.IO.MemoryStream stream = new System.IO.MemoryStream();
            this.WriteXmlSchema(new XmlTextWriter(stream, null));
            stream.Position = 0;
            return System.Xml.Schema.XmlSchema.Read(new XmlTextReader(stream), null);
        }
        
        internal void InitVars() {
            this.tabletfi_AuditoriaControlCajas = ((tfi_AuditoriaControlCajasDataTable)(this.Tables["tfi_AuditoriaControlCajas"]));
            if ((this.tabletfi_AuditoriaControlCajas != null)) {
                this.tabletfi_AuditoriaControlCajas.InitVars();
            }
        }
        
        private void InitClass() {
            this.DataSetName = "tfi_AuditoriaControlCajasDataset";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/tfi_AuditoriaControlCajas.xsd";
            this.Locale = new System.Globalization.CultureInfo("en-US");
            this.CaseSensitive = false;
            this.EnforceConstraints = true;
            this.tabletfi_AuditoriaControlCajas = new tfi_AuditoriaControlCajasDataTable();
            this.Tables.Add(this.tabletfi_AuditoriaControlCajas);
        }
        
        private bool ShouldSerializetfi_AuditoriaControlCajas() {
            return false;
        }
        
        private void SchemaChanged(object sender, System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        public delegate void tfi_AuditoriaControlCajasRowChangeEventHandler(object sender, tfi_AuditoriaControlCajasRowChangeEvent e);
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class tfi_AuditoriaControlCajasDataTable : DataTable, System.Collections.IEnumerable {
            
            private DataColumn columnIdAuditoria;
            
            private DataColumn columnFecha;
            
            private DataColumn columnFechaCierre;
            
            private DataColumn columnCajero;
            
            private DataColumn columnIdInstanciaCaja;
            
            private DataColumn columnTiempo;
            
            private DataColumn columnAuditadoSupervisor;
            
            private DataColumn columnAuditadoGerente;
            
            private DataColumn columnEsCierre;
            
            private DataColumn columnFechaCreacion;
            
            private DataColumn columnIdConexionCreacion;
            
            private DataColumn columnUltimaModificacion;
            
            private DataColumn columnIdConexionUltimaModificacion;
            
            private DataColumn columnRowId;
            
            internal tfi_AuditoriaControlCajasDataTable() : 
                    base("tfi_AuditoriaControlCajas") {
                this.InitClass();
            }
            
            internal tfi_AuditoriaControlCajasDataTable(DataTable table) : 
                    base(table.TableName) {
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
                this.DisplayExpression = table.DisplayExpression;
            }
            
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            internal DataColumn IdAuditoriaColumn {
                get {
                    return this.columnIdAuditoria;
                }
            }
            
            internal DataColumn FechaColumn {
                get {
                    return this.columnFecha;
                }
            }
            
            internal DataColumn FechaCierreColumn {
                get {
                    return this.columnFechaCierre;
                }
            }
            
            internal DataColumn CajeroColumn {
                get {
                    return this.columnCajero;
                }
            }
            
            internal DataColumn IdInstanciaCajaColumn {
                get {
                    return this.columnIdInstanciaCaja;
                }
            }
            
            internal DataColumn TiempoColumn {
                get {
                    return this.columnTiempo;
                }
            }
            
            internal DataColumn AuditadoSupervisorColumn {
                get {
                    return this.columnAuditadoSupervisor;
                }
            }
            
            internal DataColumn AuditadoGerenteColumn {
                get {
                    return this.columnAuditadoGerente;
                }
            }
            
            internal DataColumn EsCierreColumn {
                get {
                    return this.columnEsCierre;
                }
            }
            
            internal DataColumn FechaCreacionColumn {
                get {
                    return this.columnFechaCreacion;
                }
            }
            
            internal DataColumn IdConexionCreacionColumn {
                get {
                    return this.columnIdConexionCreacion;
                }
            }
            
            internal DataColumn UltimaModificacionColumn {
                get {
                    return this.columnUltimaModificacion;
                }
            }
            
            internal DataColumn IdConexionUltimaModificacionColumn {
                get {
                    return this.columnIdConexionUltimaModificacion;
                }
            }
            
            internal DataColumn RowIdColumn {
                get {
                    return this.columnRowId;
                }
            }
            
            public tfi_AuditoriaControlCajasRow this[int index] {
                get {
                    return ((tfi_AuditoriaControlCajasRow)(this.Rows[index]));
                }
            }
            
            public event tfi_AuditoriaControlCajasRowChangeEventHandler tfi_AuditoriaControlCajasRowChanged;
            
            public event tfi_AuditoriaControlCajasRowChangeEventHandler tfi_AuditoriaControlCajasRowChanging;
            
            public event tfi_AuditoriaControlCajasRowChangeEventHandler tfi_AuditoriaControlCajasRowDeleted;
            
            public event tfi_AuditoriaControlCajasRowChangeEventHandler tfi_AuditoriaControlCajasRowDeleting;
            
            public void Addtfi_AuditoriaControlCajasRow(tfi_AuditoriaControlCajasRow row) {
                this.Rows.Add(row);
            }
            
            public tfi_AuditoriaControlCajasRow Addtfi_AuditoriaControlCajasRow(long IdAuditoria, System.DateTime Fecha, System.DateTime FechaCierre, string Cajero, string IdInstanciaCaja, long Tiempo, bool AuditadoSupervisor, bool AuditadoGerente, bool EsCierre, System.DateTime FechaCreacion, long IdConexionCreacion, System.Byte[] UltimaModificacion, long IdConexionUltimaModificacion, System.Guid RowId) {
                tfi_AuditoriaControlCajasRow rowtfi_AuditoriaControlCajasRow = ((tfi_AuditoriaControlCajasRow)(this.NewRow()));
                rowtfi_AuditoriaControlCajasRow.ItemArray = new object[] {
                        IdAuditoria,
                        Fecha,
                        FechaCierre,
                        Cajero,
                        IdInstanciaCaja,
                        Tiempo,
                        AuditadoSupervisor,
                        AuditadoGerente,
                        EsCierre,
                        FechaCreacion,
                        IdConexionCreacion,
                        UltimaModificacion,
                        IdConexionUltimaModificacion,
                        RowId};
                this.Rows.Add(rowtfi_AuditoriaControlCajasRow);
                return rowtfi_AuditoriaControlCajasRow;
            }
            
            public tfi_AuditoriaControlCajasRow FindByIdAuditoria(long IdAuditoria) {
                return ((tfi_AuditoriaControlCajasRow)(this.Rows.Find(new object[] {
                            IdAuditoria})));
            }
            
            public System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            public override DataTable Clone() {
                tfi_AuditoriaControlCajasDataTable cln = ((tfi_AuditoriaControlCajasDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            protected override DataTable CreateInstance() {
                return new tfi_AuditoriaControlCajasDataTable();
            }
            
            internal void InitVars() {
                this.columnIdAuditoria = this.Columns["IdAuditoria"];
                this.columnFecha = this.Columns["Fecha"];
                this.columnFechaCierre = this.Columns["FechaCierre"];
                this.columnCajero = this.Columns["Cajero"];
                this.columnIdInstanciaCaja = this.Columns["IdInstanciaCaja"];
                this.columnTiempo = this.Columns["Tiempo"];
                this.columnAuditadoSupervisor = this.Columns["AuditadoSupervisor"];
                this.columnAuditadoGerente = this.Columns["AuditadoGerente"];
                this.columnEsCierre = this.Columns["EsCierre"];
                this.columnFechaCreacion = this.Columns["FechaCreacion"];
                this.columnIdConexionCreacion = this.Columns["IdConexionCreacion"];
                this.columnUltimaModificacion = this.Columns["UltimaModificacion"];
                this.columnIdConexionUltimaModificacion = this.Columns["IdConexionUltimaModificacion"];
                this.columnRowId = this.Columns["RowId"];
            }
            
            private void InitClass() {
                this.columnIdAuditoria = new DataColumn("IdAuditoria", typeof(long), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdAuditoria);
                this.columnFecha = new DataColumn("Fecha", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnFecha);
                this.columnFechaCierre = new DataColumn("FechaCierre", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnFechaCierre);
                this.columnCajero = new DataColumn("Cajero", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnCajero);
                this.columnIdInstanciaCaja = new DataColumn("IdInstanciaCaja", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdInstanciaCaja);
                this.columnTiempo = new DataColumn("Tiempo", typeof(long), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnTiempo);
                this.columnAuditadoSupervisor = new DataColumn("AuditadoSupervisor", typeof(bool), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnAuditadoSupervisor);
                this.columnAuditadoGerente = new DataColumn("AuditadoGerente", typeof(bool), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnAuditadoGerente);
                this.columnEsCierre = new DataColumn("EsCierre", typeof(bool), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnEsCierre);
                this.columnFechaCreacion = new DataColumn("FechaCreacion", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnFechaCreacion);
                this.columnIdConexionCreacion = new DataColumn("IdConexionCreacion", typeof(long), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdConexionCreacion);
                this.columnUltimaModificacion = new DataColumn("UltimaModificacion", typeof(System.Byte[]), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnUltimaModificacion);
                this.columnIdConexionUltimaModificacion = new DataColumn("IdConexionUltimaModificacion", typeof(long), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdConexionUltimaModificacion);
                this.columnRowId = new DataColumn("RowId", typeof(System.Guid), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnRowId);
                this.Constraints.Add(new UniqueConstraint("tfi_AuditoriaControlCajasKey1", new DataColumn[] {
                                this.columnIdAuditoria}, true));
                this.columnIdAuditoria.AllowDBNull = false;
                this.columnIdAuditoria.Unique = true;
                this.columnIdConexionCreacion.AllowDBNull = false;
                this.columnUltimaModificacion.ReadOnly = true;
            }
            
            public tfi_AuditoriaControlCajasRow Newtfi_AuditoriaControlCajasRow() {
                return ((tfi_AuditoriaControlCajasRow)(this.NewRow()));
            }
            
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder) {
                return new tfi_AuditoriaControlCajasRow(builder);
            }
            
            protected override System.Type GetRowType() {
                return typeof(tfi_AuditoriaControlCajasRow);
            }
            
            protected override void OnRowChanged(DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.tfi_AuditoriaControlCajasRowChanged != null)) {
                    this.tfi_AuditoriaControlCajasRowChanged(this, new tfi_AuditoriaControlCajasRowChangeEvent(((tfi_AuditoriaControlCajasRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowChanging(DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.tfi_AuditoriaControlCajasRowChanging != null)) {
                    this.tfi_AuditoriaControlCajasRowChanging(this, new tfi_AuditoriaControlCajasRowChangeEvent(((tfi_AuditoriaControlCajasRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleted(DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.tfi_AuditoriaControlCajasRowDeleted != null)) {
                    this.tfi_AuditoriaControlCajasRowDeleted(this, new tfi_AuditoriaControlCajasRowChangeEvent(((tfi_AuditoriaControlCajasRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleting(DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.tfi_AuditoriaControlCajasRowDeleting != null)) {
                    this.tfi_AuditoriaControlCajasRowDeleting(this, new tfi_AuditoriaControlCajasRowChangeEvent(((tfi_AuditoriaControlCajasRow)(e.Row)), e.Action));
                }
            }
            
            public void Removetfi_AuditoriaControlCajasRow(tfi_AuditoriaControlCajasRow row) {
                this.Rows.Remove(row);
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class tfi_AuditoriaControlCajasRow : DataRow {
            
            private tfi_AuditoriaControlCajasDataTable tabletfi_AuditoriaControlCajas;
            
            internal tfi_AuditoriaControlCajasRow(DataRowBuilder rb) : 
                    base(rb) {
                this.tabletfi_AuditoriaControlCajas = ((tfi_AuditoriaControlCajasDataTable)(this.Table));
            }
            
            public long IdAuditoria {
                get {
                    return ((long)(this[this.tabletfi_AuditoriaControlCajas.IdAuditoriaColumn]));
                }
                set {
                    this[this.tabletfi_AuditoriaControlCajas.IdAuditoriaColumn] = value;
                }
            }
            
            public System.DateTime Fecha {
                get {
                    try {
                        return ((System.DateTime)(this[this.tabletfi_AuditoriaControlCajas.FechaColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletfi_AuditoriaControlCajas.FechaColumn] = value;
                }
            }
            
            public System.DateTime FechaCierre {
                get {
                    try {
                        return ((System.DateTime)(this[this.tabletfi_AuditoriaControlCajas.FechaCierreColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletfi_AuditoriaControlCajas.FechaCierreColumn] = value;
                }
            }
            
            public string Cajero {
                get {
                    try {
                        return ((string)(this[this.tabletfi_AuditoriaControlCajas.CajeroColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletfi_AuditoriaControlCajas.CajeroColumn] = value;
                }
            }
            
            public string IdInstanciaCaja {
                get {
                    try {
                        return ((string)(this[this.tabletfi_AuditoriaControlCajas.IdInstanciaCajaColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletfi_AuditoriaControlCajas.IdInstanciaCajaColumn] = value;
                }
            }
            
            public long Tiempo {
                get {
                    try {
                        return ((long)(this[this.tabletfi_AuditoriaControlCajas.TiempoColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletfi_AuditoriaControlCajas.TiempoColumn] = value;
                }
            }
            
            public bool AuditadoSupervisor {
                get {
                    try {
                        return ((bool)(this[this.tabletfi_AuditoriaControlCajas.AuditadoSupervisorColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletfi_AuditoriaControlCajas.AuditadoSupervisorColumn] = value;
                }
            }
            
            public bool AuditadoGerente {
                get {
                    try {
                        return ((bool)(this[this.tabletfi_AuditoriaControlCajas.AuditadoGerenteColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletfi_AuditoriaControlCajas.AuditadoGerenteColumn] = value;
                }
            }
            
            public bool EsCierre {
                get {
                    try {
                        return ((bool)(this[this.tabletfi_AuditoriaControlCajas.EsCierreColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletfi_AuditoriaControlCajas.EsCierreColumn] = value;
                }
            }
            
            public System.DateTime FechaCreacion {
                get {
                    try {
                        return ((System.DateTime)(this[this.tabletfi_AuditoriaControlCajas.FechaCreacionColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletfi_AuditoriaControlCajas.FechaCreacionColumn] = value;
                }
            }
            
            public long IdConexionCreacion {
                get {
                    return ((long)(this[this.tabletfi_AuditoriaControlCajas.IdConexionCreacionColumn]));
                }
                set {
                    this[this.tabletfi_AuditoriaControlCajas.IdConexionCreacionColumn] = value;
                }
            }
            
            public System.Byte[] UltimaModificacion {
                get {
                    try {
                        return ((System.Byte[])(this[this.tabletfi_AuditoriaControlCajas.UltimaModificacionColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletfi_AuditoriaControlCajas.UltimaModificacionColumn] = value;
                }
            }
            
            public long IdConexionUltimaModificacion {
                get {
                    try {
                        return ((long)(this[this.tabletfi_AuditoriaControlCajas.IdConexionUltimaModificacionColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletfi_AuditoriaControlCajas.IdConexionUltimaModificacionColumn] = value;
                }
            }
            
            public System.Guid RowId {
                get {
                    try {
                        return ((System.Guid)(this[this.tabletfi_AuditoriaControlCajas.RowIdColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletfi_AuditoriaControlCajas.RowIdColumn] = value;
                }
            }
            
            public bool IsFechaNull() {
                return this.IsNull(this.tabletfi_AuditoriaControlCajas.FechaColumn);
            }
            
            public void SetFechaNull() {
                this[this.tabletfi_AuditoriaControlCajas.FechaColumn] = System.Convert.DBNull;
            }
            
            public bool IsFechaCierreNull() {
                return this.IsNull(this.tabletfi_AuditoriaControlCajas.FechaCierreColumn);
            }
            
            public void SetFechaCierreNull() {
                this[this.tabletfi_AuditoriaControlCajas.FechaCierreColumn] = System.Convert.DBNull;
            }
            
            public bool IsCajeroNull() {
                return this.IsNull(this.tabletfi_AuditoriaControlCajas.CajeroColumn);
            }
            
            public void SetCajeroNull() {
                this[this.tabletfi_AuditoriaControlCajas.CajeroColumn] = System.Convert.DBNull;
            }
            
            public bool IsIdInstanciaCajaNull() {
                return this.IsNull(this.tabletfi_AuditoriaControlCajas.IdInstanciaCajaColumn);
            }
            
            public void SetIdInstanciaCajaNull() {
                this[this.tabletfi_AuditoriaControlCajas.IdInstanciaCajaColumn] = System.Convert.DBNull;
            }
            
            public bool IsTiempoNull() {
                return this.IsNull(this.tabletfi_AuditoriaControlCajas.TiempoColumn);
            }
            
            public void SetTiempoNull() {
                this[this.tabletfi_AuditoriaControlCajas.TiempoColumn] = System.Convert.DBNull;
            }
            
            public bool IsAuditadoSupervisorNull() {
                return this.IsNull(this.tabletfi_AuditoriaControlCajas.AuditadoSupervisorColumn);
            }
            
            public void SetAuditadoSupervisorNull() {
                this[this.tabletfi_AuditoriaControlCajas.AuditadoSupervisorColumn] = System.Convert.DBNull;
            }
            
            public bool IsAuditadoGerenteNull() {
                return this.IsNull(this.tabletfi_AuditoriaControlCajas.AuditadoGerenteColumn);
            }
            
            public void SetAuditadoGerenteNull() {
                this[this.tabletfi_AuditoriaControlCajas.AuditadoGerenteColumn] = System.Convert.DBNull;
            }
            
            public bool IsEsCierreNull() {
                return this.IsNull(this.tabletfi_AuditoriaControlCajas.EsCierreColumn);
            }
            
            public void SetEsCierreNull() {
                this[this.tabletfi_AuditoriaControlCajas.EsCierreColumn] = System.Convert.DBNull;
            }
            
            public bool IsFechaCreacionNull() {
                return this.IsNull(this.tabletfi_AuditoriaControlCajas.FechaCreacionColumn);
            }
            
            public void SetFechaCreacionNull() {
                this[this.tabletfi_AuditoriaControlCajas.FechaCreacionColumn] = System.Convert.DBNull;
            }
            
            public bool IsUltimaModificacionNull() {
                return this.IsNull(this.tabletfi_AuditoriaControlCajas.UltimaModificacionColumn);
            }
            
            public void SetUltimaModificacionNull() {
                this[this.tabletfi_AuditoriaControlCajas.UltimaModificacionColumn] = System.Convert.DBNull;
            }
            
            public bool IsIdConexionUltimaModificacionNull() {
                return this.IsNull(this.tabletfi_AuditoriaControlCajas.IdConexionUltimaModificacionColumn);
            }
            
            public void SetIdConexionUltimaModificacionNull() {
                this[this.tabletfi_AuditoriaControlCajas.IdConexionUltimaModificacionColumn] = System.Convert.DBNull;
            }
            
            public bool IsRowIdNull() {
                return this.IsNull(this.tabletfi_AuditoriaControlCajas.RowIdColumn);
            }
            
            public void SetRowIdNull() {
                this[this.tabletfi_AuditoriaControlCajas.RowIdColumn] = System.Convert.DBNull;
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class tfi_AuditoriaControlCajasRowChangeEvent : EventArgs {
            
            private tfi_AuditoriaControlCajasRow eventRow;
            
            private DataRowAction eventAction;
            
            public tfi_AuditoriaControlCajasRowChangeEvent(tfi_AuditoriaControlCajasRow row, DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            public tfi_AuditoriaControlCajasRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            public DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
