//------------------------------------------------------------------------------
// <autogenerated>
//     This code was generated by a tool.
//     Runtime Version: 1.1.4322.2032
//
//     Changes to this file may cause incorrect behavior and will be lost if 
//     the code is regenerated.
// </autogenerated>
//------------------------------------------------------------------------------

namespace mz.erp.commontypes.data {
    using System;
    using System.Data;
    using System.Xml;
    using System.Runtime.Serialization;
    
    
    [Serializable()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Diagnostics.DebuggerStepThrough()]
    [System.ComponentModel.ToolboxItem(true)]
    public class tsa_ComprobanteDetalleImpuestosDataset : DataSet {
        
        private tsa_ComprobanteDetalleImpuestosDataTable tabletsa_ComprobanteDetalleImpuestos;
        
        public tsa_ComprobanteDetalleImpuestosDataset() {
            this.InitClass();
            System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            this.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        protected tsa_ComprobanteDetalleImpuestosDataset(SerializationInfo info, StreamingContext context) {
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((strSchema != null)) {
                DataSet ds = new DataSet();
                ds.ReadXmlSchema(new XmlTextReader(new System.IO.StringReader(strSchema)));
                if ((ds.Tables["tsa_ComprobanteDetalleImpuestos"] != null)) {
                    this.Tables.Add(new tsa_ComprobanteDetalleImpuestosDataTable(ds.Tables["tsa_ComprobanteDetalleImpuestos"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.InitClass();
            }
            this.GetSerializationData(info, context);
            System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            this.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public tsa_ComprobanteDetalleImpuestosDataTable tsa_ComprobanteDetalleImpuestos {
            get {
                return this.tabletsa_ComprobanteDetalleImpuestos;
            }
        }
        
        public override DataSet Clone() {
            tsa_ComprobanteDetalleImpuestosDataset cln = ((tsa_ComprobanteDetalleImpuestosDataset)(base.Clone()));
            cln.InitVars();
            return cln;
        }
        
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        protected override void ReadXmlSerializable(XmlReader reader) {
            this.Reset();
            DataSet ds = new DataSet();
            ds.ReadXml(reader);
            if ((ds.Tables["tsa_ComprobanteDetalleImpuestos"] != null)) {
                this.Tables.Add(new tsa_ComprobanteDetalleImpuestosDataTable(ds.Tables["tsa_ComprobanteDetalleImpuestos"]));
            }
            this.DataSetName = ds.DataSetName;
            this.Prefix = ds.Prefix;
            this.Namespace = ds.Namespace;
            this.Locale = ds.Locale;
            this.CaseSensitive = ds.CaseSensitive;
            this.EnforceConstraints = ds.EnforceConstraints;
            this.Merge(ds, false, System.Data.MissingSchemaAction.Add);
            this.InitVars();
        }
        
        protected override System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            System.IO.MemoryStream stream = new System.IO.MemoryStream();
            this.WriteXmlSchema(new XmlTextWriter(stream, null));
            stream.Position = 0;
            return System.Xml.Schema.XmlSchema.Read(new XmlTextReader(stream), null);
        }
        
        internal void InitVars() {
            this.tabletsa_ComprobanteDetalleImpuestos = ((tsa_ComprobanteDetalleImpuestosDataTable)(this.Tables["tsa_ComprobanteDetalleImpuestos"]));
            if ((this.tabletsa_ComprobanteDetalleImpuestos != null)) {
                this.tabletsa_ComprobanteDetalleImpuestos.InitVars();
            }
        }
        
        private void InitClass() {
            this.DataSetName = "tsa_ComprobanteDetalleImpuestosDataset";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/VariablesDataset.xsd";
            this.Locale = new System.Globalization.CultureInfo("en-US");
            this.CaseSensitive = false;
            this.EnforceConstraints = true;
            this.tabletsa_ComprobanteDetalleImpuestos = new tsa_ComprobanteDetalleImpuestosDataTable();
            this.Tables.Add(this.tabletsa_ComprobanteDetalleImpuestos);
        }
        
        private bool ShouldSerializetsa_ComprobanteDetalleImpuestos() {
            return false;
        }
        
        private void SchemaChanged(object sender, System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        public delegate void tsa_ComprobanteDetalleImpuestosRowChangeEventHandler(object sender, tsa_ComprobanteDetalleImpuestosRowChangeEvent e);
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class tsa_ComprobanteDetalleImpuestosDataTable : DataTable, System.Collections.IEnumerable {
            
            private DataColumn columnIdComprobante;
            
            private DataColumn columnOrdinal;
            
            private DataColumn columnIdImpuesto;
            
            private DataColumn columnIdEmpresa;
            
            private DataColumn columnIdSucursal;
            
            private DataColumn columnIdTipoDeComprobante;
            
            private DataColumn columnFecha;
            
            private DataColumn columnNumero;
            
            private DataColumn columnAplicadoA;
            
            private DataColumn columnValor;
            
            private DataColumn columnIdMonedaOrigen;
            
            private DataColumn columnIdMonedaCierre;
            
            private DataColumn columnIdCotizacionCierre;
            
            private DataColumn columnFechaCreacion;
            
            private DataColumn columnIdConexionCreacion;
            
            private DataColumn columnUltimaModificacion;
            
            private DataColumn columnIdConexionUltimaModificacion;
            
            private DataColumn columnIdReservado;
            
            private DataColumn columnRowId;
            
            private DataColumn columnRowIdGenerado;
            
            internal tsa_ComprobanteDetalleImpuestosDataTable() : 
                    base("tsa_ComprobanteDetalleImpuestos") {
                this.InitClass();
            }
            
            internal tsa_ComprobanteDetalleImpuestosDataTable(DataTable table) : 
                    base(table.TableName) {
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
                this.DisplayExpression = table.DisplayExpression;
            }
            
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            internal DataColumn IdComprobanteColumn {
                get {
                    return this.columnIdComprobante;
                }
            }
            
            internal DataColumn OrdinalColumn {
                get {
                    return this.columnOrdinal;
                }
            }
            
            internal DataColumn IdImpuestoColumn {
                get {
                    return this.columnIdImpuesto;
                }
            }
            
            internal DataColumn IdEmpresaColumn {
                get {
                    return this.columnIdEmpresa;
                }
            }
            
            internal DataColumn IdSucursalColumn {
                get {
                    return this.columnIdSucursal;
                }
            }
            
            internal DataColumn IdTipoDeComprobanteColumn {
                get {
                    return this.columnIdTipoDeComprobante;
                }
            }
            
            internal DataColumn FechaColumn {
                get {
                    return this.columnFecha;
                }
            }
            
            internal DataColumn NumeroColumn {
                get {
                    return this.columnNumero;
                }
            }
            
            internal DataColumn AplicadoAColumn {
                get {
                    return this.columnAplicadoA;
                }
            }
            
            internal DataColumn ValorColumn {
                get {
                    return this.columnValor;
                }
            }
            
            internal DataColumn IdMonedaOrigenColumn {
                get {
                    return this.columnIdMonedaOrigen;
                }
            }
            
            internal DataColumn IdMonedaCierreColumn {
                get {
                    return this.columnIdMonedaCierre;
                }
            }
            
            internal DataColumn IdCotizacionCierreColumn {
                get {
                    return this.columnIdCotizacionCierre;
                }
            }
            
            internal DataColumn FechaCreacionColumn {
                get {
                    return this.columnFechaCreacion;
                }
            }
            
            internal DataColumn IdConexionCreacionColumn {
                get {
                    return this.columnIdConexionCreacion;
                }
            }
            
            internal DataColumn UltimaModificacionColumn {
                get {
                    return this.columnUltimaModificacion;
                }
            }
            
            internal DataColumn IdConexionUltimaModificacionColumn {
                get {
                    return this.columnIdConexionUltimaModificacion;
                }
            }
            
            internal DataColumn IdReservadoColumn {
                get {
                    return this.columnIdReservado;
                }
            }
            
            internal DataColumn RowIdColumn {
                get {
                    return this.columnRowId;
                }
            }
            
            internal DataColumn RowIdGeneradoColumn {
                get {
                    return this.columnRowIdGenerado;
                }
            }
            
            public tsa_ComprobanteDetalleImpuestosRow this[int index] {
                get {
                    return ((tsa_ComprobanteDetalleImpuestosRow)(this.Rows[index]));
                }
            }
            
            public event tsa_ComprobanteDetalleImpuestosRowChangeEventHandler tsa_ComprobanteDetalleImpuestosRowChanged;
            
            public event tsa_ComprobanteDetalleImpuestosRowChangeEventHandler tsa_ComprobanteDetalleImpuestosRowChanging;
            
            public event tsa_ComprobanteDetalleImpuestosRowChangeEventHandler tsa_ComprobanteDetalleImpuestosRowDeleted;
            
            public event tsa_ComprobanteDetalleImpuestosRowChangeEventHandler tsa_ComprobanteDetalleImpuestosRowDeleting;
            
            public void Addtsa_ComprobanteDetalleImpuestosRow(tsa_ComprobanteDetalleImpuestosRow row) {
                this.Rows.Add(row);
            }
            
            public tsa_ComprobanteDetalleImpuestosRow Addtsa_ComprobanteDetalleImpuestosRow(
                        string IdComprobante, 
                        long Ordinal, 
                        string IdImpuesto, 
                        long IdEmpresa, 
                        long IdSucursal, 
                        string IdTipoDeComprobante, 
                        System.DateTime Fecha, 
                        string Numero, 
                        string AplicadoA, 
                        System.Decimal Valor, 
                        string IdMonedaOrigen, 
                        string IdMonedaCierre, 
                        string IdCotizacionCierre, 
                        System.DateTime FechaCreacion, 
                        long IdConexionCreacion, 
                        System.Byte[] UltimaModificacion, 
                        long IdConexionUltimaModificacion, 
                        long IdReservado, 
                        System.Guid RowId, 
                        string RowIdGenerado) {
                tsa_ComprobanteDetalleImpuestosRow rowtsa_ComprobanteDetalleImpuestosRow = ((tsa_ComprobanteDetalleImpuestosRow)(this.NewRow()));
                rowtsa_ComprobanteDetalleImpuestosRow.ItemArray = new object[] {
                        IdComprobante,
                        Ordinal,
                        IdImpuesto,
                        IdEmpresa,
                        IdSucursal,
                        IdTipoDeComprobante,
                        Fecha,
                        Numero,
                        AplicadoA,
                        Valor,
                        IdMonedaOrigen,
                        IdMonedaCierre,
                        IdCotizacionCierre,
                        FechaCreacion,
                        IdConexionCreacion,
                        UltimaModificacion,
                        IdConexionUltimaModificacion,
                        IdReservado,
                        RowId,
                        RowIdGenerado};
                this.Rows.Add(rowtsa_ComprobanteDetalleImpuestosRow);
                return rowtsa_ComprobanteDetalleImpuestosRow;
            }
            
            public tsa_ComprobanteDetalleImpuestosRow FindByIdComprobanteOrdinalIdImpuesto(string IdComprobante, long Ordinal, string IdImpuesto) {
                return ((tsa_ComprobanteDetalleImpuestosRow)(this.Rows.Find(new object[] {
                            IdComprobante,
                            Ordinal,
                            IdImpuesto})));
            }
            
            public System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            public override DataTable Clone() {
                tsa_ComprobanteDetalleImpuestosDataTable cln = ((tsa_ComprobanteDetalleImpuestosDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            protected override DataTable CreateInstance() {
                return new tsa_ComprobanteDetalleImpuestosDataTable();
            }
            
            internal void InitVars() {
                this.columnIdComprobante = this.Columns["IdComprobante"];
                this.columnOrdinal = this.Columns["Ordinal"];
                this.columnIdImpuesto = this.Columns["IdImpuesto"];
                this.columnIdEmpresa = this.Columns["IdEmpresa"];
                this.columnIdSucursal = this.Columns["IdSucursal"];
                this.columnIdTipoDeComprobante = this.Columns["IdTipoDeComprobante"];
                this.columnFecha = this.Columns["Fecha"];
                this.columnNumero = this.Columns["Numero"];
                this.columnAplicadoA = this.Columns["AplicadoA"];
                this.columnValor = this.Columns["Valor"];
                this.columnIdMonedaOrigen = this.Columns["IdMonedaOrigen"];
                this.columnIdMonedaCierre = this.Columns["IdMonedaCierre"];
                this.columnIdCotizacionCierre = this.Columns["IdCotizacionCierre"];
                this.columnFechaCreacion = this.Columns["FechaCreacion"];
                this.columnIdConexionCreacion = this.Columns["IdConexionCreacion"];
                this.columnUltimaModificacion = this.Columns["UltimaModificacion"];
                this.columnIdConexionUltimaModificacion = this.Columns["IdConexionUltimaModificacion"];
                this.columnIdReservado = this.Columns["IdReservado"];
                this.columnRowId = this.Columns["RowId"];
                this.columnRowIdGenerado = this.Columns["RowIdGenerado"];
            }
            
            private void InitClass() {
                this.columnIdComprobante = new DataColumn("IdComprobante", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdComprobante);
                this.columnOrdinal = new DataColumn("Ordinal", typeof(long), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnOrdinal);
                this.columnIdImpuesto = new DataColumn("IdImpuesto", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdImpuesto);
                this.columnIdEmpresa = new DataColumn("IdEmpresa", typeof(long), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdEmpresa);
                this.columnIdSucursal = new DataColumn("IdSucursal", typeof(long), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdSucursal);
                this.columnIdTipoDeComprobante = new DataColumn("IdTipoDeComprobante", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdTipoDeComprobante);
                this.columnFecha = new DataColumn("Fecha", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnFecha);
                this.columnNumero = new DataColumn("Numero", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnNumero);
                this.columnAplicadoA = new DataColumn("AplicadoA", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnAplicadoA);
                this.columnValor = new DataColumn("Valor", typeof(System.Decimal), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnValor);
                this.columnIdMonedaOrigen = new DataColumn("IdMonedaOrigen", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdMonedaOrigen);
                this.columnIdMonedaCierre = new DataColumn("IdMonedaCierre", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdMonedaCierre);
                this.columnIdCotizacionCierre = new DataColumn("IdCotizacionCierre", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdCotizacionCierre);
                this.columnFechaCreacion = new DataColumn("FechaCreacion", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnFechaCreacion);
                this.columnIdConexionCreacion = new DataColumn("IdConexionCreacion", typeof(long), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdConexionCreacion);
                this.columnUltimaModificacion = new DataColumn("UltimaModificacion", typeof(System.Byte[]), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnUltimaModificacion);
                this.columnIdConexionUltimaModificacion = new DataColumn("IdConexionUltimaModificacion", typeof(long), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdConexionUltimaModificacion);
                this.columnIdReservado = new DataColumn("IdReservado", typeof(long), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdReservado);
                this.columnRowId = new DataColumn("RowId", typeof(System.Guid), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnRowId);
                this.columnRowIdGenerado = new DataColumn("RowIdGenerado", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnRowIdGenerado);
                this.Constraints.Add(new UniqueConstraint("VariablesDatasetKey1", new DataColumn[] {
                                this.columnIdComprobante,
                                this.columnOrdinal,
                                this.columnIdImpuesto}, true));
                this.columnIdComprobante.AllowDBNull = false;
                this.columnOrdinal.AllowDBNull = false;
                this.columnIdImpuesto.AllowDBNull = false;
                this.columnIdEmpresa.AllowDBNull = false;
                this.columnIdSucursal.AllowDBNull = false;
                this.columnUltimaModificacion.ReadOnly = true;
            }
            
            public tsa_ComprobanteDetalleImpuestosRow Newtsa_ComprobanteDetalleImpuestosRow() {
                return ((tsa_ComprobanteDetalleImpuestosRow)(this.NewRow()));
            }
            
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder) {
                return new tsa_ComprobanteDetalleImpuestosRow(builder);
            }
            
            protected override System.Type GetRowType() {
                return typeof(tsa_ComprobanteDetalleImpuestosRow);
            }
            
            protected override void OnRowChanged(DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.tsa_ComprobanteDetalleImpuestosRowChanged != null)) {
                    this.tsa_ComprobanteDetalleImpuestosRowChanged(this, new tsa_ComprobanteDetalleImpuestosRowChangeEvent(((tsa_ComprobanteDetalleImpuestosRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowChanging(DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.tsa_ComprobanteDetalleImpuestosRowChanging != null)) {
                    this.tsa_ComprobanteDetalleImpuestosRowChanging(this, new tsa_ComprobanteDetalleImpuestosRowChangeEvent(((tsa_ComprobanteDetalleImpuestosRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleted(DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.tsa_ComprobanteDetalleImpuestosRowDeleted != null)) {
                    this.tsa_ComprobanteDetalleImpuestosRowDeleted(this, new tsa_ComprobanteDetalleImpuestosRowChangeEvent(((tsa_ComprobanteDetalleImpuestosRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleting(DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.tsa_ComprobanteDetalleImpuestosRowDeleting != null)) {
                    this.tsa_ComprobanteDetalleImpuestosRowDeleting(this, new tsa_ComprobanteDetalleImpuestosRowChangeEvent(((tsa_ComprobanteDetalleImpuestosRow)(e.Row)), e.Action));
                }
            }
            
            public void Removetsa_ComprobanteDetalleImpuestosRow(tsa_ComprobanteDetalleImpuestosRow row) {
                this.Rows.Remove(row);
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class tsa_ComprobanteDetalleImpuestosRow : DataRow {
            
            private tsa_ComprobanteDetalleImpuestosDataTable tabletsa_ComprobanteDetalleImpuestos;
            
            internal tsa_ComprobanteDetalleImpuestosRow(DataRowBuilder rb) : 
                    base(rb) {
                this.tabletsa_ComprobanteDetalleImpuestos = ((tsa_ComprobanteDetalleImpuestosDataTable)(this.Table));
            }
            
            public string IdComprobante {
                get {
                    return ((string)(this[this.tabletsa_ComprobanteDetalleImpuestos.IdComprobanteColumn]));
                }
                set {
                    this[this.tabletsa_ComprobanteDetalleImpuestos.IdComprobanteColumn] = value;
                }
            }
            
            public long Ordinal {
                get {
                    return ((long)(this[this.tabletsa_ComprobanteDetalleImpuestos.OrdinalColumn]));
                }
                set {
                    this[this.tabletsa_ComprobanteDetalleImpuestos.OrdinalColumn] = value;
                }
            }
            
            public string IdImpuesto {
                get {
                    return ((string)(this[this.tabletsa_ComprobanteDetalleImpuestos.IdImpuestoColumn]));
                }
                set {
                    this[this.tabletsa_ComprobanteDetalleImpuestos.IdImpuestoColumn] = value;
                }
            }
            
            public long IdEmpresa {
                get {
                    return ((long)(this[this.tabletsa_ComprobanteDetalleImpuestos.IdEmpresaColumn]));
                }
                set {
                    this[this.tabletsa_ComprobanteDetalleImpuestos.IdEmpresaColumn] = value;
                }
            }
            
            public long IdSucursal {
                get {
                    return ((long)(this[this.tabletsa_ComprobanteDetalleImpuestos.IdSucursalColumn]));
                }
                set {
                    this[this.tabletsa_ComprobanteDetalleImpuestos.IdSucursalColumn] = value;
                }
            }
            
            public string IdTipoDeComprobante {
                get {
                    try {
                        return ((string)(this[this.tabletsa_ComprobanteDetalleImpuestos.IdTipoDeComprobanteColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletsa_ComprobanteDetalleImpuestos.IdTipoDeComprobanteColumn] = value;
                }
            }
            
            public System.DateTime Fecha {
                get {
                    try {
                        return ((System.DateTime)(this[this.tabletsa_ComprobanteDetalleImpuestos.FechaColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletsa_ComprobanteDetalleImpuestos.FechaColumn] = value;
                }
            }
            
            public string Numero {
                get {
                    try {
                        return ((string)(this[this.tabletsa_ComprobanteDetalleImpuestos.NumeroColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletsa_ComprobanteDetalleImpuestos.NumeroColumn] = value;
                }
            }
            
            public string AplicadoA {
                get {
                    try {
                        return ((string)(this[this.tabletsa_ComprobanteDetalleImpuestos.AplicadoAColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletsa_ComprobanteDetalleImpuestos.AplicadoAColumn] = value;
                }
            }
            
            public System.Decimal Valor {
                get {
                    try {
                        return ((System.Decimal)(this[this.tabletsa_ComprobanteDetalleImpuestos.ValorColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletsa_ComprobanteDetalleImpuestos.ValorColumn] = value;
                }
            }
            
            public string IdMonedaOrigen {
                get {
                    try {
                        return ((string)(this[this.tabletsa_ComprobanteDetalleImpuestos.IdMonedaOrigenColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletsa_ComprobanteDetalleImpuestos.IdMonedaOrigenColumn] = value;
                }
            }
            
            public string IdMonedaCierre {
                get {
                    try {
                        return ((string)(this[this.tabletsa_ComprobanteDetalleImpuestos.IdMonedaCierreColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletsa_ComprobanteDetalleImpuestos.IdMonedaCierreColumn] = value;
                }
            }
            
            public string IdCotizacionCierre {
                get {
                    try {
                        return ((string)(this[this.tabletsa_ComprobanteDetalleImpuestos.IdCotizacionCierreColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletsa_ComprobanteDetalleImpuestos.IdCotizacionCierreColumn] = value;
                }
            }
            
            public System.DateTime FechaCreacion {
                get {
                    try {
                        return ((System.DateTime)(this[this.tabletsa_ComprobanteDetalleImpuestos.FechaCreacionColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletsa_ComprobanteDetalleImpuestos.FechaCreacionColumn] = value;
                }
            }
            
            public long IdConexionCreacion {
                get {
                    try {
                        return ((long)(this[this.tabletsa_ComprobanteDetalleImpuestos.IdConexionCreacionColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletsa_ComprobanteDetalleImpuestos.IdConexionCreacionColumn] = value;
                }
            }
            
            public System.Byte[] UltimaModificacion {
                get {
                    try {
                        return ((System.Byte[])(this[this.tabletsa_ComprobanteDetalleImpuestos.UltimaModificacionColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletsa_ComprobanteDetalleImpuestos.UltimaModificacionColumn] = value;
                }
            }
            
            public long IdConexionUltimaModificacion {
                get {
                    try {
                        return ((long)(this[this.tabletsa_ComprobanteDetalleImpuestos.IdConexionUltimaModificacionColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletsa_ComprobanteDetalleImpuestos.IdConexionUltimaModificacionColumn] = value;
                }
            }
            
            public long IdReservado {
                get {
                    try {
                        return ((long)(this[this.tabletsa_ComprobanteDetalleImpuestos.IdReservadoColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletsa_ComprobanteDetalleImpuestos.IdReservadoColumn] = value;
                }
            }
            
            public System.Guid RowId {
                get {
                    try {
                        return ((System.Guid)(this[this.tabletsa_ComprobanteDetalleImpuestos.RowIdColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletsa_ComprobanteDetalleImpuestos.RowIdColumn] = value;
                }
            }
            
            public string RowIdGenerado {
                get {
                    try {
                        return ((string)(this[this.tabletsa_ComprobanteDetalleImpuestos.RowIdGeneradoColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletsa_ComprobanteDetalleImpuestos.RowIdGeneradoColumn] = value;
                }
            }
            
            public bool IsIdTipoDeComprobanteNull() {
                return this.IsNull(this.tabletsa_ComprobanteDetalleImpuestos.IdTipoDeComprobanteColumn);
            }
            
            public void SetIdTipoDeComprobanteNull() {
                this[this.tabletsa_ComprobanteDetalleImpuestos.IdTipoDeComprobanteColumn] = System.Convert.DBNull;
            }
            
            public bool IsFechaNull() {
                return this.IsNull(this.tabletsa_ComprobanteDetalleImpuestos.FechaColumn);
            }
            
            public void SetFechaNull() {
                this[this.tabletsa_ComprobanteDetalleImpuestos.FechaColumn] = System.Convert.DBNull;
            }
            
            public bool IsNumeroNull() {
                return this.IsNull(this.tabletsa_ComprobanteDetalleImpuestos.NumeroColumn);
            }
            
            public void SetNumeroNull() {
                this[this.tabletsa_ComprobanteDetalleImpuestos.NumeroColumn] = System.Convert.DBNull;
            }
            
            public bool IsAplicadoANull() {
                return this.IsNull(this.tabletsa_ComprobanteDetalleImpuestos.AplicadoAColumn);
            }
            
            public void SetAplicadoANull() {
                this[this.tabletsa_ComprobanteDetalleImpuestos.AplicadoAColumn] = System.Convert.DBNull;
            }
            
            public bool IsValorNull() {
                return this.IsNull(this.tabletsa_ComprobanteDetalleImpuestos.ValorColumn);
            }
            
            public void SetValorNull() {
                this[this.tabletsa_ComprobanteDetalleImpuestos.ValorColumn] = System.Convert.DBNull;
            }
            
            public bool IsIdMonedaOrigenNull() {
                return this.IsNull(this.tabletsa_ComprobanteDetalleImpuestos.IdMonedaOrigenColumn);
            }
            
            public void SetIdMonedaOrigenNull() {
                this[this.tabletsa_ComprobanteDetalleImpuestos.IdMonedaOrigenColumn] = System.Convert.DBNull;
            }
            
            public bool IsIdMonedaCierreNull() {
                return this.IsNull(this.tabletsa_ComprobanteDetalleImpuestos.IdMonedaCierreColumn);
            }
            
            public void SetIdMonedaCierreNull() {
                this[this.tabletsa_ComprobanteDetalleImpuestos.IdMonedaCierreColumn] = System.Convert.DBNull;
            }
            
            public bool IsIdCotizacionCierreNull() {
                return this.IsNull(this.tabletsa_ComprobanteDetalleImpuestos.IdCotizacionCierreColumn);
            }
            
            public void SetIdCotizacionCierreNull() {
                this[this.tabletsa_ComprobanteDetalleImpuestos.IdCotizacionCierreColumn] = System.Convert.DBNull;
            }
            
            public bool IsFechaCreacionNull() {
                return this.IsNull(this.tabletsa_ComprobanteDetalleImpuestos.FechaCreacionColumn);
            }
            
            public void SetFechaCreacionNull() {
                this[this.tabletsa_ComprobanteDetalleImpuestos.FechaCreacionColumn] = System.Convert.DBNull;
            }
            
            public bool IsIdConexionCreacionNull() {
                return this.IsNull(this.tabletsa_ComprobanteDetalleImpuestos.IdConexionCreacionColumn);
            }
            
            public void SetIdConexionCreacionNull() {
                this[this.tabletsa_ComprobanteDetalleImpuestos.IdConexionCreacionColumn] = System.Convert.DBNull;
            }
            
            public bool IsUltimaModificacionNull() {
                return this.IsNull(this.tabletsa_ComprobanteDetalleImpuestos.UltimaModificacionColumn);
            }
            
            public void SetUltimaModificacionNull() {
                this[this.tabletsa_ComprobanteDetalleImpuestos.UltimaModificacionColumn] = System.Convert.DBNull;
            }
            
            public bool IsIdConexionUltimaModificacionNull() {
                return this.IsNull(this.tabletsa_ComprobanteDetalleImpuestos.IdConexionUltimaModificacionColumn);
            }
            
            public void SetIdConexionUltimaModificacionNull() {
                this[this.tabletsa_ComprobanteDetalleImpuestos.IdConexionUltimaModificacionColumn] = System.Convert.DBNull;
            }
            
            public bool IsIdReservadoNull() {
                return this.IsNull(this.tabletsa_ComprobanteDetalleImpuestos.IdReservadoColumn);
            }
            
            public void SetIdReservadoNull() {
                this[this.tabletsa_ComprobanteDetalleImpuestos.IdReservadoColumn] = System.Convert.DBNull;
            }
            
            public bool IsRowIdNull() {
                return this.IsNull(this.tabletsa_ComprobanteDetalleImpuestos.RowIdColumn);
            }
            
            public void SetRowIdNull() {
                this[this.tabletsa_ComprobanteDetalleImpuestos.RowIdColumn] = System.Convert.DBNull;
            }
            
            public bool IsRowIdGeneradoNull() {
                return this.IsNull(this.tabletsa_ComprobanteDetalleImpuestos.RowIdGeneradoColumn);
            }
            
            public void SetRowIdGeneradoNull() {
                this[this.tabletsa_ComprobanteDetalleImpuestos.RowIdGeneradoColumn] = System.Convert.DBNull;
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class tsa_ComprobanteDetalleImpuestosRowChangeEvent : EventArgs {
            
            private tsa_ComprobanteDetalleImpuestosRow eventRow;
            
            private DataRowAction eventAction;
            
            public tsa_ComprobanteDetalleImpuestosRowChangeEvent(tsa_ComprobanteDetalleImpuestosRow row, DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            public tsa_ComprobanteDetalleImpuestosRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            public DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
