//------------------------------------------------------------------------------
// <autogenerated>
//     This code was generated by a tool.
//     Runtime Version: 1.1.4322.2407
//
//     Changes to this file may cause incorrect behavior and will be lost if 
//     the code is regenerated.
// </autogenerated>
//------------------------------------------------------------------------------

namespace mz.erp.commontypes.data {
    using System;
    using System.Data;
    using System.Xml;
    using System.Runtime.Serialization;
    
    
    [Serializable()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Diagnostics.DebuggerStepThrough()]
    [System.ComponentModel.ToolboxItem(true)]
    public class tlg_ResponsablesDepositosSeccionesDataset : DataSet {
        
        private tlg_ResponsablesDepositosSeccionesDataTable tabletlg_ResponsablesDepositosSecciones;
        
        public tlg_ResponsablesDepositosSeccionesDataset() {
            this.InitClass();
            System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            this.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        protected tlg_ResponsablesDepositosSeccionesDataset(SerializationInfo info, StreamingContext context) {
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((strSchema != null)) {
                DataSet ds = new DataSet();
                ds.ReadXmlSchema(new XmlTextReader(new System.IO.StringReader(strSchema)));
                if ((ds.Tables["tlg_ResponsablesDepositosSecciones"] != null)) {
                    this.Tables.Add(new tlg_ResponsablesDepositosSeccionesDataTable(ds.Tables["tlg_ResponsablesDepositosSecciones"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.InitClass();
            }
            this.GetSerializationData(info, context);
            System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            this.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public tlg_ResponsablesDepositosSeccionesDataTable tlg_ResponsablesDepositosSecciones {
            get {
                return this.tabletlg_ResponsablesDepositosSecciones;
            }
        }
        
        public override DataSet Clone() {
            tlg_ResponsablesDepositosSeccionesDataset cln = ((tlg_ResponsablesDepositosSeccionesDataset)(base.Clone()));
            cln.InitVars();
            return cln;
        }
        
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        protected override void ReadXmlSerializable(XmlReader reader) {
            this.Reset();
            DataSet ds = new DataSet();
            ds.ReadXml(reader);
            if ((ds.Tables["tlg_ResponsablesDepositosSecciones"] != null)) {
                this.Tables.Add(new tlg_ResponsablesDepositosSeccionesDataTable(ds.Tables["tlg_ResponsablesDepositosSecciones"]));
            }
            this.DataSetName = ds.DataSetName;
            this.Prefix = ds.Prefix;
            this.Namespace = ds.Namespace;
            this.Locale = ds.Locale;
            this.CaseSensitive = ds.CaseSensitive;
            this.EnforceConstraints = ds.EnforceConstraints;
            this.Merge(ds, false, System.Data.MissingSchemaAction.Add);
            this.InitVars();
        }
        
        protected override System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            System.IO.MemoryStream stream = new System.IO.MemoryStream();
            this.WriteXmlSchema(new XmlTextWriter(stream, null));
            stream.Position = 0;
            return System.Xml.Schema.XmlSchema.Read(new XmlTextReader(stream), null);
        }
        
        internal void InitVars() {
            this.tabletlg_ResponsablesDepositosSecciones = ((tlg_ResponsablesDepositosSeccionesDataTable)(this.Tables["tlg_ResponsablesDepositosSecciones"]));
            if ((this.tabletlg_ResponsablesDepositosSecciones != null)) {
                this.tabletlg_ResponsablesDepositosSecciones.InitVars();
            }
        }
        
        private void InitClass() {
            this.DataSetName = "tlg_ResponsablesDepositosSeccionesDataset";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/tlg_ResponsablesDepositosSecciones.xsd";
            this.Locale = new System.Globalization.CultureInfo("en-US");
            this.CaseSensitive = false;
            this.EnforceConstraints = true;
            this.tabletlg_ResponsablesDepositosSecciones = new tlg_ResponsablesDepositosSeccionesDataTable();
            this.Tables.Add(this.tabletlg_ResponsablesDepositosSecciones);
        }
        
        private bool ShouldSerializetlg_ResponsablesDepositosSecciones() {
            return false;
        }
        
        private void SchemaChanged(object sender, System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        public delegate void tlg_ResponsablesDepositosSeccionesRowChangeEventHandler(object sender, tlg_ResponsablesDepositosSeccionesRowChangeEvent e);
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class tlg_ResponsablesDepositosSeccionesDataTable : DataTable, System.Collections.IEnumerable {
            
            private DataColumn columnIdUsuario;
            
            private DataColumn columnIdDeposito;
            
            private DataColumn columnIdSeccion;
            
            private DataColumn columnActivo;
            
            private DataColumn columnFechaCreacion;
            
            private DataColumn columnIdConexionCreacion;
            
            private DataColumn columnUltimaModificacion;
            
            private DataColumn columnIdConexionUltimaModificacion;
            
            private DataColumn columnRowId;
            
            internal tlg_ResponsablesDepositosSeccionesDataTable() : 
                    base("tlg_ResponsablesDepositosSecciones") {
                this.InitClass();
            }
            
            internal tlg_ResponsablesDepositosSeccionesDataTable(DataTable table) : 
                    base(table.TableName) {
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
                this.DisplayExpression = table.DisplayExpression;
            }
            
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            internal DataColumn IdUsuarioColumn {
                get {
                    return this.columnIdUsuario;
                }
            }
            
            internal DataColumn IdDepositoColumn {
                get {
                    return this.columnIdDeposito;
                }
            }
            
            internal DataColumn IdSeccionColumn {
                get {
                    return this.columnIdSeccion;
                }
            }
            
            internal DataColumn ActivoColumn {
                get {
                    return this.columnActivo;
                }
            }
            
            internal DataColumn FechaCreacionColumn {
                get {
                    return this.columnFechaCreacion;
                }
            }
            
            internal DataColumn IdConexionCreacionColumn {
                get {
                    return this.columnIdConexionCreacion;
                }
            }
            
            internal DataColumn UltimaModificacionColumn {
                get {
                    return this.columnUltimaModificacion;
                }
            }
            
            internal DataColumn IdConexionUltimaModificacionColumn {
                get {
                    return this.columnIdConexionUltimaModificacion;
                }
            }
            
            internal DataColumn RowIdColumn {
                get {
                    return this.columnRowId;
                }
            }
            
            public tlg_ResponsablesDepositosSeccionesRow this[int index] {
                get {
                    return ((tlg_ResponsablesDepositosSeccionesRow)(this.Rows[index]));
                }
            }
            
            public event tlg_ResponsablesDepositosSeccionesRowChangeEventHandler tlg_ResponsablesDepositosSeccionesRowChanged;
            
            public event tlg_ResponsablesDepositosSeccionesRowChangeEventHandler tlg_ResponsablesDepositosSeccionesRowChanging;
            
            public event tlg_ResponsablesDepositosSeccionesRowChangeEventHandler tlg_ResponsablesDepositosSeccionesRowDeleted;
            
            public event tlg_ResponsablesDepositosSeccionesRowChangeEventHandler tlg_ResponsablesDepositosSeccionesRowDeleting;
            
            public void Addtlg_ResponsablesDepositosSeccionesRow(tlg_ResponsablesDepositosSeccionesRow row) {
                this.Rows.Add(row);
            }
            
            public tlg_ResponsablesDepositosSeccionesRow Addtlg_ResponsablesDepositosSeccionesRow(string IdUsuario, string IdDeposito, string IdSeccion, bool Activo, System.DateTime FechaCreacion, long IdConexionCreacion, System.Byte[] UltimaModificacion, long IdConexionUltimaModificacion, System.Guid RowId) {
                tlg_ResponsablesDepositosSeccionesRow rowtlg_ResponsablesDepositosSeccionesRow = ((tlg_ResponsablesDepositosSeccionesRow)(this.NewRow()));
                rowtlg_ResponsablesDepositosSeccionesRow.ItemArray = new object[] {
                        IdUsuario,
                        IdDeposito,
                        IdSeccion,
                        Activo,
                        FechaCreacion,
                        IdConexionCreacion,
                        UltimaModificacion,
                        IdConexionUltimaModificacion,
                        RowId};
                this.Rows.Add(rowtlg_ResponsablesDepositosSeccionesRow);
                return rowtlg_ResponsablesDepositosSeccionesRow;
            }
            
            public tlg_ResponsablesDepositosSeccionesRow FindByIdUsuarioIdDepositoIdSeccion(string IdUsuario, string IdDeposito, string IdSeccion) {
                return ((tlg_ResponsablesDepositosSeccionesRow)(this.Rows.Find(new object[] {
                            IdUsuario,
                            IdDeposito,
                            IdSeccion})));
            }
            
            public System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            public override DataTable Clone() {
                tlg_ResponsablesDepositosSeccionesDataTable cln = ((tlg_ResponsablesDepositosSeccionesDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            protected override DataTable CreateInstance() {
                return new tlg_ResponsablesDepositosSeccionesDataTable();
            }
            
            internal void InitVars() {
                this.columnIdUsuario = this.Columns["IdUsuario"];
                this.columnIdDeposito = this.Columns["IdDeposito"];
                this.columnIdSeccion = this.Columns["IdSeccion"];
                this.columnActivo = this.Columns["Activo"];
                this.columnFechaCreacion = this.Columns["FechaCreacion"];
                this.columnIdConexionCreacion = this.Columns["IdConexionCreacion"];
                this.columnUltimaModificacion = this.Columns["UltimaModificacion"];
                this.columnIdConexionUltimaModificacion = this.Columns["IdConexionUltimaModificacion"];
                this.columnRowId = this.Columns["RowId"];
            }
            
            private void InitClass() {
                this.columnIdUsuario = new DataColumn("IdUsuario", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdUsuario);
                this.columnIdDeposito = new DataColumn("IdDeposito", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdDeposito);
                this.columnIdSeccion = new DataColumn("IdSeccion", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdSeccion);
                this.columnActivo = new DataColumn("Activo", typeof(bool), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnActivo);
                this.columnFechaCreacion = new DataColumn("FechaCreacion", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnFechaCreacion);
                this.columnIdConexionCreacion = new DataColumn("IdConexionCreacion", typeof(long), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdConexionCreacion);
                this.columnUltimaModificacion = new DataColumn("UltimaModificacion", typeof(System.Byte[]), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnUltimaModificacion);
                this.columnIdConexionUltimaModificacion = new DataColumn("IdConexionUltimaModificacion", typeof(long), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdConexionUltimaModificacion);
                this.columnRowId = new DataColumn("RowId", typeof(System.Guid), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnRowId);
                this.Constraints.Add(new UniqueConstraint("tlg_ResponsablesDepositosSeccionesKey1", new DataColumn[] {
                                this.columnIdUsuario,
                                this.columnIdDeposito,
                                this.columnIdSeccion}, true));
                this.columnIdUsuario.AllowDBNull = false;
                this.columnIdDeposito.AllowDBNull = false;
                this.columnIdSeccion.AllowDBNull = false;
                this.columnIdConexionCreacion.AllowDBNull = false;
                this.columnUltimaModificacion.ReadOnly = true;
            }
            
            public tlg_ResponsablesDepositosSeccionesRow Newtlg_ResponsablesDepositosSeccionesRow() {
                return ((tlg_ResponsablesDepositosSeccionesRow)(this.NewRow()));
            }
            
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder) {
                return new tlg_ResponsablesDepositosSeccionesRow(builder);
            }
            
            protected override System.Type GetRowType() {
                return typeof(tlg_ResponsablesDepositosSeccionesRow);
            }
            
            protected override void OnRowChanged(DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.tlg_ResponsablesDepositosSeccionesRowChanged != null)) {
                    this.tlg_ResponsablesDepositosSeccionesRowChanged(this, new tlg_ResponsablesDepositosSeccionesRowChangeEvent(((tlg_ResponsablesDepositosSeccionesRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowChanging(DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.tlg_ResponsablesDepositosSeccionesRowChanging != null)) {
                    this.tlg_ResponsablesDepositosSeccionesRowChanging(this, new tlg_ResponsablesDepositosSeccionesRowChangeEvent(((tlg_ResponsablesDepositosSeccionesRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleted(DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.tlg_ResponsablesDepositosSeccionesRowDeleted != null)) {
                    this.tlg_ResponsablesDepositosSeccionesRowDeleted(this, new tlg_ResponsablesDepositosSeccionesRowChangeEvent(((tlg_ResponsablesDepositosSeccionesRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleting(DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.tlg_ResponsablesDepositosSeccionesRowDeleting != null)) {
                    this.tlg_ResponsablesDepositosSeccionesRowDeleting(this, new tlg_ResponsablesDepositosSeccionesRowChangeEvent(((tlg_ResponsablesDepositosSeccionesRow)(e.Row)), e.Action));
                }
            }
            
            public void Removetlg_ResponsablesDepositosSeccionesRow(tlg_ResponsablesDepositosSeccionesRow row) {
                this.Rows.Remove(row);
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class tlg_ResponsablesDepositosSeccionesRow : DataRow {
            
            private tlg_ResponsablesDepositosSeccionesDataTable tabletlg_ResponsablesDepositosSecciones;
            
            internal tlg_ResponsablesDepositosSeccionesRow(DataRowBuilder rb) : 
                    base(rb) {
                this.tabletlg_ResponsablesDepositosSecciones = ((tlg_ResponsablesDepositosSeccionesDataTable)(this.Table));
            }
            
            public string IdUsuario {
                get {
                    return ((string)(this[this.tabletlg_ResponsablesDepositosSecciones.IdUsuarioColumn]));
                }
                set {
                    this[this.tabletlg_ResponsablesDepositosSecciones.IdUsuarioColumn] = value;
                }
            }
            
            public string IdDeposito {
                get {
                    return ((string)(this[this.tabletlg_ResponsablesDepositosSecciones.IdDepositoColumn]));
                }
                set {
                    this[this.tabletlg_ResponsablesDepositosSecciones.IdDepositoColumn] = value;
                }
            }
            
            public string IdSeccion {
                get {
                    return ((string)(this[this.tabletlg_ResponsablesDepositosSecciones.IdSeccionColumn]));
                }
                set {
                    this[this.tabletlg_ResponsablesDepositosSecciones.IdSeccionColumn] = value;
                }
            }
            
            public bool Activo {
                get {
                    try {
                        return ((bool)(this[this.tabletlg_ResponsablesDepositosSecciones.ActivoColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletlg_ResponsablesDepositosSecciones.ActivoColumn] = value;
                }
            }
            
            public System.DateTime FechaCreacion {
                get {
                    try {
                        return ((System.DateTime)(this[this.tabletlg_ResponsablesDepositosSecciones.FechaCreacionColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletlg_ResponsablesDepositosSecciones.FechaCreacionColumn] = value;
                }
            }
            
            public long IdConexionCreacion {
                get {
                    return ((long)(this[this.tabletlg_ResponsablesDepositosSecciones.IdConexionCreacionColumn]));
                }
                set {
                    this[this.tabletlg_ResponsablesDepositosSecciones.IdConexionCreacionColumn] = value;
                }
            }
            
            public System.Byte[] UltimaModificacion {
                get {
                    try {
                        return ((System.Byte[])(this[this.tabletlg_ResponsablesDepositosSecciones.UltimaModificacionColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletlg_ResponsablesDepositosSecciones.UltimaModificacionColumn] = value;
                }
            }
            
            public long IdConexionUltimaModificacion {
                get {
                    try {
                        return ((long)(this[this.tabletlg_ResponsablesDepositosSecciones.IdConexionUltimaModificacionColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletlg_ResponsablesDepositosSecciones.IdConexionUltimaModificacionColumn] = value;
                }
            }
            
            public System.Guid RowId {
                get {
                    try {
                        return ((System.Guid)(this[this.tabletlg_ResponsablesDepositosSecciones.RowIdColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletlg_ResponsablesDepositosSecciones.RowIdColumn] = value;
                }
            }
            
            public bool IsActivoNull() {
                return this.IsNull(this.tabletlg_ResponsablesDepositosSecciones.ActivoColumn);
            }
            
            public void SetActivoNull() {
                this[this.tabletlg_ResponsablesDepositosSecciones.ActivoColumn] = System.Convert.DBNull;
            }
            
            public bool IsFechaCreacionNull() {
                return this.IsNull(this.tabletlg_ResponsablesDepositosSecciones.FechaCreacionColumn);
            }
            
            public void SetFechaCreacionNull() {
                this[this.tabletlg_ResponsablesDepositosSecciones.FechaCreacionColumn] = System.Convert.DBNull;
            }
            
            public bool IsUltimaModificacionNull() {
                return this.IsNull(this.tabletlg_ResponsablesDepositosSecciones.UltimaModificacionColumn);
            }
            
            public void SetUltimaModificacionNull() {
                this[this.tabletlg_ResponsablesDepositosSecciones.UltimaModificacionColumn] = System.Convert.DBNull;
            }
            
            public bool IsIdConexionUltimaModificacionNull() {
                return this.IsNull(this.tabletlg_ResponsablesDepositosSecciones.IdConexionUltimaModificacionColumn);
            }
            
            public void SetIdConexionUltimaModificacionNull() {
                this[this.tabletlg_ResponsablesDepositosSecciones.IdConexionUltimaModificacionColumn] = System.Convert.DBNull;
            }
            
            public bool IsRowIdNull() {
                return this.IsNull(this.tabletlg_ResponsablesDepositosSecciones.RowIdColumn);
            }
            
            public void SetRowIdNull() {
                this[this.tabletlg_ResponsablesDepositosSecciones.RowIdColumn] = System.Convert.DBNull;
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class tlg_ResponsablesDepositosSeccionesRowChangeEvent : EventArgs {
            
            private tlg_ResponsablesDepositosSeccionesRow eventRow;
            
            private DataRowAction eventAction;
            
            public tlg_ResponsablesDepositosSeccionesRowChangeEvent(tlg_ResponsablesDepositosSeccionesRow row, DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            public tlg_ResponsablesDepositosSeccionesRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            public DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
