//------------------------------------------------------------------------------
// <autogenerated>
//     This code was generated by a tool.
//     Runtime Version: 1.1.4322.573
//
//     Changes to this file may cause incorrect behavior and will be lost if 
//     the code is regenerated.
// </autogenerated>
//------------------------------------------------------------------------------

namespace mz.erp.commontypes.data {
    using System;
    using System.Data;
    using System.Xml;
    using System.Runtime.Serialization;
    
    
    [Serializable()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Diagnostics.DebuggerStepThrough()]
    [System.ComponentModel.ToolboxItem(true)]
    public class tsy_ConceptosExDataset : DataSet {
        
        private tsy_ConceptosDataTable tabletsy_Conceptos;
        
        public tsy_ConceptosExDataset() {
            this.InitClass();
            System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            this.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        protected tsy_ConceptosExDataset(SerializationInfo info, StreamingContext context) {
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((strSchema != null)) {
                DataSet ds = new DataSet();
                ds.ReadXmlSchema(new XmlTextReader(new System.IO.StringReader(strSchema)));
                if ((ds.Tables["tsy_Conceptos"] != null)) {
                    this.Tables.Add(new tsy_ConceptosDataTable(ds.Tables["tsy_Conceptos"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.InitClass();
            }
            this.GetSerializationData(info, context);
            System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            this.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public tsy_ConceptosDataTable tsy_Conceptos {
            get {
                return this.tabletsy_Conceptos;
            }
        }
        
        public override DataSet Clone() {
            tsy_ConceptosExDataset cln = ((tsy_ConceptosExDataset)(base.Clone()));
            cln.InitVars();
            return cln;
        }
        
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        protected override void ReadXmlSerializable(XmlReader reader) {
            this.Reset();
            DataSet ds = new DataSet();
            ds.ReadXml(reader);
            if ((ds.Tables["tsy_Conceptos"] != null)) {
                this.Tables.Add(new tsy_ConceptosDataTable(ds.Tables["tsy_Conceptos"]));
            }
            this.DataSetName = ds.DataSetName;
            this.Prefix = ds.Prefix;
            this.Namespace = ds.Namespace;
            this.Locale = ds.Locale;
            this.CaseSensitive = ds.CaseSensitive;
            this.EnforceConstraints = ds.EnforceConstraints;
            this.Merge(ds, false, System.Data.MissingSchemaAction.Add);
            this.InitVars();
        }
        
        protected override System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            System.IO.MemoryStream stream = new System.IO.MemoryStream();
            this.WriteXmlSchema(new XmlTextWriter(stream, null));
            stream.Position = 0;
            return System.Xml.Schema.XmlSchema.Read(new XmlTextReader(stream), null);
        }
        
        internal void InitVars() {
            this.tabletsy_Conceptos = ((tsy_ConceptosDataTable)(this.Tables["tsy_Conceptos"]));
            if ((this.tabletsy_Conceptos != null)) {
                this.tabletsy_Conceptos.InitVars();
            }
        }
        
        private void InitClass() {
            this.DataSetName = "tsy_ConceptosExDataset";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/tsy_ConceptosEx.xsd";
            this.Locale = new System.Globalization.CultureInfo("en-US");
            this.CaseSensitive = false;
            this.EnforceConstraints = true;
            this.tabletsy_Conceptos = new tsy_ConceptosDataTable();
            this.Tables.Add(this.tabletsy_Conceptos);
        }
        
        private bool ShouldSerializetsy_Conceptos() {
            return false;
        }
        
        private void SchemaChanged(object sender, System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        public delegate void tsy_ConceptosRowChangeEventHandler(object sender, tsy_ConceptosRowChangeEvent e);
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class tsy_ConceptosDataTable : DataTable, System.Collections.IEnumerable {
            
            private DataColumn columnIdConcepto;
            
            private DataColumn columnDescripcion;
            
            private DataColumn columnIdTipoConcepto;
            
            private DataColumn columnValor;
            
            private DataColumn columnIdEmpresa;
            
            internal tsy_ConceptosDataTable() : 
                    base("tsy_Conceptos") {
                this.InitClass();
            }
            
            internal tsy_ConceptosDataTable(DataTable table) : 
                    base(table.TableName) {
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
                this.DisplayExpression = table.DisplayExpression;
            }
            
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            internal DataColumn IdConceptoColumn {
                get {
                    return this.columnIdConcepto;
                }
            }
            
            internal DataColumn DescripcionColumn {
                get {
                    return this.columnDescripcion;
                }
            }
            
            internal DataColumn IdTipoConceptoColumn {
                get {
                    return this.columnIdTipoConcepto;
                }
            }
            
            internal DataColumn ValorColumn {
                get {
                    return this.columnValor;
                }
            }
            
            internal DataColumn IdEmpresaColumn {
                get {
                    return this.columnIdEmpresa;
                }
            }
            
            public tsy_ConceptosRow this[int index] {
                get {
                    return ((tsy_ConceptosRow)(this.Rows[index]));
                }
            }
            
            public event tsy_ConceptosRowChangeEventHandler tsy_ConceptosRowChanged;
            
            public event tsy_ConceptosRowChangeEventHandler tsy_ConceptosRowChanging;
            
            public event tsy_ConceptosRowChangeEventHandler tsy_ConceptosRowDeleted;
            
            public event tsy_ConceptosRowChangeEventHandler tsy_ConceptosRowDeleting;
            
            public void Addtsy_ConceptosRow(tsy_ConceptosRow row) {
                this.Rows.Add(row);
            }
            
            public tsy_ConceptosRow Addtsy_ConceptosRow(long IdConcepto, string Descripcion, long IdTipoConcepto, System.Decimal Valor, long IdEmpresa) {
                tsy_ConceptosRow rowtsy_ConceptosRow = ((tsy_ConceptosRow)(this.NewRow()));
                rowtsy_ConceptosRow.ItemArray = new object[] {
                        IdConcepto,
                        Descripcion,
                        IdTipoConcepto,
                        Valor,
                        IdEmpresa};
                this.Rows.Add(rowtsy_ConceptosRow);
                return rowtsy_ConceptosRow;
            }
            
            public tsy_ConceptosRow FindByIdConcepto(long IdConcepto) {
                return ((tsy_ConceptosRow)(this.Rows.Find(new object[] {
                            IdConcepto})));
            }
            
            public System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            public override DataTable Clone() {
                tsy_ConceptosDataTable cln = ((tsy_ConceptosDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            protected override DataTable CreateInstance() {
                return new tsy_ConceptosDataTable();
            }
            
            internal void InitVars() {
                this.columnIdConcepto = this.Columns["IdConcepto"];
                this.columnDescripcion = this.Columns["Descripcion"];
                this.columnIdTipoConcepto = this.Columns["IdTipoConcepto"];
                this.columnValor = this.Columns["Valor"];
                this.columnIdEmpresa = this.Columns["IdEmpresa"];
            }
            
            private void InitClass() {
                this.columnIdConcepto = new DataColumn("IdConcepto", typeof(long), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdConcepto);
                this.columnDescripcion = new DataColumn("Descripcion", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnDescripcion);
                this.columnIdTipoConcepto = new DataColumn("IdTipoConcepto", typeof(long), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdTipoConcepto);
                this.columnValor = new DataColumn("Valor", typeof(System.Decimal), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnValor);
                this.columnIdEmpresa = new DataColumn("IdEmpresa", typeof(long), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdEmpresa);
                this.Constraints.Add(new UniqueConstraint("tsy_ConceptosExKey1", new DataColumn[] {
                                this.columnIdConcepto}, true));
                this.columnIdConcepto.AllowDBNull = false;
                this.columnIdConcepto.Unique = true;
                this.columnDescripcion.AllowDBNull = false;
            }
            
            public tsy_ConceptosRow Newtsy_ConceptosRow() {
                return ((tsy_ConceptosRow)(this.NewRow()));
            }
            
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder) {
                return new tsy_ConceptosRow(builder);
            }
            
            protected override System.Type GetRowType() {
                return typeof(tsy_ConceptosRow);
            }
            
            protected override void OnRowChanged(DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.tsy_ConceptosRowChanged != null)) {
                    this.tsy_ConceptosRowChanged(this, new tsy_ConceptosRowChangeEvent(((tsy_ConceptosRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowChanging(DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.tsy_ConceptosRowChanging != null)) {
                    this.tsy_ConceptosRowChanging(this, new tsy_ConceptosRowChangeEvent(((tsy_ConceptosRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleted(DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.tsy_ConceptosRowDeleted != null)) {
                    this.tsy_ConceptosRowDeleted(this, new tsy_ConceptosRowChangeEvent(((tsy_ConceptosRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleting(DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.tsy_ConceptosRowDeleting != null)) {
                    this.tsy_ConceptosRowDeleting(this, new tsy_ConceptosRowChangeEvent(((tsy_ConceptosRow)(e.Row)), e.Action));
                }
            }
            
            public void Removetsy_ConceptosRow(tsy_ConceptosRow row) {
                this.Rows.Remove(row);
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class tsy_ConceptosRow : DataRow {
            
            private tsy_ConceptosDataTable tabletsy_Conceptos;
            
            internal tsy_ConceptosRow(DataRowBuilder rb) : 
                    base(rb) {
                this.tabletsy_Conceptos = ((tsy_ConceptosDataTable)(this.Table));
            }
            
            public long IdConcepto {
                get {
                    return ((long)(this[this.tabletsy_Conceptos.IdConceptoColumn]));
                }
                set {
                    this[this.tabletsy_Conceptos.IdConceptoColumn] = value;
                }
            }
            
            public string Descripcion {
                get {
                    return ((string)(this[this.tabletsy_Conceptos.DescripcionColumn]));
                }
                set {
                    this[this.tabletsy_Conceptos.DescripcionColumn] = value;
                }
            }
            
            public long IdTipoConcepto {
                get {
                    try {
                        return ((long)(this[this.tabletsy_Conceptos.IdTipoConceptoColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletsy_Conceptos.IdTipoConceptoColumn] = value;
                }
            }
            
            public System.Decimal Valor {
                get {
                    try {
                        return ((System.Decimal)(this[this.tabletsy_Conceptos.ValorColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletsy_Conceptos.ValorColumn] = value;
                }
            }
            
            public long IdEmpresa {
                get {
                    try {
                        return ((long)(this[this.tabletsy_Conceptos.IdEmpresaColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletsy_Conceptos.IdEmpresaColumn] = value;
                }
            }
            
            public bool IsIdTipoConceptoNull() {
                return this.IsNull(this.tabletsy_Conceptos.IdTipoConceptoColumn);
            }
            
            public void SetIdTipoConceptoNull() {
                this[this.tabletsy_Conceptos.IdTipoConceptoColumn] = System.Convert.DBNull;
            }
            
            public bool IsValorNull() {
                return this.IsNull(this.tabletsy_Conceptos.ValorColumn);
            }
            
            public void SetValorNull() {
                this[this.tabletsy_Conceptos.ValorColumn] = System.Convert.DBNull;
            }
            
            public bool IsIdEmpresaNull() {
                return this.IsNull(this.tabletsy_Conceptos.IdEmpresaColumn);
            }
            
            public void SetIdEmpresaNull() {
                this[this.tabletsy_Conceptos.IdEmpresaColumn] = System.Convert.DBNull;
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class tsy_ConceptosRowChangeEvent : EventArgs {
            
            private tsy_ConceptosRow eventRow;
            
            private DataRowAction eventAction;
            
            public tsy_ConceptosRowChangeEvent(tsy_ConceptosRow row, DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            public tsy_ConceptosRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            public DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
