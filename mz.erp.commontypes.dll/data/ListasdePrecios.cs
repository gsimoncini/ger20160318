//------------------------------------------------------------------------------
// <autogenerated>
//     This code was generated by a tool.
//     Runtime Version: 1.1.4322.573
//
//     Changes to this file may cause incorrect behavior and will be lost if 
//     the code is regenerated.
// </autogenerated>
//------------------------------------------------------------------------------

namespace mz.erp.commontypes.data {
    using System;
    using System.Data;
    using System.Xml;
    using System.Runtime.Serialization;
    
    
    [Serializable()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Diagnostics.DebuggerStepThrough()]
    [System.ComponentModel.ToolboxItem(true)]
    public class ListasdePreciosDataset : DataSet {
        
        private ListasdePreciosDataTable tableListasdePrecios;
        
        public ListasdePreciosDataset() {
            this.InitClass();
            System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            this.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        protected ListasdePreciosDataset(SerializationInfo info, StreamingContext context) {
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((strSchema != null)) {
                DataSet ds = new DataSet();
                ds.ReadXmlSchema(new XmlTextReader(new System.IO.StringReader(strSchema)));
                if ((ds.Tables["ListasdePrecios"] != null)) {
                    this.Tables.Add(new ListasdePreciosDataTable(ds.Tables["ListasdePrecios"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.InitClass();
            }
            this.GetSerializationData(info, context);
            System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            this.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public ListasdePreciosDataTable ListasdePrecios {
            get {
                return this.tableListasdePrecios;
            }
        }
        
        public override DataSet Clone() {
            ListasdePreciosDataset cln = ((ListasdePreciosDataset)(base.Clone()));
            cln.InitVars();
            return cln;
        }
        
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        protected override void ReadXmlSerializable(XmlReader reader) {
            this.Reset();
            DataSet ds = new DataSet();
            ds.ReadXml(reader);
            if ((ds.Tables["ListasdePrecios"] != null)) {
                this.Tables.Add(new ListasdePreciosDataTable(ds.Tables["ListasdePrecios"]));
            }
            this.DataSetName = ds.DataSetName;
            this.Prefix = ds.Prefix;
            this.Namespace = ds.Namespace;
            this.Locale = ds.Locale;
            this.CaseSensitive = ds.CaseSensitive;
            this.EnforceConstraints = ds.EnforceConstraints;
            this.Merge(ds, false, System.Data.MissingSchemaAction.Add);
            this.InitVars();
        }
        
        protected override System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            System.IO.MemoryStream stream = new System.IO.MemoryStream();
            this.WriteXmlSchema(new XmlTextWriter(stream, null));
            stream.Position = 0;
            return System.Xml.Schema.XmlSchema.Read(new XmlTextReader(stream), null);
        }
        
        internal void InitVars() {
            this.tableListasdePrecios = ((ListasdePreciosDataTable)(this.Tables["ListasdePrecios"]));
            if ((this.tableListasdePrecios != null)) {
                this.tableListasdePrecios.InitVars();
            }
        }
        
        private void InitClass() {
            this.DataSetName = "ListasdePreciosDataset";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/ListasdePrecios.xsd";
            this.Locale = new System.Globalization.CultureInfo("en-US");
            this.CaseSensitive = false;
            this.EnforceConstraints = true;
            this.tableListasdePrecios = new ListasdePreciosDataTable();
            this.Tables.Add(this.tableListasdePrecios);
        }
        
        private bool ShouldSerializeListasdePrecios() {
            return false;
        }
        
        private void SchemaChanged(object sender, System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        public delegate void ListasdePreciosRowChangeEventHandler(object sender, ListasdePreciosRowChangeEvent e);
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class ListasdePreciosDataTable : DataTable, System.Collections.IEnumerable {
            
            private DataColumn columnIdListadePrecio;
            
            private DataColumn columnCodigo;
            
            private DataColumn columnDescripcion;
            
            private DataColumn columnVigenciaDesde;
            
            private DataColumn columnVigenciaHasta;
            
            private DataColumn columnIdLocal;
            
            private DataColumn columnIdEmpresa;
            
            internal ListasdePreciosDataTable() : 
                    base("ListasdePrecios") {
                this.InitClass();
            }
            
            internal ListasdePreciosDataTable(DataTable table) : 
                    base(table.TableName) {
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
                this.DisplayExpression = table.DisplayExpression;
            }
            
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            internal DataColumn IdListadePrecioColumn {
                get {
                    return this.columnIdListadePrecio;
                }
            }
            
            internal DataColumn CodigoColumn {
                get {
                    return this.columnCodigo;
                }
            }
            
            internal DataColumn DescripcionColumn {
                get {
                    return this.columnDescripcion;
                }
            }
            
            internal DataColumn VigenciaDesdeColumn {
                get {
                    return this.columnVigenciaDesde;
                }
            }
            
            internal DataColumn VigenciaHastaColumn {
                get {
                    return this.columnVigenciaHasta;
                }
            }
            
            internal DataColumn IdLocalColumn {
                get {
                    return this.columnIdLocal;
                }
            }
            
            internal DataColumn IdEmpresaColumn {
                get {
                    return this.columnIdEmpresa;
                }
            }
            
            public ListasdePreciosRow this[int index] {
                get {
                    return ((ListasdePreciosRow)(this.Rows[index]));
                }
            }
            
            public event ListasdePreciosRowChangeEventHandler ListasdePreciosRowChanged;
            
            public event ListasdePreciosRowChangeEventHandler ListasdePreciosRowChanging;
            
            public event ListasdePreciosRowChangeEventHandler ListasdePreciosRowDeleted;
            
            public event ListasdePreciosRowChangeEventHandler ListasdePreciosRowDeleting;
            
            public void AddListasdePreciosRow(ListasdePreciosRow row) {
                this.Rows.Add(row);
            }
            
            public ListasdePreciosRow AddListasdePreciosRow(long IdListadePrecio, string Codigo, string Descripcion, System.DateTime VigenciaDesde, System.DateTime VigenciaHasta, long IdLocal, long IdEmpresa) {
                ListasdePreciosRow rowListasdePreciosRow = ((ListasdePreciosRow)(this.NewRow()));
                rowListasdePreciosRow.ItemArray = new object[] {
                        IdListadePrecio,
                        Codigo,
                        Descripcion,
                        VigenciaDesde,
                        VigenciaHasta,
                        IdLocal,
                        IdEmpresa};
                this.Rows.Add(rowListasdePreciosRow);
                return rowListasdePreciosRow;
            }
            
            public ListasdePreciosRow FindByIdListadePrecio(long IdListadePrecio) {
                return ((ListasdePreciosRow)(this.Rows.Find(new object[] {
                            IdListadePrecio})));
            }
            
            public System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            public override DataTable Clone() {
                ListasdePreciosDataTable cln = ((ListasdePreciosDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            protected override DataTable CreateInstance() {
                return new ListasdePreciosDataTable();
            }
            
            internal void InitVars() {
                this.columnIdListadePrecio = this.Columns["IdListadePrecio"];
                this.columnCodigo = this.Columns["Codigo"];
                this.columnDescripcion = this.Columns["Descripcion"];
                this.columnVigenciaDesde = this.Columns["VigenciaDesde"];
                this.columnVigenciaHasta = this.Columns["VigenciaHasta"];
                this.columnIdLocal = this.Columns["IdLocal"];
                this.columnIdEmpresa = this.Columns["IdEmpresa"];
            }
            
            private void InitClass() {
                this.columnIdListadePrecio = new DataColumn("IdListadePrecio", typeof(long), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdListadePrecio);
                this.columnCodigo = new DataColumn("Codigo", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnCodigo);
                this.columnDescripcion = new DataColumn("Descripcion", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnDescripcion);
                this.columnVigenciaDesde = new DataColumn("VigenciaDesde", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnVigenciaDesde);
                this.columnVigenciaHasta = new DataColumn("VigenciaHasta", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnVigenciaHasta);
                this.columnIdLocal = new DataColumn("IdLocal", typeof(long), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdLocal);
                this.columnIdEmpresa = new DataColumn("IdEmpresa", typeof(long), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdEmpresa);
                this.Constraints.Add(new UniqueConstraint("ListasdePreciosKey1", new DataColumn[] {
                                this.columnIdListadePrecio}, true));
                this.columnIdListadePrecio.AllowDBNull = false;
                this.columnIdListadePrecio.Unique = true;
                this.columnCodigo.AllowDBNull = false;
                this.columnDescripcion.AllowDBNull = false;
            }
            
            public ListasdePreciosRow NewListasdePreciosRow() {
                return ((ListasdePreciosRow)(this.NewRow()));
            }
            
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder) {
                return new ListasdePreciosRow(builder);
            }
            
            protected override System.Type GetRowType() {
                return typeof(ListasdePreciosRow);
            }
            
            protected override void OnRowChanged(DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.ListasdePreciosRowChanged != null)) {
                    this.ListasdePreciosRowChanged(this, new ListasdePreciosRowChangeEvent(((ListasdePreciosRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowChanging(DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.ListasdePreciosRowChanging != null)) {
                    this.ListasdePreciosRowChanging(this, new ListasdePreciosRowChangeEvent(((ListasdePreciosRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleted(DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.ListasdePreciosRowDeleted != null)) {
                    this.ListasdePreciosRowDeleted(this, new ListasdePreciosRowChangeEvent(((ListasdePreciosRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleting(DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.ListasdePreciosRowDeleting != null)) {
                    this.ListasdePreciosRowDeleting(this, new ListasdePreciosRowChangeEvent(((ListasdePreciosRow)(e.Row)), e.Action));
                }
            }
            
            public void RemoveListasdePreciosRow(ListasdePreciosRow row) {
                this.Rows.Remove(row);
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class ListasdePreciosRow : DataRow {
            
            private ListasdePreciosDataTable tableListasdePrecios;
            
            internal ListasdePreciosRow(DataRowBuilder rb) : 
                    base(rb) {
                this.tableListasdePrecios = ((ListasdePreciosDataTable)(this.Table));
            }
            
            public long IdListadePrecio {
                get {
                    return ((long)(this[this.tableListasdePrecios.IdListadePrecioColumn]));
                }
                set {
                    this[this.tableListasdePrecios.IdListadePrecioColumn] = value;
                }
            }
            
            public string Codigo {
                get {
                    return ((string)(this[this.tableListasdePrecios.CodigoColumn]));
                }
                set {
                    this[this.tableListasdePrecios.CodigoColumn] = value;
                }
            }
            
            public string Descripcion {
                get {
                    return ((string)(this[this.tableListasdePrecios.DescripcionColumn]));
                }
                set {
                    this[this.tableListasdePrecios.DescripcionColumn] = value;
                }
            }
            
            public System.DateTime VigenciaDesde {
                get {
                    try {
                        return ((System.DateTime)(this[this.tableListasdePrecios.VigenciaDesdeColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableListasdePrecios.VigenciaDesdeColumn] = value;
                }
            }
            
            public System.DateTime VigenciaHasta {
                get {
                    try {
                        return ((System.DateTime)(this[this.tableListasdePrecios.VigenciaHastaColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableListasdePrecios.VigenciaHastaColumn] = value;
                }
            }
            
            public long IdLocal {
                get {
                    try {
                        return ((long)(this[this.tableListasdePrecios.IdLocalColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableListasdePrecios.IdLocalColumn] = value;
                }
            }
            
            public long IdEmpresa {
                get {
                    try {
                        return ((long)(this[this.tableListasdePrecios.IdEmpresaColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableListasdePrecios.IdEmpresaColumn] = value;
                }
            }
            
            public bool IsVigenciaDesdeNull() {
                return this.IsNull(this.tableListasdePrecios.VigenciaDesdeColumn);
            }
            
            public void SetVigenciaDesdeNull() {
                this[this.tableListasdePrecios.VigenciaDesdeColumn] = System.Convert.DBNull;
            }
            
            public bool IsVigenciaHastaNull() {
                return this.IsNull(this.tableListasdePrecios.VigenciaHastaColumn);
            }
            
            public void SetVigenciaHastaNull() {
                this[this.tableListasdePrecios.VigenciaHastaColumn] = System.Convert.DBNull;
            }
            
            public bool IsIdLocalNull() {
                return this.IsNull(this.tableListasdePrecios.IdLocalColumn);
            }
            
            public void SetIdLocalNull() {
                this[this.tableListasdePrecios.IdLocalColumn] = System.Convert.DBNull;
            }
            
            public bool IsIdEmpresaNull() {
                return this.IsNull(this.tableListasdePrecios.IdEmpresaColumn);
            }
            
            public void SetIdEmpresaNull() {
                this[this.tableListasdePrecios.IdEmpresaColumn] = System.Convert.DBNull;
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class ListasdePreciosRowChangeEvent : EventArgs {
            
            private ListasdePreciosRow eventRow;
            
            private DataRowAction eventAction;
            
            public ListasdePreciosRowChangeEvent(ListasdePreciosRow row, DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            public ListasdePreciosRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            public DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
