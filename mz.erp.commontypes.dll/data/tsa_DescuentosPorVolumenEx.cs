//------------------------------------------------------------------------------
// <autogenerated>
//     This code was generated by a tool.
//     Runtime Version: 1.1.4322.573
//
//     Changes to this file may cause incorrect behavior and will be lost if 
//     the code is regenerated.
// </autogenerated>
//------------------------------------------------------------------------------

namespace mz.erp.commontypes.data {
    using System;
    using System.Data;
    using System.Xml;
    using System.Runtime.Serialization;
    
    
    [Serializable()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Diagnostics.DebuggerStepThrough()]
    [System.ComponentModel.ToolboxItem(true)]
    public class tsa_DescuentosPorVolumenExDataset : DataSet {
        
        private tsa_DescuentosPorVolumenDataTable tabletsa_DescuentosPorVolumen;
        
        public tsa_DescuentosPorVolumenExDataset() {
            this.InitClass();
            System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            this.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        protected tsa_DescuentosPorVolumenExDataset(SerializationInfo info, StreamingContext context) {
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((strSchema != null)) {
                DataSet ds = new DataSet();
                ds.ReadXmlSchema(new XmlTextReader(new System.IO.StringReader(strSchema)));
                if ((ds.Tables["tsa_DescuentosPorVolumen"] != null)) {
                    this.Tables.Add(new tsa_DescuentosPorVolumenDataTable(ds.Tables["tsa_DescuentosPorVolumen"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.InitClass();
            }
            this.GetSerializationData(info, context);
            System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            this.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public tsa_DescuentosPorVolumenDataTable tsa_DescuentosPorVolumen {
            get {
                return this.tabletsa_DescuentosPorVolumen;
            }
        }
        
        public override DataSet Clone() {
            tsa_DescuentosPorVolumenExDataset cln = ((tsa_DescuentosPorVolumenExDataset)(base.Clone()));
            cln.InitVars();
            return cln;
        }
        
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        protected override void ReadXmlSerializable(XmlReader reader) {
            this.Reset();
            DataSet ds = new DataSet();
            ds.ReadXml(reader);
            if ((ds.Tables["tsa_DescuentosPorVolumen"] != null)) {
                this.Tables.Add(new tsa_DescuentosPorVolumenDataTable(ds.Tables["tsa_DescuentosPorVolumen"]));
            }
            this.DataSetName = ds.DataSetName;
            this.Prefix = ds.Prefix;
            this.Namespace = ds.Namespace;
            this.Locale = ds.Locale;
            this.CaseSensitive = ds.CaseSensitive;
            this.EnforceConstraints = ds.EnforceConstraints;
            this.Merge(ds, false, System.Data.MissingSchemaAction.Add);
            this.InitVars();
        }
        
        protected override System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            System.IO.MemoryStream stream = new System.IO.MemoryStream();
            this.WriteXmlSchema(new XmlTextWriter(stream, null));
            stream.Position = 0;
            return System.Xml.Schema.XmlSchema.Read(new XmlTextReader(stream), null);
        }
        
        internal void InitVars() {
            this.tabletsa_DescuentosPorVolumen = ((tsa_DescuentosPorVolumenDataTable)(this.Tables["tsa_DescuentosPorVolumen"]));
            if ((this.tabletsa_DescuentosPorVolumen != null)) {
                this.tabletsa_DescuentosPorVolumen.InitVars();
            }
        }
        
        private void InitClass() {
            this.DataSetName = "tsa_DescuentosPorVolumenExDataset";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/tsa_DescuentosPorVolumenEx.xsd";
            this.Locale = new System.Globalization.CultureInfo("en-US");
            this.CaseSensitive = false;
            this.EnforceConstraints = true;
            this.tabletsa_DescuentosPorVolumen = new tsa_DescuentosPorVolumenDataTable();
            this.Tables.Add(this.tabletsa_DescuentosPorVolumen);
        }
        
        private bool ShouldSerializetsa_DescuentosPorVolumen() {
            return false;
        }
        
        private void SchemaChanged(object sender, System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        public delegate void tsa_DescuentosPorVolumenRowChangeEventHandler(object sender, tsa_DescuentosPorVolumenRowChangeEvent e);
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class tsa_DescuentosPorVolumenDataTable : DataTable, System.Collections.IEnumerable {
            
            private DataColumn columnIdProducto;
            
            private DataColumn columnIdSucursal;
            
            private DataColumn columnDescripcion;
            
            private DataColumn columnUnidades;
            
            private DataColumn columnBonificacionRecargo;
            
            private DataColumn columnFechaCreacion;
            
            private DataColumn columnIdConexionCreacion;
            
            private DataColumn columnUltimaModificacion;
            
            private DataColumn columnIdConexionUltimaModificacion;
            
            private DataColumn columnIdReservado;
            
            private DataColumn columnRowId;
            
            private DataColumn columnIdEmpresa;
            
            internal tsa_DescuentosPorVolumenDataTable() : 
                    base("tsa_DescuentosPorVolumen") {
                this.InitClass();
            }
            
            internal tsa_DescuentosPorVolumenDataTable(DataTable table) : 
                    base(table.TableName) {
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
                this.DisplayExpression = table.DisplayExpression;
            }
            
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            internal DataColumn IdProductoColumn {
                get {
                    return this.columnIdProducto;
                }
            }
            
            internal DataColumn IdSucursalColumn {
                get {
                    return this.columnIdSucursal;
                }
            }
            
            internal DataColumn DescripcionColumn {
                get {
                    return this.columnDescripcion;
                }
            }
            
            internal DataColumn UnidadesColumn {
                get {
                    return this.columnUnidades;
                }
            }
            
            internal DataColumn BonificacionRecargoColumn {
                get {
                    return this.columnBonificacionRecargo;
                }
            }
            
            internal DataColumn FechaCreacionColumn {
                get {
                    return this.columnFechaCreacion;
                }
            }
            
            internal DataColumn IdConexionCreacionColumn {
                get {
                    return this.columnIdConexionCreacion;
                }
            }
            
            internal DataColumn UltimaModificacionColumn {
                get {
                    return this.columnUltimaModificacion;
                }
            }
            
            internal DataColumn IdConexionUltimaModificacionColumn {
                get {
                    return this.columnIdConexionUltimaModificacion;
                }
            }
            
            internal DataColumn IdReservadoColumn {
                get {
                    return this.columnIdReservado;
                }
            }
            
            internal DataColumn RowIdColumn {
                get {
                    return this.columnRowId;
                }
            }
            
            internal DataColumn IdEmpresaColumn {
                get {
                    return this.columnIdEmpresa;
                }
            }
            
            public tsa_DescuentosPorVolumenRow this[int index] {
                get {
                    return ((tsa_DescuentosPorVolumenRow)(this.Rows[index]));
                }
            }
            
            public event tsa_DescuentosPorVolumenRowChangeEventHandler tsa_DescuentosPorVolumenRowChanged;
            
            public event tsa_DescuentosPorVolumenRowChangeEventHandler tsa_DescuentosPorVolumenRowChanging;
            
            public event tsa_DescuentosPorVolumenRowChangeEventHandler tsa_DescuentosPorVolumenRowDeleted;
            
            public event tsa_DescuentosPorVolumenRowChangeEventHandler tsa_DescuentosPorVolumenRowDeleting;
            
            public void Addtsa_DescuentosPorVolumenRow(tsa_DescuentosPorVolumenRow row) {
                this.Rows.Add(row);
            }
            
            public tsa_DescuentosPorVolumenRow Addtsa_DescuentosPorVolumenRow(string IdProducto, long IdSucursal, string Descripcion, System.Decimal Unidades, System.Decimal BonificacionRecargo, System.DateTime FechaCreacion, long IdConexionCreacion, System.Byte[] UltimaModificacion, long IdConexionUltimaModificacion, long IdReservado, System.Guid RowId, long IdEmpresa) {
                tsa_DescuentosPorVolumenRow rowtsa_DescuentosPorVolumenRow = ((tsa_DescuentosPorVolumenRow)(this.NewRow()));
                rowtsa_DescuentosPorVolumenRow.ItemArray = new object[] {
                        IdProducto,
                        IdSucursal,
                        Descripcion,
                        Unidades,
                        BonificacionRecargo,
                        FechaCreacion,
                        IdConexionCreacion,
                        UltimaModificacion,
                        IdConexionUltimaModificacion,
                        IdReservado,
                        RowId,
                        IdEmpresa};
                this.Rows.Add(rowtsa_DescuentosPorVolumenRow);
                return rowtsa_DescuentosPorVolumenRow;
            }
            
            public tsa_DescuentosPorVolumenRow FindByIdProductoIdSucursal(string IdProducto, long IdSucursal) {
                return ((tsa_DescuentosPorVolumenRow)(this.Rows.Find(new object[] {
                            IdProducto,
                            IdSucursal})));
            }
            
            public System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            public override DataTable Clone() {
                tsa_DescuentosPorVolumenDataTable cln = ((tsa_DescuentosPorVolumenDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            protected override DataTable CreateInstance() {
                return new tsa_DescuentosPorVolumenDataTable();
            }
            
            internal void InitVars() {
                this.columnIdProducto = this.Columns["IdProducto"];
                this.columnIdSucursal = this.Columns["IdSucursal"];
                this.columnDescripcion = this.Columns["Descripcion"];
                this.columnUnidades = this.Columns["Unidades"];
                this.columnBonificacionRecargo = this.Columns["BonificacionRecargo"];
                this.columnFechaCreacion = this.Columns["FechaCreacion"];
                this.columnIdConexionCreacion = this.Columns["IdConexionCreacion"];
                this.columnUltimaModificacion = this.Columns["UltimaModificacion"];
                this.columnIdConexionUltimaModificacion = this.Columns["IdConexionUltimaModificacion"];
                this.columnIdReservado = this.Columns["IdReservado"];
                this.columnRowId = this.Columns["RowId"];
                this.columnIdEmpresa = this.Columns["IdEmpresa"];
            }
            
            private void InitClass() {
                this.columnIdProducto = new DataColumn("IdProducto", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdProducto);
                this.columnIdSucursal = new DataColumn("IdSucursal", typeof(long), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdSucursal);
                this.columnDescripcion = new DataColumn("Descripcion", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnDescripcion);
                this.columnUnidades = new DataColumn("Unidades", typeof(System.Decimal), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnUnidades);
                this.columnBonificacionRecargo = new DataColumn("BonificacionRecargo", typeof(System.Decimal), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnBonificacionRecargo);
                this.columnFechaCreacion = new DataColumn("FechaCreacion", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnFechaCreacion);
                this.columnIdConexionCreacion = new DataColumn("IdConexionCreacion", typeof(long), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdConexionCreacion);
                this.columnUltimaModificacion = new DataColumn("UltimaModificacion", typeof(System.Byte[]), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnUltimaModificacion);
                this.columnIdConexionUltimaModificacion = new DataColumn("IdConexionUltimaModificacion", typeof(long), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdConexionUltimaModificacion);
                this.columnIdReservado = new DataColumn("IdReservado", typeof(long), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdReservado);
                this.columnRowId = new DataColumn("RowId", typeof(System.Guid), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnRowId);
                this.columnIdEmpresa = new DataColumn("IdEmpresa", typeof(long), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdEmpresa);
                this.Constraints.Add(new UniqueConstraint("tsa_DescuentosPorVolumenExKey1", new DataColumn[] {
                                this.columnIdProducto,
                                this.columnIdSucursal}, true));
                this.columnIdProducto.AllowDBNull = false;
                this.columnIdSucursal.AllowDBNull = false;
                this.columnDescripcion.AllowDBNull = false;
                this.columnUnidades.AllowDBNull = false;
                this.columnBonificacionRecargo.AllowDBNull = false;
                this.columnUltimaModificacion.ReadOnly = true;
            }
            
            public tsa_DescuentosPorVolumenRow Newtsa_DescuentosPorVolumenRow() {
                return ((tsa_DescuentosPorVolumenRow)(this.NewRow()));
            }
            
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder) {
                return new tsa_DescuentosPorVolumenRow(builder);
            }
            
            protected override System.Type GetRowType() {
                return typeof(tsa_DescuentosPorVolumenRow);
            }
            
            protected override void OnRowChanged(DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.tsa_DescuentosPorVolumenRowChanged != null)) {
                    this.tsa_DescuentosPorVolumenRowChanged(this, new tsa_DescuentosPorVolumenRowChangeEvent(((tsa_DescuentosPorVolumenRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowChanging(DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.tsa_DescuentosPorVolumenRowChanging != null)) {
                    this.tsa_DescuentosPorVolumenRowChanging(this, new tsa_DescuentosPorVolumenRowChangeEvent(((tsa_DescuentosPorVolumenRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleted(DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.tsa_DescuentosPorVolumenRowDeleted != null)) {
                    this.tsa_DescuentosPorVolumenRowDeleted(this, new tsa_DescuentosPorVolumenRowChangeEvent(((tsa_DescuentosPorVolumenRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleting(DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.tsa_DescuentosPorVolumenRowDeleting != null)) {
                    this.tsa_DescuentosPorVolumenRowDeleting(this, new tsa_DescuentosPorVolumenRowChangeEvent(((tsa_DescuentosPorVolumenRow)(e.Row)), e.Action));
                }
            }
            
            public void Removetsa_DescuentosPorVolumenRow(tsa_DescuentosPorVolumenRow row) {
                this.Rows.Remove(row);
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class tsa_DescuentosPorVolumenRow : DataRow {
            
            private tsa_DescuentosPorVolumenDataTable tabletsa_DescuentosPorVolumen;
            
            internal tsa_DescuentosPorVolumenRow(DataRowBuilder rb) : 
                    base(rb) {
                this.tabletsa_DescuentosPorVolumen = ((tsa_DescuentosPorVolumenDataTable)(this.Table));
            }
            
            public string IdProducto {
                get {
                    return ((string)(this[this.tabletsa_DescuentosPorVolumen.IdProductoColumn]));
                }
                set {
                    this[this.tabletsa_DescuentosPorVolumen.IdProductoColumn] = value;
                }
            }
            
            public long IdSucursal {
                get {
                    return ((long)(this[this.tabletsa_DescuentosPorVolumen.IdSucursalColumn]));
                }
                set {
                    this[this.tabletsa_DescuentosPorVolumen.IdSucursalColumn] = value;
                }
            }
            
            public string Descripcion {
                get {
                    return ((string)(this[this.tabletsa_DescuentosPorVolumen.DescripcionColumn]));
                }
                set {
                    this[this.tabletsa_DescuentosPorVolumen.DescripcionColumn] = value;
                }
            }
            
            public System.Decimal Unidades {
                get {
                    return ((System.Decimal)(this[this.tabletsa_DescuentosPorVolumen.UnidadesColumn]));
                }
                set {
                    this[this.tabletsa_DescuentosPorVolumen.UnidadesColumn] = value;
                }
            }
            
            public System.Decimal BonificacionRecargo {
                get {
                    return ((System.Decimal)(this[this.tabletsa_DescuentosPorVolumen.BonificacionRecargoColumn]));
                }
                set {
                    this[this.tabletsa_DescuentosPorVolumen.BonificacionRecargoColumn] = value;
                }
            }
            
            public System.DateTime FechaCreacion {
                get {
                    try {
                        return ((System.DateTime)(this[this.tabletsa_DescuentosPorVolumen.FechaCreacionColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletsa_DescuentosPorVolumen.FechaCreacionColumn] = value;
                }
            }
            
            public long IdConexionCreacion {
                get {
                    try {
                        return ((long)(this[this.tabletsa_DescuentosPorVolumen.IdConexionCreacionColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletsa_DescuentosPorVolumen.IdConexionCreacionColumn] = value;
                }
            }
            
            public System.Byte[] UltimaModificacion {
                get {
                    try {
                        return ((System.Byte[])(this[this.tabletsa_DescuentosPorVolumen.UltimaModificacionColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletsa_DescuentosPorVolumen.UltimaModificacionColumn] = value;
                }
            }
            
            public long IdConexionUltimaModificacion {
                get {
                    try {
                        return ((long)(this[this.tabletsa_DescuentosPorVolumen.IdConexionUltimaModificacionColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletsa_DescuentosPorVolumen.IdConexionUltimaModificacionColumn] = value;
                }
            }
            
            public long IdReservado {
                get {
                    try {
                        return ((long)(this[this.tabletsa_DescuentosPorVolumen.IdReservadoColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletsa_DescuentosPorVolumen.IdReservadoColumn] = value;
                }
            }
            
            public System.Guid RowId {
                get {
                    try {
                        return ((System.Guid)(this[this.tabletsa_DescuentosPorVolumen.RowIdColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletsa_DescuentosPorVolumen.RowIdColumn] = value;
                }
            }
            
            public long IdEmpresa {
                get {
                    try {
                        return ((long)(this[this.tabletsa_DescuentosPorVolumen.IdEmpresaColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletsa_DescuentosPorVolumen.IdEmpresaColumn] = value;
                }
            }
            
            public bool IsFechaCreacionNull() {
                return this.IsNull(this.tabletsa_DescuentosPorVolumen.FechaCreacionColumn);
            }
            
            public void SetFechaCreacionNull() {
                this[this.tabletsa_DescuentosPorVolumen.FechaCreacionColumn] = System.Convert.DBNull;
            }
            
            public bool IsIdConexionCreacionNull() {
                return this.IsNull(this.tabletsa_DescuentosPorVolumen.IdConexionCreacionColumn);
            }
            
            public void SetIdConexionCreacionNull() {
                this[this.tabletsa_DescuentosPorVolumen.IdConexionCreacionColumn] = System.Convert.DBNull;
            }
            
            public bool IsUltimaModificacionNull() {
                return this.IsNull(this.tabletsa_DescuentosPorVolumen.UltimaModificacionColumn);
            }
            
            public void SetUltimaModificacionNull() {
                this[this.tabletsa_DescuentosPorVolumen.UltimaModificacionColumn] = System.Convert.DBNull;
            }
            
            public bool IsIdConexionUltimaModificacionNull() {
                return this.IsNull(this.tabletsa_DescuentosPorVolumen.IdConexionUltimaModificacionColumn);
            }
            
            public void SetIdConexionUltimaModificacionNull() {
                this[this.tabletsa_DescuentosPorVolumen.IdConexionUltimaModificacionColumn] = System.Convert.DBNull;
            }
            
            public bool IsIdReservadoNull() {
                return this.IsNull(this.tabletsa_DescuentosPorVolumen.IdReservadoColumn);
            }
            
            public void SetIdReservadoNull() {
                this[this.tabletsa_DescuentosPorVolumen.IdReservadoColumn] = System.Convert.DBNull;
            }
            
            public bool IsRowIdNull() {
                return this.IsNull(this.tabletsa_DescuentosPorVolumen.RowIdColumn);
            }
            
            public void SetRowIdNull() {
                this[this.tabletsa_DescuentosPorVolumen.RowIdColumn] = System.Convert.DBNull;
            }
            
            public bool IsIdEmpresaNull() {
                return this.IsNull(this.tabletsa_DescuentosPorVolumen.IdEmpresaColumn);
            }
            
            public void SetIdEmpresaNull() {
                this[this.tabletsa_DescuentosPorVolumen.IdEmpresaColumn] = System.Convert.DBNull;
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class tsa_DescuentosPorVolumenRowChangeEvent : EventArgs {
            
            private tsa_DescuentosPorVolumenRow eventRow;
            
            private DataRowAction eventAction;
            
            public tsa_DescuentosPorVolumenRowChangeEvent(tsa_DescuentosPorVolumenRow row, DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            public tsa_DescuentosPorVolumenRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            public DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
