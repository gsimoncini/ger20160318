//------------------------------------------------------------------------------
// <autogenerated>
//     This code was generated by a tool.
//     Runtime Version: 1.1.4322.2032
//
//     Changes to this file may cause incorrect behavior and will be lost if 
//     the code is regenerated.
// </autogenerated>
//------------------------------------------------------------------------------

namespace mz.erp.commontypes.data {
    using System;
    using System.Data;
    using System.Xml;
    using System.Runtime.Serialization;
    
    
    [Serializable()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Diagnostics.DebuggerStepThrough()]
    [System.ComponentModel.ToolboxItem(true)]
    public class tsh_ConversionesExDataset : DataSet {
        
        private tsh_ConversionesDataTable tabletsh_Conversiones;
        
        private tsh_DetalleConversionesDataTable tabletsh_DetalleConversiones;
        
        private DataRelation relationtsh_Conversionestsh_DetalleConversiones;
        
        public tsh_ConversionesExDataset() {
            this.InitClass();
            System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            this.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        protected tsh_ConversionesExDataset(SerializationInfo info, StreamingContext context) {
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((strSchema != null)) {
                DataSet ds = new DataSet();
                ds.ReadXmlSchema(new XmlTextReader(new System.IO.StringReader(strSchema)));
                if ((ds.Tables["tsh_Conversiones"] != null)) {
                    this.Tables.Add(new tsh_ConversionesDataTable(ds.Tables["tsh_Conversiones"]));
                }
                if ((ds.Tables["tsh_DetalleConversiones"] != null)) {
                    this.Tables.Add(new tsh_DetalleConversionesDataTable(ds.Tables["tsh_DetalleConversiones"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.InitClass();
            }
            this.GetSerializationData(info, context);
            System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            this.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public tsh_ConversionesDataTable tsh_Conversiones {
            get {
                return this.tabletsh_Conversiones;
            }
        }
        
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public tsh_DetalleConversionesDataTable tsh_DetalleConversiones {
            get {
                return this.tabletsh_DetalleConversiones;
            }
        }
        
        public override DataSet Clone() {
            tsh_ConversionesExDataset cln = ((tsh_ConversionesExDataset)(base.Clone()));
            cln.InitVars();
            return cln;
        }
        
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        protected override void ReadXmlSerializable(XmlReader reader) {
            this.Reset();
            DataSet ds = new DataSet();
            ds.ReadXml(reader);
            if ((ds.Tables["tsh_Conversiones"] != null)) {
                this.Tables.Add(new tsh_ConversionesDataTable(ds.Tables["tsh_Conversiones"]));
            }
            if ((ds.Tables["tsh_DetalleConversiones"] != null)) {
                this.Tables.Add(new tsh_DetalleConversionesDataTable(ds.Tables["tsh_DetalleConversiones"]));
            }
            this.DataSetName = ds.DataSetName;
            this.Prefix = ds.Prefix;
            this.Namespace = ds.Namespace;
            this.Locale = ds.Locale;
            this.CaseSensitive = ds.CaseSensitive;
            this.EnforceConstraints = ds.EnforceConstraints;
            this.Merge(ds, false, System.Data.MissingSchemaAction.Add);
            this.InitVars();
        }
        
        protected override System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            System.IO.MemoryStream stream = new System.IO.MemoryStream();
            this.WriteXmlSchema(new XmlTextWriter(stream, null));
            stream.Position = 0;
            return System.Xml.Schema.XmlSchema.Read(new XmlTextReader(stream), null);
        }
        
        internal void InitVars() {
            this.tabletsh_Conversiones = ((tsh_ConversionesDataTable)(this.Tables["tsh_Conversiones"]));
            if ((this.tabletsh_Conversiones != null)) {
                this.tabletsh_Conversiones.InitVars();
            }
            this.tabletsh_DetalleConversiones = ((tsh_DetalleConversionesDataTable)(this.Tables["tsh_DetalleConversiones"]));
            if ((this.tabletsh_DetalleConversiones != null)) {
                this.tabletsh_DetalleConversiones.InitVars();
            }
            this.relationtsh_Conversionestsh_DetalleConversiones = this.Relations["tsh_Conversionestsh_DetalleConversiones"];
        }
        
        private void InitClass() {
            this.DataSetName = "tsh_ConversionesExDataset";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/tsh_ConversionesEx.xsd";
            this.Locale = new System.Globalization.CultureInfo("en-US");
            this.CaseSensitive = false;
            this.EnforceConstraints = true;
            this.tabletsh_Conversiones = new tsh_ConversionesDataTable();
            this.Tables.Add(this.tabletsh_Conversiones);
            this.tabletsh_DetalleConversiones = new tsh_DetalleConversionesDataTable();
            this.Tables.Add(this.tabletsh_DetalleConversiones);
            ForeignKeyConstraint fkc;
            fkc = new ForeignKeyConstraint("tsh_Conversionestsh_DetalleConversiones", new DataColumn[] {
                        this.tabletsh_Conversiones.IdConversionColumn}, new DataColumn[] {
                        this.tabletsh_DetalleConversiones.IdConversionColumn});
            this.tabletsh_DetalleConversiones.Constraints.Add(fkc);
            fkc.AcceptRejectRule = System.Data.AcceptRejectRule.None;
            fkc.DeleteRule = System.Data.Rule.Cascade;
            fkc.UpdateRule = System.Data.Rule.Cascade;
            this.relationtsh_Conversionestsh_DetalleConversiones = new DataRelation("tsh_Conversionestsh_DetalleConversiones", new DataColumn[] {
                        this.tabletsh_Conversiones.IdConversionColumn}, new DataColumn[] {
                        this.tabletsh_DetalleConversiones.IdConversionColumn}, false);
            this.Relations.Add(this.relationtsh_Conversionestsh_DetalleConversiones);
        }
        
        private bool ShouldSerializetsh_Conversiones() {
            return false;
        }
        
        private bool ShouldSerializetsh_DetalleConversiones() {
            return false;
        }
        
        private void SchemaChanged(object sender, System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        public delegate void tsh_ConversionesRowChangeEventHandler(object sender, tsh_ConversionesRowChangeEvent e);
        
        public delegate void tsh_DetalleConversionesRowChangeEventHandler(object sender, tsh_DetalleConversionesRowChangeEvent e);
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class tsh_ConversionesDataTable : DataTable, System.Collections.IEnumerable {
            
            private DataColumn columnIdConversion;
            
            private DataColumn columnNombre;
            
            private DataColumn columnDescripcion;
            
            private DataColumn columnFechaCreacion;
            
            private DataColumn columnIdConexionCreacion;
            
            private DataColumn columnUltimaModificacion;
            
            private DataColumn columnIdConexionUltimaModificacion;
            
            private DataColumn columnIdReservado;
            
            private DataColumn columnRowId;
            
            private DataColumn columnIdEmpresa;
            
            private DataColumn columnIdSucursal;
            
            private DataColumn columnIdGenerado;
            
            private DataColumn columnRowIdGenerado;
            
            internal tsh_ConversionesDataTable() : 
                    base("tsh_Conversiones") {
                this.InitClass();
            }
            
            internal tsh_ConversionesDataTable(DataTable table) : 
                    base(table.TableName) {
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
                this.DisplayExpression = table.DisplayExpression;
            }
            
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            internal DataColumn IdConversionColumn {
                get {
                    return this.columnIdConversion;
                }
            }
            
            internal DataColumn NombreColumn {
                get {
                    return this.columnNombre;
                }
            }
            
            internal DataColumn DescripcionColumn {
                get {
                    return this.columnDescripcion;
                }
            }
            
            internal DataColumn FechaCreacionColumn {
                get {
                    return this.columnFechaCreacion;
                }
            }
            
            internal DataColumn IdConexionCreacionColumn {
                get {
                    return this.columnIdConexionCreacion;
                }
            }
            
            internal DataColumn UltimaModificacionColumn {
                get {
                    return this.columnUltimaModificacion;
                }
            }
            
            internal DataColumn IdConexionUltimaModificacionColumn {
                get {
                    return this.columnIdConexionUltimaModificacion;
                }
            }
            
            internal DataColumn IdReservadoColumn {
                get {
                    return this.columnIdReservado;
                }
            }
            
            internal DataColumn RowIdColumn {
                get {
                    return this.columnRowId;
                }
            }
            
            internal DataColumn IdEmpresaColumn {
                get {
                    return this.columnIdEmpresa;
                }
            }
            
            internal DataColumn IdSucursalColumn {
                get {
                    return this.columnIdSucursal;
                }
            }
            
            internal DataColumn IdGeneradoColumn {
                get {
                    return this.columnIdGenerado;
                }
            }
            
            internal DataColumn RowIdGeneradoColumn {
                get {
                    return this.columnRowIdGenerado;
                }
            }
            
            public tsh_ConversionesRow this[int index] {
                get {
                    return ((tsh_ConversionesRow)(this.Rows[index]));
                }
            }
            
            public event tsh_ConversionesRowChangeEventHandler tsh_ConversionesRowChanged;
            
            public event tsh_ConversionesRowChangeEventHandler tsh_ConversionesRowChanging;
            
            public event tsh_ConversionesRowChangeEventHandler tsh_ConversionesRowDeleted;
            
            public event tsh_ConversionesRowChangeEventHandler tsh_ConversionesRowDeleting;
            
            public void Addtsh_ConversionesRow(tsh_ConversionesRow row) {
                this.Rows.Add(row);
            }
            
            public tsh_ConversionesRow Addtsh_ConversionesRow(string IdConversion, string Nombre, string Descripcion, System.DateTime FechaCreacion, long IdConexionCreacion, System.Byte[] UltimaModificacion, long IdConexionUltimaModificacion, long IdReservado, System.Guid RowId, long IdEmpresa, long IdSucursal, string IdGenerado, string RowIdGenerado) {
                tsh_ConversionesRow rowtsh_ConversionesRow = ((tsh_ConversionesRow)(this.NewRow()));
                rowtsh_ConversionesRow.ItemArray = new object[] {
                        IdConversion,
                        Nombre,
                        Descripcion,
                        FechaCreacion,
                        IdConexionCreacion,
                        UltimaModificacion,
                        IdConexionUltimaModificacion,
                        IdReservado,
                        RowId,
                        IdEmpresa,
                        IdSucursal,
                        IdGenerado,
                        RowIdGenerado};
                this.Rows.Add(rowtsh_ConversionesRow);
                return rowtsh_ConversionesRow;
            }
            
            public tsh_ConversionesRow FindByIdConversion(string IdConversion) {
                return ((tsh_ConversionesRow)(this.Rows.Find(new object[] {
                            IdConversion})));
            }
            
            public System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            public override DataTable Clone() {
                tsh_ConversionesDataTable cln = ((tsh_ConversionesDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            protected override DataTable CreateInstance() {
                return new tsh_ConversionesDataTable();
            }
            
            internal void InitVars() {
                this.columnIdConversion = this.Columns["IdConversion"];
                this.columnNombre = this.Columns["Nombre"];
                this.columnDescripcion = this.Columns["Descripcion"];
                this.columnFechaCreacion = this.Columns["FechaCreacion"];
                this.columnIdConexionCreacion = this.Columns["IdConexionCreacion"];
                this.columnUltimaModificacion = this.Columns["UltimaModificacion"];
                this.columnIdConexionUltimaModificacion = this.Columns["IdConexionUltimaModificacion"];
                this.columnIdReservado = this.Columns["IdReservado"];
                this.columnRowId = this.Columns["RowId"];
                this.columnIdEmpresa = this.Columns["IdEmpresa"];
                this.columnIdSucursal = this.Columns["IdSucursal"];
                this.columnIdGenerado = this.Columns["IdGenerado"];
                this.columnRowIdGenerado = this.Columns["RowIdGenerado"];
            }
            
            private void InitClass() {
                this.columnIdConversion = new DataColumn("IdConversion", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdConversion);
                this.columnNombre = new DataColumn("Nombre", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnNombre);
                this.columnDescripcion = new DataColumn("Descripcion", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnDescripcion);
                this.columnFechaCreacion = new DataColumn("FechaCreacion", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnFechaCreacion);
                this.columnIdConexionCreacion = new DataColumn("IdConexionCreacion", typeof(long), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdConexionCreacion);
                this.columnUltimaModificacion = new DataColumn("UltimaModificacion", typeof(System.Byte[]), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnUltimaModificacion);
                this.columnIdConexionUltimaModificacion = new DataColumn("IdConexionUltimaModificacion", typeof(long), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdConexionUltimaModificacion);
                this.columnIdReservado = new DataColumn("IdReservado", typeof(long), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdReservado);
                this.columnRowId = new DataColumn("RowId", typeof(System.Guid), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnRowId);
                this.columnIdEmpresa = new DataColumn("IdEmpresa", typeof(long), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdEmpresa);
                this.columnIdSucursal = new DataColumn("IdSucursal", typeof(long), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdSucursal);
                this.columnIdGenerado = new DataColumn("IdGenerado", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdGenerado);
                this.columnRowIdGenerado = new DataColumn("RowIdGenerado", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnRowIdGenerado);
                this.Constraints.Add(new UniqueConstraint("tsh_ConversionesExKey1", new DataColumn[] {
                                this.columnIdConversion}, true));
                this.columnIdConversion.AllowDBNull = false;
                this.columnIdConversion.Unique = true;
                this.columnUltimaModificacion.ReadOnly = true;
            }
            
            public tsh_ConversionesRow Newtsh_ConversionesRow() {
                return ((tsh_ConversionesRow)(this.NewRow()));
            }
            
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder) {
                return new tsh_ConversionesRow(builder);
            }
            
            protected override System.Type GetRowType() {
                return typeof(tsh_ConversionesRow);
            }
            
            protected override void OnRowChanged(DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.tsh_ConversionesRowChanged != null)) {
                    this.tsh_ConversionesRowChanged(this, new tsh_ConversionesRowChangeEvent(((tsh_ConversionesRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowChanging(DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.tsh_ConversionesRowChanging != null)) {
                    this.tsh_ConversionesRowChanging(this, new tsh_ConversionesRowChangeEvent(((tsh_ConversionesRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleted(DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.tsh_ConversionesRowDeleted != null)) {
                    this.tsh_ConversionesRowDeleted(this, new tsh_ConversionesRowChangeEvent(((tsh_ConversionesRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleting(DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.tsh_ConversionesRowDeleting != null)) {
                    this.tsh_ConversionesRowDeleting(this, new tsh_ConversionesRowChangeEvent(((tsh_ConversionesRow)(e.Row)), e.Action));
                }
            }
            
            public void Removetsh_ConversionesRow(tsh_ConversionesRow row) {
                this.Rows.Remove(row);
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class tsh_ConversionesRow : DataRow {
            
            private tsh_ConversionesDataTable tabletsh_Conversiones;
            
            internal tsh_ConversionesRow(DataRowBuilder rb) : 
                    base(rb) {
                this.tabletsh_Conversiones = ((tsh_ConversionesDataTable)(this.Table));
            }
            
            public string IdConversion {
                get {
                    return ((string)(this[this.tabletsh_Conversiones.IdConversionColumn]));
                }
                set {
                    this[this.tabletsh_Conversiones.IdConversionColumn] = value;
                }
            }
            
            public string Nombre {
                get {
                    try {
                        return ((string)(this[this.tabletsh_Conversiones.NombreColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletsh_Conversiones.NombreColumn] = value;
                }
            }
            
            public string Descripcion {
                get {
                    try {
                        return ((string)(this[this.tabletsh_Conversiones.DescripcionColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletsh_Conversiones.DescripcionColumn] = value;
                }
            }
            
            public System.DateTime FechaCreacion {
                get {
                    try {
                        return ((System.DateTime)(this[this.tabletsh_Conversiones.FechaCreacionColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletsh_Conversiones.FechaCreacionColumn] = value;
                }
            }
            
            public long IdConexionCreacion {
                get {
                    try {
                        return ((long)(this[this.tabletsh_Conversiones.IdConexionCreacionColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletsh_Conversiones.IdConexionCreacionColumn] = value;
                }
            }
            
            public System.Byte[] UltimaModificacion {
                get {
                    try {
                        return ((System.Byte[])(this[this.tabletsh_Conversiones.UltimaModificacionColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletsh_Conversiones.UltimaModificacionColumn] = value;
                }
            }
            
            public long IdConexionUltimaModificacion {
                get {
                    try {
                        return ((long)(this[this.tabletsh_Conversiones.IdConexionUltimaModificacionColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletsh_Conversiones.IdConexionUltimaModificacionColumn] = value;
                }
            }
            
            public long IdReservado {
                get {
                    try {
                        return ((long)(this[this.tabletsh_Conversiones.IdReservadoColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletsh_Conversiones.IdReservadoColumn] = value;
                }
            }
            
            public System.Guid RowId {
                get {
                    try {
                        return ((System.Guid)(this[this.tabletsh_Conversiones.RowIdColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletsh_Conversiones.RowIdColumn] = value;
                }
            }
            
            public long IdEmpresa {
                get {
                    try {
                        return ((long)(this[this.tabletsh_Conversiones.IdEmpresaColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletsh_Conversiones.IdEmpresaColumn] = value;
                }
            }
            
            public long IdSucursal {
                get {
                    try {
                        return ((long)(this[this.tabletsh_Conversiones.IdSucursalColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletsh_Conversiones.IdSucursalColumn] = value;
                }
            }
            
            public string IdGenerado {
                get {
                    if (this.IsIdGeneradoNull()) {
                        return null;
                    }
                    else {
                        return ((string)(this[this.tabletsh_Conversiones.IdGeneradoColumn]));
                    }
                }
                set {
                    this[this.tabletsh_Conversiones.IdGeneradoColumn] = value;
                }
            }
            
            public string RowIdGenerado {
                get {
                    if (this.IsRowIdGeneradoNull()) {
                        return null;
                    }
                    else {
                        return ((string)(this[this.tabletsh_Conversiones.RowIdGeneradoColumn]));
                    }
                }
                set {
                    this[this.tabletsh_Conversiones.RowIdGeneradoColumn] = value;
                }
            }
            
            public bool IsNombreNull() {
                return this.IsNull(this.tabletsh_Conversiones.NombreColumn);
            }
            
            public void SetNombreNull() {
                this[this.tabletsh_Conversiones.NombreColumn] = System.Convert.DBNull;
            }
            
            public bool IsDescripcionNull() {
                return this.IsNull(this.tabletsh_Conversiones.DescripcionColumn);
            }
            
            public void SetDescripcionNull() {
                this[this.tabletsh_Conversiones.DescripcionColumn] = System.Convert.DBNull;
            }
            
            public bool IsFechaCreacionNull() {
                return this.IsNull(this.tabletsh_Conversiones.FechaCreacionColumn);
            }
            
            public void SetFechaCreacionNull() {
                this[this.tabletsh_Conversiones.FechaCreacionColumn] = System.Convert.DBNull;
            }
            
            public bool IsIdConexionCreacionNull() {
                return this.IsNull(this.tabletsh_Conversiones.IdConexionCreacionColumn);
            }
            
            public void SetIdConexionCreacionNull() {
                this[this.tabletsh_Conversiones.IdConexionCreacionColumn] = System.Convert.DBNull;
            }
            
            public bool IsUltimaModificacionNull() {
                return this.IsNull(this.tabletsh_Conversiones.UltimaModificacionColumn);
            }
            
            public void SetUltimaModificacionNull() {
                this[this.tabletsh_Conversiones.UltimaModificacionColumn] = System.Convert.DBNull;
            }
            
            public bool IsIdConexionUltimaModificacionNull() {
                return this.IsNull(this.tabletsh_Conversiones.IdConexionUltimaModificacionColumn);
            }
            
            public void SetIdConexionUltimaModificacionNull() {
                this[this.tabletsh_Conversiones.IdConexionUltimaModificacionColumn] = System.Convert.DBNull;
            }
            
            public bool IsIdReservadoNull() {
                return this.IsNull(this.tabletsh_Conversiones.IdReservadoColumn);
            }
            
            public void SetIdReservadoNull() {
                this[this.tabletsh_Conversiones.IdReservadoColumn] = System.Convert.DBNull;
            }
            
            public bool IsRowIdNull() {
                return this.IsNull(this.tabletsh_Conversiones.RowIdColumn);
            }
            
            public void SetRowIdNull() {
                this[this.tabletsh_Conversiones.RowIdColumn] = System.Convert.DBNull;
            }
            
            public bool IsIdEmpresaNull() {
                return this.IsNull(this.tabletsh_Conversiones.IdEmpresaColumn);
            }
            
            public void SetIdEmpresaNull() {
                this[this.tabletsh_Conversiones.IdEmpresaColumn] = System.Convert.DBNull;
            }
            
            public bool IsIdSucursalNull() {
                return this.IsNull(this.tabletsh_Conversiones.IdSucursalColumn);
            }
            
            public void SetIdSucursalNull() {
                this[this.tabletsh_Conversiones.IdSucursalColumn] = System.Convert.DBNull;
            }
            
            public bool IsIdGeneradoNull() {
                return this.IsNull(this.tabletsh_Conversiones.IdGeneradoColumn);
            }
            
            public void SetIdGeneradoNull() {
                this[this.tabletsh_Conversiones.IdGeneradoColumn] = System.Convert.DBNull;
            }
            
            public bool IsRowIdGeneradoNull() {
                return this.IsNull(this.tabletsh_Conversiones.RowIdGeneradoColumn);
            }
            
            public void SetRowIdGeneradoNull() {
                this[this.tabletsh_Conversiones.RowIdGeneradoColumn] = System.Convert.DBNull;
            }
            
            public tsh_DetalleConversionesRow[] Gettsh_DetalleConversionesRows() {
                return ((tsh_DetalleConversionesRow[])(this.GetChildRows(this.Table.ChildRelations["tsh_Conversionestsh_DetalleConversiones"])));
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class tsh_ConversionesRowChangeEvent : EventArgs {
            
            private tsh_ConversionesRow eventRow;
            
            private DataRowAction eventAction;
            
            public tsh_ConversionesRowChangeEvent(tsh_ConversionesRow row, DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            public tsh_ConversionesRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            public DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class tsh_DetalleConversionesDataTable : DataTable, System.Collections.IEnumerable {
            
            private DataColumn columnIdConversion;
            
            private DataColumn columnIdUnidadOrigen;
            
            private DataColumn columnIdUnidadDestino;
            
            private DataColumn columnOrdinal;
            
            private DataColumn columnValorConversion;
            
            private DataColumn columnFormulaConversion;
            
            private DataColumn columnFechaCreacion;
            
            private DataColumn columnIdConexionCreacion;
            
            private DataColumn columnUltimaModificacion;
            
            private DataColumn columnIdConexionUltimaModificacion;
            
            private DataColumn columnIdReservado;
            
            private DataColumn columnRowId;
            
            private DataColumn columnIdEmpresa;
            
            private DataColumn columnIdSucursal;
            
            private DataColumn columnRowIdGenerado;
            
            private DataColumn columnIsDefault;
            
            internal tsh_DetalleConversionesDataTable() : 
                    base("tsh_DetalleConversiones") {
                this.InitClass();
            }
            
            internal tsh_DetalleConversionesDataTable(DataTable table) : 
                    base(table.TableName) {
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
                this.DisplayExpression = table.DisplayExpression;
            }
            
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            internal DataColumn IdConversionColumn {
                get {
                    return this.columnIdConversion;
                }
            }
            
            internal DataColumn IdUnidadOrigenColumn {
                get {
                    return this.columnIdUnidadOrigen;
                }
            }
            
            internal DataColumn IdUnidadDestinoColumn {
                get {
                    return this.columnIdUnidadDestino;
                }
            }
            
            internal DataColumn OrdinalColumn {
                get {
                    return this.columnOrdinal;
                }
            }
            
            internal DataColumn ValorConversionColumn {
                get {
                    return this.columnValorConversion;
                }
            }
            
            internal DataColumn FormulaConversionColumn {
                get {
                    return this.columnFormulaConversion;
                }
            }
            
            internal DataColumn FechaCreacionColumn {
                get {
                    return this.columnFechaCreacion;
                }
            }
            
            internal DataColumn IdConexionCreacionColumn {
                get {
                    return this.columnIdConexionCreacion;
                }
            }
            
            internal DataColumn UltimaModificacionColumn {
                get {
                    return this.columnUltimaModificacion;
                }
            }
            
            internal DataColumn IdConexionUltimaModificacionColumn {
                get {
                    return this.columnIdConexionUltimaModificacion;
                }
            }
            
            internal DataColumn IdReservadoColumn {
                get {
                    return this.columnIdReservado;
                }
            }
            
            internal DataColumn RowIdColumn {
                get {
                    return this.columnRowId;
                }
            }
            
            internal DataColumn IdEmpresaColumn {
                get {
                    return this.columnIdEmpresa;
                }
            }
            
            internal DataColumn IdSucursalColumn {
                get {
                    return this.columnIdSucursal;
                }
            }
            
            internal DataColumn RowIdGeneradoColumn {
                get {
                    return this.columnRowIdGenerado;
                }
            }
            
            internal DataColumn IsDefaultColumn {
                get {
                    return this.columnIsDefault;
                }
            }
            
            public tsh_DetalleConversionesRow this[int index] {
                get {
                    return ((tsh_DetalleConversionesRow)(this.Rows[index]));
                }
            }
            
            public event tsh_DetalleConversionesRowChangeEventHandler tsh_DetalleConversionesRowChanged;
            
            public event tsh_DetalleConversionesRowChangeEventHandler tsh_DetalleConversionesRowChanging;
            
            public event tsh_DetalleConversionesRowChangeEventHandler tsh_DetalleConversionesRowDeleted;
            
            public event tsh_DetalleConversionesRowChangeEventHandler tsh_DetalleConversionesRowDeleting;
            
            public void Addtsh_DetalleConversionesRow(tsh_DetalleConversionesRow row) {
                this.Rows.Add(row);
            }
            
            public tsh_DetalleConversionesRow Addtsh_DetalleConversionesRow(
                        tsh_ConversionesRow parenttsh_ConversionesRowBytsh_Conversionestsh_DetalleConversiones, 
                        string IdUnidadOrigen, 
                        string IdUnidadDestino, 
                        int Ordinal, 
                        System.Decimal ValorConversion, 
                        string FormulaConversion, 
                        System.DateTime FechaCreacion, 
                        long IdConexionCreacion, 
                        System.Byte[] UltimaModificacion, 
                        long IdConexionUltimaModificacion, 
                        long IdReservado, 
                        System.Guid RowId, 
                        long IdEmpresa, 
                        long IdSucursal, 
                        string RowIdGenerado, 
                        bool IsDefault) {
                tsh_DetalleConversionesRow rowtsh_DetalleConversionesRow = ((tsh_DetalleConversionesRow)(this.NewRow()));
                rowtsh_DetalleConversionesRow.ItemArray = new object[] {
                        parenttsh_ConversionesRowBytsh_Conversionestsh_DetalleConversiones[0],
                        IdUnidadOrigen,
                        IdUnidadDestino,
                        Ordinal,
                        ValorConversion,
                        FormulaConversion,
                        FechaCreacion,
                        IdConexionCreacion,
                        UltimaModificacion,
                        IdConexionUltimaModificacion,
                        IdReservado,
                        RowId,
                        IdEmpresa,
                        IdSucursal,
                        RowIdGenerado,
                        IsDefault};
                this.Rows.Add(rowtsh_DetalleConversionesRow);
                return rowtsh_DetalleConversionesRow;
            }
            
            public tsh_DetalleConversionesRow FindByIdConversionIdUnidadOrigenIdUnidadDestinoOrdinal(string IdConversion, string IdUnidadOrigen, string IdUnidadDestino, int Ordinal) {
                return ((tsh_DetalleConversionesRow)(this.Rows.Find(new object[] {
                            IdConversion,
                            IdUnidadOrigen,
                            IdUnidadDestino,
                            Ordinal})));
            }
            
            public System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            public override DataTable Clone() {
                tsh_DetalleConversionesDataTable cln = ((tsh_DetalleConversionesDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            protected override DataTable CreateInstance() {
                return new tsh_DetalleConversionesDataTable();
            }
            
            internal void InitVars() {
                this.columnIdConversion = this.Columns["IdConversion"];
                this.columnIdUnidadOrigen = this.Columns["IdUnidadOrigen"];
                this.columnIdUnidadDestino = this.Columns["IdUnidadDestino"];
                this.columnOrdinal = this.Columns["Ordinal"];
                this.columnValorConversion = this.Columns["ValorConversion"];
                this.columnFormulaConversion = this.Columns["FormulaConversion"];
                this.columnFechaCreacion = this.Columns["FechaCreacion"];
                this.columnIdConexionCreacion = this.Columns["IdConexionCreacion"];
                this.columnUltimaModificacion = this.Columns["UltimaModificacion"];
                this.columnIdConexionUltimaModificacion = this.Columns["IdConexionUltimaModificacion"];
                this.columnIdReservado = this.Columns["IdReservado"];
                this.columnRowId = this.Columns["RowId"];
                this.columnIdEmpresa = this.Columns["IdEmpresa"];
                this.columnIdSucursal = this.Columns["IdSucursal"];
                this.columnRowIdGenerado = this.Columns["RowIdGenerado"];
                this.columnIsDefault = this.Columns["IsDefault"];
            }
            
            private void InitClass() {
                this.columnIdConversion = new DataColumn("IdConversion", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdConversion);
                this.columnIdUnidadOrigen = new DataColumn("IdUnidadOrigen", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdUnidadOrigen);
                this.columnIdUnidadDestino = new DataColumn("IdUnidadDestino", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdUnidadDestino);
                this.columnOrdinal = new DataColumn("Ordinal", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnOrdinal);
                this.columnValorConversion = new DataColumn("ValorConversion", typeof(System.Decimal), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnValorConversion);
                this.columnFormulaConversion = new DataColumn("FormulaConversion", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnFormulaConversion);
                this.columnFechaCreacion = new DataColumn("FechaCreacion", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnFechaCreacion);
                this.columnIdConexionCreacion = new DataColumn("IdConexionCreacion", typeof(long), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdConexionCreacion);
                this.columnUltimaModificacion = new DataColumn("UltimaModificacion", typeof(System.Byte[]), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnUltimaModificacion);
                this.columnIdConexionUltimaModificacion = new DataColumn("IdConexionUltimaModificacion", typeof(long), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdConexionUltimaModificacion);
                this.columnIdReservado = new DataColumn("IdReservado", typeof(long), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdReservado);
                this.columnRowId = new DataColumn("RowId", typeof(System.Guid), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnRowId);
                this.columnIdEmpresa = new DataColumn("IdEmpresa", typeof(long), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdEmpresa);
                this.columnIdSucursal = new DataColumn("IdSucursal", typeof(long), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdSucursal);
                this.columnRowIdGenerado = new DataColumn("RowIdGenerado", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnRowIdGenerado);
                this.columnIsDefault = new DataColumn("IsDefault", typeof(bool), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIsDefault);
                this.Constraints.Add(new UniqueConstraint("tsh_ConversionesExKey2", new DataColumn[] {
                                this.columnIdConversion,
                                this.columnIdUnidadOrigen,
                                this.columnIdUnidadDestino,
                                this.columnOrdinal}, true));
                this.columnIdConversion.AllowDBNull = false;
                this.columnIdUnidadOrigen.AllowDBNull = false;
                this.columnIdUnidadDestino.AllowDBNull = false;
                this.columnOrdinal.AllowDBNull = false;
                this.columnUltimaModificacion.ReadOnly = true;
            }
            
            public tsh_DetalleConversionesRow Newtsh_DetalleConversionesRow() {
                return ((tsh_DetalleConversionesRow)(this.NewRow()));
            }
            
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder) {
                return new tsh_DetalleConversionesRow(builder);
            }
            
            protected override System.Type GetRowType() {
                return typeof(tsh_DetalleConversionesRow);
            }
            
            protected override void OnRowChanged(DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.tsh_DetalleConversionesRowChanged != null)) {
                    this.tsh_DetalleConversionesRowChanged(this, new tsh_DetalleConversionesRowChangeEvent(((tsh_DetalleConversionesRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowChanging(DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.tsh_DetalleConversionesRowChanging != null)) {
                    this.tsh_DetalleConversionesRowChanging(this, new tsh_DetalleConversionesRowChangeEvent(((tsh_DetalleConversionesRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleted(DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.tsh_DetalleConversionesRowDeleted != null)) {
                    this.tsh_DetalleConversionesRowDeleted(this, new tsh_DetalleConversionesRowChangeEvent(((tsh_DetalleConversionesRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleting(DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.tsh_DetalleConversionesRowDeleting != null)) {
                    this.tsh_DetalleConversionesRowDeleting(this, new tsh_DetalleConversionesRowChangeEvent(((tsh_DetalleConversionesRow)(e.Row)), e.Action));
                }
            }
            
            public void Removetsh_DetalleConversionesRow(tsh_DetalleConversionesRow row) {
                this.Rows.Remove(row);
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class tsh_DetalleConversionesRow : DataRow {
            
            private tsh_DetalleConversionesDataTable tabletsh_DetalleConversiones;
            
            internal tsh_DetalleConversionesRow(DataRowBuilder rb) : 
                    base(rb) {
                this.tabletsh_DetalleConversiones = ((tsh_DetalleConversionesDataTable)(this.Table));
            }
            
            public string IdConversion {
                get {
                    return ((string)(this[this.tabletsh_DetalleConversiones.IdConversionColumn]));
                }
                set {
                    this[this.tabletsh_DetalleConversiones.IdConversionColumn] = value;
                }
            }
            
            public string IdUnidadOrigen {
                get {
                    return ((string)(this[this.tabletsh_DetalleConversiones.IdUnidadOrigenColumn]));
                }
                set {
                    this[this.tabletsh_DetalleConversiones.IdUnidadOrigenColumn] = value;
                }
            }
            
            public string IdUnidadDestino {
                get {
                    return ((string)(this[this.tabletsh_DetalleConversiones.IdUnidadDestinoColumn]));
                }
                set {
                    this[this.tabletsh_DetalleConversiones.IdUnidadDestinoColumn] = value;
                }
            }
            
            public int Ordinal {
                get {
                    return ((int)(this[this.tabletsh_DetalleConversiones.OrdinalColumn]));
                }
                set {
                    this[this.tabletsh_DetalleConversiones.OrdinalColumn] = value;
                }
            }
            
            public System.Decimal ValorConversion {
                get {
                    try {
                        return ((System.Decimal)(this[this.tabletsh_DetalleConversiones.ValorConversionColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletsh_DetalleConversiones.ValorConversionColumn] = value;
                }
            }
            
            public string FormulaConversion {
                get {
                    if (this.IsFormulaConversionNull()) {
                        return null;
                    }
                    else {
                        return ((string)(this[this.tabletsh_DetalleConversiones.FormulaConversionColumn]));
                    }
                }
                set {
                    this[this.tabletsh_DetalleConversiones.FormulaConversionColumn] = value;
                }
            }
            
            public System.DateTime FechaCreacion {
                get {
                    try {
                        return ((System.DateTime)(this[this.tabletsh_DetalleConversiones.FechaCreacionColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletsh_DetalleConversiones.FechaCreacionColumn] = value;
                }
            }
            
            public long IdConexionCreacion {
                get {
                    try {
                        return ((long)(this[this.tabletsh_DetalleConversiones.IdConexionCreacionColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletsh_DetalleConversiones.IdConexionCreacionColumn] = value;
                }
            }
            
            public System.Byte[] UltimaModificacion {
                get {
                    try {
                        return ((System.Byte[])(this[this.tabletsh_DetalleConversiones.UltimaModificacionColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletsh_DetalleConversiones.UltimaModificacionColumn] = value;
                }
            }
            
            public long IdConexionUltimaModificacion {
                get {
                    try {
                        return ((long)(this[this.tabletsh_DetalleConversiones.IdConexionUltimaModificacionColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletsh_DetalleConversiones.IdConexionUltimaModificacionColumn] = value;
                }
            }
            
            public long IdReservado {
                get {
                    try {
                        return ((long)(this[this.tabletsh_DetalleConversiones.IdReservadoColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletsh_DetalleConversiones.IdReservadoColumn] = value;
                }
            }
            
            public System.Guid RowId {
                get {
                    try {
                        return ((System.Guid)(this[this.tabletsh_DetalleConversiones.RowIdColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletsh_DetalleConversiones.RowIdColumn] = value;
                }
            }
            
            public long IdEmpresa {
                get {
                    try {
                        return ((long)(this[this.tabletsh_DetalleConversiones.IdEmpresaColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletsh_DetalleConversiones.IdEmpresaColumn] = value;
                }
            }
            
            public long IdSucursal {
                get {
                    try {
                        return ((long)(this[this.tabletsh_DetalleConversiones.IdSucursalColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletsh_DetalleConversiones.IdSucursalColumn] = value;
                }
            }
            
            public string RowIdGenerado {
                get {
                    if (this.IsRowIdGeneradoNull()) {
                        return null;
                    }
                    else {
                        return ((string)(this[this.tabletsh_DetalleConversiones.RowIdGeneradoColumn]));
                    }
                }
                set {
                    this[this.tabletsh_DetalleConversiones.RowIdGeneradoColumn] = value;
                }
            }
            
            public bool IsDefault {
                get {
                    try {
                        return ((bool)(this[this.tabletsh_DetalleConversiones.IsDefaultColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletsh_DetalleConversiones.IsDefaultColumn] = value;
                }
            }
            
            public tsh_ConversionesRow tsh_ConversionesRow {
                get {
                    return ((tsh_ConversionesRow)(this.GetParentRow(this.Table.ParentRelations["tsh_Conversionestsh_DetalleConversiones"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["tsh_Conversionestsh_DetalleConversiones"]);
                }
            }
            
            public bool IsValorConversionNull() {
                return this.IsNull(this.tabletsh_DetalleConversiones.ValorConversionColumn);
            }
            
            public void SetValorConversionNull() {
                this[this.tabletsh_DetalleConversiones.ValorConversionColumn] = System.Convert.DBNull;
            }
            
            public bool IsFormulaConversionNull() {
                return this.IsNull(this.tabletsh_DetalleConversiones.FormulaConversionColumn);
            }
            
            public void SetFormulaConversionNull() {
                this[this.tabletsh_DetalleConversiones.FormulaConversionColumn] = System.Convert.DBNull;
            }
            
            public bool IsFechaCreacionNull() {
                return this.IsNull(this.tabletsh_DetalleConversiones.FechaCreacionColumn);
            }
            
            public void SetFechaCreacionNull() {
                this[this.tabletsh_DetalleConversiones.FechaCreacionColumn] = System.Convert.DBNull;
            }
            
            public bool IsIdConexionCreacionNull() {
                return this.IsNull(this.tabletsh_DetalleConversiones.IdConexionCreacionColumn);
            }
            
            public void SetIdConexionCreacionNull() {
                this[this.tabletsh_DetalleConversiones.IdConexionCreacionColumn] = System.Convert.DBNull;
            }
            
            public bool IsUltimaModificacionNull() {
                return this.IsNull(this.tabletsh_DetalleConversiones.UltimaModificacionColumn);
            }
            
            public void SetUltimaModificacionNull() {
                this[this.tabletsh_DetalleConversiones.UltimaModificacionColumn] = System.Convert.DBNull;
            }
            
            public bool IsIdConexionUltimaModificacionNull() {
                return this.IsNull(this.tabletsh_DetalleConversiones.IdConexionUltimaModificacionColumn);
            }
            
            public void SetIdConexionUltimaModificacionNull() {
                this[this.tabletsh_DetalleConversiones.IdConexionUltimaModificacionColumn] = System.Convert.DBNull;
            }
            
            public bool IsIdReservadoNull() {
                return this.IsNull(this.tabletsh_DetalleConversiones.IdReservadoColumn);
            }
            
            public void SetIdReservadoNull() {
                this[this.tabletsh_DetalleConversiones.IdReservadoColumn] = System.Convert.DBNull;
            }
            
            public bool IsRowIdNull() {
                return this.IsNull(this.tabletsh_DetalleConversiones.RowIdColumn);
            }
            
            public void SetRowIdNull() {
                this[this.tabletsh_DetalleConversiones.RowIdColumn] = System.Convert.DBNull;
            }
            
            public bool IsIdEmpresaNull() {
                return this.IsNull(this.tabletsh_DetalleConversiones.IdEmpresaColumn);
            }
            
            public void SetIdEmpresaNull() {
                this[this.tabletsh_DetalleConversiones.IdEmpresaColumn] = System.Convert.DBNull;
            }
            
            public bool IsIdSucursalNull() {
                return this.IsNull(this.tabletsh_DetalleConversiones.IdSucursalColumn);
            }
            
            public void SetIdSucursalNull() {
                this[this.tabletsh_DetalleConversiones.IdSucursalColumn] = System.Convert.DBNull;
            }
            
            public bool IsRowIdGeneradoNull() {
                return this.IsNull(this.tabletsh_DetalleConversiones.RowIdGeneradoColumn);
            }
            
            public void SetRowIdGeneradoNull() {
                this[this.tabletsh_DetalleConversiones.RowIdGeneradoColumn] = System.Convert.DBNull;
            }
            
            public bool IsIsDefaultNull() {
                return this.IsNull(this.tabletsh_DetalleConversiones.IsDefaultColumn);
            }
            
            public void SetIsDefaultNull() {
                this[this.tabletsh_DetalleConversiones.IsDefaultColumn] = System.Convert.DBNull;
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class tsh_DetalleConversionesRowChangeEvent : EventArgs {
            
            private tsh_DetalleConversionesRow eventRow;
            
            private DataRowAction eventAction;
            
            public tsh_DetalleConversionesRowChangeEvent(tsh_DetalleConversionesRow row, DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            public tsh_DetalleConversionesRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            public DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
