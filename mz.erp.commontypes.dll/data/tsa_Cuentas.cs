//------------------------------------------------------------------------------
// <autogenerated>
//     This code was generated by a tool.
//     Runtime Version: 1.1.4322.2407
//
//     Changes to this file may cause incorrect behavior and will be lost if 
//     the code is regenerated.
// </autogenerated>
//------------------------------------------------------------------------------

namespace mz.erp.commontypes.data {
    using System;
    using System.Data;
    using System.Xml;
    using System.Runtime.Serialization;
    
    
    [Serializable()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Diagnostics.DebuggerStepThrough()]
    [System.ComponentModel.ToolboxItem(true)]
    public class tsa_CuentasDataset : DataSet {
        
        private tsa_CuentasDataTable tabletsa_Cuentas;
        
        public tsa_CuentasDataset() {
            this.InitClass();
            System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            this.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        protected tsa_CuentasDataset(SerializationInfo info, StreamingContext context) {
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((strSchema != null)) {
                DataSet ds = new DataSet();
                ds.ReadXmlSchema(new XmlTextReader(new System.IO.StringReader(strSchema)));
                if ((ds.Tables["tsa_Cuentas"] != null)) {
                    this.Tables.Add(new tsa_CuentasDataTable(ds.Tables["tsa_Cuentas"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.InitClass();
            }
            this.GetSerializationData(info, context);
            System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            this.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public tsa_CuentasDataTable tsa_Cuentas {
            get {
                return this.tabletsa_Cuentas;
            }
        }
        
        public override DataSet Clone() {
            tsa_CuentasDataset cln = ((tsa_CuentasDataset)(base.Clone()));
            cln.InitVars();
            return cln;
        }
        
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        protected override void ReadXmlSerializable(XmlReader reader) {
            this.Reset();
            DataSet ds = new DataSet();
            ds.ReadXml(reader);
            if ((ds.Tables["tsa_Cuentas"] != null)) {
                this.Tables.Add(new tsa_CuentasDataTable(ds.Tables["tsa_Cuentas"]));
            }
            this.DataSetName = ds.DataSetName;
            this.Prefix = ds.Prefix;
            this.Namespace = ds.Namespace;
            this.Locale = ds.Locale;
            this.CaseSensitive = ds.CaseSensitive;
            this.EnforceConstraints = ds.EnforceConstraints;
            this.Merge(ds, false, System.Data.MissingSchemaAction.Add);
            this.InitVars();
        }
        
        protected override System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            System.IO.MemoryStream stream = new System.IO.MemoryStream();
            this.WriteXmlSchema(new XmlTextWriter(stream, null));
            stream.Position = 0;
            return System.Xml.Schema.XmlSchema.Read(new XmlTextReader(stream), null);
        }
        
        internal void InitVars() {
            this.tabletsa_Cuentas = ((tsa_CuentasDataTable)(this.Tables["tsa_Cuentas"]));
            if ((this.tabletsa_Cuentas != null)) {
                this.tabletsa_Cuentas.InitVars();
            }
        }
        
        private void InitClass() {
            this.DataSetName = "tsa_CuentasDataset";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/tsa_Cuentas.xsd";
            this.Locale = new System.Globalization.CultureInfo("en-US");
            this.CaseSensitive = false;
            this.EnforceConstraints = true;
            this.tabletsa_Cuentas = new tsa_CuentasDataTable();
            this.Tables.Add(this.tabletsa_Cuentas);
        }
        
        private bool ShouldSerializetsa_Cuentas() {
            return false;
        }
        
        private void SchemaChanged(object sender, System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        public delegate void tsa_CuentasRowChangeEventHandler(object sender, tsa_CuentasRowChangeEvent e);
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class tsa_CuentasDataTable : DataTable, System.Collections.IEnumerable {
            
            private DataColumn columnIdCuenta;
            
            private DataColumn columnCodigo;
            
            private DataColumn columnNombre;
            
            private DataColumn columnDomicilio;
            
            private DataColumn columnHorarioComercial;
            
            private DataColumn columnidTipoDocumento;
            
            private DataColumn columnDocumento;
            
            private DataColumn columnIdCategoriaIva;
            
            private DataColumn columnCampoAuxiliar1;
            
            private DataColumn columnCampoAuxiliar2;
            
            private DataColumn columnCampoAuxiliar3;
            
            private DataColumn columnIdCuentaPrincipal;
            
            private DataColumn columnJerarquia;
            
            private DataColumn columnIdTitular;
            
            private DataColumn columnObservaciones;
            
            private DataColumn columnActivo;
            
            private DataColumn columnFechaCreacion;
            
            private DataColumn columnIdConexionCreacion;
            
            private DataColumn columnUltimaModificacion;
            
            private DataColumn columnIdConexionUltimaModificacion;
            
            private DataColumn columnIdReservado;
            
            private DataColumn columnRowId;
            
            private DataColumn columnIdSucursal;
            
            private DataColumn columnIdEmpresa;
            
            private DataColumn columnIdBonificacion;
            
            private DataColumn columnTelefono;
            
            private DataColumn columnLimiteDeCredito;
            
            private DataColumn columnExcluyePercepcionIB;
            
            private DataColumn columnEmail;
            
            private DataColumn columnIdDomicilioDefault;
            
            private DataColumn columnIdListaDePreciosDefault;
            
            private DataColumn columnAlicuotaPercepcionIngresosBrutos;
            
            private DataColumn columnSaldoCtaCte;
            
            private DataColumn columnSaldoCtaCteDV;
            
            private DataColumn columnIdResponsableCreacion;
            
            private DataColumn columnDiasLimiteDeCredito;
            
            internal tsa_CuentasDataTable() : 
                    base("tsa_Cuentas") {
                this.InitClass();
            }
            
            internal tsa_CuentasDataTable(DataTable table) : 
                    base(table.TableName) {
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
                this.DisplayExpression = table.DisplayExpression;
            }
            
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            internal DataColumn IdCuentaColumn {
                get {
                    return this.columnIdCuenta;
                }
            }
            
            internal DataColumn CodigoColumn {
                get {
                    return this.columnCodigo;
                }
            }
            
            internal DataColumn NombreColumn {
                get {
                    return this.columnNombre;
                }
            }
            
            internal DataColumn DomicilioColumn {
                get {
                    return this.columnDomicilio;
                }
            }
            
            internal DataColumn HorarioComercialColumn {
                get {
                    return this.columnHorarioComercial;
                }
            }
            
            internal DataColumn idTipoDocumentoColumn {
                get {
                    return this.columnidTipoDocumento;
                }
            }
            
            internal DataColumn DocumentoColumn {
                get {
                    return this.columnDocumento;
                }
            }
            
            internal DataColumn IdCategoriaIvaColumn {
                get {
                    return this.columnIdCategoriaIva;
                }
            }
            
            internal DataColumn CampoAuxiliar1Column {
                get {
                    return this.columnCampoAuxiliar1;
                }
            }
            
            internal DataColumn CampoAuxiliar2Column {
                get {
                    return this.columnCampoAuxiliar2;
                }
            }
            
            internal DataColumn CampoAuxiliar3Column {
                get {
                    return this.columnCampoAuxiliar3;
                }
            }
            
            internal DataColumn IdCuentaPrincipalColumn {
                get {
                    return this.columnIdCuentaPrincipal;
                }
            }
            
            internal DataColumn JerarquiaColumn {
                get {
                    return this.columnJerarquia;
                }
            }
            
            internal DataColumn IdTitularColumn {
                get {
                    return this.columnIdTitular;
                }
            }
            
            internal DataColumn ObservacionesColumn {
                get {
                    return this.columnObservaciones;
                }
            }
            
            internal DataColumn ActivoColumn {
                get {
                    return this.columnActivo;
                }
            }
            
            internal DataColumn FechaCreacionColumn {
                get {
                    return this.columnFechaCreacion;
                }
            }
            
            internal DataColumn IdConexionCreacionColumn {
                get {
                    return this.columnIdConexionCreacion;
                }
            }
            
            internal DataColumn UltimaModificacionColumn {
                get {
                    return this.columnUltimaModificacion;
                }
            }
            
            internal DataColumn IdConexionUltimaModificacionColumn {
                get {
                    return this.columnIdConexionUltimaModificacion;
                }
            }
            
            internal DataColumn IdReservadoColumn {
                get {
                    return this.columnIdReservado;
                }
            }
            
            internal DataColumn RowIdColumn {
                get {
                    return this.columnRowId;
                }
            }
            
            internal DataColumn IdSucursalColumn {
                get {
                    return this.columnIdSucursal;
                }
            }
            
            internal DataColumn IdEmpresaColumn {
                get {
                    return this.columnIdEmpresa;
                }
            }
            
            internal DataColumn IdBonificacionColumn {
                get {
                    return this.columnIdBonificacion;
                }
            }
            
            internal DataColumn TelefonoColumn {
                get {
                    return this.columnTelefono;
                }
            }
            
            internal DataColumn LimiteDeCreditoColumn {
                get {
                    return this.columnLimiteDeCredito;
                }
            }
            
            internal DataColumn ExcluyePercepcionIBColumn {
                get {
                    return this.columnExcluyePercepcionIB;
                }
            }
            
            internal DataColumn EmailColumn {
                get {
                    return this.columnEmail;
                }
            }
            
            internal DataColumn IdDomicilioDefaultColumn {
                get {
                    return this.columnIdDomicilioDefault;
                }
            }
            
            internal DataColumn IdListaDePreciosDefaultColumn {
                get {
                    return this.columnIdListaDePreciosDefault;
                }
            }
            
            internal DataColumn AlicuotaPercepcionIngresosBrutosColumn {
                get {
                    return this.columnAlicuotaPercepcionIngresosBrutos;
                }
            }
            
            internal DataColumn SaldoCtaCteColumn {
                get {
                    return this.columnSaldoCtaCte;
                }
            }
            
            internal DataColumn SaldoCtaCteDVColumn {
                get {
                    return this.columnSaldoCtaCteDV;
                }
            }
            
            internal DataColumn IdResponsableCreacionColumn {
                get {
                    return this.columnIdResponsableCreacion;
                }
            }
            
            internal DataColumn DiasLimiteDeCreditoColumn {
                get {
                    return this.columnDiasLimiteDeCredito;
                }
            }
            
            public tsa_CuentasRow this[int index] {
                get {
                    return ((tsa_CuentasRow)(this.Rows[index]));
                }
            }
            
            public event tsa_CuentasRowChangeEventHandler tsa_CuentasRowChanged;
            
            public event tsa_CuentasRowChangeEventHandler tsa_CuentasRowChanging;
            
            public event tsa_CuentasRowChangeEventHandler tsa_CuentasRowDeleted;
            
            public event tsa_CuentasRowChangeEventHandler tsa_CuentasRowDeleting;
            
            public void Addtsa_CuentasRow(tsa_CuentasRow row) {
                this.Rows.Add(row);
            }
            
            public tsa_CuentasRow Addtsa_CuentasRow(
                        string IdCuenta, 
                        string Codigo, 
                        string Nombre, 
                        string Domicilio, 
                        string HorarioComercial, 
                        string idTipoDocumento, 
                        string Documento, 
                        string IdCategoriaIva, 
                        string CampoAuxiliar1, 
                        string CampoAuxiliar2, 
                        string CampoAuxiliar3, 
                        string IdCuentaPrincipal, 
                        string Jerarquia, 
                        string IdTitular, 
                        string Observaciones, 
                        bool Activo, 
                        System.DateTime FechaCreacion, 
                        long IdConexionCreacion, 
                        System.Byte[] UltimaModificacion, 
                        long IdConexionUltimaModificacion, 
                        long IdReservado, 
                        System.Guid RowId, 
                        long IdSucursal, 
                        long IdEmpresa, 
                        string IdBonificacion, 
                        string Telefono, 
                        System.Decimal LimiteDeCredito, 
                        bool ExcluyePercepcionIB, 
                        string Email, 
                        string IdDomicilioDefault, 
                        string IdListaDePreciosDefault, 
                        System.Decimal AlicuotaPercepcionIngresosBrutos, 
                        System.Decimal SaldoCtaCte, 
                        System.Decimal SaldoCtaCteDV, 
                        string IdResponsableCreacion, 
                        System.Decimal DiasLimiteDeCredito) {
                tsa_CuentasRow rowtsa_CuentasRow = ((tsa_CuentasRow)(this.NewRow()));
                rowtsa_CuentasRow.ItemArray = new object[] {
                        IdCuenta,
                        Codigo,
                        Nombre,
                        Domicilio,
                        HorarioComercial,
                        idTipoDocumento,
                        Documento,
                        IdCategoriaIva,
                        CampoAuxiliar1,
                        CampoAuxiliar2,
                        CampoAuxiliar3,
                        IdCuentaPrincipal,
                        Jerarquia,
                        IdTitular,
                        Observaciones,
                        Activo,
                        FechaCreacion,
                        IdConexionCreacion,
                        UltimaModificacion,
                        IdConexionUltimaModificacion,
                        IdReservado,
                        RowId,
                        IdSucursal,
                        IdEmpresa,
                        IdBonificacion,
                        Telefono,
                        LimiteDeCredito,
                        ExcluyePercepcionIB,
                        Email,
                        IdDomicilioDefault,
                        IdListaDePreciosDefault,
                        AlicuotaPercepcionIngresosBrutos,
                        SaldoCtaCte,
                        SaldoCtaCteDV,
                        IdResponsableCreacion,
                        DiasLimiteDeCredito};
                this.Rows.Add(rowtsa_CuentasRow);
                return rowtsa_CuentasRow;
            }
            
            public tsa_CuentasRow FindByIdCuenta(string IdCuenta) {
                return ((tsa_CuentasRow)(this.Rows.Find(new object[] {
                            IdCuenta})));
            }
            
            public System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            public override DataTable Clone() {
                tsa_CuentasDataTable cln = ((tsa_CuentasDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            protected override DataTable CreateInstance() {
                return new tsa_CuentasDataTable();
            }
            
            internal void InitVars() {
                this.columnIdCuenta = this.Columns["IdCuenta"];
                this.columnCodigo = this.Columns["Codigo"];
                this.columnNombre = this.Columns["Nombre"];
                this.columnDomicilio = this.Columns["Domicilio"];
                this.columnHorarioComercial = this.Columns["HorarioComercial"];
                this.columnidTipoDocumento = this.Columns["idTipoDocumento"];
                this.columnDocumento = this.Columns["Documento"];
                this.columnIdCategoriaIva = this.Columns["IdCategoriaIva"];
                this.columnCampoAuxiliar1 = this.Columns["CampoAuxiliar1"];
                this.columnCampoAuxiliar2 = this.Columns["CampoAuxiliar2"];
                this.columnCampoAuxiliar3 = this.Columns["CampoAuxiliar3"];
                this.columnIdCuentaPrincipal = this.Columns["IdCuentaPrincipal"];
                this.columnJerarquia = this.Columns["Jerarquia"];
                this.columnIdTitular = this.Columns["IdTitular"];
                this.columnObservaciones = this.Columns["Observaciones"];
                this.columnActivo = this.Columns["Activo"];
                this.columnFechaCreacion = this.Columns["FechaCreacion"];
                this.columnIdConexionCreacion = this.Columns["IdConexionCreacion"];
                this.columnUltimaModificacion = this.Columns["UltimaModificacion"];
                this.columnIdConexionUltimaModificacion = this.Columns["IdConexionUltimaModificacion"];
                this.columnIdReservado = this.Columns["IdReservado"];
                this.columnRowId = this.Columns["RowId"];
                this.columnIdSucursal = this.Columns["IdSucursal"];
                this.columnIdEmpresa = this.Columns["IdEmpresa"];
                this.columnIdBonificacion = this.Columns["IdBonificacion"];
                this.columnTelefono = this.Columns["Telefono"];
                this.columnLimiteDeCredito = this.Columns["LimiteDeCredito"];
                this.columnExcluyePercepcionIB = this.Columns["ExcluyePercepcionIB"];
                this.columnEmail = this.Columns["Email"];
                this.columnIdDomicilioDefault = this.Columns["IdDomicilioDefault"];
                this.columnIdListaDePreciosDefault = this.Columns["IdListaDePreciosDefault"];
                this.columnAlicuotaPercepcionIngresosBrutos = this.Columns["AlicuotaPercepcionIngresosBrutos"];
                this.columnSaldoCtaCte = this.Columns["SaldoCtaCte"];
                this.columnSaldoCtaCteDV = this.Columns["SaldoCtaCteDV"];
                this.columnIdResponsableCreacion = this.Columns["IdResponsableCreacion"];
                this.columnDiasLimiteDeCredito = this.Columns["DiasLimiteDeCredito"];
            }
            
            private void InitClass() {
                this.columnIdCuenta = new DataColumn("IdCuenta", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdCuenta);
                this.columnCodigo = new DataColumn("Codigo", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnCodigo);
                this.columnNombre = new DataColumn("Nombre", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnNombre);
                this.columnDomicilio = new DataColumn("Domicilio", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnDomicilio);
                this.columnHorarioComercial = new DataColumn("HorarioComercial", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnHorarioComercial);
                this.columnidTipoDocumento = new DataColumn("idTipoDocumento", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnidTipoDocumento);
                this.columnDocumento = new DataColumn("Documento", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnDocumento);
                this.columnIdCategoriaIva = new DataColumn("IdCategoriaIva", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdCategoriaIva);
                this.columnCampoAuxiliar1 = new DataColumn("CampoAuxiliar1", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnCampoAuxiliar1);
                this.columnCampoAuxiliar2 = new DataColumn("CampoAuxiliar2", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnCampoAuxiliar2);
                this.columnCampoAuxiliar3 = new DataColumn("CampoAuxiliar3", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnCampoAuxiliar3);
                this.columnIdCuentaPrincipal = new DataColumn("IdCuentaPrincipal", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdCuentaPrincipal);
                this.columnJerarquia = new DataColumn("Jerarquia", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnJerarquia);
                this.columnIdTitular = new DataColumn("IdTitular", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdTitular);
                this.columnObservaciones = new DataColumn("Observaciones", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnObservaciones);
                this.columnActivo = new DataColumn("Activo", typeof(bool), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnActivo);
                this.columnFechaCreacion = new DataColumn("FechaCreacion", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnFechaCreacion);
                this.columnIdConexionCreacion = new DataColumn("IdConexionCreacion", typeof(long), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdConexionCreacion);
                this.columnUltimaModificacion = new DataColumn("UltimaModificacion", typeof(System.Byte[]), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnUltimaModificacion);
                this.columnIdConexionUltimaModificacion = new DataColumn("IdConexionUltimaModificacion", typeof(long), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdConexionUltimaModificacion);
                this.columnIdReservado = new DataColumn("IdReservado", typeof(long), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdReservado);
                this.columnRowId = new DataColumn("RowId", typeof(System.Guid), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnRowId);
                this.columnIdSucursal = new DataColumn("IdSucursal", typeof(long), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdSucursal);
                this.columnIdEmpresa = new DataColumn("IdEmpresa", typeof(long), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdEmpresa);
                this.columnIdBonificacion = new DataColumn("IdBonificacion", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdBonificacion);
                this.columnTelefono = new DataColumn("Telefono", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnTelefono);
                this.columnLimiteDeCredito = new DataColumn("LimiteDeCredito", typeof(System.Decimal), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnLimiteDeCredito);
                this.columnExcluyePercepcionIB = new DataColumn("ExcluyePercepcionIB", typeof(bool), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnExcluyePercepcionIB);
                this.columnEmail = new DataColumn("Email", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnEmail);
                this.columnIdDomicilioDefault = new DataColumn("IdDomicilioDefault", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdDomicilioDefault);
                this.columnIdListaDePreciosDefault = new DataColumn("IdListaDePreciosDefault", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdListaDePreciosDefault);
                this.columnAlicuotaPercepcionIngresosBrutos = new DataColumn("AlicuotaPercepcionIngresosBrutos", typeof(System.Decimal), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnAlicuotaPercepcionIngresosBrutos);
                this.columnSaldoCtaCte = new DataColumn("SaldoCtaCte", typeof(System.Decimal), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnSaldoCtaCte);
                this.columnSaldoCtaCteDV = new DataColumn("SaldoCtaCteDV", typeof(System.Decimal), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnSaldoCtaCteDV);
                this.columnIdResponsableCreacion = new DataColumn("IdResponsableCreacion", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdResponsableCreacion);
                this.columnDiasLimiteDeCredito = new DataColumn("DiasLimiteDeCredito", typeof(System.Decimal), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnDiasLimiteDeCredito);
                this.Constraints.Add(new UniqueConstraint("tsa_CuentasKey1", new DataColumn[] {
                                this.columnIdCuenta}, true));
                this.columnIdCuenta.AllowDBNull = false;
                this.columnIdCuenta.Unique = true;
                this.columnCodigo.AllowDBNull = false;
                this.columnNombre.AllowDBNull = false;
                this.columnLimiteDeCredito.DefaultValue = 0m;
                this.columnExcluyePercepcionIB.AllowDBNull = false;
            }
            
            public tsa_CuentasRow Newtsa_CuentasRow() {
                return ((tsa_CuentasRow)(this.NewRow()));
            }
            
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder) {
                return new tsa_CuentasRow(builder);
            }
            
            protected override System.Type GetRowType() {
                return typeof(tsa_CuentasRow);
            }
            
            protected override void OnRowChanged(DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.tsa_CuentasRowChanged != null)) {
                    this.tsa_CuentasRowChanged(this, new tsa_CuentasRowChangeEvent(((tsa_CuentasRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowChanging(DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.tsa_CuentasRowChanging != null)) {
                    this.tsa_CuentasRowChanging(this, new tsa_CuentasRowChangeEvent(((tsa_CuentasRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleted(DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.tsa_CuentasRowDeleted != null)) {
                    this.tsa_CuentasRowDeleted(this, new tsa_CuentasRowChangeEvent(((tsa_CuentasRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleting(DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.tsa_CuentasRowDeleting != null)) {
                    this.tsa_CuentasRowDeleting(this, new tsa_CuentasRowChangeEvent(((tsa_CuentasRow)(e.Row)), e.Action));
                }
            }
            
            public void Removetsa_CuentasRow(tsa_CuentasRow row) {
                this.Rows.Remove(row);
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class tsa_CuentasRow : DataRow {
            
            private tsa_CuentasDataTable tabletsa_Cuentas;
            
            internal tsa_CuentasRow(DataRowBuilder rb) : 
                    base(rb) {
                this.tabletsa_Cuentas = ((tsa_CuentasDataTable)(this.Table));
            }
            
            public string IdCuenta {
                get {
                    return ((string)(this[this.tabletsa_Cuentas.IdCuentaColumn]));
                }
                set {
                    this[this.tabletsa_Cuentas.IdCuentaColumn] = value;
                }
            }
            
            public string Codigo {
                get {
                    return ((string)(this[this.tabletsa_Cuentas.CodigoColumn]));
                }
                set {
                    this[this.tabletsa_Cuentas.CodigoColumn] = value;
                }
            }
            
            public string Nombre {
                get {
                    return ((string)(this[this.tabletsa_Cuentas.NombreColumn]));
                }
                set {
                    this[this.tabletsa_Cuentas.NombreColumn] = value;
                }
            }
            
            public string Domicilio {
                get {
                    try {
                        return ((string)(this[this.tabletsa_Cuentas.DomicilioColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletsa_Cuentas.DomicilioColumn] = value;
                }
            }
            
            public string HorarioComercial {
                get {
                    if (this.IsHorarioComercialNull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tabletsa_Cuentas.HorarioComercialColumn]));
                    }
                }
                set {
                    this[this.tabletsa_Cuentas.HorarioComercialColumn] = value;
                }
            }
            
            public string idTipoDocumento {
                get {
                    if (this.IsidTipoDocumentoNull()) {
                        return null;
                    }
                    else {
                        return ((string)(this[this.tabletsa_Cuentas.idTipoDocumentoColumn]));
                    }
                }
                set {
                    this[this.tabletsa_Cuentas.idTipoDocumentoColumn] = value;
                }
            }
            
            public string Documento {
                get {
                    if (this.IsDocumentoNull()) {
                        return null;
                    }
                    else {
                        return ((string)(this[this.tabletsa_Cuentas.DocumentoColumn]));
                    }
                }
                set {
                    this[this.tabletsa_Cuentas.DocumentoColumn] = value;
                }
            }
            
            public string IdCategoriaIva {
                get {
                    try {
                        return ((string)(this[this.tabletsa_Cuentas.IdCategoriaIvaColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletsa_Cuentas.IdCategoriaIvaColumn] = value;
                }
            }
            
            public string CampoAuxiliar1 {
                get {
                    if (this.IsCampoAuxiliar1Null()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tabletsa_Cuentas.CampoAuxiliar1Column]));
                    }
                }
                set {
                    this[this.tabletsa_Cuentas.CampoAuxiliar1Column] = value;
                }
            }
            
            public string CampoAuxiliar2 {
                get {
                    if (this.IsCampoAuxiliar2Null()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tabletsa_Cuentas.CampoAuxiliar2Column]));
                    }
                }
                set {
                    this[this.tabletsa_Cuentas.CampoAuxiliar2Column] = value;
                }
            }
            
            public string CampoAuxiliar3 {
                get {
                    if (this.IsCampoAuxiliar3Null()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tabletsa_Cuentas.CampoAuxiliar3Column]));
                    }
                }
                set {
                    this[this.tabletsa_Cuentas.CampoAuxiliar3Column] = value;
                }
            }
            
            public string IdCuentaPrincipal {
                get {
                    if (this.IsIdCuentaPrincipalNull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tabletsa_Cuentas.IdCuentaPrincipalColumn]));
                    }
                }
                set {
                    this[this.tabletsa_Cuentas.IdCuentaPrincipalColumn] = value;
                }
            }
            
            public string Jerarquia {
                get {
                    if (this.IsJerarquiaNull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tabletsa_Cuentas.JerarquiaColumn]));
                    }
                }
                set {
                    this[this.tabletsa_Cuentas.JerarquiaColumn] = value;
                }
            }
            
            public string IdTitular {
                get {
                    if (this.IsIdTitularNull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tabletsa_Cuentas.IdTitularColumn]));
                    }
                }
                set {
                    this[this.tabletsa_Cuentas.IdTitularColumn] = value;
                }
            }
            
            public string Observaciones {
                get {
                    if (this.IsObservacionesNull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tabletsa_Cuentas.ObservacionesColumn]));
                    }
                }
                set {
                    this[this.tabletsa_Cuentas.ObservacionesColumn] = value;
                }
            }
            
            public bool Activo {
                get {
                    try {
                        return ((bool)(this[this.tabletsa_Cuentas.ActivoColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletsa_Cuentas.ActivoColumn] = value;
                }
            }
            
            public System.DateTime FechaCreacion {
                get {
                    try {
                        return ((System.DateTime)(this[this.tabletsa_Cuentas.FechaCreacionColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletsa_Cuentas.FechaCreacionColumn] = value;
                }
            }
            
            public long IdConexionCreacion {
                get {
                    try {
                        return ((long)(this[this.tabletsa_Cuentas.IdConexionCreacionColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletsa_Cuentas.IdConexionCreacionColumn] = value;
                }
            }
            
            public System.Byte[] UltimaModificacion {
                get {
                    try {
                        return ((System.Byte[])(this[this.tabletsa_Cuentas.UltimaModificacionColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletsa_Cuentas.UltimaModificacionColumn] = value;
                }
            }
            
            public long IdConexionUltimaModificacion {
                get {
                    try {
                        return ((long)(this[this.tabletsa_Cuentas.IdConexionUltimaModificacionColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletsa_Cuentas.IdConexionUltimaModificacionColumn] = value;
                }
            }
            
            public long IdReservado {
                get {
                    try {
                        return ((long)(this[this.tabletsa_Cuentas.IdReservadoColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletsa_Cuentas.IdReservadoColumn] = value;
                }
            }
            
            public System.Guid RowId {
                get {
                    try {
                        return ((System.Guid)(this[this.tabletsa_Cuentas.RowIdColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletsa_Cuentas.RowIdColumn] = value;
                }
            }
            
            public long IdSucursal {
                get {
                    try {
                        return ((long)(this[this.tabletsa_Cuentas.IdSucursalColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletsa_Cuentas.IdSucursalColumn] = value;
                }
            }
            
            public long IdEmpresa {
                get {
                    try {
                        return ((long)(this[this.tabletsa_Cuentas.IdEmpresaColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletsa_Cuentas.IdEmpresaColumn] = value;
                }
            }
            
            public string IdBonificacion {
                get {
                    if (this.IsIdBonificacionNull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tabletsa_Cuentas.IdBonificacionColumn]));
                    }
                }
                set {
                    this[this.tabletsa_Cuentas.IdBonificacionColumn] = value;
                }
            }
            
            public string Telefono {
                get {
                    if (this.IsTelefonoNull()) {
                        return null;
                    }
                    else {
                        return ((string)(this[this.tabletsa_Cuentas.TelefonoColumn]));
                    }
                }
                set {
                    this[this.tabletsa_Cuentas.TelefonoColumn] = value;
                }
            }
            
            public System.Decimal LimiteDeCredito {
                get {
                    if (this.IsLimiteDeCreditoNull()) {
                        return 0m;
                    }
                    else {
                        return ((System.Decimal)(this[this.tabletsa_Cuentas.LimiteDeCreditoColumn]));
                    }
                }
                set {
                    this[this.tabletsa_Cuentas.LimiteDeCreditoColumn] = value;
                }
            }
            
            public bool ExcluyePercepcionIB {
                get {
                    return ((bool)(this[this.tabletsa_Cuentas.ExcluyePercepcionIBColumn]));
                }
                set {
                    this[this.tabletsa_Cuentas.ExcluyePercepcionIBColumn] = value;
                }
            }
            
            public string Email {
                get {
                    try {
                        return ((string)(this[this.tabletsa_Cuentas.EmailColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletsa_Cuentas.EmailColumn] = value;
                }
            }
            
            public string IdDomicilioDefault {
                get {
                    if (this.IsIdDomicilioDefaultNull()) {
                        return null;
                    }
                    else {
                        return ((string)(this[this.tabletsa_Cuentas.IdDomicilioDefaultColumn]));
                    }
                }
                set {
                    this[this.tabletsa_Cuentas.IdDomicilioDefaultColumn] = value;
                }
            }
            
            public string IdListaDePreciosDefault {
                get {
                    try {
                        return ((string)(this[this.tabletsa_Cuentas.IdListaDePreciosDefaultColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletsa_Cuentas.IdListaDePreciosDefaultColumn] = value;
                }
            }
            
            public System.Decimal AlicuotaPercepcionIngresosBrutos {
                get {
                    try {
                        return ((System.Decimal)(this[this.tabletsa_Cuentas.AlicuotaPercepcionIngresosBrutosColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletsa_Cuentas.AlicuotaPercepcionIngresosBrutosColumn] = value;
                }
            }
            
            public System.Decimal SaldoCtaCte {
                get {
                    try {
                        return ((System.Decimal)(this[this.tabletsa_Cuentas.SaldoCtaCteColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletsa_Cuentas.SaldoCtaCteColumn] = value;
                }
            }
            
            public System.Decimal SaldoCtaCteDV {
                get {
                    try {
                        return ((System.Decimal)(this[this.tabletsa_Cuentas.SaldoCtaCteDVColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletsa_Cuentas.SaldoCtaCteDVColumn] = value;
                }
            }
            
            public string IdResponsableCreacion {
                get {
                    try {
                        return ((string)(this[this.tabletsa_Cuentas.IdResponsableCreacionColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletsa_Cuentas.IdResponsableCreacionColumn] = value;
                }
            }
            
            public System.Decimal DiasLimiteDeCredito {
                get {
                    try {
                        return ((System.Decimal)(this[this.tabletsa_Cuentas.DiasLimiteDeCreditoColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletsa_Cuentas.DiasLimiteDeCreditoColumn] = value;
                }
            }
            
            public bool IsDomicilioNull() {
                return this.IsNull(this.tabletsa_Cuentas.DomicilioColumn);
            }
            
            public void SetDomicilioNull() {
                this[this.tabletsa_Cuentas.DomicilioColumn] = System.Convert.DBNull;
            }
            
            public bool IsHorarioComercialNull() {
                return this.IsNull(this.tabletsa_Cuentas.HorarioComercialColumn);
            }
            
            public void SetHorarioComercialNull() {
                this[this.tabletsa_Cuentas.HorarioComercialColumn] = System.Convert.DBNull;
            }
            
            public bool IsidTipoDocumentoNull() {
                return this.IsNull(this.tabletsa_Cuentas.idTipoDocumentoColumn);
            }
            
            public void SetidTipoDocumentoNull() {
                this[this.tabletsa_Cuentas.idTipoDocumentoColumn] = System.Convert.DBNull;
            }
            
            public bool IsDocumentoNull() {
                return this.IsNull(this.tabletsa_Cuentas.DocumentoColumn);
            }
            
            public void SetDocumentoNull() {
                this[this.tabletsa_Cuentas.DocumentoColumn] = System.Convert.DBNull;
            }
            
            public bool IsIdCategoriaIvaNull() {
                return this.IsNull(this.tabletsa_Cuentas.IdCategoriaIvaColumn);
            }
            
            public void SetIdCategoriaIvaNull() {
                this[this.tabletsa_Cuentas.IdCategoriaIvaColumn] = System.Convert.DBNull;
            }
            
            public bool IsCampoAuxiliar1Null() {
                return this.IsNull(this.tabletsa_Cuentas.CampoAuxiliar1Column);
            }
            
            public void SetCampoAuxiliar1Null() {
                this[this.tabletsa_Cuentas.CampoAuxiliar1Column] = System.Convert.DBNull;
            }
            
            public bool IsCampoAuxiliar2Null() {
                return this.IsNull(this.tabletsa_Cuentas.CampoAuxiliar2Column);
            }
            
            public void SetCampoAuxiliar2Null() {
                this[this.tabletsa_Cuentas.CampoAuxiliar2Column] = System.Convert.DBNull;
            }
            
            public bool IsCampoAuxiliar3Null() {
                return this.IsNull(this.tabletsa_Cuentas.CampoAuxiliar3Column);
            }
            
            public void SetCampoAuxiliar3Null() {
                this[this.tabletsa_Cuentas.CampoAuxiliar3Column] = System.Convert.DBNull;
            }
            
            public bool IsIdCuentaPrincipalNull() {
                return this.IsNull(this.tabletsa_Cuentas.IdCuentaPrincipalColumn);
            }
            
            public void SetIdCuentaPrincipalNull() {
                this[this.tabletsa_Cuentas.IdCuentaPrincipalColumn] = System.Convert.DBNull;
            }
            
            public bool IsJerarquiaNull() {
                return this.IsNull(this.tabletsa_Cuentas.JerarquiaColumn);
            }
            
            public void SetJerarquiaNull() {
                this[this.tabletsa_Cuentas.JerarquiaColumn] = System.Convert.DBNull;
            }
            
            public bool IsIdTitularNull() {
                return this.IsNull(this.tabletsa_Cuentas.IdTitularColumn);
            }
            
            public void SetIdTitularNull() {
                this[this.tabletsa_Cuentas.IdTitularColumn] = System.Convert.DBNull;
            }
            
            public bool IsObservacionesNull() {
                return this.IsNull(this.tabletsa_Cuentas.ObservacionesColumn);
            }
            
            public void SetObservacionesNull() {
                this[this.tabletsa_Cuentas.ObservacionesColumn] = System.Convert.DBNull;
            }
            
            public bool IsActivoNull() {
                return this.IsNull(this.tabletsa_Cuentas.ActivoColumn);
            }
            
            public void SetActivoNull() {
                this[this.tabletsa_Cuentas.ActivoColumn] = System.Convert.DBNull;
            }
            
            public bool IsFechaCreacionNull() {
                return this.IsNull(this.tabletsa_Cuentas.FechaCreacionColumn);
            }
            
            public void SetFechaCreacionNull() {
                this[this.tabletsa_Cuentas.FechaCreacionColumn] = System.Convert.DBNull;
            }
            
            public bool IsIdConexionCreacionNull() {
                return this.IsNull(this.tabletsa_Cuentas.IdConexionCreacionColumn);
            }
            
            public void SetIdConexionCreacionNull() {
                this[this.tabletsa_Cuentas.IdConexionCreacionColumn] = System.Convert.DBNull;
            }
            
            public bool IsUltimaModificacionNull() {
                return this.IsNull(this.tabletsa_Cuentas.UltimaModificacionColumn);
            }
            
            public void SetUltimaModificacionNull() {
                this[this.tabletsa_Cuentas.UltimaModificacionColumn] = System.Convert.DBNull;
            }
            
            public bool IsIdConexionUltimaModificacionNull() {
                return this.IsNull(this.tabletsa_Cuentas.IdConexionUltimaModificacionColumn);
            }
            
            public void SetIdConexionUltimaModificacionNull() {
                this[this.tabletsa_Cuentas.IdConexionUltimaModificacionColumn] = System.Convert.DBNull;
            }
            
            public bool IsIdReservadoNull() {
                return this.IsNull(this.tabletsa_Cuentas.IdReservadoColumn);
            }
            
            public void SetIdReservadoNull() {
                this[this.tabletsa_Cuentas.IdReservadoColumn] = System.Convert.DBNull;
            }
            
            public bool IsRowIdNull() {
                return this.IsNull(this.tabletsa_Cuentas.RowIdColumn);
            }
            
            public void SetRowIdNull() {
                this[this.tabletsa_Cuentas.RowIdColumn] = System.Convert.DBNull;
            }
            
            public bool IsIdSucursalNull() {
                return this.IsNull(this.tabletsa_Cuentas.IdSucursalColumn);
            }
            
            public void SetIdSucursalNull() {
                this[this.tabletsa_Cuentas.IdSucursalColumn] = System.Convert.DBNull;
            }
            
            public bool IsIdEmpresaNull() {
                return this.IsNull(this.tabletsa_Cuentas.IdEmpresaColumn);
            }
            
            public void SetIdEmpresaNull() {
                this[this.tabletsa_Cuentas.IdEmpresaColumn] = System.Convert.DBNull;
            }
            
            public bool IsIdBonificacionNull() {
                return this.IsNull(this.tabletsa_Cuentas.IdBonificacionColumn);
            }
            
            public void SetIdBonificacionNull() {
                this[this.tabletsa_Cuentas.IdBonificacionColumn] = System.Convert.DBNull;
            }
            
            public bool IsTelefonoNull() {
                return this.IsNull(this.tabletsa_Cuentas.TelefonoColumn);
            }
            
            public void SetTelefonoNull() {
                this[this.tabletsa_Cuentas.TelefonoColumn] = System.Convert.DBNull;
            }
            
            public bool IsLimiteDeCreditoNull() {
                return this.IsNull(this.tabletsa_Cuentas.LimiteDeCreditoColumn);
            }
            
            public void SetLimiteDeCreditoNull() {
                this[this.tabletsa_Cuentas.LimiteDeCreditoColumn] = System.Convert.DBNull;
            }
            
            public bool IsEmailNull() {
                return this.IsNull(this.tabletsa_Cuentas.EmailColumn);
            }
            
            public void SetEmailNull() {
                this[this.tabletsa_Cuentas.EmailColumn] = System.Convert.DBNull;
            }
            
            public bool IsIdDomicilioDefaultNull() {
                return this.IsNull(this.tabletsa_Cuentas.IdDomicilioDefaultColumn);
            }
            
            public void SetIdDomicilioDefaultNull() {
                this[this.tabletsa_Cuentas.IdDomicilioDefaultColumn] = System.Convert.DBNull;
            }
            
            public bool IsIdListaDePreciosDefaultNull() {
                return this.IsNull(this.tabletsa_Cuentas.IdListaDePreciosDefaultColumn);
            }
            
            public void SetIdListaDePreciosDefaultNull() {
                this[this.tabletsa_Cuentas.IdListaDePreciosDefaultColumn] = System.Convert.DBNull;
            }
            
            public bool IsAlicuotaPercepcionIngresosBrutosNull() {
                return this.IsNull(this.tabletsa_Cuentas.AlicuotaPercepcionIngresosBrutosColumn);
            }
            
            public void SetAlicuotaPercepcionIngresosBrutosNull() {
                this[this.tabletsa_Cuentas.AlicuotaPercepcionIngresosBrutosColumn] = System.Convert.DBNull;
            }
            
            public bool IsSaldoCtaCteNull() {
                return this.IsNull(this.tabletsa_Cuentas.SaldoCtaCteColumn);
            }
            
            public void SetSaldoCtaCteNull() {
                this[this.tabletsa_Cuentas.SaldoCtaCteColumn] = System.Convert.DBNull;
            }
            
            public bool IsSaldoCtaCteDVNull() {
                return this.IsNull(this.tabletsa_Cuentas.SaldoCtaCteDVColumn);
            }
            
            public void SetSaldoCtaCteDVNull() {
                this[this.tabletsa_Cuentas.SaldoCtaCteDVColumn] = System.Convert.DBNull;
            }
            
            public bool IsIdResponsableCreacionNull() {
                return this.IsNull(this.tabletsa_Cuentas.IdResponsableCreacionColumn);
            }
            
            public void SetIdResponsableCreacionNull() {
                this[this.tabletsa_Cuentas.IdResponsableCreacionColumn] = System.Convert.DBNull;
            }
            
            public bool IsDiasLimiteDeCreditoNull() {
                return this.IsNull(this.tabletsa_Cuentas.DiasLimiteDeCreditoColumn);
            }
            
            public void SetDiasLimiteDeCreditoNull() {
                this[this.tabletsa_Cuentas.DiasLimiteDeCreditoColumn] = System.Convert.DBNull;
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class tsa_CuentasRowChangeEvent : EventArgs {
            
            private tsa_CuentasRow eventRow;
            
            private DataRowAction eventAction;
            
            public tsa_CuentasRowChangeEvent(tsa_CuentasRow row, DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            public tsa_CuentasRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            public DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
