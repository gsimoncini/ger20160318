//------------------------------------------------------------------------------
// <autogenerated>
//     This code was generated by a tool.
//     Runtime Version: 1.1.4322.2463
//
//     Changes to this file may cause incorrect behavior and will be lost if 
//     the code is regenerated.
// </autogenerated>
//------------------------------------------------------------------------------

namespace mz.erp.commontypes.data {
    using System;
    using System.Data;
    using System.Xml;
    using System.Runtime.Serialization;
    
    
    [Serializable()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Diagnostics.DebuggerStepThrough()]
    [System.ComponentModel.ToolboxItem(true)]
    public class st_TareaDataset : DataSet {
        
        private st_TareaDataTable tablest_Tarea;
        
        public st_TareaDataset() {
            this.InitClass();
            System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            this.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        protected st_TareaDataset(SerializationInfo info, StreamingContext context) {
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((strSchema != null)) {
                DataSet ds = new DataSet();
                ds.ReadXmlSchema(new XmlTextReader(new System.IO.StringReader(strSchema)));
                if ((ds.Tables["st_Tarea"] != null)) {
                    this.Tables.Add(new st_TareaDataTable(ds.Tables["st_Tarea"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.InitClass();
            }
            this.GetSerializationData(info, context);
            System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            this.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public st_TareaDataTable st_Tarea {
            get {
                return this.tablest_Tarea;
            }
        }
        
        public override DataSet Clone() {
            st_TareaDataset cln = ((st_TareaDataset)(base.Clone()));
            cln.InitVars();
            return cln;
        }
        
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        protected override void ReadXmlSerializable(XmlReader reader) {
            this.Reset();
            DataSet ds = new DataSet();
            ds.ReadXml(reader);
            if ((ds.Tables["st_Tarea"] != null)) {
                this.Tables.Add(new st_TareaDataTable(ds.Tables["st_Tarea"]));
            }
            this.DataSetName = ds.DataSetName;
            this.Prefix = ds.Prefix;
            this.Namespace = ds.Namespace;
            this.Locale = ds.Locale;
            this.CaseSensitive = ds.CaseSensitive;
            this.EnforceConstraints = ds.EnforceConstraints;
            this.Merge(ds, false, System.Data.MissingSchemaAction.Add);
            this.InitVars();
        }
        
        protected override System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            System.IO.MemoryStream stream = new System.IO.MemoryStream();
            this.WriteXmlSchema(new XmlTextWriter(stream, null));
            stream.Position = 0;
            return System.Xml.Schema.XmlSchema.Read(new XmlTextReader(stream), null);
        }
        
        internal void InitVars() {
            this.tablest_Tarea = ((st_TareaDataTable)(this.Tables["st_Tarea"]));
            if ((this.tablest_Tarea != null)) {
                this.tablest_Tarea.InitVars();
            }
        }
        
        private void InitClass() {
            this.DataSetName = "st_TareaDataset";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/st_Tarea.xsd";
            this.Locale = new System.Globalization.CultureInfo("en-US");
            this.CaseSensitive = false;
            this.EnforceConstraints = true;
            this.tablest_Tarea = new st_TareaDataTable();
            this.Tables.Add(this.tablest_Tarea);
        }
        
        private bool ShouldSerializest_Tarea() {
            return false;
        }
        
        private void SchemaChanged(object sender, System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        public delegate void st_TareaRowChangeEventHandler(object sender, st_TareaRowChangeEvent e);
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class st_TareaDataTable : DataTable, System.Collections.IEnumerable {
            
            private DataColumn columnIdTarea;
            
            private DataColumn columnCodigo;
            
            private DataColumn columnDescripcion;
            
            private DataColumn columnFechaCreacion;
            
            private DataColumn columnIdConexionCreacion;
            
            private DataColumn columnUltimaModificacion;
            
            private DataColumn columnIdConexionUltimaModificacion;
            
            private DataColumn columnRowId;
            
            private DataColumn columnIdProducto;
            
            private DataColumn columnComplejidad;
            
            private DataColumn columnDuracion;
            
            private DataColumn columnValorTecnico;
            
            private DataColumn columnValorTecnicoProvisorio;
            
            internal st_TareaDataTable() : 
                    base("st_Tarea") {
                this.InitClass();
            }
            
            internal st_TareaDataTable(DataTable table) : 
                    base(table.TableName) {
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
                this.DisplayExpression = table.DisplayExpression;
            }
            
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            internal DataColumn IdTareaColumn {
                get {
                    return this.columnIdTarea;
                }
            }
            
            internal DataColumn CodigoColumn {
                get {
                    return this.columnCodigo;
                }
            }
            
            internal DataColumn DescripcionColumn {
                get {
                    return this.columnDescripcion;
                }
            }
            
            internal DataColumn FechaCreacionColumn {
                get {
                    return this.columnFechaCreacion;
                }
            }
            
            internal DataColumn IdConexionCreacionColumn {
                get {
                    return this.columnIdConexionCreacion;
                }
            }
            
            internal DataColumn UltimaModificacionColumn {
                get {
                    return this.columnUltimaModificacion;
                }
            }
            
            internal DataColumn IdConexionUltimaModificacionColumn {
                get {
                    return this.columnIdConexionUltimaModificacion;
                }
            }
            
            internal DataColumn RowIdColumn {
                get {
                    return this.columnRowId;
                }
            }
            
            internal DataColumn IdProductoColumn {
                get {
                    return this.columnIdProducto;
                }
            }
            
            internal DataColumn ComplejidadColumn {
                get {
                    return this.columnComplejidad;
                }
            }
            
            internal DataColumn DuracionColumn {
                get {
                    return this.columnDuracion;
                }
            }
            
            internal DataColumn ValorTecnicoColumn {
                get {
                    return this.columnValorTecnico;
                }
            }
            
            internal DataColumn ValorTecnicoProvisorioColumn {
                get {
                    return this.columnValorTecnicoProvisorio;
                }
            }
            
            public st_TareaRow this[int index] {
                get {
                    return ((st_TareaRow)(this.Rows[index]));
                }
            }
            
            public event st_TareaRowChangeEventHandler st_TareaRowChanged;
            
            public event st_TareaRowChangeEventHandler st_TareaRowChanging;
            
            public event st_TareaRowChangeEventHandler st_TareaRowDeleted;
            
            public event st_TareaRowChangeEventHandler st_TareaRowDeleting;
            
            public void Addst_TareaRow(st_TareaRow row) {
                this.Rows.Add(row);
            }
            
            public st_TareaRow Addst_TareaRow(long IdTarea, string Codigo, string Descripcion, System.DateTime FechaCreacion, long IdConexionCreacion, System.Byte[] UltimaModificacion, long IdConexionUltimaModificacion, System.Guid RowId, string IdProducto, string Complejidad, System.Decimal Duracion, System.Decimal ValorTecnico, System.Decimal ValorTecnicoProvisorio) {
                st_TareaRow rowst_TareaRow = ((st_TareaRow)(this.NewRow()));
                rowst_TareaRow.ItemArray = new object[] {
                        IdTarea,
                        Codigo,
                        Descripcion,
                        FechaCreacion,
                        IdConexionCreacion,
                        UltimaModificacion,
                        IdConexionUltimaModificacion,
                        RowId,
                        IdProducto,
                        Complejidad,
                        Duracion,
                        ValorTecnico,
                        ValorTecnicoProvisorio};
                this.Rows.Add(rowst_TareaRow);
                return rowst_TareaRow;
            }
            
            public st_TareaRow FindByIdTarea(long IdTarea) {
                return ((st_TareaRow)(this.Rows.Find(new object[] {
                            IdTarea})));
            }
            
            public System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            public override DataTable Clone() {
                st_TareaDataTable cln = ((st_TareaDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            protected override DataTable CreateInstance() {
                return new st_TareaDataTable();
            }
            
            internal void InitVars() {
                this.columnIdTarea = this.Columns["IdTarea"];
                this.columnCodigo = this.Columns["Codigo"];
                this.columnDescripcion = this.Columns["Descripcion"];
                this.columnFechaCreacion = this.Columns["FechaCreacion"];
                this.columnIdConexionCreacion = this.Columns["IdConexionCreacion"];
                this.columnUltimaModificacion = this.Columns["UltimaModificacion"];
                this.columnIdConexionUltimaModificacion = this.Columns["IdConexionUltimaModificacion"];
                this.columnRowId = this.Columns["RowId"];
                this.columnIdProducto = this.Columns["IdProducto"];
                this.columnComplejidad = this.Columns["Complejidad"];
                this.columnDuracion = this.Columns["Duracion"];
                this.columnValorTecnico = this.Columns["ValorTecnico"];
                this.columnValorTecnicoProvisorio = this.Columns["ValorTecnicoProvisorio"];
            }
            
            private void InitClass() {
                this.columnIdTarea = new DataColumn("IdTarea", typeof(long), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdTarea);
                this.columnCodigo = new DataColumn("Codigo", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnCodigo);
                this.columnDescripcion = new DataColumn("Descripcion", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnDescripcion);
                this.columnFechaCreacion = new DataColumn("FechaCreacion", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnFechaCreacion);
                this.columnIdConexionCreacion = new DataColumn("IdConexionCreacion", typeof(long), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdConexionCreacion);
                this.columnUltimaModificacion = new DataColumn("UltimaModificacion", typeof(System.Byte[]), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnUltimaModificacion);
                this.columnIdConexionUltimaModificacion = new DataColumn("IdConexionUltimaModificacion", typeof(long), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdConexionUltimaModificacion);
                this.columnRowId = new DataColumn("RowId", typeof(System.Guid), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnRowId);
                this.columnIdProducto = new DataColumn("IdProducto", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdProducto);
                this.columnComplejidad = new DataColumn("Complejidad", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnComplejidad);
                this.columnDuracion = new DataColumn("Duracion", typeof(System.Decimal), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnDuracion);
                this.columnValorTecnico = new DataColumn("ValorTecnico", typeof(System.Decimal), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnValorTecnico);
                this.columnValorTecnicoProvisorio = new DataColumn("ValorTecnicoProvisorio", typeof(System.Decimal), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnValorTecnicoProvisorio);
                this.Constraints.Add(new UniqueConstraint("st_TareaKey1", new DataColumn[] {
                                this.columnIdTarea}, true));
                this.columnIdTarea.AllowDBNull = false;
                this.columnIdTarea.Unique = true;
                this.columnIdConexionCreacion.AllowDBNull = false;
                this.columnUltimaModificacion.ReadOnly = true;
            }
            
            public st_TareaRow Newst_TareaRow() {
                return ((st_TareaRow)(this.NewRow()));
            }
            
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder) {
                return new st_TareaRow(builder);
            }
            
            protected override System.Type GetRowType() {
                return typeof(st_TareaRow);
            }
            
            protected override void OnRowChanged(DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.st_TareaRowChanged != null)) {
                    this.st_TareaRowChanged(this, new st_TareaRowChangeEvent(((st_TareaRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowChanging(DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.st_TareaRowChanging != null)) {
                    this.st_TareaRowChanging(this, new st_TareaRowChangeEvent(((st_TareaRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleted(DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.st_TareaRowDeleted != null)) {
                    this.st_TareaRowDeleted(this, new st_TareaRowChangeEvent(((st_TareaRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleting(DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.st_TareaRowDeleting != null)) {
                    this.st_TareaRowDeleting(this, new st_TareaRowChangeEvent(((st_TareaRow)(e.Row)), e.Action));
                }
            }
            
            public void Removest_TareaRow(st_TareaRow row) {
                this.Rows.Remove(row);
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class st_TareaRow : DataRow {
            
            private st_TareaDataTable tablest_Tarea;
            
            internal st_TareaRow(DataRowBuilder rb) : 
                    base(rb) {
                this.tablest_Tarea = ((st_TareaDataTable)(this.Table));
            }
            
            public long IdTarea {
                get {
                    return ((long)(this[this.tablest_Tarea.IdTareaColumn]));
                }
                set {
                    this[this.tablest_Tarea.IdTareaColumn] = value;
                }
            }
            
            public string Codigo {
                get {
                    try {
                        return ((string)(this[this.tablest_Tarea.CodigoColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tablest_Tarea.CodigoColumn] = value;
                }
            }
            
            public string Descripcion {
                get {
                    try {
                        return ((string)(this[this.tablest_Tarea.DescripcionColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tablest_Tarea.DescripcionColumn] = value;
                }
            }
            
            public System.DateTime FechaCreacion {
                get {
                    try {
                        return ((System.DateTime)(this[this.tablest_Tarea.FechaCreacionColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tablest_Tarea.FechaCreacionColumn] = value;
                }
            }
            
            public long IdConexionCreacion {
                get {
                    return ((long)(this[this.tablest_Tarea.IdConexionCreacionColumn]));
                }
                set {
                    this[this.tablest_Tarea.IdConexionCreacionColumn] = value;
                }
            }
            
            public System.Byte[] UltimaModificacion {
                get {
                    try {
                        return ((System.Byte[])(this[this.tablest_Tarea.UltimaModificacionColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tablest_Tarea.UltimaModificacionColumn] = value;
                }
            }
            
            public long IdConexionUltimaModificacion {
                get {
                    try {
                        return ((long)(this[this.tablest_Tarea.IdConexionUltimaModificacionColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tablest_Tarea.IdConexionUltimaModificacionColumn] = value;
                }
            }
            
            public System.Guid RowId {
                get {
                    try {
                        return ((System.Guid)(this[this.tablest_Tarea.RowIdColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tablest_Tarea.RowIdColumn] = value;
                }
            }
            
            public string IdProducto {
                get {
                    try {
                        return ((string)(this[this.tablest_Tarea.IdProductoColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tablest_Tarea.IdProductoColumn] = value;
                }
            }
            
            public string Complejidad {
                get {
                    try {
                        return ((string)(this[this.tablest_Tarea.ComplejidadColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tablest_Tarea.ComplejidadColumn] = value;
                }
            }
            
            public System.Decimal Duracion {
                get {
                    try {
                        return ((System.Decimal)(this[this.tablest_Tarea.DuracionColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tablest_Tarea.DuracionColumn] = value;
                }
            }
            
            public System.Decimal ValorTecnico {
                get {
                    try {
                        return ((System.Decimal)(this[this.tablest_Tarea.ValorTecnicoColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tablest_Tarea.ValorTecnicoColumn] = value;
                }
            }
            
            public System.Decimal ValorTecnicoProvisorio {
                get {
                    try {
                        return ((System.Decimal)(this[this.tablest_Tarea.ValorTecnicoProvisorioColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tablest_Tarea.ValorTecnicoProvisorioColumn] = value;
                }
            }
            
            public bool IsCodigoNull() {
                return this.IsNull(this.tablest_Tarea.CodigoColumn);
            }
            
            public void SetCodigoNull() {
                this[this.tablest_Tarea.CodigoColumn] = System.Convert.DBNull;
            }
            
            public bool IsDescripcionNull() {
                return this.IsNull(this.tablest_Tarea.DescripcionColumn);
            }
            
            public void SetDescripcionNull() {
                this[this.tablest_Tarea.DescripcionColumn] = System.Convert.DBNull;
            }
            
            public bool IsFechaCreacionNull() {
                return this.IsNull(this.tablest_Tarea.FechaCreacionColumn);
            }
            
            public void SetFechaCreacionNull() {
                this[this.tablest_Tarea.FechaCreacionColumn] = System.Convert.DBNull;
            }
            
            public bool IsUltimaModificacionNull() {
                return this.IsNull(this.tablest_Tarea.UltimaModificacionColumn);
            }
            
            public void SetUltimaModificacionNull() {
                this[this.tablest_Tarea.UltimaModificacionColumn] = System.Convert.DBNull;
            }
            
            public bool IsIdConexionUltimaModificacionNull() {
                return this.IsNull(this.tablest_Tarea.IdConexionUltimaModificacionColumn);
            }
            
            public void SetIdConexionUltimaModificacionNull() {
                this[this.tablest_Tarea.IdConexionUltimaModificacionColumn] = System.Convert.DBNull;
            }
            
            public bool IsRowIdNull() {
                return this.IsNull(this.tablest_Tarea.RowIdColumn);
            }
            
            public void SetRowIdNull() {
                this[this.tablest_Tarea.RowIdColumn] = System.Convert.DBNull;
            }
            
            public bool IsIdProductoNull() {
                return this.IsNull(this.tablest_Tarea.IdProductoColumn);
            }
            
            public void SetIdProductoNull() {
                this[this.tablest_Tarea.IdProductoColumn] = System.Convert.DBNull;
            }
            
            public bool IsComplejidadNull() {
                return this.IsNull(this.tablest_Tarea.ComplejidadColumn);
            }
            
            public void SetComplejidadNull() {
                this[this.tablest_Tarea.ComplejidadColumn] = System.Convert.DBNull;
            }
            
            public bool IsDuracionNull() {
                return this.IsNull(this.tablest_Tarea.DuracionColumn);
            }
            
            public void SetDuracionNull() {
                this[this.tablest_Tarea.DuracionColumn] = System.Convert.DBNull;
            }
            
            public bool IsValorTecnicoNull() {
                return this.IsNull(this.tablest_Tarea.ValorTecnicoColumn);
            }
            
            public void SetValorTecnicoNull() {
                this[this.tablest_Tarea.ValorTecnicoColumn] = System.Convert.DBNull;
            }
            
            public bool IsValorTecnicoProvisorioNull() {
                return this.IsNull(this.tablest_Tarea.ValorTecnicoProvisorioColumn);
            }
            
            public void SetValorTecnicoProvisorioNull() {
                this[this.tablest_Tarea.ValorTecnicoProvisorioColumn] = System.Convert.DBNull;
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class st_TareaRowChangeEvent : EventArgs {
            
            private st_TareaRow eventRow;
            
            private DataRowAction eventAction;
            
            public st_TareaRowChangeEvent(st_TareaRow row, DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            public st_TareaRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            public DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
