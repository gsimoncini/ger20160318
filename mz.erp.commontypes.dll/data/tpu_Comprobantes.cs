//------------------------------------------------------------------------------
// <autogenerated>
//     This code was generated by a tool.
//     Runtime Version: 1.1.4322.2407
//
//     Changes to this file may cause incorrect behavior and will be lost if 
//     the code is regenerated.
// </autogenerated>
//------------------------------------------------------------------------------

namespace mz.erp.commontypes.data {
    using System;
    using System.Data;
    using System.Xml;
    using System.Runtime.Serialization;
    
    
    [Serializable()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Diagnostics.DebuggerStepThrough()]
    [System.ComponentModel.ToolboxItem(true)]
    public class tpu_ComprobantesDataset : DataSet {
        
        private tpu_ComprobantesDataTable tabletpu_Comprobantes;
        
        public tpu_ComprobantesDataset() {
            this.InitClass();
            System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            this.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        protected tpu_ComprobantesDataset(SerializationInfo info, StreamingContext context) {
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((strSchema != null)) {
                DataSet ds = new DataSet();
                ds.ReadXmlSchema(new XmlTextReader(new System.IO.StringReader(strSchema)));
                if ((ds.Tables["tpu_Comprobantes"] != null)) {
                    this.Tables.Add(new tpu_ComprobantesDataTable(ds.Tables["tpu_Comprobantes"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.InitClass();
            }
            this.GetSerializationData(info, context);
            System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            this.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public tpu_ComprobantesDataTable tpu_Comprobantes {
            get {
                return this.tabletpu_Comprobantes;
            }
        }
        
        public override DataSet Clone() {
            tpu_ComprobantesDataset cln = ((tpu_ComprobantesDataset)(base.Clone()));
            cln.InitVars();
            return cln;
        }
        
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        protected override void ReadXmlSerializable(XmlReader reader) {
            this.Reset();
            DataSet ds = new DataSet();
            ds.ReadXml(reader);
            if ((ds.Tables["tpu_Comprobantes"] != null)) {
                this.Tables.Add(new tpu_ComprobantesDataTable(ds.Tables["tpu_Comprobantes"]));
            }
            this.DataSetName = ds.DataSetName;
            this.Prefix = ds.Prefix;
            this.Namespace = ds.Namespace;
            this.Locale = ds.Locale;
            this.CaseSensitive = ds.CaseSensitive;
            this.EnforceConstraints = ds.EnforceConstraints;
            this.Merge(ds, false, System.Data.MissingSchemaAction.Add);
            this.InitVars();
        }
        
        protected override System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            System.IO.MemoryStream stream = new System.IO.MemoryStream();
            this.WriteXmlSchema(new XmlTextWriter(stream, null));
            stream.Position = 0;
            return System.Xml.Schema.XmlSchema.Read(new XmlTextReader(stream), null);
        }
        
        internal void InitVars() {
            this.tabletpu_Comprobantes = ((tpu_ComprobantesDataTable)(this.Tables["tpu_Comprobantes"]));
            if ((this.tabletpu_Comprobantes != null)) {
                this.tabletpu_Comprobantes.InitVars();
            }
        }
        
        private void InitClass() {
            this.DataSetName = "tpu_ComprobantesDataset";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/tpu_Comprobantes.xsd";
            this.Locale = new System.Globalization.CultureInfo("en-US");
            this.CaseSensitive = false;
            this.EnforceConstraints = true;
            this.tabletpu_Comprobantes = new tpu_ComprobantesDataTable();
            this.Tables.Add(this.tabletpu_Comprobantes);
        }
        
        private bool ShouldSerializetpu_Comprobantes() {
            return false;
        }
        
        private void SchemaChanged(object sender, System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        public delegate void tpu_ComprobantesRowChangeEventHandler(object sender, tpu_ComprobantesRowChangeEvent e);
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class tpu_ComprobantesDataTable : DataTable, System.Collections.IEnumerable {
            
            private DataColumn columnIdComprobante;
            
            private DataColumn columnIdSucursal;
            
            private DataColumn columnIdEmpresa;
            
            private DataColumn columnIdInstanciaCaja;
            
            private DataColumn columnIdTipoDeComprobante;
            
            private DataColumn columnNumero;
            
            private DataColumn columnFecha;
            
            private DataColumn columnIdProveedor;
            
            private DataColumn columnIdResponsable;
            
            private DataColumn columnTotal;
            
            private DataColumn columnIdCotizacionCierre;
            
            private DataColumn columnIdMonedaCierre;
            
            private DataColumn columnFechaCreacion;
            
            private DataColumn columnIdConexionCreacion;
            
            private DataColumn columnUltimaModificacion;
            
            private DataColumn columnIdConexionUltimaModificacion;
            
            private DataColumn columnIdReservado;
            
            private DataColumn columnRowId;
            
            private DataColumn columnProveedor;
            
            private DataColumn columnDomicilio;
            
            private DataColumn columnTipoDocumento;
            
            private DataColumn columnDocumento;
            
            private DataColumn columnObservaciones;
            
            private DataColumn columnAux1;
            
            private DataColumn columnAux2;
            
            private DataColumn columnAux3;
            
            private DataColumn columnAux4;
            
            private DataColumn columnFechaDeRegistracion;
            
            private DataColumn columnValorCotizacionProveedor;
            
            private DataColumn columnIdMonedaOrigen;
            
            private DataColumn columnIdFuenteDeCambioProveedor;
            
            private DataColumn columnFechaRecepcionMercaderia;
            
            private DataColumn columnEstado;
            
            private DataColumn columnIdCondicionDeCompra;
            
            private DataColumn columnIdAutorizacion;
            
            internal tpu_ComprobantesDataTable() : 
                    base("tpu_Comprobantes") {
                this.InitClass();
            }
            
            internal tpu_ComprobantesDataTable(DataTable table) : 
                    base(table.TableName) {
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
                this.DisplayExpression = table.DisplayExpression;
            }
            
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            internal DataColumn IdComprobanteColumn {
                get {
                    return this.columnIdComprobante;
                }
            }
            
            internal DataColumn IdSucursalColumn {
                get {
                    return this.columnIdSucursal;
                }
            }
            
            internal DataColumn IdEmpresaColumn {
                get {
                    return this.columnIdEmpresa;
                }
            }
            
            internal DataColumn IdInstanciaCajaColumn {
                get {
                    return this.columnIdInstanciaCaja;
                }
            }
            
            internal DataColumn IdTipoDeComprobanteColumn {
                get {
                    return this.columnIdTipoDeComprobante;
                }
            }
            
            internal DataColumn NumeroColumn {
                get {
                    return this.columnNumero;
                }
            }
            
            internal DataColumn FechaColumn {
                get {
                    return this.columnFecha;
                }
            }
            
            internal DataColumn IdProveedorColumn {
                get {
                    return this.columnIdProveedor;
                }
            }
            
            internal DataColumn IdResponsableColumn {
                get {
                    return this.columnIdResponsable;
                }
            }
            
            internal DataColumn TotalColumn {
                get {
                    return this.columnTotal;
                }
            }
            
            internal DataColumn IdCotizacionCierreColumn {
                get {
                    return this.columnIdCotizacionCierre;
                }
            }
            
            internal DataColumn IdMonedaCierreColumn {
                get {
                    return this.columnIdMonedaCierre;
                }
            }
            
            internal DataColumn FechaCreacionColumn {
                get {
                    return this.columnFechaCreacion;
                }
            }
            
            internal DataColumn IdConexionCreacionColumn {
                get {
                    return this.columnIdConexionCreacion;
                }
            }
            
            internal DataColumn UltimaModificacionColumn {
                get {
                    return this.columnUltimaModificacion;
                }
            }
            
            internal DataColumn IdConexionUltimaModificacionColumn {
                get {
                    return this.columnIdConexionUltimaModificacion;
                }
            }
            
            internal DataColumn IdReservadoColumn {
                get {
                    return this.columnIdReservado;
                }
            }
            
            internal DataColumn RowIdColumn {
                get {
                    return this.columnRowId;
                }
            }
            
            internal DataColumn ProveedorColumn {
                get {
                    return this.columnProveedor;
                }
            }
            
            internal DataColumn DomicilioColumn {
                get {
                    return this.columnDomicilio;
                }
            }
            
            internal DataColumn TipoDocumentoColumn {
                get {
                    return this.columnTipoDocumento;
                }
            }
            
            internal DataColumn DocumentoColumn {
                get {
                    return this.columnDocumento;
                }
            }
            
            internal DataColumn ObservacionesColumn {
                get {
                    return this.columnObservaciones;
                }
            }
            
            internal DataColumn Aux1Column {
                get {
                    return this.columnAux1;
                }
            }
            
            internal DataColumn Aux2Column {
                get {
                    return this.columnAux2;
                }
            }
            
            internal DataColumn Aux3Column {
                get {
                    return this.columnAux3;
                }
            }
            
            internal DataColumn Aux4Column {
                get {
                    return this.columnAux4;
                }
            }
            
            internal DataColumn FechaDeRegistracionColumn {
                get {
                    return this.columnFechaDeRegistracion;
                }
            }
            
            internal DataColumn ValorCotizacionProveedorColumn {
                get {
                    return this.columnValorCotizacionProveedor;
                }
            }
            
            internal DataColumn IdMonedaOrigenColumn {
                get {
                    return this.columnIdMonedaOrigen;
                }
            }
            
            internal DataColumn IdFuenteDeCambioProveedorColumn {
                get {
                    return this.columnIdFuenteDeCambioProveedor;
                }
            }
            
            internal DataColumn FechaRecepcionMercaderiaColumn {
                get {
                    return this.columnFechaRecepcionMercaderia;
                }
            }
            
            internal DataColumn EstadoColumn {
                get {
                    return this.columnEstado;
                }
            }
            
            internal DataColumn IdCondicionDeCompraColumn {
                get {
                    return this.columnIdCondicionDeCompra;
                }
            }
            
            internal DataColumn IdAutorizacionColumn {
                get {
                    return this.columnIdAutorizacion;
                }
            }
            
            public tpu_ComprobantesRow this[int index] {
                get {
                    return ((tpu_ComprobantesRow)(this.Rows[index]));
                }
            }
            
            public event tpu_ComprobantesRowChangeEventHandler tpu_ComprobantesRowChanged;
            
            public event tpu_ComprobantesRowChangeEventHandler tpu_ComprobantesRowChanging;
            
            public event tpu_ComprobantesRowChangeEventHandler tpu_ComprobantesRowDeleted;
            
            public event tpu_ComprobantesRowChangeEventHandler tpu_ComprobantesRowDeleting;
            
            public void Addtpu_ComprobantesRow(tpu_ComprobantesRow row) {
                this.Rows.Add(row);
            }
            
            public tpu_ComprobantesRow Addtpu_ComprobantesRow(
                        string IdComprobante, 
                        long IdSucursal, 
                        long IdEmpresa, 
                        string IdInstanciaCaja, 
                        string IdTipoDeComprobante, 
                        string Numero, 
                        System.DateTime Fecha, 
                        string IdProveedor, 
                        string IdResponsable, 
                        System.Decimal Total, 
                        string IdCotizacionCierre, 
                        string IdMonedaCierre, 
                        System.DateTime FechaCreacion, 
                        long IdConexionCreacion, 
                        System.Byte[] UltimaModificacion, 
                        long IdConexionUltimaModificacion, 
                        long IdReservado, 
                        System.Guid RowId, 
                        string Proveedor, 
                        string Domicilio, 
                        string TipoDocumento, 
                        string Documento, 
                        string Observaciones, 
                        string Aux1, 
                        string Aux2, 
                        string Aux3, 
                        System.Decimal Aux4, 
                        System.DateTime FechaDeRegistracion, 
                        System.Decimal ValorCotizacionProveedor, 
                        string IdMonedaOrigen, 
                        string IdFuenteDeCambioProveedor, 
                        System.DateTime FechaRecepcionMercaderia, 
                        string Estado, 
                        string IdCondicionDeCompra, 
                        string IdAutorizacion) {
                tpu_ComprobantesRow rowtpu_ComprobantesRow = ((tpu_ComprobantesRow)(this.NewRow()));
                rowtpu_ComprobantesRow.ItemArray = new object[] {
                        IdComprobante,
                        IdSucursal,
                        IdEmpresa,
                        IdInstanciaCaja,
                        IdTipoDeComprobante,
                        Numero,
                        Fecha,
                        IdProveedor,
                        IdResponsable,
                        Total,
                        IdCotizacionCierre,
                        IdMonedaCierre,
                        FechaCreacion,
                        IdConexionCreacion,
                        UltimaModificacion,
                        IdConexionUltimaModificacion,
                        IdReservado,
                        RowId,
                        Proveedor,
                        Domicilio,
                        TipoDocumento,
                        Documento,
                        Observaciones,
                        Aux1,
                        Aux2,
                        Aux3,
                        Aux4,
                        FechaDeRegistracion,
                        ValorCotizacionProveedor,
                        IdMonedaOrigen,
                        IdFuenteDeCambioProveedor,
                        FechaRecepcionMercaderia,
                        Estado,
                        IdCondicionDeCompra,
                        IdAutorizacion};
                this.Rows.Add(rowtpu_ComprobantesRow);
                return rowtpu_ComprobantesRow;
            }
            
            public tpu_ComprobantesRow FindByIdComprobante(string IdComprobante) {
                return ((tpu_ComprobantesRow)(this.Rows.Find(new object[] {
                            IdComprobante})));
            }
            
            public System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            public override DataTable Clone() {
                tpu_ComprobantesDataTable cln = ((tpu_ComprobantesDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            protected override DataTable CreateInstance() {
                return new tpu_ComprobantesDataTable();
            }
            
            internal void InitVars() {
                this.columnIdComprobante = this.Columns["IdComprobante"];
                this.columnIdSucursal = this.Columns["IdSucursal"];
                this.columnIdEmpresa = this.Columns["IdEmpresa"];
                this.columnIdInstanciaCaja = this.Columns["IdInstanciaCaja"];
                this.columnIdTipoDeComprobante = this.Columns["IdTipoDeComprobante"];
                this.columnNumero = this.Columns["Numero"];
                this.columnFecha = this.Columns["Fecha"];
                this.columnIdProveedor = this.Columns["IdProveedor"];
                this.columnIdResponsable = this.Columns["IdResponsable"];
                this.columnTotal = this.Columns["Total"];
                this.columnIdCotizacionCierre = this.Columns["IdCotizacionCierre"];
                this.columnIdMonedaCierre = this.Columns["IdMonedaCierre"];
                this.columnFechaCreacion = this.Columns["FechaCreacion"];
                this.columnIdConexionCreacion = this.Columns["IdConexionCreacion"];
                this.columnUltimaModificacion = this.Columns["UltimaModificacion"];
                this.columnIdConexionUltimaModificacion = this.Columns["IdConexionUltimaModificacion"];
                this.columnIdReservado = this.Columns["IdReservado"];
                this.columnRowId = this.Columns["RowId"];
                this.columnProveedor = this.Columns["Proveedor"];
                this.columnDomicilio = this.Columns["Domicilio"];
                this.columnTipoDocumento = this.Columns["TipoDocumento"];
                this.columnDocumento = this.Columns["Documento"];
                this.columnObservaciones = this.Columns["Observaciones"];
                this.columnAux1 = this.Columns["Aux1"];
                this.columnAux2 = this.Columns["Aux2"];
                this.columnAux3 = this.Columns["Aux3"];
                this.columnAux4 = this.Columns["Aux4"];
                this.columnFechaDeRegistracion = this.Columns["FechaDeRegistracion"];
                this.columnValorCotizacionProveedor = this.Columns["ValorCotizacionProveedor"];
                this.columnIdMonedaOrigen = this.Columns["IdMonedaOrigen"];
                this.columnIdFuenteDeCambioProveedor = this.Columns["IdFuenteDeCambioProveedor"];
                this.columnFechaRecepcionMercaderia = this.Columns["FechaRecepcionMercaderia"];
                this.columnEstado = this.Columns["Estado"];
                this.columnIdCondicionDeCompra = this.Columns["IdCondicionDeCompra"];
                this.columnIdAutorizacion = this.Columns["IdAutorizacion"];
            }
            
            private void InitClass() {
                this.columnIdComprobante = new DataColumn("IdComprobante", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdComprobante);
                this.columnIdSucursal = new DataColumn("IdSucursal", typeof(long), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdSucursal);
                this.columnIdEmpresa = new DataColumn("IdEmpresa", typeof(long), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdEmpresa);
                this.columnIdInstanciaCaja = new DataColumn("IdInstanciaCaja", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdInstanciaCaja);
                this.columnIdTipoDeComprobante = new DataColumn("IdTipoDeComprobante", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdTipoDeComprobante);
                this.columnNumero = new DataColumn("Numero", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnNumero);
                this.columnFecha = new DataColumn("Fecha", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnFecha);
                this.columnIdProveedor = new DataColumn("IdProveedor", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdProveedor);
                this.columnIdResponsable = new DataColumn("IdResponsable", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdResponsable);
                this.columnTotal = new DataColumn("Total", typeof(System.Decimal), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnTotal);
                this.columnIdCotizacionCierre = new DataColumn("IdCotizacionCierre", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdCotizacionCierre);
                this.columnIdMonedaCierre = new DataColumn("IdMonedaCierre", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdMonedaCierre);
                this.columnFechaCreacion = new DataColumn("FechaCreacion", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnFechaCreacion);
                this.columnIdConexionCreacion = new DataColumn("IdConexionCreacion", typeof(long), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdConexionCreacion);
                this.columnUltimaModificacion = new DataColumn("UltimaModificacion", typeof(System.Byte[]), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnUltimaModificacion);
                this.columnIdConexionUltimaModificacion = new DataColumn("IdConexionUltimaModificacion", typeof(long), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdConexionUltimaModificacion);
                this.columnIdReservado = new DataColumn("IdReservado", typeof(long), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdReservado);
                this.columnRowId = new DataColumn("RowId", typeof(System.Guid), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnRowId);
                this.columnProveedor = new DataColumn("Proveedor", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnProveedor);
                this.columnDomicilio = new DataColumn("Domicilio", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnDomicilio);
                this.columnTipoDocumento = new DataColumn("TipoDocumento", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnTipoDocumento);
                this.columnDocumento = new DataColumn("Documento", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnDocumento);
                this.columnObservaciones = new DataColumn("Observaciones", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnObservaciones);
                this.columnAux1 = new DataColumn("Aux1", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnAux1);
                this.columnAux2 = new DataColumn("Aux2", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnAux2);
                this.columnAux3 = new DataColumn("Aux3", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnAux3);
                this.columnAux4 = new DataColumn("Aux4", typeof(System.Decimal), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnAux4);
                this.columnFechaDeRegistracion = new DataColumn("FechaDeRegistracion", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnFechaDeRegistracion);
                this.columnValorCotizacionProveedor = new DataColumn("ValorCotizacionProveedor", typeof(System.Decimal), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnValorCotizacionProveedor);
                this.columnIdMonedaOrigen = new DataColumn("IdMonedaOrigen", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdMonedaOrigen);
                this.columnIdFuenteDeCambioProveedor = new DataColumn("IdFuenteDeCambioProveedor", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdFuenteDeCambioProveedor);
                this.columnFechaRecepcionMercaderia = new DataColumn("FechaRecepcionMercaderia", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnFechaRecepcionMercaderia);
                this.columnEstado = new DataColumn("Estado", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnEstado);
                this.columnIdCondicionDeCompra = new DataColumn("IdCondicionDeCompra", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdCondicionDeCompra);
                this.columnIdAutorizacion = new DataColumn("IdAutorizacion", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdAutorizacion);
                this.Constraints.Add(new UniqueConstraint("tpu_ComprobantesDatasetKey1", new DataColumn[] {
                                this.columnIdComprobante}, true));
                this.columnIdComprobante.AllowDBNull = false;
                this.columnIdComprobante.Unique = true;
                this.columnIdProveedor.AllowDBNull = false;
                this.columnIdResponsable.AllowDBNull = false;
                this.columnIdConexionCreacion.AllowDBNull = false;
                this.columnUltimaModificacion.ReadOnly = true;
            }
            
            public tpu_ComprobantesRow Newtpu_ComprobantesRow() {
                return ((tpu_ComprobantesRow)(this.NewRow()));
            }
            
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder) {
                return new tpu_ComprobantesRow(builder);
            }
            
            protected override System.Type GetRowType() {
                return typeof(tpu_ComprobantesRow);
            }
            
            protected override void OnRowChanged(DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.tpu_ComprobantesRowChanged != null)) {
                    this.tpu_ComprobantesRowChanged(this, new tpu_ComprobantesRowChangeEvent(((tpu_ComprobantesRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowChanging(DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.tpu_ComprobantesRowChanging != null)) {
                    this.tpu_ComprobantesRowChanging(this, new tpu_ComprobantesRowChangeEvent(((tpu_ComprobantesRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleted(DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.tpu_ComprobantesRowDeleted != null)) {
                    this.tpu_ComprobantesRowDeleted(this, new tpu_ComprobantesRowChangeEvent(((tpu_ComprobantesRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleting(DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.tpu_ComprobantesRowDeleting != null)) {
                    this.tpu_ComprobantesRowDeleting(this, new tpu_ComprobantesRowChangeEvent(((tpu_ComprobantesRow)(e.Row)), e.Action));
                }
            }
            
            public void Removetpu_ComprobantesRow(tpu_ComprobantesRow row) {
                this.Rows.Remove(row);
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class tpu_ComprobantesRow : DataRow {
            
            private tpu_ComprobantesDataTable tabletpu_Comprobantes;
            
            internal tpu_ComprobantesRow(DataRowBuilder rb) : 
                    base(rb) {
                this.tabletpu_Comprobantes = ((tpu_ComprobantesDataTable)(this.Table));
            }
            
            public string IdComprobante {
                get {
                    return ((string)(this[this.tabletpu_Comprobantes.IdComprobanteColumn]));
                }
                set {
                    this[this.tabletpu_Comprobantes.IdComprobanteColumn] = value;
                }
            }
            
            public long IdSucursal {
                get {
                    try {
                        return ((long)(this[this.tabletpu_Comprobantes.IdSucursalColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletpu_Comprobantes.IdSucursalColumn] = value;
                }
            }
            
            public long IdEmpresa {
                get {
                    try {
                        return ((long)(this[this.tabletpu_Comprobantes.IdEmpresaColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletpu_Comprobantes.IdEmpresaColumn] = value;
                }
            }
            
            public string IdInstanciaCaja {
                get {
                    try {
                        return ((string)(this[this.tabletpu_Comprobantes.IdInstanciaCajaColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletpu_Comprobantes.IdInstanciaCajaColumn] = value;
                }
            }
            
            public string IdTipoDeComprobante {
                get {
                    try {
                        return ((string)(this[this.tabletpu_Comprobantes.IdTipoDeComprobanteColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletpu_Comprobantes.IdTipoDeComprobanteColumn] = value;
                }
            }
            
            public string Numero {
                get {
                    try {
                        return ((string)(this[this.tabletpu_Comprobantes.NumeroColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletpu_Comprobantes.NumeroColumn] = value;
                }
            }
            
            public System.DateTime Fecha {
                get {
                    try {
                        return ((System.DateTime)(this[this.tabletpu_Comprobantes.FechaColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletpu_Comprobantes.FechaColumn] = value;
                }
            }
            
            public string IdProveedor {
                get {
                    return ((string)(this[this.tabletpu_Comprobantes.IdProveedorColumn]));
                }
                set {
                    this[this.tabletpu_Comprobantes.IdProveedorColumn] = value;
                }
            }
            
            public string IdResponsable {
                get {
                    return ((string)(this[this.tabletpu_Comprobantes.IdResponsableColumn]));
                }
                set {
                    this[this.tabletpu_Comprobantes.IdResponsableColumn] = value;
                }
            }
            
            public System.Decimal Total {
                get {
                    try {
                        return ((System.Decimal)(this[this.tabletpu_Comprobantes.TotalColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletpu_Comprobantes.TotalColumn] = value;
                }
            }
            
            public string IdCotizacionCierre {
                get {
                    try {
                        return ((string)(this[this.tabletpu_Comprobantes.IdCotizacionCierreColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletpu_Comprobantes.IdCotizacionCierreColumn] = value;
                }
            }
            
            public string IdMonedaCierre {
                get {
                    try {
                        return ((string)(this[this.tabletpu_Comprobantes.IdMonedaCierreColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletpu_Comprobantes.IdMonedaCierreColumn] = value;
                }
            }
            
            public System.DateTime FechaCreacion {
                get {
                    try {
                        return ((System.DateTime)(this[this.tabletpu_Comprobantes.FechaCreacionColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletpu_Comprobantes.FechaCreacionColumn] = value;
                }
            }
            
            public long IdConexionCreacion {
                get {
                    return ((long)(this[this.tabletpu_Comprobantes.IdConexionCreacionColumn]));
                }
                set {
                    this[this.tabletpu_Comprobantes.IdConexionCreacionColumn] = value;
                }
            }
            
            public System.Byte[] UltimaModificacion {
                get {
                    try {
                        return ((System.Byte[])(this[this.tabletpu_Comprobantes.UltimaModificacionColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletpu_Comprobantes.UltimaModificacionColumn] = value;
                }
            }
            
            public long IdConexionUltimaModificacion {
                get {
                    try {
                        return ((long)(this[this.tabletpu_Comprobantes.IdConexionUltimaModificacionColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletpu_Comprobantes.IdConexionUltimaModificacionColumn] = value;
                }
            }
            
            public long IdReservado {
                get {
                    try {
                        return ((long)(this[this.tabletpu_Comprobantes.IdReservadoColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletpu_Comprobantes.IdReservadoColumn] = value;
                }
            }
            
            public System.Guid RowId {
                get {
                    try {
                        return ((System.Guid)(this[this.tabletpu_Comprobantes.RowIdColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletpu_Comprobantes.RowIdColumn] = value;
                }
            }
            
            public string Proveedor {
                get {
                    try {
                        return ((string)(this[this.tabletpu_Comprobantes.ProveedorColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletpu_Comprobantes.ProveedorColumn] = value;
                }
            }
            
            public string Domicilio {
                get {
                    try {
                        return ((string)(this[this.tabletpu_Comprobantes.DomicilioColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletpu_Comprobantes.DomicilioColumn] = value;
                }
            }
            
            public string TipoDocumento {
                get {
                    try {
                        return ((string)(this[this.tabletpu_Comprobantes.TipoDocumentoColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletpu_Comprobantes.TipoDocumentoColumn] = value;
                }
            }
            
            public string Documento {
                get {
                    try {
                        return ((string)(this[this.tabletpu_Comprobantes.DocumentoColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletpu_Comprobantes.DocumentoColumn] = value;
                }
            }
            
            public string Observaciones {
                get {
                    try {
                        return ((string)(this[this.tabletpu_Comprobantes.ObservacionesColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletpu_Comprobantes.ObservacionesColumn] = value;
                }
            }
            
            public string Aux1 {
                get {
                    try {
                        return ((string)(this[this.tabletpu_Comprobantes.Aux1Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletpu_Comprobantes.Aux1Column] = value;
                }
            }
            
            public string Aux2 {
                get {
                    try {
                        return ((string)(this[this.tabletpu_Comprobantes.Aux2Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletpu_Comprobantes.Aux2Column] = value;
                }
            }
            
            public string Aux3 {
                get {
                    try {
                        return ((string)(this[this.tabletpu_Comprobantes.Aux3Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletpu_Comprobantes.Aux3Column] = value;
                }
            }
            
            public System.Decimal Aux4 {
                get {
                    try {
                        return ((System.Decimal)(this[this.tabletpu_Comprobantes.Aux4Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletpu_Comprobantes.Aux4Column] = value;
                }
            }
            
            public System.DateTime FechaDeRegistracion {
                get {
                    try {
                        return ((System.DateTime)(this[this.tabletpu_Comprobantes.FechaDeRegistracionColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletpu_Comprobantes.FechaDeRegistracionColumn] = value;
                }
            }
            
            public System.Decimal ValorCotizacionProveedor {
                get {
                    try {
                        return ((System.Decimal)(this[this.tabletpu_Comprobantes.ValorCotizacionProveedorColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletpu_Comprobantes.ValorCotizacionProveedorColumn] = value;
                }
            }
            
            public string IdMonedaOrigen {
                get {
                    try {
                        return ((string)(this[this.tabletpu_Comprobantes.IdMonedaOrigenColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletpu_Comprobantes.IdMonedaOrigenColumn] = value;
                }
            }
            
            public string IdFuenteDeCambioProveedor {
                get {
                    try {
                        return ((string)(this[this.tabletpu_Comprobantes.IdFuenteDeCambioProveedorColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletpu_Comprobantes.IdFuenteDeCambioProveedorColumn] = value;
                }
            }
            
            public System.DateTime FechaRecepcionMercaderia {
                get {
                    try {
                        return ((System.DateTime)(this[this.tabletpu_Comprobantes.FechaRecepcionMercaderiaColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletpu_Comprobantes.FechaRecepcionMercaderiaColumn] = value;
                }
            }
            
            public string Estado {
                get {
                    if (this.IsEstadoNull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tabletpu_Comprobantes.EstadoColumn]));
                    }
                }
                set {
                    this[this.tabletpu_Comprobantes.EstadoColumn] = value;
                }
            }
            
            public string IdCondicionDeCompra {
                get {
                    try {
                        return ((string)(this[this.tabletpu_Comprobantes.IdCondicionDeCompraColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletpu_Comprobantes.IdCondicionDeCompraColumn] = value;
                }
            }
            
            public string IdAutorizacion {
                get {
                    try {
                        return ((string)(this[this.tabletpu_Comprobantes.IdAutorizacionColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletpu_Comprobantes.IdAutorizacionColumn] = value;
                }
            }
            
            public bool IsIdSucursalNull() {
                return this.IsNull(this.tabletpu_Comprobantes.IdSucursalColumn);
            }
            
            public void SetIdSucursalNull() {
                this[this.tabletpu_Comprobantes.IdSucursalColumn] = System.Convert.DBNull;
            }
            
            public bool IsIdEmpresaNull() {
                return this.IsNull(this.tabletpu_Comprobantes.IdEmpresaColumn);
            }
            
            public void SetIdEmpresaNull() {
                this[this.tabletpu_Comprobantes.IdEmpresaColumn] = System.Convert.DBNull;
            }
            
            public bool IsIdInstanciaCajaNull() {
                return this.IsNull(this.tabletpu_Comprobantes.IdInstanciaCajaColumn);
            }
            
            public void SetIdInstanciaCajaNull() {
                this[this.tabletpu_Comprobantes.IdInstanciaCajaColumn] = System.Convert.DBNull;
            }
            
            public bool IsIdTipoDeComprobanteNull() {
                return this.IsNull(this.tabletpu_Comprobantes.IdTipoDeComprobanteColumn);
            }
            
            public void SetIdTipoDeComprobanteNull() {
                this[this.tabletpu_Comprobantes.IdTipoDeComprobanteColumn] = System.Convert.DBNull;
            }
            
            public bool IsNumeroNull() {
                return this.IsNull(this.tabletpu_Comprobantes.NumeroColumn);
            }
            
            public void SetNumeroNull() {
                this[this.tabletpu_Comprobantes.NumeroColumn] = System.Convert.DBNull;
            }
            
            public bool IsFechaNull() {
                return this.IsNull(this.tabletpu_Comprobantes.FechaColumn);
            }
            
            public void SetFechaNull() {
                this[this.tabletpu_Comprobantes.FechaColumn] = System.Convert.DBNull;
            }
            
            public bool IsTotalNull() {
                return this.IsNull(this.tabletpu_Comprobantes.TotalColumn);
            }
            
            public void SetTotalNull() {
                this[this.tabletpu_Comprobantes.TotalColumn] = System.Convert.DBNull;
            }
            
            public bool IsIdCotizacionCierreNull() {
                return this.IsNull(this.tabletpu_Comprobantes.IdCotizacionCierreColumn);
            }
            
            public void SetIdCotizacionCierreNull() {
                this[this.tabletpu_Comprobantes.IdCotizacionCierreColumn] = System.Convert.DBNull;
            }
            
            public bool IsIdMonedaCierreNull() {
                return this.IsNull(this.tabletpu_Comprobantes.IdMonedaCierreColumn);
            }
            
            public void SetIdMonedaCierreNull() {
                this[this.tabletpu_Comprobantes.IdMonedaCierreColumn] = System.Convert.DBNull;
            }
            
            public bool IsFechaCreacionNull() {
                return this.IsNull(this.tabletpu_Comprobantes.FechaCreacionColumn);
            }
            
            public void SetFechaCreacionNull() {
                this[this.tabletpu_Comprobantes.FechaCreacionColumn] = System.Convert.DBNull;
            }
            
            public bool IsUltimaModificacionNull() {
                return this.IsNull(this.tabletpu_Comprobantes.UltimaModificacionColumn);
            }
            
            public void SetUltimaModificacionNull() {
                this[this.tabletpu_Comprobantes.UltimaModificacionColumn] = System.Convert.DBNull;
            }
            
            public bool IsIdConexionUltimaModificacionNull() {
                return this.IsNull(this.tabletpu_Comprobantes.IdConexionUltimaModificacionColumn);
            }
            
            public void SetIdConexionUltimaModificacionNull() {
                this[this.tabletpu_Comprobantes.IdConexionUltimaModificacionColumn] = System.Convert.DBNull;
            }
            
            public bool IsIdReservadoNull() {
                return this.IsNull(this.tabletpu_Comprobantes.IdReservadoColumn);
            }
            
            public void SetIdReservadoNull() {
                this[this.tabletpu_Comprobantes.IdReservadoColumn] = System.Convert.DBNull;
            }
            
            public bool IsRowIdNull() {
                return this.IsNull(this.tabletpu_Comprobantes.RowIdColumn);
            }
            
            public void SetRowIdNull() {
                this[this.tabletpu_Comprobantes.RowIdColumn] = System.Convert.DBNull;
            }
            
            public bool IsProveedorNull() {
                return this.IsNull(this.tabletpu_Comprobantes.ProveedorColumn);
            }
            
            public void SetProveedorNull() {
                this[this.tabletpu_Comprobantes.ProveedorColumn] = System.Convert.DBNull;
            }
            
            public bool IsDomicilioNull() {
                return this.IsNull(this.tabletpu_Comprobantes.DomicilioColumn);
            }
            
            public void SetDomicilioNull() {
                this[this.tabletpu_Comprobantes.DomicilioColumn] = System.Convert.DBNull;
            }
            
            public bool IsTipoDocumentoNull() {
                return this.IsNull(this.tabletpu_Comprobantes.TipoDocumentoColumn);
            }
            
            public void SetTipoDocumentoNull() {
                this[this.tabletpu_Comprobantes.TipoDocumentoColumn] = System.Convert.DBNull;
            }
            
            public bool IsDocumentoNull() {
                return this.IsNull(this.tabletpu_Comprobantes.DocumentoColumn);
            }
            
            public void SetDocumentoNull() {
                this[this.tabletpu_Comprobantes.DocumentoColumn] = System.Convert.DBNull;
            }
            
            public bool IsObservacionesNull() {
                return this.IsNull(this.tabletpu_Comprobantes.ObservacionesColumn);
            }
            
            public void SetObservacionesNull() {
                this[this.tabletpu_Comprobantes.ObservacionesColumn] = System.Convert.DBNull;
            }
            
            public bool IsAux1Null() {
                return this.IsNull(this.tabletpu_Comprobantes.Aux1Column);
            }
            
            public void SetAux1Null() {
                this[this.tabletpu_Comprobantes.Aux1Column] = System.Convert.DBNull;
            }
            
            public bool IsAux2Null() {
                return this.IsNull(this.tabletpu_Comprobantes.Aux2Column);
            }
            
            public void SetAux2Null() {
                this[this.tabletpu_Comprobantes.Aux2Column] = System.Convert.DBNull;
            }
            
            public bool IsAux3Null() {
                return this.IsNull(this.tabletpu_Comprobantes.Aux3Column);
            }
            
            public void SetAux3Null() {
                this[this.tabletpu_Comprobantes.Aux3Column] = System.Convert.DBNull;
            }
            
            public bool IsAux4Null() {
                return this.IsNull(this.tabletpu_Comprobantes.Aux4Column);
            }
            
            public void SetAux4Null() {
                this[this.tabletpu_Comprobantes.Aux4Column] = System.Convert.DBNull;
            }
            
            public bool IsFechaDeRegistracionNull() {
                return this.IsNull(this.tabletpu_Comprobantes.FechaDeRegistracionColumn);
            }
            
            public void SetFechaDeRegistracionNull() {
                this[this.tabletpu_Comprobantes.FechaDeRegistracionColumn] = System.Convert.DBNull;
            }
            
            public bool IsValorCotizacionProveedorNull() {
                return this.IsNull(this.tabletpu_Comprobantes.ValorCotizacionProveedorColumn);
            }
            
            public void SetValorCotizacionProveedorNull() {
                this[this.tabletpu_Comprobantes.ValorCotizacionProveedorColumn] = System.Convert.DBNull;
            }
            
            public bool IsIdMonedaOrigenNull() {
                return this.IsNull(this.tabletpu_Comprobantes.IdMonedaOrigenColumn);
            }
            
            public void SetIdMonedaOrigenNull() {
                this[this.tabletpu_Comprobantes.IdMonedaOrigenColumn] = System.Convert.DBNull;
            }
            
            public bool IsIdFuenteDeCambioProveedorNull() {
                return this.IsNull(this.tabletpu_Comprobantes.IdFuenteDeCambioProveedorColumn);
            }
            
            public void SetIdFuenteDeCambioProveedorNull() {
                this[this.tabletpu_Comprobantes.IdFuenteDeCambioProveedorColumn] = System.Convert.DBNull;
            }
            
            public bool IsFechaRecepcionMercaderiaNull() {
                return this.IsNull(this.tabletpu_Comprobantes.FechaRecepcionMercaderiaColumn);
            }
            
            public void SetFechaRecepcionMercaderiaNull() {
                this[this.tabletpu_Comprobantes.FechaRecepcionMercaderiaColumn] = System.Convert.DBNull;
            }
            
            public bool IsEstadoNull() {
                return this.IsNull(this.tabletpu_Comprobantes.EstadoColumn);
            }
            
            public void SetEstadoNull() {
                this[this.tabletpu_Comprobantes.EstadoColumn] = System.Convert.DBNull;
            }
            
            public bool IsIdCondicionDeCompraNull() {
                return this.IsNull(this.tabletpu_Comprobantes.IdCondicionDeCompraColumn);
            }
            
            public void SetIdCondicionDeCompraNull() {
                this[this.tabletpu_Comprobantes.IdCondicionDeCompraColumn] = System.Convert.DBNull;
            }
            
            public bool IsIdAutorizacionNull() {
                return this.IsNull(this.tabletpu_Comprobantes.IdAutorizacionColumn);
            }
            
            public void SetIdAutorizacionNull() {
                this[this.tabletpu_Comprobantes.IdAutorizacionColumn] = System.Convert.DBNull;
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class tpu_ComprobantesRowChangeEvent : EventArgs {
            
            private tpu_ComprobantesRow eventRow;
            
            private DataRowAction eventAction;
            
            public tpu_ComprobantesRowChangeEvent(tpu_ComprobantesRow row, DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            public tpu_ComprobantesRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            public DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
