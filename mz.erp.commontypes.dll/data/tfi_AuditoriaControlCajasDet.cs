//------------------------------------------------------------------------------
// <autogenerated>
//     This code was generated by a tool.
//     Runtime Version: 1.1.4322.2407
//
//     Changes to this file may cause incorrect behavior and will be lost if 
//     the code is regenerated.
// </autogenerated>
//------------------------------------------------------------------------------

namespace mz.erp.commontypes.data {
    using System;
    using System.Data;
    using System.Xml;
    using System.Runtime.Serialization;
    
    
    [Serializable()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Diagnostics.DebuggerStepThrough()]
    [System.ComponentModel.ToolboxItem(true)]
    public class tfi_AuditoriaControlCajasDetDataset : DataSet {
        
        private tfi_AuditoriaControlCajasDetDataTable tabletfi_AuditoriaControlCajasDet;
        
        public tfi_AuditoriaControlCajasDetDataset() {
            this.InitClass();
            System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            this.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        protected tfi_AuditoriaControlCajasDetDataset(SerializationInfo info, StreamingContext context) {
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((strSchema != null)) {
                DataSet ds = new DataSet();
                ds.ReadXmlSchema(new XmlTextReader(new System.IO.StringReader(strSchema)));
                if ((ds.Tables["tfi_AuditoriaControlCajasDet"] != null)) {
                    this.Tables.Add(new tfi_AuditoriaControlCajasDetDataTable(ds.Tables["tfi_AuditoriaControlCajasDet"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.InitClass();
            }
            this.GetSerializationData(info, context);
            System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            this.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public tfi_AuditoriaControlCajasDetDataTable tfi_AuditoriaControlCajasDet {
            get {
                return this.tabletfi_AuditoriaControlCajasDet;
            }
        }
        
        public override DataSet Clone() {
            tfi_AuditoriaControlCajasDetDataset cln = ((tfi_AuditoriaControlCajasDetDataset)(base.Clone()));
            cln.InitVars();
            return cln;
        }
        
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        protected override void ReadXmlSerializable(XmlReader reader) {
            this.Reset();
            DataSet ds = new DataSet();
            ds.ReadXml(reader);
            if ((ds.Tables["tfi_AuditoriaControlCajasDet"] != null)) {
                this.Tables.Add(new tfi_AuditoriaControlCajasDetDataTable(ds.Tables["tfi_AuditoriaControlCajasDet"]));
            }
            this.DataSetName = ds.DataSetName;
            this.Prefix = ds.Prefix;
            this.Namespace = ds.Namespace;
            this.Locale = ds.Locale;
            this.CaseSensitive = ds.CaseSensitive;
            this.EnforceConstraints = ds.EnforceConstraints;
            this.Merge(ds, false, System.Data.MissingSchemaAction.Add);
            this.InitVars();
        }
        
        protected override System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            System.IO.MemoryStream stream = new System.IO.MemoryStream();
            this.WriteXmlSchema(new XmlTextWriter(stream, null));
            stream.Position = 0;
            return System.Xml.Schema.XmlSchema.Read(new XmlTextReader(stream), null);
        }
        
        internal void InitVars() {
            this.tabletfi_AuditoriaControlCajasDet = ((tfi_AuditoriaControlCajasDetDataTable)(this.Tables["tfi_AuditoriaControlCajasDet"]));
            if ((this.tabletfi_AuditoriaControlCajasDet != null)) {
                this.tabletfi_AuditoriaControlCajasDet.InitVars();
            }
        }
        
        private void InitClass() {
            this.DataSetName = "tfi_AuditoriaControlCajasDetDataset";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/tfi_AuditoriaControlCajasDet.xsd";
            this.Locale = new System.Globalization.CultureInfo("en-US");
            this.CaseSensitive = false;
            this.EnforceConstraints = true;
            this.tabletfi_AuditoriaControlCajasDet = new tfi_AuditoriaControlCajasDetDataTable();
            this.Tables.Add(this.tabletfi_AuditoriaControlCajasDet);
        }
        
        private bool ShouldSerializetfi_AuditoriaControlCajasDet() {
            return false;
        }
        
        private void SchemaChanged(object sender, System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        public delegate void tfi_AuditoriaControlCajasDetRowChangeEventHandler(object sender, tfi_AuditoriaControlCajasDetRowChangeEvent e);
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class tfi_AuditoriaControlCajasDetDataTable : DataTable, System.Collections.IEnumerable {
            
            private DataColumn columnIdAuditoria;
            
            private DataColumn columnOrdinal;
            
            private DataColumn columnIdControlDeCajasFamiliasComprobanteTesoreria;
            
            private DataColumn columnIdMoneda;
            
            private DataColumn columnCantidadInformada;
            
            private DataColumn columnCantidadSistema;
            
            private DataColumn columnMontoInformado;
            
            private DataColumn columnMontoSistema;
            
            private DataColumn columnDiferenciaCantidad;
            
            private DataColumn columnDiferenciaMonto;
            
            private DataColumn columnCodigoCalidadCantidad;
            
            private DataColumn columnCodigoCalidadMonto;
            
            private DataColumn columnFechaCreacion;
            
            private DataColumn columnIdConexionCreacion;
            
            private DataColumn columnUltimaModificacion;
            
            private DataColumn columnIdConexionUltimaModificacion;
            
            private DataColumn columnRowId;
            
            internal tfi_AuditoriaControlCajasDetDataTable() : 
                    base("tfi_AuditoriaControlCajasDet") {
                this.InitClass();
            }
            
            internal tfi_AuditoriaControlCajasDetDataTable(DataTable table) : 
                    base(table.TableName) {
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
                this.DisplayExpression = table.DisplayExpression;
            }
            
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            internal DataColumn IdAuditoriaColumn {
                get {
                    return this.columnIdAuditoria;
                }
            }
            
            internal DataColumn OrdinalColumn {
                get {
                    return this.columnOrdinal;
                }
            }
            
            internal DataColumn IdControlDeCajasFamiliasComprobanteTesoreriaColumn {
                get {
                    return this.columnIdControlDeCajasFamiliasComprobanteTesoreria;
                }
            }
            
            internal DataColumn IdMonedaColumn {
                get {
                    return this.columnIdMoneda;
                }
            }
            
            internal DataColumn CantidadInformadaColumn {
                get {
                    return this.columnCantidadInformada;
                }
            }
            
            internal DataColumn CantidadSistemaColumn {
                get {
                    return this.columnCantidadSistema;
                }
            }
            
            internal DataColumn MontoInformadoColumn {
                get {
                    return this.columnMontoInformado;
                }
            }
            
            internal DataColumn MontoSistemaColumn {
                get {
                    return this.columnMontoSistema;
                }
            }
            
            internal DataColumn DiferenciaCantidadColumn {
                get {
                    return this.columnDiferenciaCantidad;
                }
            }
            
            internal DataColumn DiferenciaMontoColumn {
                get {
                    return this.columnDiferenciaMonto;
                }
            }
            
            internal DataColumn CodigoCalidadCantidadColumn {
                get {
                    return this.columnCodigoCalidadCantidad;
                }
            }
            
            internal DataColumn CodigoCalidadMontoColumn {
                get {
                    return this.columnCodigoCalidadMonto;
                }
            }
            
            internal DataColumn FechaCreacionColumn {
                get {
                    return this.columnFechaCreacion;
                }
            }
            
            internal DataColumn IdConexionCreacionColumn {
                get {
                    return this.columnIdConexionCreacion;
                }
            }
            
            internal DataColumn UltimaModificacionColumn {
                get {
                    return this.columnUltimaModificacion;
                }
            }
            
            internal DataColumn IdConexionUltimaModificacionColumn {
                get {
                    return this.columnIdConexionUltimaModificacion;
                }
            }
            
            internal DataColumn RowIdColumn {
                get {
                    return this.columnRowId;
                }
            }
            
            public tfi_AuditoriaControlCajasDetRow this[int index] {
                get {
                    return ((tfi_AuditoriaControlCajasDetRow)(this.Rows[index]));
                }
            }
            
            public event tfi_AuditoriaControlCajasDetRowChangeEventHandler tfi_AuditoriaControlCajasDetRowChanged;
            
            public event tfi_AuditoriaControlCajasDetRowChangeEventHandler tfi_AuditoriaControlCajasDetRowChanging;
            
            public event tfi_AuditoriaControlCajasDetRowChangeEventHandler tfi_AuditoriaControlCajasDetRowDeleted;
            
            public event tfi_AuditoriaControlCajasDetRowChangeEventHandler tfi_AuditoriaControlCajasDetRowDeleting;
            
            public void Addtfi_AuditoriaControlCajasDetRow(tfi_AuditoriaControlCajasDetRow row) {
                this.Rows.Add(row);
            }
            
            public tfi_AuditoriaControlCajasDetRow Addtfi_AuditoriaControlCajasDetRow(
                        long IdAuditoria, 
                        long Ordinal, 
                        string IdControlDeCajasFamiliasComprobanteTesoreria, 
                        string IdMoneda, 
                        long CantidadInformada, 
                        long CantidadSistema, 
                        System.Decimal MontoInformado, 
                        System.Decimal MontoSistema, 
                        long DiferenciaCantidad, 
                        System.Decimal DiferenciaMonto, 
                        bool CodigoCalidadCantidad, 
                        bool CodigoCalidadMonto, 
                        System.DateTime FechaCreacion, 
                        long IdConexionCreacion, 
                        System.Byte[] UltimaModificacion, 
                        long IdConexionUltimaModificacion, 
                        System.Guid RowId) {
                tfi_AuditoriaControlCajasDetRow rowtfi_AuditoriaControlCajasDetRow = ((tfi_AuditoriaControlCajasDetRow)(this.NewRow()));
                rowtfi_AuditoriaControlCajasDetRow.ItemArray = new object[] {
                        IdAuditoria,
                        Ordinal,
                        IdControlDeCajasFamiliasComprobanteTesoreria,
                        IdMoneda,
                        CantidadInformada,
                        CantidadSistema,
                        MontoInformado,
                        MontoSistema,
                        DiferenciaCantidad,
                        DiferenciaMonto,
                        CodigoCalidadCantidad,
                        CodigoCalidadMonto,
                        FechaCreacion,
                        IdConexionCreacion,
                        UltimaModificacion,
                        IdConexionUltimaModificacion,
                        RowId};
                this.Rows.Add(rowtfi_AuditoriaControlCajasDetRow);
                return rowtfi_AuditoriaControlCajasDetRow;
            }
            
            public tfi_AuditoriaControlCajasDetRow FindByIdAuditoriaOrdinal(long IdAuditoria, long Ordinal) {
                return ((tfi_AuditoriaControlCajasDetRow)(this.Rows.Find(new object[] {
                            IdAuditoria,
                            Ordinal})));
            }
            
            public System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            public override DataTable Clone() {
                tfi_AuditoriaControlCajasDetDataTable cln = ((tfi_AuditoriaControlCajasDetDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            protected override DataTable CreateInstance() {
                return new tfi_AuditoriaControlCajasDetDataTable();
            }
            
            internal void InitVars() {
                this.columnIdAuditoria = this.Columns["IdAuditoria"];
                this.columnOrdinal = this.Columns["Ordinal"];
                this.columnIdControlDeCajasFamiliasComprobanteTesoreria = this.Columns["IdControlDeCajasFamiliasComprobanteTesoreria"];
                this.columnIdMoneda = this.Columns["IdMoneda"];
                this.columnCantidadInformada = this.Columns["CantidadInformada"];
                this.columnCantidadSistema = this.Columns["CantidadSistema"];
                this.columnMontoInformado = this.Columns["MontoInformado"];
                this.columnMontoSistema = this.Columns["MontoSistema"];
                this.columnDiferenciaCantidad = this.Columns["DiferenciaCantidad"];
                this.columnDiferenciaMonto = this.Columns["DiferenciaMonto"];
                this.columnCodigoCalidadCantidad = this.Columns["CodigoCalidadCantidad"];
                this.columnCodigoCalidadMonto = this.Columns["CodigoCalidadMonto"];
                this.columnFechaCreacion = this.Columns["FechaCreacion"];
                this.columnIdConexionCreacion = this.Columns["IdConexionCreacion"];
                this.columnUltimaModificacion = this.Columns["UltimaModificacion"];
                this.columnIdConexionUltimaModificacion = this.Columns["IdConexionUltimaModificacion"];
                this.columnRowId = this.Columns["RowId"];
            }
            
            private void InitClass() {
                this.columnIdAuditoria = new DataColumn("IdAuditoria", typeof(long), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdAuditoria);
                this.columnOrdinal = new DataColumn("Ordinal", typeof(long), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnOrdinal);
                this.columnIdControlDeCajasFamiliasComprobanteTesoreria = new DataColumn("IdControlDeCajasFamiliasComprobanteTesoreria", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdControlDeCajasFamiliasComprobanteTesoreria);
                this.columnIdMoneda = new DataColumn("IdMoneda", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdMoneda);
                this.columnCantidadInformada = new DataColumn("CantidadInformada", typeof(long), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnCantidadInformada);
                this.columnCantidadSistema = new DataColumn("CantidadSistema", typeof(long), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnCantidadSistema);
                this.columnMontoInformado = new DataColumn("MontoInformado", typeof(System.Decimal), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnMontoInformado);
                this.columnMontoSistema = new DataColumn("MontoSistema", typeof(System.Decimal), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnMontoSistema);
                this.columnDiferenciaCantidad = new DataColumn("DiferenciaCantidad", typeof(long), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnDiferenciaCantidad);
                this.columnDiferenciaMonto = new DataColumn("DiferenciaMonto", typeof(System.Decimal), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnDiferenciaMonto);
                this.columnCodigoCalidadCantidad = new DataColumn("CodigoCalidadCantidad", typeof(bool), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnCodigoCalidadCantidad);
                this.columnCodigoCalidadMonto = new DataColumn("CodigoCalidadMonto", typeof(bool), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnCodigoCalidadMonto);
                this.columnFechaCreacion = new DataColumn("FechaCreacion", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnFechaCreacion);
                this.columnIdConexionCreacion = new DataColumn("IdConexionCreacion", typeof(long), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdConexionCreacion);
                this.columnUltimaModificacion = new DataColumn("UltimaModificacion", typeof(System.Byte[]), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnUltimaModificacion);
                this.columnIdConexionUltimaModificacion = new DataColumn("IdConexionUltimaModificacion", typeof(long), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdConexionUltimaModificacion);
                this.columnRowId = new DataColumn("RowId", typeof(System.Guid), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnRowId);
                this.Constraints.Add(new UniqueConstraint("tfi_AuditoriaControlCajasDetKey1", new DataColumn[] {
                                this.columnIdAuditoria,
                                this.columnOrdinal}, true));
                this.columnIdAuditoria.AllowDBNull = false;
                this.columnOrdinal.AllowDBNull = false;
                this.columnIdConexionCreacion.AllowDBNull = false;
                this.columnUltimaModificacion.ReadOnly = true;
            }
            
            public tfi_AuditoriaControlCajasDetRow Newtfi_AuditoriaControlCajasDetRow() {
                return ((tfi_AuditoriaControlCajasDetRow)(this.NewRow()));
            }
            
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder) {
                return new tfi_AuditoriaControlCajasDetRow(builder);
            }
            
            protected override System.Type GetRowType() {
                return typeof(tfi_AuditoriaControlCajasDetRow);
            }
            
            protected override void OnRowChanged(DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.tfi_AuditoriaControlCajasDetRowChanged != null)) {
                    this.tfi_AuditoriaControlCajasDetRowChanged(this, new tfi_AuditoriaControlCajasDetRowChangeEvent(((tfi_AuditoriaControlCajasDetRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowChanging(DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.tfi_AuditoriaControlCajasDetRowChanging != null)) {
                    this.tfi_AuditoriaControlCajasDetRowChanging(this, new tfi_AuditoriaControlCajasDetRowChangeEvent(((tfi_AuditoriaControlCajasDetRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleted(DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.tfi_AuditoriaControlCajasDetRowDeleted != null)) {
                    this.tfi_AuditoriaControlCajasDetRowDeleted(this, new tfi_AuditoriaControlCajasDetRowChangeEvent(((tfi_AuditoriaControlCajasDetRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleting(DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.tfi_AuditoriaControlCajasDetRowDeleting != null)) {
                    this.tfi_AuditoriaControlCajasDetRowDeleting(this, new tfi_AuditoriaControlCajasDetRowChangeEvent(((tfi_AuditoriaControlCajasDetRow)(e.Row)), e.Action));
                }
            }
            
            public void Removetfi_AuditoriaControlCajasDetRow(tfi_AuditoriaControlCajasDetRow row) {
                this.Rows.Remove(row);
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class tfi_AuditoriaControlCajasDetRow : DataRow {
            
            private tfi_AuditoriaControlCajasDetDataTable tabletfi_AuditoriaControlCajasDet;
            
            internal tfi_AuditoriaControlCajasDetRow(DataRowBuilder rb) : 
                    base(rb) {
                this.tabletfi_AuditoriaControlCajasDet = ((tfi_AuditoriaControlCajasDetDataTable)(this.Table));
            }
            
            public long IdAuditoria {
                get {
                    return ((long)(this[this.tabletfi_AuditoriaControlCajasDet.IdAuditoriaColumn]));
                }
                set {
                    this[this.tabletfi_AuditoriaControlCajasDet.IdAuditoriaColumn] = value;
                }
            }
            
            public long Ordinal {
                get {
                    return ((long)(this[this.tabletfi_AuditoriaControlCajasDet.OrdinalColumn]));
                }
                set {
                    this[this.tabletfi_AuditoriaControlCajasDet.OrdinalColumn] = value;
                }
            }
            
            public string IdControlDeCajasFamiliasComprobanteTesoreria {
                get {
                    try {
                        return ((string)(this[this.tabletfi_AuditoriaControlCajasDet.IdControlDeCajasFamiliasComprobanteTesoreriaColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletfi_AuditoriaControlCajasDet.IdControlDeCajasFamiliasComprobanteTesoreriaColumn] = value;
                }
            }
            
            public string IdMoneda {
                get {
                    try {
                        return ((string)(this[this.tabletfi_AuditoriaControlCajasDet.IdMonedaColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletfi_AuditoriaControlCajasDet.IdMonedaColumn] = value;
                }
            }
            
            public long CantidadInformada {
                get {
                    try {
                        return ((long)(this[this.tabletfi_AuditoriaControlCajasDet.CantidadInformadaColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletfi_AuditoriaControlCajasDet.CantidadInformadaColumn] = value;
                }
            }
            
            public long CantidadSistema {
                get {
                    try {
                        return ((long)(this[this.tabletfi_AuditoriaControlCajasDet.CantidadSistemaColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletfi_AuditoriaControlCajasDet.CantidadSistemaColumn] = value;
                }
            }
            
            public System.Decimal MontoInformado {
                get {
                    try {
                        return ((System.Decimal)(this[this.tabletfi_AuditoriaControlCajasDet.MontoInformadoColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletfi_AuditoriaControlCajasDet.MontoInformadoColumn] = value;
                }
            }
            
            public System.Decimal MontoSistema {
                get {
                    try {
                        return ((System.Decimal)(this[this.tabletfi_AuditoriaControlCajasDet.MontoSistemaColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletfi_AuditoriaControlCajasDet.MontoSistemaColumn] = value;
                }
            }
            
            public long DiferenciaCantidad {
                get {
                    try {
                        return ((long)(this[this.tabletfi_AuditoriaControlCajasDet.DiferenciaCantidadColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletfi_AuditoriaControlCajasDet.DiferenciaCantidadColumn] = value;
                }
            }
            
            public System.Decimal DiferenciaMonto {
                get {
                    try {
                        return ((System.Decimal)(this[this.tabletfi_AuditoriaControlCajasDet.DiferenciaMontoColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletfi_AuditoriaControlCajasDet.DiferenciaMontoColumn] = value;
                }
            }
            
            public bool CodigoCalidadCantidad {
                get {
                    try {
                        return ((bool)(this[this.tabletfi_AuditoriaControlCajasDet.CodigoCalidadCantidadColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletfi_AuditoriaControlCajasDet.CodigoCalidadCantidadColumn] = value;
                }
            }
            
            public bool CodigoCalidadMonto {
                get {
                    try {
                        return ((bool)(this[this.tabletfi_AuditoriaControlCajasDet.CodigoCalidadMontoColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletfi_AuditoriaControlCajasDet.CodigoCalidadMontoColumn] = value;
                }
            }
            
            public System.DateTime FechaCreacion {
                get {
                    try {
                        return ((System.DateTime)(this[this.tabletfi_AuditoriaControlCajasDet.FechaCreacionColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletfi_AuditoriaControlCajasDet.FechaCreacionColumn] = value;
                }
            }
            
            public long IdConexionCreacion {
                get {
                    return ((long)(this[this.tabletfi_AuditoriaControlCajasDet.IdConexionCreacionColumn]));
                }
                set {
                    this[this.tabletfi_AuditoriaControlCajasDet.IdConexionCreacionColumn] = value;
                }
            }
            
            public System.Byte[] UltimaModificacion {
                get {
                    try {
                        return ((System.Byte[])(this[this.tabletfi_AuditoriaControlCajasDet.UltimaModificacionColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletfi_AuditoriaControlCajasDet.UltimaModificacionColumn] = value;
                }
            }
            
            public long IdConexionUltimaModificacion {
                get {
                    try {
                        return ((long)(this[this.tabletfi_AuditoriaControlCajasDet.IdConexionUltimaModificacionColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletfi_AuditoriaControlCajasDet.IdConexionUltimaModificacionColumn] = value;
                }
            }
            
            public System.Guid RowId {
                get {
                    try {
                        return ((System.Guid)(this[this.tabletfi_AuditoriaControlCajasDet.RowIdColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletfi_AuditoriaControlCajasDet.RowIdColumn] = value;
                }
            }
            
            public bool IsIdControlDeCajasFamiliasComprobanteTesoreriaNull() {
                return this.IsNull(this.tabletfi_AuditoriaControlCajasDet.IdControlDeCajasFamiliasComprobanteTesoreriaColumn);
            }
            
            public void SetIdControlDeCajasFamiliasComprobanteTesoreriaNull() {
                this[this.tabletfi_AuditoriaControlCajasDet.IdControlDeCajasFamiliasComprobanteTesoreriaColumn] = System.Convert.DBNull;
            }
            
            public bool IsIdMonedaNull() {
                return this.IsNull(this.tabletfi_AuditoriaControlCajasDet.IdMonedaColumn);
            }
            
            public void SetIdMonedaNull() {
                this[this.tabletfi_AuditoriaControlCajasDet.IdMonedaColumn] = System.Convert.DBNull;
            }
            
            public bool IsCantidadInformadaNull() {
                return this.IsNull(this.tabletfi_AuditoriaControlCajasDet.CantidadInformadaColumn);
            }
            
            public void SetCantidadInformadaNull() {
                this[this.tabletfi_AuditoriaControlCajasDet.CantidadInformadaColumn] = System.Convert.DBNull;
            }
            
            public bool IsCantidadSistemaNull() {
                return this.IsNull(this.tabletfi_AuditoriaControlCajasDet.CantidadSistemaColumn);
            }
            
            public void SetCantidadSistemaNull() {
                this[this.tabletfi_AuditoriaControlCajasDet.CantidadSistemaColumn] = System.Convert.DBNull;
            }
            
            public bool IsMontoInformadoNull() {
                return this.IsNull(this.tabletfi_AuditoriaControlCajasDet.MontoInformadoColumn);
            }
            
            public void SetMontoInformadoNull() {
                this[this.tabletfi_AuditoriaControlCajasDet.MontoInformadoColumn] = System.Convert.DBNull;
            }
            
            public bool IsMontoSistemaNull() {
                return this.IsNull(this.tabletfi_AuditoriaControlCajasDet.MontoSistemaColumn);
            }
            
            public void SetMontoSistemaNull() {
                this[this.tabletfi_AuditoriaControlCajasDet.MontoSistemaColumn] = System.Convert.DBNull;
            }
            
            public bool IsDiferenciaCantidadNull() {
                return this.IsNull(this.tabletfi_AuditoriaControlCajasDet.DiferenciaCantidadColumn);
            }
            
            public void SetDiferenciaCantidadNull() {
                this[this.tabletfi_AuditoriaControlCajasDet.DiferenciaCantidadColumn] = System.Convert.DBNull;
            }
            
            public bool IsDiferenciaMontoNull() {
                return this.IsNull(this.tabletfi_AuditoriaControlCajasDet.DiferenciaMontoColumn);
            }
            
            public void SetDiferenciaMontoNull() {
                this[this.tabletfi_AuditoriaControlCajasDet.DiferenciaMontoColumn] = System.Convert.DBNull;
            }
            
            public bool IsCodigoCalidadCantidadNull() {
                return this.IsNull(this.tabletfi_AuditoriaControlCajasDet.CodigoCalidadCantidadColumn);
            }
            
            public void SetCodigoCalidadCantidadNull() {
                this[this.tabletfi_AuditoriaControlCajasDet.CodigoCalidadCantidadColumn] = System.Convert.DBNull;
            }
            
            public bool IsCodigoCalidadMontoNull() {
                return this.IsNull(this.tabletfi_AuditoriaControlCajasDet.CodigoCalidadMontoColumn);
            }
            
            public void SetCodigoCalidadMontoNull() {
                this[this.tabletfi_AuditoriaControlCajasDet.CodigoCalidadMontoColumn] = System.Convert.DBNull;
            }
            
            public bool IsFechaCreacionNull() {
                return this.IsNull(this.tabletfi_AuditoriaControlCajasDet.FechaCreacionColumn);
            }
            
            public void SetFechaCreacionNull() {
                this[this.tabletfi_AuditoriaControlCajasDet.FechaCreacionColumn] = System.Convert.DBNull;
            }
            
            public bool IsUltimaModificacionNull() {
                return this.IsNull(this.tabletfi_AuditoriaControlCajasDet.UltimaModificacionColumn);
            }
            
            public void SetUltimaModificacionNull() {
                this[this.tabletfi_AuditoriaControlCajasDet.UltimaModificacionColumn] = System.Convert.DBNull;
            }
            
            public bool IsIdConexionUltimaModificacionNull() {
                return this.IsNull(this.tabletfi_AuditoriaControlCajasDet.IdConexionUltimaModificacionColumn);
            }
            
            public void SetIdConexionUltimaModificacionNull() {
                this[this.tabletfi_AuditoriaControlCajasDet.IdConexionUltimaModificacionColumn] = System.Convert.DBNull;
            }
            
            public bool IsRowIdNull() {
                return this.IsNull(this.tabletfi_AuditoriaControlCajasDet.RowIdColumn);
            }
            
            public void SetRowIdNull() {
                this[this.tabletfi_AuditoriaControlCajasDet.RowIdColumn] = System.Convert.DBNull;
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class tfi_AuditoriaControlCajasDetRowChangeEvent : EventArgs {
            
            private tfi_AuditoriaControlCajasDetRow eventRow;
            
            private DataRowAction eventAction;
            
            public tfi_AuditoriaControlCajasDetRowChangeEvent(tfi_AuditoriaControlCajasDetRow row, DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            public tfi_AuditoriaControlCajasDetRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            public DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
