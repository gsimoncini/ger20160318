//------------------------------------------------------------------------------
// <autogenerated>
//     This code was generated by a tool.
//     Runtime Version: 1.1.4322.2407
//
//     Changes to this file may cause incorrect behavior and will be lost if 
//     the code is regenerated.
// </autogenerated>
//------------------------------------------------------------------------------

namespace mz.erp.commontypes.data {
    using System;
    using System.Data;
    using System.Xml;
    using System.Runtime.Serialization;
    
    
    [Serializable()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Diagnostics.DebuggerStepThrough()]
    [System.ComponentModel.ToolboxItem(true)]
    public class sy_UsuariosExDataset : DataSet {
        
        private sy_PerfilesUsuariosEmpresasDataTable tablesy_PerfilesUsuariosEmpresas;
        
        private sy_UsuariosDataTable tablesy_Usuarios;
        
        private sy_PerfilesDataTable tablesy_Perfiles;
        
        private tlg_ResponsablesDepositosSeccionesDataTable tabletlg_ResponsablesDepositosSecciones;
        
        private DataRelation relationsy_Usuariossy_PerfilesUsuariosEmpresas;
        
        private DataRelation relationsy_Perfilessy_PerfilesUsuariosEmpresas;
        
        private DataRelation relationsy_Usuariostlg_ResponsablesDepositosSecciones;
        
        public sy_UsuariosExDataset() {
            this.InitClass();
            System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            this.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        protected sy_UsuariosExDataset(SerializationInfo info, StreamingContext context) {
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((strSchema != null)) {
                DataSet ds = new DataSet();
                ds.ReadXmlSchema(new XmlTextReader(new System.IO.StringReader(strSchema)));
                if ((ds.Tables["sy_PerfilesUsuariosEmpresas"] != null)) {
                    this.Tables.Add(new sy_PerfilesUsuariosEmpresasDataTable(ds.Tables["sy_PerfilesUsuariosEmpresas"]));
                }
                if ((ds.Tables["sy_Usuarios"] != null)) {
                    this.Tables.Add(new sy_UsuariosDataTable(ds.Tables["sy_Usuarios"]));
                }
                if ((ds.Tables["sy_Perfiles"] != null)) {
                    this.Tables.Add(new sy_PerfilesDataTable(ds.Tables["sy_Perfiles"]));
                }
                if ((ds.Tables["tlg_ResponsablesDepositosSecciones"] != null)) {
                    this.Tables.Add(new tlg_ResponsablesDepositosSeccionesDataTable(ds.Tables["tlg_ResponsablesDepositosSecciones"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.InitClass();
            }
            this.GetSerializationData(info, context);
            System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            this.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public sy_PerfilesUsuariosEmpresasDataTable sy_PerfilesUsuariosEmpresas {
            get {
                return this.tablesy_PerfilesUsuariosEmpresas;
            }
        }
        
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public sy_UsuariosDataTable sy_Usuarios {
            get {
                return this.tablesy_Usuarios;
            }
        }
        
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public sy_PerfilesDataTable sy_Perfiles {
            get {
                return this.tablesy_Perfiles;
            }
        }
        
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public tlg_ResponsablesDepositosSeccionesDataTable tlg_ResponsablesDepositosSecciones {
            get {
                return this.tabletlg_ResponsablesDepositosSecciones;
            }
        }
        
        public override DataSet Clone() {
            sy_UsuariosExDataset cln = ((sy_UsuariosExDataset)(base.Clone()));
            cln.InitVars();
            return cln;
        }
        
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        protected override void ReadXmlSerializable(XmlReader reader) {
            this.Reset();
            DataSet ds = new DataSet();
            ds.ReadXml(reader);
            if ((ds.Tables["sy_PerfilesUsuariosEmpresas"] != null)) {
                this.Tables.Add(new sy_PerfilesUsuariosEmpresasDataTable(ds.Tables["sy_PerfilesUsuariosEmpresas"]));
            }
            if ((ds.Tables["sy_Usuarios"] != null)) {
                this.Tables.Add(new sy_UsuariosDataTable(ds.Tables["sy_Usuarios"]));
            }
            if ((ds.Tables["sy_Perfiles"] != null)) {
                this.Tables.Add(new sy_PerfilesDataTable(ds.Tables["sy_Perfiles"]));
            }
            if ((ds.Tables["tlg_ResponsablesDepositosSecciones"] != null)) {
                this.Tables.Add(new tlg_ResponsablesDepositosSeccionesDataTable(ds.Tables["tlg_ResponsablesDepositosSecciones"]));
            }
            this.DataSetName = ds.DataSetName;
            this.Prefix = ds.Prefix;
            this.Namespace = ds.Namespace;
            this.Locale = ds.Locale;
            this.CaseSensitive = ds.CaseSensitive;
            this.EnforceConstraints = ds.EnforceConstraints;
            this.Merge(ds, false, System.Data.MissingSchemaAction.Add);
            this.InitVars();
        }
        
        protected override System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            System.IO.MemoryStream stream = new System.IO.MemoryStream();
            this.WriteXmlSchema(new XmlTextWriter(stream, null));
            stream.Position = 0;
            return System.Xml.Schema.XmlSchema.Read(new XmlTextReader(stream), null);
        }
        
        internal void InitVars() {
            this.tablesy_PerfilesUsuariosEmpresas = ((sy_PerfilesUsuariosEmpresasDataTable)(this.Tables["sy_PerfilesUsuariosEmpresas"]));
            if ((this.tablesy_PerfilesUsuariosEmpresas != null)) {
                this.tablesy_PerfilesUsuariosEmpresas.InitVars();
            }
            this.tablesy_Usuarios = ((sy_UsuariosDataTable)(this.Tables["sy_Usuarios"]));
            if ((this.tablesy_Usuarios != null)) {
                this.tablesy_Usuarios.InitVars();
            }
            this.tablesy_Perfiles = ((sy_PerfilesDataTable)(this.Tables["sy_Perfiles"]));
            if ((this.tablesy_Perfiles != null)) {
                this.tablesy_Perfiles.InitVars();
            }
            this.tabletlg_ResponsablesDepositosSecciones = ((tlg_ResponsablesDepositosSeccionesDataTable)(this.Tables["tlg_ResponsablesDepositosSecciones"]));
            if ((this.tabletlg_ResponsablesDepositosSecciones != null)) {
                this.tabletlg_ResponsablesDepositosSecciones.InitVars();
            }
            this.relationsy_Usuariossy_PerfilesUsuariosEmpresas = this.Relations["sy_Usuariossy_PerfilesUsuariosEmpresas"];
            this.relationsy_Perfilessy_PerfilesUsuariosEmpresas = this.Relations["sy_Perfilessy_PerfilesUsuariosEmpresas"];
            this.relationsy_Usuariostlg_ResponsablesDepositosSecciones = this.Relations["sy_Usuariostlg_ResponsablesDepositosSecciones"];
        }
        
        private void InitClass() {
            this.DataSetName = "sy_UsuariosExDataset";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/sy_UsuariosEx.xsd";
            this.Locale = new System.Globalization.CultureInfo("en-US");
            this.CaseSensitive = false;
            this.EnforceConstraints = true;
            this.tablesy_PerfilesUsuariosEmpresas = new sy_PerfilesUsuariosEmpresasDataTable();
            this.Tables.Add(this.tablesy_PerfilesUsuariosEmpresas);
            this.tablesy_Usuarios = new sy_UsuariosDataTable();
            this.Tables.Add(this.tablesy_Usuarios);
            this.tablesy_Perfiles = new sy_PerfilesDataTable();
            this.Tables.Add(this.tablesy_Perfiles);
            this.tabletlg_ResponsablesDepositosSecciones = new tlg_ResponsablesDepositosSeccionesDataTable();
            this.Tables.Add(this.tabletlg_ResponsablesDepositosSecciones);
            ForeignKeyConstraint fkc;
            fkc = new ForeignKeyConstraint("sy_Usuariossy_PerfilesUsuariosEmpresas", new DataColumn[] {
                        this.tablesy_Usuarios.IdUsuarioColumn}, new DataColumn[] {
                        this.tablesy_PerfilesUsuariosEmpresas.IdUsuarioColumn});
            this.tablesy_PerfilesUsuariosEmpresas.Constraints.Add(fkc);
            fkc.AcceptRejectRule = System.Data.AcceptRejectRule.None;
            fkc.DeleteRule = System.Data.Rule.Cascade;
            fkc.UpdateRule = System.Data.Rule.Cascade;
            fkc = new ForeignKeyConstraint("sy_Perfilessy_PerfilesUsuariosEmpresas", new DataColumn[] {
                        this.tablesy_Perfiles.IdPerfilColumn}, new DataColumn[] {
                        this.tablesy_PerfilesUsuariosEmpresas.IdPerfilColumn});
            this.tablesy_PerfilesUsuariosEmpresas.Constraints.Add(fkc);
            fkc.AcceptRejectRule = System.Data.AcceptRejectRule.None;
            fkc.DeleteRule = System.Data.Rule.Cascade;
            fkc.UpdateRule = System.Data.Rule.Cascade;
            fkc = new ForeignKeyConstraint("sy_Usuariostlg_ResponsablesDepositosSecciones", new DataColumn[] {
                        this.tablesy_Usuarios.IdUsuarioColumn}, new DataColumn[] {
                        this.tabletlg_ResponsablesDepositosSecciones.IdUsuarioColumn});
            this.tabletlg_ResponsablesDepositosSecciones.Constraints.Add(fkc);
            fkc.AcceptRejectRule = System.Data.AcceptRejectRule.None;
            fkc.DeleteRule = System.Data.Rule.Cascade;
            fkc.UpdateRule = System.Data.Rule.Cascade;
            this.relationsy_Usuariossy_PerfilesUsuariosEmpresas = new DataRelation("sy_Usuariossy_PerfilesUsuariosEmpresas", new DataColumn[] {
                        this.tablesy_Usuarios.IdUsuarioColumn}, new DataColumn[] {
                        this.tablesy_PerfilesUsuariosEmpresas.IdUsuarioColumn}, false);
            this.Relations.Add(this.relationsy_Usuariossy_PerfilesUsuariosEmpresas);
            this.relationsy_Perfilessy_PerfilesUsuariosEmpresas = new DataRelation("sy_Perfilessy_PerfilesUsuariosEmpresas", new DataColumn[] {
                        this.tablesy_Perfiles.IdPerfilColumn}, new DataColumn[] {
                        this.tablesy_PerfilesUsuariosEmpresas.IdPerfilColumn}, false);
            this.Relations.Add(this.relationsy_Perfilessy_PerfilesUsuariosEmpresas);
            this.relationsy_Usuariostlg_ResponsablesDepositosSecciones = new DataRelation("sy_Usuariostlg_ResponsablesDepositosSecciones", new DataColumn[] {
                        this.tablesy_Usuarios.IdUsuarioColumn}, new DataColumn[] {
                        this.tabletlg_ResponsablesDepositosSecciones.IdUsuarioColumn}, false);
            this.Relations.Add(this.relationsy_Usuariostlg_ResponsablesDepositosSecciones);
        }
        
        private bool ShouldSerializesy_PerfilesUsuariosEmpresas() {
            return false;
        }
        
        private bool ShouldSerializesy_Usuarios() {
            return false;
        }
        
        private bool ShouldSerializesy_Perfiles() {
            return false;
        }
        
        private bool ShouldSerializetlg_ResponsablesDepositosSecciones() {
            return false;
        }
        
        private void SchemaChanged(object sender, System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        public delegate void sy_PerfilesUsuariosEmpresasRowChangeEventHandler(object sender, sy_PerfilesUsuariosEmpresasRowChangeEvent e);
        
        public delegate void sy_UsuariosRowChangeEventHandler(object sender, sy_UsuariosRowChangeEvent e);
        
        public delegate void sy_PerfilesRowChangeEventHandler(object sender, sy_PerfilesRowChangeEvent e);
        
        public delegate void tlg_ResponsablesDepositosSeccionesRowChangeEventHandler(object sender, tlg_ResponsablesDepositosSeccionesRowChangeEvent e);
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class sy_PerfilesUsuariosEmpresasDataTable : DataTable, System.Collections.IEnumerable {
            
            private DataColumn columnIdUsuario;
            
            private DataColumn columnIdPerfil;
            
            private DataColumn columnIdEmpresa;
            
            private DataColumn columnConexionDefault;
            
            private DataColumn columnFechaCreacion;
            
            private DataColumn columnIdConexionCreacion;
            
            private DataColumn columnUltimaModificacion;
            
            private DataColumn columnIdConexionUltimaModificacion;
            
            private DataColumn columnRowId;
            
            internal sy_PerfilesUsuariosEmpresasDataTable() : 
                    base("sy_PerfilesUsuariosEmpresas") {
                this.InitClass();
            }
            
            internal sy_PerfilesUsuariosEmpresasDataTable(DataTable table) : 
                    base(table.TableName) {
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
                this.DisplayExpression = table.DisplayExpression;
            }
            
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            internal DataColumn IdUsuarioColumn {
                get {
                    return this.columnIdUsuario;
                }
            }
            
            internal DataColumn IdPerfilColumn {
                get {
                    return this.columnIdPerfil;
                }
            }
            
            internal DataColumn IdEmpresaColumn {
                get {
                    return this.columnIdEmpresa;
                }
            }
            
            internal DataColumn ConexionDefaultColumn {
                get {
                    return this.columnConexionDefault;
                }
            }
            
            internal DataColumn FechaCreacionColumn {
                get {
                    return this.columnFechaCreacion;
                }
            }
            
            internal DataColumn IdConexionCreacionColumn {
                get {
                    return this.columnIdConexionCreacion;
                }
            }
            
            internal DataColumn UltimaModificacionColumn {
                get {
                    return this.columnUltimaModificacion;
                }
            }
            
            internal DataColumn IdConexionUltimaModificacionColumn {
                get {
                    return this.columnIdConexionUltimaModificacion;
                }
            }
            
            internal DataColumn RowIdColumn {
                get {
                    return this.columnRowId;
                }
            }
            
            public sy_PerfilesUsuariosEmpresasRow this[int index] {
                get {
                    return ((sy_PerfilesUsuariosEmpresasRow)(this.Rows[index]));
                }
            }
            
            public event sy_PerfilesUsuariosEmpresasRowChangeEventHandler sy_PerfilesUsuariosEmpresasRowChanged;
            
            public event sy_PerfilesUsuariosEmpresasRowChangeEventHandler sy_PerfilesUsuariosEmpresasRowChanging;
            
            public event sy_PerfilesUsuariosEmpresasRowChangeEventHandler sy_PerfilesUsuariosEmpresasRowDeleted;
            
            public event sy_PerfilesUsuariosEmpresasRowChangeEventHandler sy_PerfilesUsuariosEmpresasRowDeleting;
            
            public void Addsy_PerfilesUsuariosEmpresasRow(sy_PerfilesUsuariosEmpresasRow row) {
                this.Rows.Add(row);
            }
            
            public sy_PerfilesUsuariosEmpresasRow Addsy_PerfilesUsuariosEmpresasRow(sy_UsuariosRow parentsy_UsuariosRowBysy_Usuariossy_PerfilesUsuariosEmpresas, sy_PerfilesRow parentsy_PerfilesRowBysy_Perfilessy_PerfilesUsuariosEmpresas, long IdEmpresa, System.Byte ConexionDefault, System.DateTime FechaCreacion, long IdConexionCreacion, System.Byte[] UltimaModificacion, long IdConexionUltimaModificacion, System.Guid RowId) {
                sy_PerfilesUsuariosEmpresasRow rowsy_PerfilesUsuariosEmpresasRow = ((sy_PerfilesUsuariosEmpresasRow)(this.NewRow()));
                rowsy_PerfilesUsuariosEmpresasRow.ItemArray = new object[] {
                        parentsy_UsuariosRowBysy_Usuariossy_PerfilesUsuariosEmpresas[0],
                        parentsy_PerfilesRowBysy_Perfilessy_PerfilesUsuariosEmpresas[0],
                        IdEmpresa,
                        ConexionDefault,
                        FechaCreacion,
                        IdConexionCreacion,
                        UltimaModificacion,
                        IdConexionUltimaModificacion,
                        RowId};
                this.Rows.Add(rowsy_PerfilesUsuariosEmpresasRow);
                return rowsy_PerfilesUsuariosEmpresasRow;
            }
            
            public sy_PerfilesUsuariosEmpresasRow FindByIdUsuarioIdPerfilIdEmpresa(string IdUsuario, long IdPerfil, long IdEmpresa) {
                return ((sy_PerfilesUsuariosEmpresasRow)(this.Rows.Find(new object[] {
                            IdUsuario,
                            IdPerfil,
                            IdEmpresa})));
            }
            
            public System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            public override DataTable Clone() {
                sy_PerfilesUsuariosEmpresasDataTable cln = ((sy_PerfilesUsuariosEmpresasDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            protected override DataTable CreateInstance() {
                return new sy_PerfilesUsuariosEmpresasDataTable();
            }
            
            internal void InitVars() {
                this.columnIdUsuario = this.Columns["IdUsuario"];
                this.columnIdPerfil = this.Columns["IdPerfil"];
                this.columnIdEmpresa = this.Columns["IdEmpresa"];
                this.columnConexionDefault = this.Columns["ConexionDefault"];
                this.columnFechaCreacion = this.Columns["FechaCreacion"];
                this.columnIdConexionCreacion = this.Columns["IdConexionCreacion"];
                this.columnUltimaModificacion = this.Columns["UltimaModificacion"];
                this.columnIdConexionUltimaModificacion = this.Columns["IdConexionUltimaModificacion"];
                this.columnRowId = this.Columns["RowId"];
            }
            
            private void InitClass() {
                this.columnIdUsuario = new DataColumn("IdUsuario", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdUsuario);
                this.columnIdPerfil = new DataColumn("IdPerfil", typeof(long), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdPerfil);
                this.columnIdEmpresa = new DataColumn("IdEmpresa", typeof(long), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdEmpresa);
                this.columnConexionDefault = new DataColumn("ConexionDefault", typeof(System.Byte), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnConexionDefault);
                this.columnFechaCreacion = new DataColumn("FechaCreacion", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnFechaCreacion);
                this.columnIdConexionCreacion = new DataColumn("IdConexionCreacion", typeof(long), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdConexionCreacion);
                this.columnUltimaModificacion = new DataColumn("UltimaModificacion", typeof(System.Byte[]), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnUltimaModificacion);
                this.columnIdConexionUltimaModificacion = new DataColumn("IdConexionUltimaModificacion", typeof(long), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdConexionUltimaModificacion);
                this.columnRowId = new DataColumn("RowId", typeof(System.Guid), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnRowId);
                this.Constraints.Add(new UniqueConstraint("sy_UsuariosExDatasetKey2", new DataColumn[] {
                                this.columnIdUsuario,
                                this.columnIdPerfil,
                                this.columnIdEmpresa}, true));
                this.columnIdUsuario.AllowDBNull = false;
                this.columnIdPerfil.AllowDBNull = false;
                this.columnIdEmpresa.AllowDBNull = false;
                this.columnUltimaModificacion.ReadOnly = true;
            }
            
            public sy_PerfilesUsuariosEmpresasRow Newsy_PerfilesUsuariosEmpresasRow() {
                return ((sy_PerfilesUsuariosEmpresasRow)(this.NewRow()));
            }
            
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder) {
                return new sy_PerfilesUsuariosEmpresasRow(builder);
            }
            
            protected override System.Type GetRowType() {
                return typeof(sy_PerfilesUsuariosEmpresasRow);
            }
            
            protected override void OnRowChanged(DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.sy_PerfilesUsuariosEmpresasRowChanged != null)) {
                    this.sy_PerfilesUsuariosEmpresasRowChanged(this, new sy_PerfilesUsuariosEmpresasRowChangeEvent(((sy_PerfilesUsuariosEmpresasRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowChanging(DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.sy_PerfilesUsuariosEmpresasRowChanging != null)) {
                    this.sy_PerfilesUsuariosEmpresasRowChanging(this, new sy_PerfilesUsuariosEmpresasRowChangeEvent(((sy_PerfilesUsuariosEmpresasRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleted(DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.sy_PerfilesUsuariosEmpresasRowDeleted != null)) {
                    this.sy_PerfilesUsuariosEmpresasRowDeleted(this, new sy_PerfilesUsuariosEmpresasRowChangeEvent(((sy_PerfilesUsuariosEmpresasRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleting(DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.sy_PerfilesUsuariosEmpresasRowDeleting != null)) {
                    this.sy_PerfilesUsuariosEmpresasRowDeleting(this, new sy_PerfilesUsuariosEmpresasRowChangeEvent(((sy_PerfilesUsuariosEmpresasRow)(e.Row)), e.Action));
                }
            }
            
            public void Removesy_PerfilesUsuariosEmpresasRow(sy_PerfilesUsuariosEmpresasRow row) {
                this.Rows.Remove(row);
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class sy_PerfilesUsuariosEmpresasRow : DataRow {
            
            private sy_PerfilesUsuariosEmpresasDataTable tablesy_PerfilesUsuariosEmpresas;
            
            internal sy_PerfilesUsuariosEmpresasRow(DataRowBuilder rb) : 
                    base(rb) {
                this.tablesy_PerfilesUsuariosEmpresas = ((sy_PerfilesUsuariosEmpresasDataTable)(this.Table));
            }
            
            public string IdUsuario {
                get {
                    return ((string)(this[this.tablesy_PerfilesUsuariosEmpresas.IdUsuarioColumn]));
                }
                set {
                    this[this.tablesy_PerfilesUsuariosEmpresas.IdUsuarioColumn] = value;
                }
            }
            
            public long IdPerfil {
                get {
                    return ((long)(this[this.tablesy_PerfilesUsuariosEmpresas.IdPerfilColumn]));
                }
                set {
                    this[this.tablesy_PerfilesUsuariosEmpresas.IdPerfilColumn] = value;
                }
            }
            
            public long IdEmpresa {
                get {
                    return ((long)(this[this.tablesy_PerfilesUsuariosEmpresas.IdEmpresaColumn]));
                }
                set {
                    this[this.tablesy_PerfilesUsuariosEmpresas.IdEmpresaColumn] = value;
                }
            }
            
            public System.Byte ConexionDefault {
                get {
                    try {
                        return ((System.Byte)(this[this.tablesy_PerfilesUsuariosEmpresas.ConexionDefaultColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tablesy_PerfilesUsuariosEmpresas.ConexionDefaultColumn] = value;
                }
            }
            
            public System.DateTime FechaCreacion {
                get {
                    try {
                        return ((System.DateTime)(this[this.tablesy_PerfilesUsuariosEmpresas.FechaCreacionColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tablesy_PerfilesUsuariosEmpresas.FechaCreacionColumn] = value;
                }
            }
            
            public long IdConexionCreacion {
                get {
                    try {
                        return ((long)(this[this.tablesy_PerfilesUsuariosEmpresas.IdConexionCreacionColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tablesy_PerfilesUsuariosEmpresas.IdConexionCreacionColumn] = value;
                }
            }
            
            public System.Byte[] UltimaModificacion {
                get {
                    try {
                        return ((System.Byte[])(this[this.tablesy_PerfilesUsuariosEmpresas.UltimaModificacionColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tablesy_PerfilesUsuariosEmpresas.UltimaModificacionColumn] = value;
                }
            }
            
            public long IdConexionUltimaModificacion {
                get {
                    try {
                        return ((long)(this[this.tablesy_PerfilesUsuariosEmpresas.IdConexionUltimaModificacionColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tablesy_PerfilesUsuariosEmpresas.IdConexionUltimaModificacionColumn] = value;
                }
            }
            
            public System.Guid RowId {
                get {
                    try {
                        return ((System.Guid)(this[this.tablesy_PerfilesUsuariosEmpresas.RowIdColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tablesy_PerfilesUsuariosEmpresas.RowIdColumn] = value;
                }
            }
            
            public sy_UsuariosRow sy_UsuariosRow {
                get {
                    return ((sy_UsuariosRow)(this.GetParentRow(this.Table.ParentRelations["sy_Usuariossy_PerfilesUsuariosEmpresas"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["sy_Usuariossy_PerfilesUsuariosEmpresas"]);
                }
            }
            
            public sy_PerfilesRow sy_PerfilesRow {
                get {
                    return ((sy_PerfilesRow)(this.GetParentRow(this.Table.ParentRelations["sy_Perfilessy_PerfilesUsuariosEmpresas"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["sy_Perfilessy_PerfilesUsuariosEmpresas"]);
                }
            }
            
            public bool IsConexionDefaultNull() {
                return this.IsNull(this.tablesy_PerfilesUsuariosEmpresas.ConexionDefaultColumn);
            }
            
            public void SetConexionDefaultNull() {
                this[this.tablesy_PerfilesUsuariosEmpresas.ConexionDefaultColumn] = System.Convert.DBNull;
            }
            
            public bool IsFechaCreacionNull() {
                return this.IsNull(this.tablesy_PerfilesUsuariosEmpresas.FechaCreacionColumn);
            }
            
            public void SetFechaCreacionNull() {
                this[this.tablesy_PerfilesUsuariosEmpresas.FechaCreacionColumn] = System.Convert.DBNull;
            }
            
            public bool IsIdConexionCreacionNull() {
                return this.IsNull(this.tablesy_PerfilesUsuariosEmpresas.IdConexionCreacionColumn);
            }
            
            public void SetIdConexionCreacionNull() {
                this[this.tablesy_PerfilesUsuariosEmpresas.IdConexionCreacionColumn] = System.Convert.DBNull;
            }
            
            public bool IsUltimaModificacionNull() {
                return this.IsNull(this.tablesy_PerfilesUsuariosEmpresas.UltimaModificacionColumn);
            }
            
            public void SetUltimaModificacionNull() {
                this[this.tablesy_PerfilesUsuariosEmpresas.UltimaModificacionColumn] = System.Convert.DBNull;
            }
            
            public bool IsIdConexionUltimaModificacionNull() {
                return this.IsNull(this.tablesy_PerfilesUsuariosEmpresas.IdConexionUltimaModificacionColumn);
            }
            
            public void SetIdConexionUltimaModificacionNull() {
                this[this.tablesy_PerfilesUsuariosEmpresas.IdConexionUltimaModificacionColumn] = System.Convert.DBNull;
            }
            
            public bool IsRowIdNull() {
                return this.IsNull(this.tablesy_PerfilesUsuariosEmpresas.RowIdColumn);
            }
            
            public void SetRowIdNull() {
                this[this.tablesy_PerfilesUsuariosEmpresas.RowIdColumn] = System.Convert.DBNull;
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class sy_PerfilesUsuariosEmpresasRowChangeEvent : EventArgs {
            
            private sy_PerfilesUsuariosEmpresasRow eventRow;
            
            private DataRowAction eventAction;
            
            public sy_PerfilesUsuariosEmpresasRowChangeEvent(sy_PerfilesUsuariosEmpresasRow row, DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            public sy_PerfilesUsuariosEmpresasRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            public DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class sy_UsuariosDataTable : DataTable, System.Collections.IEnumerable {
            
            private DataColumn columnIdUsuario;
            
            private DataColumn columnNombre;
            
            private DataColumn columnClave;
            
            private DataColumn columnCantidadConexionesFallida;
            
            private DataColumn columnUltimaConexion;
            
            private DataColumn columnExpiracion;
            
            private DataColumn columnDiasValidezClave;
            
            private DataColumn columnVencimientoClave;
            
            private DataColumn columnBloqueado;
            
            private DataColumn columnIntentosPermitidosConexion;
            
            private DataColumn columnHabilitacionCuenta;
            
            private DataColumn columnAdministrador;
            
            private DataColumn columnClaveNuncaCaduca;
            
            private DataColumn columnPermiteCambioClave;
            
            private DataColumn columnResponsableUltimaModificacion;
            
            private DataColumn columnPerfilUtilizado;
            
            private DataColumn columnActivo;
            
            private DataColumn columnFechaCreacion;
            
            private DataColumn columnIdConexionCreacion;
            
            private DataColumn columnUltimaModificacion;
            
            private DataColumn columnIdConexionUltimaModificacion;
            
            private DataColumn columnRowId;
            
            private DataColumn columnIdPersona;
            
            private DataColumn columnEquipo;
            
            internal sy_UsuariosDataTable() : 
                    base("sy_Usuarios") {
                this.InitClass();
            }
            
            internal sy_UsuariosDataTable(DataTable table) : 
                    base(table.TableName) {
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
                this.DisplayExpression = table.DisplayExpression;
            }
            
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            internal DataColumn IdUsuarioColumn {
                get {
                    return this.columnIdUsuario;
                }
            }
            
            internal DataColumn NombreColumn {
                get {
                    return this.columnNombre;
                }
            }
            
            internal DataColumn ClaveColumn {
                get {
                    return this.columnClave;
                }
            }
            
            internal DataColumn CantidadConexionesFallidaColumn {
                get {
                    return this.columnCantidadConexionesFallida;
                }
            }
            
            internal DataColumn UltimaConexionColumn {
                get {
                    return this.columnUltimaConexion;
                }
            }
            
            internal DataColumn ExpiracionColumn {
                get {
                    return this.columnExpiracion;
                }
            }
            
            internal DataColumn DiasValidezClaveColumn {
                get {
                    return this.columnDiasValidezClave;
                }
            }
            
            internal DataColumn VencimientoClaveColumn {
                get {
                    return this.columnVencimientoClave;
                }
            }
            
            internal DataColumn BloqueadoColumn {
                get {
                    return this.columnBloqueado;
                }
            }
            
            internal DataColumn IntentosPermitidosConexionColumn {
                get {
                    return this.columnIntentosPermitidosConexion;
                }
            }
            
            internal DataColumn HabilitacionCuentaColumn {
                get {
                    return this.columnHabilitacionCuenta;
                }
            }
            
            internal DataColumn AdministradorColumn {
                get {
                    return this.columnAdministrador;
                }
            }
            
            internal DataColumn ClaveNuncaCaducaColumn {
                get {
                    return this.columnClaveNuncaCaduca;
                }
            }
            
            internal DataColumn PermiteCambioClaveColumn {
                get {
                    return this.columnPermiteCambioClave;
                }
            }
            
            internal DataColumn ResponsableUltimaModificacionColumn {
                get {
                    return this.columnResponsableUltimaModificacion;
                }
            }
            
            internal DataColumn PerfilUtilizadoColumn {
                get {
                    return this.columnPerfilUtilizado;
                }
            }
            
            internal DataColumn ActivoColumn {
                get {
                    return this.columnActivo;
                }
            }
            
            internal DataColumn FechaCreacionColumn {
                get {
                    return this.columnFechaCreacion;
                }
            }
            
            internal DataColumn IdConexionCreacionColumn {
                get {
                    return this.columnIdConexionCreacion;
                }
            }
            
            internal DataColumn UltimaModificacionColumn {
                get {
                    return this.columnUltimaModificacion;
                }
            }
            
            internal DataColumn IdConexionUltimaModificacionColumn {
                get {
                    return this.columnIdConexionUltimaModificacion;
                }
            }
            
            internal DataColumn RowIdColumn {
                get {
                    return this.columnRowId;
                }
            }
            
            internal DataColumn IdPersonaColumn {
                get {
                    return this.columnIdPersona;
                }
            }
            
            internal DataColumn EquipoColumn {
                get {
                    return this.columnEquipo;
                }
            }
            
            public sy_UsuariosRow this[int index] {
                get {
                    return ((sy_UsuariosRow)(this.Rows[index]));
                }
            }
            
            public event sy_UsuariosRowChangeEventHandler sy_UsuariosRowChanged;
            
            public event sy_UsuariosRowChangeEventHandler sy_UsuariosRowChanging;
            
            public event sy_UsuariosRowChangeEventHandler sy_UsuariosRowDeleted;
            
            public event sy_UsuariosRowChangeEventHandler sy_UsuariosRowDeleting;
            
            public void Addsy_UsuariosRow(sy_UsuariosRow row) {
                this.Rows.Add(row);
            }
            
            public sy_UsuariosRow Addsy_UsuariosRow(
                        string IdUsuario, 
                        string Nombre, 
                        string Clave, 
                        System.Byte CantidadConexionesFallida, 
                        System.DateTime UltimaConexion, 
                        System.DateTime Expiracion, 
                        short DiasValidezClave, 
                        System.DateTime VencimientoClave, 
                        bool Bloqueado, 
                        System.Byte IntentosPermitidosConexion, 
                        System.DateTime HabilitacionCuenta, 
                        bool Administrador, 
                        bool ClaveNuncaCaduca, 
                        bool PermiteCambioClave, 
                        long ResponsableUltimaModificacion, 
                        long PerfilUtilizado, 
                        bool Activo, 
                        System.DateTime FechaCreacion, 
                        long IdConexionCreacion, 
                        System.Byte[] UltimaModificacion, 
                        long IdConexionUltimaModificacion, 
                        System.Guid RowId, 
                        string IdPersona, 
                        long Equipo) {
                sy_UsuariosRow rowsy_UsuariosRow = ((sy_UsuariosRow)(this.NewRow()));
                rowsy_UsuariosRow.ItemArray = new object[] {
                        IdUsuario,
                        Nombre,
                        Clave,
                        CantidadConexionesFallida,
                        UltimaConexion,
                        Expiracion,
                        DiasValidezClave,
                        VencimientoClave,
                        Bloqueado,
                        IntentosPermitidosConexion,
                        HabilitacionCuenta,
                        Administrador,
                        ClaveNuncaCaduca,
                        PermiteCambioClave,
                        ResponsableUltimaModificacion,
                        PerfilUtilizado,
                        Activo,
                        FechaCreacion,
                        IdConexionCreacion,
                        UltimaModificacion,
                        IdConexionUltimaModificacion,
                        RowId,
                        IdPersona,
                        Equipo};
                this.Rows.Add(rowsy_UsuariosRow);
                return rowsy_UsuariosRow;
            }
            
            public sy_UsuariosRow FindByIdUsuario(string IdUsuario) {
                return ((sy_UsuariosRow)(this.Rows.Find(new object[] {
                            IdUsuario})));
            }
            
            public System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            public override DataTable Clone() {
                sy_UsuariosDataTable cln = ((sy_UsuariosDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            protected override DataTable CreateInstance() {
                return new sy_UsuariosDataTable();
            }
            
            internal void InitVars() {
                this.columnIdUsuario = this.Columns["IdUsuario"];
                this.columnNombre = this.Columns["Nombre"];
                this.columnClave = this.Columns["Clave"];
                this.columnCantidadConexionesFallida = this.Columns["CantidadConexionesFallida"];
                this.columnUltimaConexion = this.Columns["UltimaConexion"];
                this.columnExpiracion = this.Columns["Expiracion"];
                this.columnDiasValidezClave = this.Columns["DiasValidezClave"];
                this.columnVencimientoClave = this.Columns["VencimientoClave"];
                this.columnBloqueado = this.Columns["Bloqueado"];
                this.columnIntentosPermitidosConexion = this.Columns["IntentosPermitidosConexion"];
                this.columnHabilitacionCuenta = this.Columns["HabilitacionCuenta"];
                this.columnAdministrador = this.Columns["Administrador"];
                this.columnClaveNuncaCaduca = this.Columns["ClaveNuncaCaduca"];
                this.columnPermiteCambioClave = this.Columns["PermiteCambioClave"];
                this.columnResponsableUltimaModificacion = this.Columns["ResponsableUltimaModificacion"];
                this.columnPerfilUtilizado = this.Columns["PerfilUtilizado"];
                this.columnActivo = this.Columns["Activo"];
                this.columnFechaCreacion = this.Columns["FechaCreacion"];
                this.columnIdConexionCreacion = this.Columns["IdConexionCreacion"];
                this.columnUltimaModificacion = this.Columns["UltimaModificacion"];
                this.columnIdConexionUltimaModificacion = this.Columns["IdConexionUltimaModificacion"];
                this.columnRowId = this.Columns["RowId"];
                this.columnIdPersona = this.Columns["IdPersona"];
                this.columnEquipo = this.Columns["Equipo"];
            }
            
            private void InitClass() {
                this.columnIdUsuario = new DataColumn("IdUsuario", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdUsuario);
                this.columnNombre = new DataColumn("Nombre", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnNombre);
                this.columnClave = new DataColumn("Clave", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnClave);
                this.columnCantidadConexionesFallida = new DataColumn("CantidadConexionesFallida", typeof(System.Byte), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnCantidadConexionesFallida);
                this.columnUltimaConexion = new DataColumn("UltimaConexion", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnUltimaConexion);
                this.columnExpiracion = new DataColumn("Expiracion", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnExpiracion);
                this.columnDiasValidezClave = new DataColumn("DiasValidezClave", typeof(short), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnDiasValidezClave);
                this.columnVencimientoClave = new DataColumn("VencimientoClave", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnVencimientoClave);
                this.columnBloqueado = new DataColumn("Bloqueado", typeof(bool), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnBloqueado);
                this.columnIntentosPermitidosConexion = new DataColumn("IntentosPermitidosConexion", typeof(System.Byte), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIntentosPermitidosConexion);
                this.columnHabilitacionCuenta = new DataColumn("HabilitacionCuenta", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnHabilitacionCuenta);
                this.columnAdministrador = new DataColumn("Administrador", typeof(bool), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnAdministrador);
                this.columnClaveNuncaCaduca = new DataColumn("ClaveNuncaCaduca", typeof(bool), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnClaveNuncaCaduca);
                this.columnPermiteCambioClave = new DataColumn("PermiteCambioClave", typeof(bool), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnPermiteCambioClave);
                this.columnResponsableUltimaModificacion = new DataColumn("ResponsableUltimaModificacion", typeof(long), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnResponsableUltimaModificacion);
                this.columnPerfilUtilizado = new DataColumn("PerfilUtilizado", typeof(long), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnPerfilUtilizado);
                this.columnActivo = new DataColumn("Activo", typeof(bool), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnActivo);
                this.columnFechaCreacion = new DataColumn("FechaCreacion", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnFechaCreacion);
                this.columnIdConexionCreacion = new DataColumn("IdConexionCreacion", typeof(long), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdConexionCreacion);
                this.columnUltimaModificacion = new DataColumn("UltimaModificacion", typeof(System.Byte[]), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnUltimaModificacion);
                this.columnIdConexionUltimaModificacion = new DataColumn("IdConexionUltimaModificacion", typeof(long), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdConexionUltimaModificacion);
                this.columnRowId = new DataColumn("RowId", typeof(System.Guid), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnRowId);
                this.columnIdPersona = new DataColumn("IdPersona", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdPersona);
                this.columnEquipo = new DataColumn("Equipo", typeof(long), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnEquipo);
                this.Constraints.Add(new UniqueConstraint("sy_UsuariosExDatasetKey1", new DataColumn[] {
                                this.columnIdUsuario}, true));
                this.columnIdUsuario.AllowDBNull = false;
                this.columnIdUsuario.Unique = true;
                this.columnNombre.AllowDBNull = false;
                this.columnClave.AllowDBNull = false;
                this.columnCantidadConexionesFallida.AllowDBNull = false;
                this.columnVencimientoClave.AllowDBNull = false;
                this.columnIntentosPermitidosConexion.AllowDBNull = false;
                this.columnFechaCreacion.AllowDBNull = false;
                this.columnIdConexionCreacion.AllowDBNull = false;
                this.columnUltimaModificacion.ReadOnly = true;
            }
            
            public sy_UsuariosRow Newsy_UsuariosRow() {
                return ((sy_UsuariosRow)(this.NewRow()));
            }
            
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder) {
                return new sy_UsuariosRow(builder);
            }
            
            protected override System.Type GetRowType() {
                return typeof(sy_UsuariosRow);
            }
            
            protected override void OnRowChanged(DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.sy_UsuariosRowChanged != null)) {
                    this.sy_UsuariosRowChanged(this, new sy_UsuariosRowChangeEvent(((sy_UsuariosRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowChanging(DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.sy_UsuariosRowChanging != null)) {
                    this.sy_UsuariosRowChanging(this, new sy_UsuariosRowChangeEvent(((sy_UsuariosRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleted(DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.sy_UsuariosRowDeleted != null)) {
                    this.sy_UsuariosRowDeleted(this, new sy_UsuariosRowChangeEvent(((sy_UsuariosRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleting(DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.sy_UsuariosRowDeleting != null)) {
                    this.sy_UsuariosRowDeleting(this, new sy_UsuariosRowChangeEvent(((sy_UsuariosRow)(e.Row)), e.Action));
                }
            }
            
            public void Removesy_UsuariosRow(sy_UsuariosRow row) {
                this.Rows.Remove(row);
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class sy_UsuariosRow : DataRow {
            
            private sy_UsuariosDataTable tablesy_Usuarios;
            
            internal sy_UsuariosRow(DataRowBuilder rb) : 
                    base(rb) {
                this.tablesy_Usuarios = ((sy_UsuariosDataTable)(this.Table));
            }
            
            public string IdUsuario {
                get {
                    return ((string)(this[this.tablesy_Usuarios.IdUsuarioColumn]));
                }
                set {
                    this[this.tablesy_Usuarios.IdUsuarioColumn] = value;
                }
            }
            
            public string Nombre {
                get {
                    return ((string)(this[this.tablesy_Usuarios.NombreColumn]));
                }
                set {
                    this[this.tablesy_Usuarios.NombreColumn] = value;
                }
            }
            
            public string Clave {
                get {
                    return ((string)(this[this.tablesy_Usuarios.ClaveColumn]));
                }
                set {
                    this[this.tablesy_Usuarios.ClaveColumn] = value;
                }
            }
            
            public System.Byte CantidadConexionesFallida {
                get {
                    return ((System.Byte)(this[this.tablesy_Usuarios.CantidadConexionesFallidaColumn]));
                }
                set {
                    this[this.tablesy_Usuarios.CantidadConexionesFallidaColumn] = value;
                }
            }
            
            public System.DateTime UltimaConexion {
                get {
                    try {
                        return ((System.DateTime)(this[this.tablesy_Usuarios.UltimaConexionColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tablesy_Usuarios.UltimaConexionColumn] = value;
                }
            }
            
            public System.DateTime Expiracion {
                get {
                    try {
                        return ((System.DateTime)(this[this.tablesy_Usuarios.ExpiracionColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tablesy_Usuarios.ExpiracionColumn] = value;
                }
            }
            
            public short DiasValidezClave {
                get {
                    try {
                        return ((short)(this[this.tablesy_Usuarios.DiasValidezClaveColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tablesy_Usuarios.DiasValidezClaveColumn] = value;
                }
            }
            
            public System.DateTime VencimientoClave {
                get {
                    return ((System.DateTime)(this[this.tablesy_Usuarios.VencimientoClaveColumn]));
                }
                set {
                    this[this.tablesy_Usuarios.VencimientoClaveColumn] = value;
                }
            }
            
            public bool Bloqueado {
                get {
                    try {
                        return ((bool)(this[this.tablesy_Usuarios.BloqueadoColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tablesy_Usuarios.BloqueadoColumn] = value;
                }
            }
            
            public System.Byte IntentosPermitidosConexion {
                get {
                    return ((System.Byte)(this[this.tablesy_Usuarios.IntentosPermitidosConexionColumn]));
                }
                set {
                    this[this.tablesy_Usuarios.IntentosPermitidosConexionColumn] = value;
                }
            }
            
            public System.DateTime HabilitacionCuenta {
                get {
                    try {
                        return ((System.DateTime)(this[this.tablesy_Usuarios.HabilitacionCuentaColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tablesy_Usuarios.HabilitacionCuentaColumn] = value;
                }
            }
            
            public bool Administrador {
                get {
                    try {
                        return ((bool)(this[this.tablesy_Usuarios.AdministradorColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tablesy_Usuarios.AdministradorColumn] = value;
                }
            }
            
            public bool ClaveNuncaCaduca {
                get {
                    try {
                        return ((bool)(this[this.tablesy_Usuarios.ClaveNuncaCaducaColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tablesy_Usuarios.ClaveNuncaCaducaColumn] = value;
                }
            }
            
            public bool PermiteCambioClave {
                get {
                    try {
                        return ((bool)(this[this.tablesy_Usuarios.PermiteCambioClaveColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tablesy_Usuarios.PermiteCambioClaveColumn] = value;
                }
            }
            
            public long ResponsableUltimaModificacion {
                get {
                    try {
                        return ((long)(this[this.tablesy_Usuarios.ResponsableUltimaModificacionColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tablesy_Usuarios.ResponsableUltimaModificacionColumn] = value;
                }
            }
            
            public long PerfilUtilizado {
                get {
                    try {
                        return ((long)(this[this.tablesy_Usuarios.PerfilUtilizadoColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tablesy_Usuarios.PerfilUtilizadoColumn] = value;
                }
            }
            
            public bool Activo {
                get {
                    try {
                        return ((bool)(this[this.tablesy_Usuarios.ActivoColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tablesy_Usuarios.ActivoColumn] = value;
                }
            }
            
            public System.DateTime FechaCreacion {
                get {
                    return ((System.DateTime)(this[this.tablesy_Usuarios.FechaCreacionColumn]));
                }
                set {
                    this[this.tablesy_Usuarios.FechaCreacionColumn] = value;
                }
            }
            
            public long IdConexionCreacion {
                get {
                    return ((long)(this[this.tablesy_Usuarios.IdConexionCreacionColumn]));
                }
                set {
                    this[this.tablesy_Usuarios.IdConexionCreacionColumn] = value;
                }
            }
            
            public System.Byte[] UltimaModificacion {
                get {
                    try {
                        return ((System.Byte[])(this[this.tablesy_Usuarios.UltimaModificacionColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tablesy_Usuarios.UltimaModificacionColumn] = value;
                }
            }
            
            public long IdConexionUltimaModificacion {
                get {
                    try {
                        return ((long)(this[this.tablesy_Usuarios.IdConexionUltimaModificacionColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tablesy_Usuarios.IdConexionUltimaModificacionColumn] = value;
                }
            }
            
            public System.Guid RowId {
                get {
                    try {
                        return ((System.Guid)(this[this.tablesy_Usuarios.RowIdColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tablesy_Usuarios.RowIdColumn] = value;
                }
            }
            
            public string IdPersona {
                get {
                    try {
                        return ((string)(this[this.tablesy_Usuarios.IdPersonaColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tablesy_Usuarios.IdPersonaColumn] = value;
                }
            }
            
            public long Equipo {
                get {
                    try {
                        return ((long)(this[this.tablesy_Usuarios.EquipoColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tablesy_Usuarios.EquipoColumn] = value;
                }
            }
            
            public bool IsUltimaConexionNull() {
                return this.IsNull(this.tablesy_Usuarios.UltimaConexionColumn);
            }
            
            public void SetUltimaConexionNull() {
                this[this.tablesy_Usuarios.UltimaConexionColumn] = System.Convert.DBNull;
            }
            
            public bool IsExpiracionNull() {
                return this.IsNull(this.tablesy_Usuarios.ExpiracionColumn);
            }
            
            public void SetExpiracionNull() {
                this[this.tablesy_Usuarios.ExpiracionColumn] = System.Convert.DBNull;
            }
            
            public bool IsDiasValidezClaveNull() {
                return this.IsNull(this.tablesy_Usuarios.DiasValidezClaveColumn);
            }
            
            public void SetDiasValidezClaveNull() {
                this[this.tablesy_Usuarios.DiasValidezClaveColumn] = System.Convert.DBNull;
            }
            
            public bool IsBloqueadoNull() {
                return this.IsNull(this.tablesy_Usuarios.BloqueadoColumn);
            }
            
            public void SetBloqueadoNull() {
                this[this.tablesy_Usuarios.BloqueadoColumn] = System.Convert.DBNull;
            }
            
            public bool IsHabilitacionCuentaNull() {
                return this.IsNull(this.tablesy_Usuarios.HabilitacionCuentaColumn);
            }
            
            public void SetHabilitacionCuentaNull() {
                this[this.tablesy_Usuarios.HabilitacionCuentaColumn] = System.Convert.DBNull;
            }
            
            public bool IsAdministradorNull() {
                return this.IsNull(this.tablesy_Usuarios.AdministradorColumn);
            }
            
            public void SetAdministradorNull() {
                this[this.tablesy_Usuarios.AdministradorColumn] = System.Convert.DBNull;
            }
            
            public bool IsClaveNuncaCaducaNull() {
                return this.IsNull(this.tablesy_Usuarios.ClaveNuncaCaducaColumn);
            }
            
            public void SetClaveNuncaCaducaNull() {
                this[this.tablesy_Usuarios.ClaveNuncaCaducaColumn] = System.Convert.DBNull;
            }
            
            public bool IsPermiteCambioClaveNull() {
                return this.IsNull(this.tablesy_Usuarios.PermiteCambioClaveColumn);
            }
            
            public void SetPermiteCambioClaveNull() {
                this[this.tablesy_Usuarios.PermiteCambioClaveColumn] = System.Convert.DBNull;
            }
            
            public bool IsResponsableUltimaModificacionNull() {
                return this.IsNull(this.tablesy_Usuarios.ResponsableUltimaModificacionColumn);
            }
            
            public void SetResponsableUltimaModificacionNull() {
                this[this.tablesy_Usuarios.ResponsableUltimaModificacionColumn] = System.Convert.DBNull;
            }
            
            public bool IsPerfilUtilizadoNull() {
                return this.IsNull(this.tablesy_Usuarios.PerfilUtilizadoColumn);
            }
            
            public void SetPerfilUtilizadoNull() {
                this[this.tablesy_Usuarios.PerfilUtilizadoColumn] = System.Convert.DBNull;
            }
            
            public bool IsActivoNull() {
                return this.IsNull(this.tablesy_Usuarios.ActivoColumn);
            }
            
            public void SetActivoNull() {
                this[this.tablesy_Usuarios.ActivoColumn] = System.Convert.DBNull;
            }
            
            public bool IsUltimaModificacionNull() {
                return this.IsNull(this.tablesy_Usuarios.UltimaModificacionColumn);
            }
            
            public void SetUltimaModificacionNull() {
                this[this.tablesy_Usuarios.UltimaModificacionColumn] = System.Convert.DBNull;
            }
            
            public bool IsIdConexionUltimaModificacionNull() {
                return this.IsNull(this.tablesy_Usuarios.IdConexionUltimaModificacionColumn);
            }
            
            public void SetIdConexionUltimaModificacionNull() {
                this[this.tablesy_Usuarios.IdConexionUltimaModificacionColumn] = System.Convert.DBNull;
            }
            
            public bool IsRowIdNull() {
                return this.IsNull(this.tablesy_Usuarios.RowIdColumn);
            }
            
            public void SetRowIdNull() {
                this[this.tablesy_Usuarios.RowIdColumn] = System.Convert.DBNull;
            }
            
            public bool IsIdPersonaNull() {
                return this.IsNull(this.tablesy_Usuarios.IdPersonaColumn);
            }
            
            public void SetIdPersonaNull() {
                this[this.tablesy_Usuarios.IdPersonaColumn] = System.Convert.DBNull;
            }
            
            public bool IsEquipoNull() {
                return this.IsNull(this.tablesy_Usuarios.EquipoColumn);
            }
            
            public void SetEquipoNull() {
                this[this.tablesy_Usuarios.EquipoColumn] = System.Convert.DBNull;
            }
            
            public sy_PerfilesUsuariosEmpresasRow[] Getsy_PerfilesUsuariosEmpresasRows() {
                return ((sy_PerfilesUsuariosEmpresasRow[])(this.GetChildRows(this.Table.ChildRelations["sy_Usuariossy_PerfilesUsuariosEmpresas"])));
            }
            
            public tlg_ResponsablesDepositosSeccionesRow[] Gettlg_ResponsablesDepositosSeccionesRows() {
                return ((tlg_ResponsablesDepositosSeccionesRow[])(this.GetChildRows(this.Table.ChildRelations["sy_Usuariostlg_ResponsablesDepositosSecciones"])));
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class sy_UsuariosRowChangeEvent : EventArgs {
            
            private sy_UsuariosRow eventRow;
            
            private DataRowAction eventAction;
            
            public sy_UsuariosRowChangeEvent(sy_UsuariosRow row, DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            public sy_UsuariosRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            public DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class sy_PerfilesDataTable : DataTable, System.Collections.IEnumerable {
            
            private DataColumn columnIdPerfil;
            
            private DataColumn columnDescripcion;
            
            private DataColumn columnActivo;
            
            private DataColumn columnComentario;
            
            private DataColumn columnIdConexion;
            
            private DataColumn columnFechaCreacion;
            
            private DataColumn columnIdConexionCreacion;
            
            private DataColumn columnUltimaModificacion;
            
            private DataColumn columnIdConexionUltimaModificacion;
            
            private DataColumn columnRowId;
            
            internal sy_PerfilesDataTable() : 
                    base("sy_Perfiles") {
                this.InitClass();
            }
            
            internal sy_PerfilesDataTable(DataTable table) : 
                    base(table.TableName) {
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
                this.DisplayExpression = table.DisplayExpression;
            }
            
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            internal DataColumn IdPerfilColumn {
                get {
                    return this.columnIdPerfil;
                }
            }
            
            internal DataColumn DescripcionColumn {
                get {
                    return this.columnDescripcion;
                }
            }
            
            internal DataColumn ActivoColumn {
                get {
                    return this.columnActivo;
                }
            }
            
            internal DataColumn ComentarioColumn {
                get {
                    return this.columnComentario;
                }
            }
            
            internal DataColumn IdConexionColumn {
                get {
                    return this.columnIdConexion;
                }
            }
            
            internal DataColumn FechaCreacionColumn {
                get {
                    return this.columnFechaCreacion;
                }
            }
            
            internal DataColumn IdConexionCreacionColumn {
                get {
                    return this.columnIdConexionCreacion;
                }
            }
            
            internal DataColumn UltimaModificacionColumn {
                get {
                    return this.columnUltimaModificacion;
                }
            }
            
            internal DataColumn IdConexionUltimaModificacionColumn {
                get {
                    return this.columnIdConexionUltimaModificacion;
                }
            }
            
            internal DataColumn RowIdColumn {
                get {
                    return this.columnRowId;
                }
            }
            
            public sy_PerfilesRow this[int index] {
                get {
                    return ((sy_PerfilesRow)(this.Rows[index]));
                }
            }
            
            public event sy_PerfilesRowChangeEventHandler sy_PerfilesRowChanged;
            
            public event sy_PerfilesRowChangeEventHandler sy_PerfilesRowChanging;
            
            public event sy_PerfilesRowChangeEventHandler sy_PerfilesRowDeleted;
            
            public event sy_PerfilesRowChangeEventHandler sy_PerfilesRowDeleting;
            
            public void Addsy_PerfilesRow(sy_PerfilesRow row) {
                this.Rows.Add(row);
            }
            
            public sy_PerfilesRow Addsy_PerfilesRow(long IdPerfil, string Descripcion, bool Activo, string Comentario, long IdConexion, System.DateTime FechaCreacion, long IdConexionCreacion, System.Byte[] UltimaModificacion, long IdConexionUltimaModificacion, System.Guid RowId) {
                sy_PerfilesRow rowsy_PerfilesRow = ((sy_PerfilesRow)(this.NewRow()));
                rowsy_PerfilesRow.ItemArray = new object[] {
                        IdPerfil,
                        Descripcion,
                        Activo,
                        Comentario,
                        IdConexion,
                        FechaCreacion,
                        IdConexionCreacion,
                        UltimaModificacion,
                        IdConexionUltimaModificacion,
                        RowId};
                this.Rows.Add(rowsy_PerfilesRow);
                return rowsy_PerfilesRow;
            }
            
            public sy_PerfilesRow FindByIdPerfil(long IdPerfil) {
                return ((sy_PerfilesRow)(this.Rows.Find(new object[] {
                            IdPerfil})));
            }
            
            public System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            public override DataTable Clone() {
                sy_PerfilesDataTable cln = ((sy_PerfilesDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            protected override DataTable CreateInstance() {
                return new sy_PerfilesDataTable();
            }
            
            internal void InitVars() {
                this.columnIdPerfil = this.Columns["IdPerfil"];
                this.columnDescripcion = this.Columns["Descripcion"];
                this.columnActivo = this.Columns["Activo"];
                this.columnComentario = this.Columns["Comentario"];
                this.columnIdConexion = this.Columns["IdConexion"];
                this.columnFechaCreacion = this.Columns["FechaCreacion"];
                this.columnIdConexionCreacion = this.Columns["IdConexionCreacion"];
                this.columnUltimaModificacion = this.Columns["UltimaModificacion"];
                this.columnIdConexionUltimaModificacion = this.Columns["IdConexionUltimaModificacion"];
                this.columnRowId = this.Columns["RowId"];
            }
            
            private void InitClass() {
                this.columnIdPerfil = new DataColumn("IdPerfil", typeof(long), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdPerfil);
                this.columnDescripcion = new DataColumn("Descripcion", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnDescripcion);
                this.columnActivo = new DataColumn("Activo", typeof(bool), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnActivo);
                this.columnComentario = new DataColumn("Comentario", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnComentario);
                this.columnIdConexion = new DataColumn("IdConexion", typeof(long), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdConexion);
                this.columnFechaCreacion = new DataColumn("FechaCreacion", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnFechaCreacion);
                this.columnIdConexionCreacion = new DataColumn("IdConexionCreacion", typeof(long), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdConexionCreacion);
                this.columnUltimaModificacion = new DataColumn("UltimaModificacion", typeof(System.Byte[]), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnUltimaModificacion);
                this.columnIdConexionUltimaModificacion = new DataColumn("IdConexionUltimaModificacion", typeof(long), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdConexionUltimaModificacion);
                this.columnRowId = new DataColumn("RowId", typeof(System.Guid), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnRowId);
                this.Constraints.Add(new UniqueConstraint("sy_UsuariosExDatasetKey3", new DataColumn[] {
                                this.columnIdPerfil}, true));
                this.columnIdPerfil.AllowDBNull = false;
                this.columnIdPerfil.Unique = true;
                this.columnFechaCreacion.AllowDBNull = false;
                this.columnIdConexionCreacion.AllowDBNull = false;
                this.columnUltimaModificacion.ReadOnly = true;
            }
            
            public sy_PerfilesRow Newsy_PerfilesRow() {
                return ((sy_PerfilesRow)(this.NewRow()));
            }
            
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder) {
                return new sy_PerfilesRow(builder);
            }
            
            protected override System.Type GetRowType() {
                return typeof(sy_PerfilesRow);
            }
            
            protected override void OnRowChanged(DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.sy_PerfilesRowChanged != null)) {
                    this.sy_PerfilesRowChanged(this, new sy_PerfilesRowChangeEvent(((sy_PerfilesRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowChanging(DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.sy_PerfilesRowChanging != null)) {
                    this.sy_PerfilesRowChanging(this, new sy_PerfilesRowChangeEvent(((sy_PerfilesRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleted(DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.sy_PerfilesRowDeleted != null)) {
                    this.sy_PerfilesRowDeleted(this, new sy_PerfilesRowChangeEvent(((sy_PerfilesRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleting(DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.sy_PerfilesRowDeleting != null)) {
                    this.sy_PerfilesRowDeleting(this, new sy_PerfilesRowChangeEvent(((sy_PerfilesRow)(e.Row)), e.Action));
                }
            }
            
            public void Removesy_PerfilesRow(sy_PerfilesRow row) {
                this.Rows.Remove(row);
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class sy_PerfilesRow : DataRow {
            
            private sy_PerfilesDataTable tablesy_Perfiles;
            
            internal sy_PerfilesRow(DataRowBuilder rb) : 
                    base(rb) {
                this.tablesy_Perfiles = ((sy_PerfilesDataTable)(this.Table));
            }
            
            public long IdPerfil {
                get {
                    return ((long)(this[this.tablesy_Perfiles.IdPerfilColumn]));
                }
                set {
                    this[this.tablesy_Perfiles.IdPerfilColumn] = value;
                }
            }
            
            public string Descripcion {
                get {
                    try {
                        return ((string)(this[this.tablesy_Perfiles.DescripcionColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tablesy_Perfiles.DescripcionColumn] = value;
                }
            }
            
            public bool Activo {
                get {
                    try {
                        return ((bool)(this[this.tablesy_Perfiles.ActivoColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tablesy_Perfiles.ActivoColumn] = value;
                }
            }
            
            public string Comentario {
                get {
                    try {
                        return ((string)(this[this.tablesy_Perfiles.ComentarioColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tablesy_Perfiles.ComentarioColumn] = value;
                }
            }
            
            public long IdConexion {
                get {
                    try {
                        return ((long)(this[this.tablesy_Perfiles.IdConexionColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tablesy_Perfiles.IdConexionColumn] = value;
                }
            }
            
            public System.DateTime FechaCreacion {
                get {
                    return ((System.DateTime)(this[this.tablesy_Perfiles.FechaCreacionColumn]));
                }
                set {
                    this[this.tablesy_Perfiles.FechaCreacionColumn] = value;
                }
            }
            
            public long IdConexionCreacion {
                get {
                    return ((long)(this[this.tablesy_Perfiles.IdConexionCreacionColumn]));
                }
                set {
                    this[this.tablesy_Perfiles.IdConexionCreacionColumn] = value;
                }
            }
            
            public System.Byte[] UltimaModificacion {
                get {
                    try {
                        return ((System.Byte[])(this[this.tablesy_Perfiles.UltimaModificacionColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tablesy_Perfiles.UltimaModificacionColumn] = value;
                }
            }
            
            public long IdConexionUltimaModificacion {
                get {
                    try {
                        return ((long)(this[this.tablesy_Perfiles.IdConexionUltimaModificacionColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tablesy_Perfiles.IdConexionUltimaModificacionColumn] = value;
                }
            }
            
            public System.Guid RowId {
                get {
                    try {
                        return ((System.Guid)(this[this.tablesy_Perfiles.RowIdColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tablesy_Perfiles.RowIdColumn] = value;
                }
            }
            
            public bool IsDescripcionNull() {
                return this.IsNull(this.tablesy_Perfiles.DescripcionColumn);
            }
            
            public void SetDescripcionNull() {
                this[this.tablesy_Perfiles.DescripcionColumn] = System.Convert.DBNull;
            }
            
            public bool IsActivoNull() {
                return this.IsNull(this.tablesy_Perfiles.ActivoColumn);
            }
            
            public void SetActivoNull() {
                this[this.tablesy_Perfiles.ActivoColumn] = System.Convert.DBNull;
            }
            
            public bool IsComentarioNull() {
                return this.IsNull(this.tablesy_Perfiles.ComentarioColumn);
            }
            
            public void SetComentarioNull() {
                this[this.tablesy_Perfiles.ComentarioColumn] = System.Convert.DBNull;
            }
            
            public bool IsIdConexionNull() {
                return this.IsNull(this.tablesy_Perfiles.IdConexionColumn);
            }
            
            public void SetIdConexionNull() {
                this[this.tablesy_Perfiles.IdConexionColumn] = System.Convert.DBNull;
            }
            
            public bool IsUltimaModificacionNull() {
                return this.IsNull(this.tablesy_Perfiles.UltimaModificacionColumn);
            }
            
            public void SetUltimaModificacionNull() {
                this[this.tablesy_Perfiles.UltimaModificacionColumn] = System.Convert.DBNull;
            }
            
            public bool IsIdConexionUltimaModificacionNull() {
                return this.IsNull(this.tablesy_Perfiles.IdConexionUltimaModificacionColumn);
            }
            
            public void SetIdConexionUltimaModificacionNull() {
                this[this.tablesy_Perfiles.IdConexionUltimaModificacionColumn] = System.Convert.DBNull;
            }
            
            public bool IsRowIdNull() {
                return this.IsNull(this.tablesy_Perfiles.RowIdColumn);
            }
            
            public void SetRowIdNull() {
                this[this.tablesy_Perfiles.RowIdColumn] = System.Convert.DBNull;
            }
            
            public sy_PerfilesUsuariosEmpresasRow[] Getsy_PerfilesUsuariosEmpresasRows() {
                return ((sy_PerfilesUsuariosEmpresasRow[])(this.GetChildRows(this.Table.ChildRelations["sy_Perfilessy_PerfilesUsuariosEmpresas"])));
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class sy_PerfilesRowChangeEvent : EventArgs {
            
            private sy_PerfilesRow eventRow;
            
            private DataRowAction eventAction;
            
            public sy_PerfilesRowChangeEvent(sy_PerfilesRow row, DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            public sy_PerfilesRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            public DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class tlg_ResponsablesDepositosSeccionesDataTable : DataTable, System.Collections.IEnumerable {
            
            private DataColumn columnIdUsuario;
            
            private DataColumn columnIdDeposito;
            
            private DataColumn columnIdSeccion;
            
            private DataColumn columnActivo;
            
            private DataColumn columnFechaCreacion;
            
            private DataColumn columnIdConexionCreacion;
            
            private DataColumn columnUltimaModificacion;
            
            private DataColumn columnIdConexionUltimaModificacion;
            
            private DataColumn columnRowId;
            
            internal tlg_ResponsablesDepositosSeccionesDataTable() : 
                    base("tlg_ResponsablesDepositosSecciones") {
                this.InitClass();
            }
            
            internal tlg_ResponsablesDepositosSeccionesDataTable(DataTable table) : 
                    base(table.TableName) {
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
                this.DisplayExpression = table.DisplayExpression;
            }
            
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            internal DataColumn IdUsuarioColumn {
                get {
                    return this.columnIdUsuario;
                }
            }
            
            internal DataColumn IdDepositoColumn {
                get {
                    return this.columnIdDeposito;
                }
            }
            
            internal DataColumn IdSeccionColumn {
                get {
                    return this.columnIdSeccion;
                }
            }
            
            internal DataColumn ActivoColumn {
                get {
                    return this.columnActivo;
                }
            }
            
            internal DataColumn FechaCreacionColumn {
                get {
                    return this.columnFechaCreacion;
                }
            }
            
            internal DataColumn IdConexionCreacionColumn {
                get {
                    return this.columnIdConexionCreacion;
                }
            }
            
            internal DataColumn UltimaModificacionColumn {
                get {
                    return this.columnUltimaModificacion;
                }
            }
            
            internal DataColumn IdConexionUltimaModificacionColumn {
                get {
                    return this.columnIdConexionUltimaModificacion;
                }
            }
            
            internal DataColumn RowIdColumn {
                get {
                    return this.columnRowId;
                }
            }
            
            public tlg_ResponsablesDepositosSeccionesRow this[int index] {
                get {
                    return ((tlg_ResponsablesDepositosSeccionesRow)(this.Rows[index]));
                }
            }
            
            public event tlg_ResponsablesDepositosSeccionesRowChangeEventHandler tlg_ResponsablesDepositosSeccionesRowChanged;
            
            public event tlg_ResponsablesDepositosSeccionesRowChangeEventHandler tlg_ResponsablesDepositosSeccionesRowChanging;
            
            public event tlg_ResponsablesDepositosSeccionesRowChangeEventHandler tlg_ResponsablesDepositosSeccionesRowDeleted;
            
            public event tlg_ResponsablesDepositosSeccionesRowChangeEventHandler tlg_ResponsablesDepositosSeccionesRowDeleting;
            
            public void Addtlg_ResponsablesDepositosSeccionesRow(tlg_ResponsablesDepositosSeccionesRow row) {
                this.Rows.Add(row);
            }
            
            public tlg_ResponsablesDepositosSeccionesRow Addtlg_ResponsablesDepositosSeccionesRow(sy_UsuariosRow parentsy_UsuariosRowBysy_Usuariostlg_ResponsablesDepositosSecciones, string IdDeposito, string IdSeccion, bool Activo, System.DateTime FechaCreacion, long IdConexionCreacion, System.Byte[] UltimaModificacion, long IdConexionUltimaModificacion, System.Guid RowId) {
                tlg_ResponsablesDepositosSeccionesRow rowtlg_ResponsablesDepositosSeccionesRow = ((tlg_ResponsablesDepositosSeccionesRow)(this.NewRow()));
                rowtlg_ResponsablesDepositosSeccionesRow.ItemArray = new object[] {
                        parentsy_UsuariosRowBysy_Usuariostlg_ResponsablesDepositosSecciones[0],
                        IdDeposito,
                        IdSeccion,
                        Activo,
                        FechaCreacion,
                        IdConexionCreacion,
                        UltimaModificacion,
                        IdConexionUltimaModificacion,
                        RowId};
                this.Rows.Add(rowtlg_ResponsablesDepositosSeccionesRow);
                return rowtlg_ResponsablesDepositosSeccionesRow;
            }
            
            public tlg_ResponsablesDepositosSeccionesRow FindByIdUsuarioIdDepositoIdSeccion(string IdUsuario, string IdDeposito, string IdSeccion) {
                return ((tlg_ResponsablesDepositosSeccionesRow)(this.Rows.Find(new object[] {
                            IdUsuario,
                            IdDeposito,
                            IdSeccion})));
            }
            
            public System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            public override DataTable Clone() {
                tlg_ResponsablesDepositosSeccionesDataTable cln = ((tlg_ResponsablesDepositosSeccionesDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            protected override DataTable CreateInstance() {
                return new tlg_ResponsablesDepositosSeccionesDataTable();
            }
            
            internal void InitVars() {
                this.columnIdUsuario = this.Columns["IdUsuario"];
                this.columnIdDeposito = this.Columns["IdDeposito"];
                this.columnIdSeccion = this.Columns["IdSeccion"];
                this.columnActivo = this.Columns["Activo"];
                this.columnFechaCreacion = this.Columns["FechaCreacion"];
                this.columnIdConexionCreacion = this.Columns["IdConexionCreacion"];
                this.columnUltimaModificacion = this.Columns["UltimaModificacion"];
                this.columnIdConexionUltimaModificacion = this.Columns["IdConexionUltimaModificacion"];
                this.columnRowId = this.Columns["RowId"];
            }
            
            private void InitClass() {
                this.columnIdUsuario = new DataColumn("IdUsuario", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdUsuario);
                this.columnIdDeposito = new DataColumn("IdDeposito", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdDeposito);
                this.columnIdSeccion = new DataColumn("IdSeccion", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdSeccion);
                this.columnActivo = new DataColumn("Activo", typeof(bool), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnActivo);
                this.columnFechaCreacion = new DataColumn("FechaCreacion", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnFechaCreacion);
                this.columnIdConexionCreacion = new DataColumn("IdConexionCreacion", typeof(long), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdConexionCreacion);
                this.columnUltimaModificacion = new DataColumn("UltimaModificacion", typeof(System.Byte[]), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnUltimaModificacion);
                this.columnIdConexionUltimaModificacion = new DataColumn("IdConexionUltimaModificacion", typeof(long), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdConexionUltimaModificacion);
                this.columnRowId = new DataColumn("RowId", typeof(System.Guid), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnRowId);
                this.Constraints.Add(new UniqueConstraint("sy_UsuariosExDatasetKey4", new DataColumn[] {
                                this.columnIdUsuario,
                                this.columnIdDeposito,
                                this.columnIdSeccion}, true));
                this.columnIdUsuario.AllowDBNull = false;
                this.columnIdDeposito.AllowDBNull = false;
                this.columnIdSeccion.AllowDBNull = false;
                this.columnIdConexionCreacion.AllowDBNull = false;
                this.columnUltimaModificacion.ReadOnly = true;
            }
            
            public tlg_ResponsablesDepositosSeccionesRow Newtlg_ResponsablesDepositosSeccionesRow() {
                return ((tlg_ResponsablesDepositosSeccionesRow)(this.NewRow()));
            }
            
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder) {
                return new tlg_ResponsablesDepositosSeccionesRow(builder);
            }
            
            protected override System.Type GetRowType() {
                return typeof(tlg_ResponsablesDepositosSeccionesRow);
            }
            
            protected override void OnRowChanged(DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.tlg_ResponsablesDepositosSeccionesRowChanged != null)) {
                    this.tlg_ResponsablesDepositosSeccionesRowChanged(this, new tlg_ResponsablesDepositosSeccionesRowChangeEvent(((tlg_ResponsablesDepositosSeccionesRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowChanging(DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.tlg_ResponsablesDepositosSeccionesRowChanging != null)) {
                    this.tlg_ResponsablesDepositosSeccionesRowChanging(this, new tlg_ResponsablesDepositosSeccionesRowChangeEvent(((tlg_ResponsablesDepositosSeccionesRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleted(DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.tlg_ResponsablesDepositosSeccionesRowDeleted != null)) {
                    this.tlg_ResponsablesDepositosSeccionesRowDeleted(this, new tlg_ResponsablesDepositosSeccionesRowChangeEvent(((tlg_ResponsablesDepositosSeccionesRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleting(DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.tlg_ResponsablesDepositosSeccionesRowDeleting != null)) {
                    this.tlg_ResponsablesDepositosSeccionesRowDeleting(this, new tlg_ResponsablesDepositosSeccionesRowChangeEvent(((tlg_ResponsablesDepositosSeccionesRow)(e.Row)), e.Action));
                }
            }
            
            public void Removetlg_ResponsablesDepositosSeccionesRow(tlg_ResponsablesDepositosSeccionesRow row) {
                this.Rows.Remove(row);
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class tlg_ResponsablesDepositosSeccionesRow : DataRow {
            
            private tlg_ResponsablesDepositosSeccionesDataTable tabletlg_ResponsablesDepositosSecciones;
            
            internal tlg_ResponsablesDepositosSeccionesRow(DataRowBuilder rb) : 
                    base(rb) {
                this.tabletlg_ResponsablesDepositosSecciones = ((tlg_ResponsablesDepositosSeccionesDataTable)(this.Table));
            }
            
            public string IdUsuario {
                get {
                    return ((string)(this[this.tabletlg_ResponsablesDepositosSecciones.IdUsuarioColumn]));
                }
                set {
                    this[this.tabletlg_ResponsablesDepositosSecciones.IdUsuarioColumn] = value;
                }
            }
            
            public string IdDeposito {
                get {
                    return ((string)(this[this.tabletlg_ResponsablesDepositosSecciones.IdDepositoColumn]));
                }
                set {
                    this[this.tabletlg_ResponsablesDepositosSecciones.IdDepositoColumn] = value;
                }
            }
            
            public string IdSeccion {
                get {
                    return ((string)(this[this.tabletlg_ResponsablesDepositosSecciones.IdSeccionColumn]));
                }
                set {
                    this[this.tabletlg_ResponsablesDepositosSecciones.IdSeccionColumn] = value;
                }
            }
            
            public bool Activo {
                get {
                    try {
                        return ((bool)(this[this.tabletlg_ResponsablesDepositosSecciones.ActivoColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletlg_ResponsablesDepositosSecciones.ActivoColumn] = value;
                }
            }
            
            public System.DateTime FechaCreacion {
                get {
                    try {
                        return ((System.DateTime)(this[this.tabletlg_ResponsablesDepositosSecciones.FechaCreacionColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletlg_ResponsablesDepositosSecciones.FechaCreacionColumn] = value;
                }
            }
            
            public long IdConexionCreacion {
                get {
                    return ((long)(this[this.tabletlg_ResponsablesDepositosSecciones.IdConexionCreacionColumn]));
                }
                set {
                    this[this.tabletlg_ResponsablesDepositosSecciones.IdConexionCreacionColumn] = value;
                }
            }
            
            public System.Byte[] UltimaModificacion {
                get {
                    try {
                        return ((System.Byte[])(this[this.tabletlg_ResponsablesDepositosSecciones.UltimaModificacionColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletlg_ResponsablesDepositosSecciones.UltimaModificacionColumn] = value;
                }
            }
            
            public long IdConexionUltimaModificacion {
                get {
                    try {
                        return ((long)(this[this.tabletlg_ResponsablesDepositosSecciones.IdConexionUltimaModificacionColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletlg_ResponsablesDepositosSecciones.IdConexionUltimaModificacionColumn] = value;
                }
            }
            
            public System.Guid RowId {
                get {
                    try {
                        return ((System.Guid)(this[this.tabletlg_ResponsablesDepositosSecciones.RowIdColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletlg_ResponsablesDepositosSecciones.RowIdColumn] = value;
                }
            }
            
            public sy_UsuariosRow sy_UsuariosRow {
                get {
                    return ((sy_UsuariosRow)(this.GetParentRow(this.Table.ParentRelations["sy_Usuariostlg_ResponsablesDepositosSecciones"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["sy_Usuariostlg_ResponsablesDepositosSecciones"]);
                }
            }
            
            public bool IsActivoNull() {
                return this.IsNull(this.tabletlg_ResponsablesDepositosSecciones.ActivoColumn);
            }
            
            public void SetActivoNull() {
                this[this.tabletlg_ResponsablesDepositosSecciones.ActivoColumn] = System.Convert.DBNull;
            }
            
            public bool IsFechaCreacionNull() {
                return this.IsNull(this.tabletlg_ResponsablesDepositosSecciones.FechaCreacionColumn);
            }
            
            public void SetFechaCreacionNull() {
                this[this.tabletlg_ResponsablesDepositosSecciones.FechaCreacionColumn] = System.Convert.DBNull;
            }
            
            public bool IsUltimaModificacionNull() {
                return this.IsNull(this.tabletlg_ResponsablesDepositosSecciones.UltimaModificacionColumn);
            }
            
            public void SetUltimaModificacionNull() {
                this[this.tabletlg_ResponsablesDepositosSecciones.UltimaModificacionColumn] = System.Convert.DBNull;
            }
            
            public bool IsIdConexionUltimaModificacionNull() {
                return this.IsNull(this.tabletlg_ResponsablesDepositosSecciones.IdConexionUltimaModificacionColumn);
            }
            
            public void SetIdConexionUltimaModificacionNull() {
                this[this.tabletlg_ResponsablesDepositosSecciones.IdConexionUltimaModificacionColumn] = System.Convert.DBNull;
            }
            
            public bool IsRowIdNull() {
                return this.IsNull(this.tabletlg_ResponsablesDepositosSecciones.RowIdColumn);
            }
            
            public void SetRowIdNull() {
                this[this.tabletlg_ResponsablesDepositosSecciones.RowIdColumn] = System.Convert.DBNull;
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class tlg_ResponsablesDepositosSeccionesRowChangeEvent : EventArgs {
            
            private tlg_ResponsablesDepositosSeccionesRow eventRow;
            
            private DataRowAction eventAction;
            
            public tlg_ResponsablesDepositosSeccionesRowChangeEvent(tlg_ResponsablesDepositosSeccionesRow row, DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            public tlg_ResponsablesDepositosSeccionesRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            public DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
