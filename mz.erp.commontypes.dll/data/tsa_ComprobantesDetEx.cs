//------------------------------------------------------------------------------
// <autogenerated>
//     This code was generated by a tool.
//     Runtime Version: 1.1.4322.573
//
//     Changes to this file may cause incorrect behavior and will be lost if 
//     the code is regenerated.
// </autogenerated>
//------------------------------------------------------------------------------

namespace mz.erp.commontypes.data {
    using System;
    using System.Data;
    using System.Xml;
    using System.Runtime.Serialization;
    
    
    [Serializable()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Diagnostics.DebuggerStepThrough()]
    [System.ComponentModel.ToolboxItem(true)]
    public class tsa_ComprobantesDetExDataset : DataSet {
        
        private tsa_ComprobantesDetDataTable tabletsa_ComprobantesDet;
        
        public tsa_ComprobantesDetExDataset() {
            this.InitClass();
            System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            this.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        protected tsa_ComprobantesDetExDataset(SerializationInfo info, StreamingContext context) {
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((strSchema != null)) {
                DataSet ds = new DataSet();
                ds.ReadXmlSchema(new XmlTextReader(new System.IO.StringReader(strSchema)));
                if ((ds.Tables["tsa_ComprobantesDet"] != null)) {
                    this.Tables.Add(new tsa_ComprobantesDetDataTable(ds.Tables["tsa_ComprobantesDet"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.InitClass();
            }
            this.GetSerializationData(info, context);
            System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            this.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public tsa_ComprobantesDetDataTable tsa_ComprobantesDet {
            get {
                return this.tabletsa_ComprobantesDet;
            }
        }
        
        public override DataSet Clone() {
            tsa_ComprobantesDetExDataset cln = ((tsa_ComprobantesDetExDataset)(base.Clone()));
            cln.InitVars();
            return cln;
        }
        
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        protected override void ReadXmlSerializable(XmlReader reader) {
            this.Reset();
            DataSet ds = new DataSet();
            ds.ReadXml(reader);
            if ((ds.Tables["tsa_ComprobantesDet"] != null)) {
                this.Tables.Add(new tsa_ComprobantesDetDataTable(ds.Tables["tsa_ComprobantesDet"]));
            }
            this.DataSetName = ds.DataSetName;
            this.Prefix = ds.Prefix;
            this.Namespace = ds.Namespace;
            this.Locale = ds.Locale;
            this.CaseSensitive = ds.CaseSensitive;
            this.EnforceConstraints = ds.EnforceConstraints;
            this.Merge(ds, false, System.Data.MissingSchemaAction.Add);
            this.InitVars();
        }
        
        protected override System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            System.IO.MemoryStream stream = new System.IO.MemoryStream();
            this.WriteXmlSchema(new XmlTextWriter(stream, null));
            stream.Position = 0;
            return System.Xml.Schema.XmlSchema.Read(new XmlTextReader(stream), null);
        }
        
        internal void InitVars() {
            this.tabletsa_ComprobantesDet = ((tsa_ComprobantesDetDataTable)(this.Tables["tsa_ComprobantesDet"]));
            if ((this.tabletsa_ComprobantesDet != null)) {
                this.tabletsa_ComprobantesDet.InitVars();
            }
        }
        
        private void InitClass() {
            this.DataSetName = "tsa_ComprobantesDetExDataset";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/tsa_ComprobantesDetEx.xsd";
            this.Locale = new System.Globalization.CultureInfo("en-US");
            this.CaseSensitive = false;
            this.EnforceConstraints = true;
            this.tabletsa_ComprobantesDet = new tsa_ComprobantesDetDataTable();
            this.Tables.Add(this.tabletsa_ComprobantesDet);
        }
        
        private bool ShouldSerializetsa_ComprobantesDet() {
            return false;
        }
        
        private void SchemaChanged(object sender, System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        public delegate void tsa_ComprobantesDetRowChangeEventHandler(object sender, tsa_ComprobantesDetRowChangeEvent e);
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class tsa_ComprobantesDetDataTable : DataTable, System.Collections.IEnumerable {
            
            private DataColumn columnIdComprobante;
            
            private DataColumn columnFecha;
            
            private DataColumn columnTipo;
            
            private DataColumn columnNumero;
            
            private DataColumn columnIdRenglon;
            
            private DataColumn columnIdProducto;
            
            private DataColumn columnPrecioCostoNeto;
            
            private DataColumn columnPrecioCostoFinal;
            
            private DataColumn columnRentabilidad;
            
            private DataColumn columnPrecioVentaNeto;
            
            private DataColumn columnPrecioVentaFinal;
            
            private DataColumn columnBaseImponible;
            
            private DataColumn columnBonificacion;
            
            private DataColumn columnAlicuotaIva;
            
            private DataColumn columnCantidad;
            
            private DataColumn columnFechaCreacion;
            
            private DataColumn columnIdConexionCreacion;
            
            private DataColumn columnUltimaModificacion;
            
            private DataColumn columnIdConexionUltimaModificacion;
            
            private DataColumn columnIdReservado;
            
            private DataColumn columnRowId;
            
            private DataColumn columnIdSucursal;
            
            private DataColumn columnIdEmpresa;
            
            internal tsa_ComprobantesDetDataTable() : 
                    base("tsa_ComprobantesDet") {
                this.InitClass();
            }
            
            internal tsa_ComprobantesDetDataTable(DataTable table) : 
                    base(table.TableName) {
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
                this.DisplayExpression = table.DisplayExpression;
            }
            
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            internal DataColumn IdComprobanteColumn {
                get {
                    return this.columnIdComprobante;
                }
            }
            
            internal DataColumn FechaColumn {
                get {
                    return this.columnFecha;
                }
            }
            
            internal DataColumn TipoColumn {
                get {
                    return this.columnTipo;
                }
            }
            
            internal DataColumn NumeroColumn {
                get {
                    return this.columnNumero;
                }
            }
            
            internal DataColumn IdRenglonColumn {
                get {
                    return this.columnIdRenglon;
                }
            }
            
            internal DataColumn IdProductoColumn {
                get {
                    return this.columnIdProducto;
                }
            }
            
            internal DataColumn PrecioCostoNetoColumn {
                get {
                    return this.columnPrecioCostoNeto;
                }
            }
            
            internal DataColumn PrecioCostoFinalColumn {
                get {
                    return this.columnPrecioCostoFinal;
                }
            }
            
            internal DataColumn RentabilidadColumn {
                get {
                    return this.columnRentabilidad;
                }
            }
            
            internal DataColumn PrecioVentaNetoColumn {
                get {
                    return this.columnPrecioVentaNeto;
                }
            }
            
            internal DataColumn PrecioVentaFinalColumn {
                get {
                    return this.columnPrecioVentaFinal;
                }
            }
            
            internal DataColumn BaseImponibleColumn {
                get {
                    return this.columnBaseImponible;
                }
            }
            
            internal DataColumn BonificacionColumn {
                get {
                    return this.columnBonificacion;
                }
            }
            
            internal DataColumn AlicuotaIvaColumn {
                get {
                    return this.columnAlicuotaIva;
                }
            }
            
            internal DataColumn CantidadColumn {
                get {
                    return this.columnCantidad;
                }
            }
            
            internal DataColumn FechaCreacionColumn {
                get {
                    return this.columnFechaCreacion;
                }
            }
            
            internal DataColumn IdConexionCreacionColumn {
                get {
                    return this.columnIdConexionCreacion;
                }
            }
            
            internal DataColumn UltimaModificacionColumn {
                get {
                    return this.columnUltimaModificacion;
                }
            }
            
            internal DataColumn IdConexionUltimaModificacionColumn {
                get {
                    return this.columnIdConexionUltimaModificacion;
                }
            }
            
            internal DataColumn IdReservadoColumn {
                get {
                    return this.columnIdReservado;
                }
            }
            
            internal DataColumn RowIdColumn {
                get {
                    return this.columnRowId;
                }
            }
            
            internal DataColumn IdSucursalColumn {
                get {
                    return this.columnIdSucursal;
                }
            }
            
            internal DataColumn IdEmpresaColumn {
                get {
                    return this.columnIdEmpresa;
                }
            }
            
            public tsa_ComprobantesDetRow this[int index] {
                get {
                    return ((tsa_ComprobantesDetRow)(this.Rows[index]));
                }
            }
            
            public event tsa_ComprobantesDetRowChangeEventHandler tsa_ComprobantesDetRowChanged;
            
            public event tsa_ComprobantesDetRowChangeEventHandler tsa_ComprobantesDetRowChanging;
            
            public event tsa_ComprobantesDetRowChangeEventHandler tsa_ComprobantesDetRowDeleted;
            
            public event tsa_ComprobantesDetRowChangeEventHandler tsa_ComprobantesDetRowDeleting;
            
            public void Addtsa_ComprobantesDetRow(tsa_ComprobantesDetRow row) {
                this.Rows.Add(row);
            }
            
            public tsa_ComprobantesDetRow Addtsa_ComprobantesDetRow(
                        long IdComprobante, 
                        System.DateTime Fecha, 
                        string Tipo, 
                        string Numero, 
                        short IdRenglon, 
                        string IdProducto, 
                        System.Decimal PrecioCostoNeto, 
                        System.Decimal PrecioCostoFinal, 
                        System.Decimal Rentabilidad, 
                        System.Decimal PrecioVentaNeto, 
                        System.Decimal PrecioVentaFinal, 
                        System.Decimal BaseImponible, 
                        System.Decimal Bonificacion, 
                        System.Decimal AlicuotaIva, 
                        System.Decimal Cantidad, 
                        System.DateTime FechaCreacion, 
                        long IdConexionCreacion, 
                        System.Byte[] UltimaModificacion, 
                        long IdConexionUltimaModificacion, 
                        long IdReservado, 
                        System.Guid RowId, 
                        long IdSucursal, 
                        long IdEmpresa) {
                tsa_ComprobantesDetRow rowtsa_ComprobantesDetRow = ((tsa_ComprobantesDetRow)(this.NewRow()));
                rowtsa_ComprobantesDetRow.ItemArray = new object[] {
                        IdComprobante,
                        Fecha,
                        Tipo,
                        Numero,
                        IdRenglon,
                        IdProducto,
                        PrecioCostoNeto,
                        PrecioCostoFinal,
                        Rentabilidad,
                        PrecioVentaNeto,
                        PrecioVentaFinal,
                        BaseImponible,
                        Bonificacion,
                        AlicuotaIva,
                        Cantidad,
                        FechaCreacion,
                        IdConexionCreacion,
                        UltimaModificacion,
                        IdConexionUltimaModificacion,
                        IdReservado,
                        RowId,
                        IdSucursal,
                        IdEmpresa};
                this.Rows.Add(rowtsa_ComprobantesDetRow);
                return rowtsa_ComprobantesDetRow;
            }
            
            public tsa_ComprobantesDetRow FindByFechaTipoNumeroIdRenglon(System.DateTime Fecha, string Tipo, string Numero, short IdRenglon) {
                return ((tsa_ComprobantesDetRow)(this.Rows.Find(new object[] {
                            Fecha,
                            Tipo,
                            Numero,
                            IdRenglon})));
            }
            
            public System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            public override DataTable Clone() {
                tsa_ComprobantesDetDataTable cln = ((tsa_ComprobantesDetDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            protected override DataTable CreateInstance() {
                return new tsa_ComprobantesDetDataTable();
            }
            
            internal void InitVars() {
                this.columnIdComprobante = this.Columns["IdComprobante"];
                this.columnFecha = this.Columns["Fecha"];
                this.columnTipo = this.Columns["Tipo"];
                this.columnNumero = this.Columns["Numero"];
                this.columnIdRenglon = this.Columns["IdRenglon"];
                this.columnIdProducto = this.Columns["IdProducto"];
                this.columnPrecioCostoNeto = this.Columns["PrecioCostoNeto"];
                this.columnPrecioCostoFinal = this.Columns["PrecioCostoFinal"];
                this.columnRentabilidad = this.Columns["Rentabilidad"];
                this.columnPrecioVentaNeto = this.Columns["PrecioVentaNeto"];
                this.columnPrecioVentaFinal = this.Columns["PrecioVentaFinal"];
                this.columnBaseImponible = this.Columns["BaseImponible"];
                this.columnBonificacion = this.Columns["Bonificacion"];
                this.columnAlicuotaIva = this.Columns["AlicuotaIva"];
                this.columnCantidad = this.Columns["Cantidad"];
                this.columnFechaCreacion = this.Columns["FechaCreacion"];
                this.columnIdConexionCreacion = this.Columns["IdConexionCreacion"];
                this.columnUltimaModificacion = this.Columns["UltimaModificacion"];
                this.columnIdConexionUltimaModificacion = this.Columns["IdConexionUltimaModificacion"];
                this.columnIdReservado = this.Columns["IdReservado"];
                this.columnRowId = this.Columns["RowId"];
                this.columnIdSucursal = this.Columns["IdSucursal"];
                this.columnIdEmpresa = this.Columns["IdEmpresa"];
            }
            
            private void InitClass() {
                this.columnIdComprobante = new DataColumn("IdComprobante", typeof(long), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdComprobante);
                this.columnFecha = new DataColumn("Fecha", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnFecha);
                this.columnTipo = new DataColumn("Tipo", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnTipo);
                this.columnNumero = new DataColumn("Numero", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnNumero);
                this.columnIdRenglon = new DataColumn("IdRenglon", typeof(short), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdRenglon);
                this.columnIdProducto = new DataColumn("IdProducto", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdProducto);
                this.columnPrecioCostoNeto = new DataColumn("PrecioCostoNeto", typeof(System.Decimal), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnPrecioCostoNeto);
                this.columnPrecioCostoFinal = new DataColumn("PrecioCostoFinal", typeof(System.Decimal), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnPrecioCostoFinal);
                this.columnRentabilidad = new DataColumn("Rentabilidad", typeof(System.Decimal), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnRentabilidad);
                this.columnPrecioVentaNeto = new DataColumn("PrecioVentaNeto", typeof(System.Decimal), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnPrecioVentaNeto);
                this.columnPrecioVentaFinal = new DataColumn("PrecioVentaFinal", typeof(System.Decimal), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnPrecioVentaFinal);
                this.columnBaseImponible = new DataColumn("BaseImponible", typeof(System.Decimal), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnBaseImponible);
                this.columnBonificacion = new DataColumn("Bonificacion", typeof(System.Decimal), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnBonificacion);
                this.columnAlicuotaIva = new DataColumn("AlicuotaIva", typeof(System.Decimal), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnAlicuotaIva);
                this.columnCantidad = new DataColumn("Cantidad", typeof(System.Decimal), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnCantidad);
                this.columnFechaCreacion = new DataColumn("FechaCreacion", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnFechaCreacion);
                this.columnIdConexionCreacion = new DataColumn("IdConexionCreacion", typeof(long), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdConexionCreacion);
                this.columnUltimaModificacion = new DataColumn("UltimaModificacion", typeof(System.Byte[]), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnUltimaModificacion);
                this.columnIdConexionUltimaModificacion = new DataColumn("IdConexionUltimaModificacion", typeof(long), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdConexionUltimaModificacion);
                this.columnIdReservado = new DataColumn("IdReservado", typeof(long), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdReservado);
                this.columnRowId = new DataColumn("RowId", typeof(System.Guid), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnRowId);
                this.columnIdSucursal = new DataColumn("IdSucursal", typeof(long), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdSucursal);
                this.columnIdEmpresa = new DataColumn("IdEmpresa", typeof(long), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdEmpresa);
                this.Constraints.Add(new UniqueConstraint("tsa_ComprobantesDetExKey1", new DataColumn[] {
                                this.columnFecha,
                                this.columnTipo,
                                this.columnNumero,
                                this.columnIdRenglon}, true));
                this.columnIdComprobante.AllowDBNull = false;
                this.columnFecha.AllowDBNull = false;
                this.columnTipo.AllowDBNull = false;
                this.columnNumero.AllowDBNull = false;
                this.columnIdRenglon.AllowDBNull = false;
                this.columnUltimaModificacion.ReadOnly = true;
            }
            
            public tsa_ComprobantesDetRow Newtsa_ComprobantesDetRow() {
                return ((tsa_ComprobantesDetRow)(this.NewRow()));
            }
            
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder) {
                return new tsa_ComprobantesDetRow(builder);
            }
            
            protected override System.Type GetRowType() {
                return typeof(tsa_ComprobantesDetRow);
            }
            
            protected override void OnRowChanged(DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.tsa_ComprobantesDetRowChanged != null)) {
                    this.tsa_ComprobantesDetRowChanged(this, new tsa_ComprobantesDetRowChangeEvent(((tsa_ComprobantesDetRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowChanging(DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.tsa_ComprobantesDetRowChanging != null)) {
                    this.tsa_ComprobantesDetRowChanging(this, new tsa_ComprobantesDetRowChangeEvent(((tsa_ComprobantesDetRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleted(DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.tsa_ComprobantesDetRowDeleted != null)) {
                    this.tsa_ComprobantesDetRowDeleted(this, new tsa_ComprobantesDetRowChangeEvent(((tsa_ComprobantesDetRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleting(DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.tsa_ComprobantesDetRowDeleting != null)) {
                    this.tsa_ComprobantesDetRowDeleting(this, new tsa_ComprobantesDetRowChangeEvent(((tsa_ComprobantesDetRow)(e.Row)), e.Action));
                }
            }
            
            public void Removetsa_ComprobantesDetRow(tsa_ComprobantesDetRow row) {
                this.Rows.Remove(row);
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class tsa_ComprobantesDetRow : DataRow {
            
            private tsa_ComprobantesDetDataTable tabletsa_ComprobantesDet;
            
            internal tsa_ComprobantesDetRow(DataRowBuilder rb) : 
                    base(rb) {
                this.tabletsa_ComprobantesDet = ((tsa_ComprobantesDetDataTable)(this.Table));
            }
            
            public long IdComprobante {
                get {
                    return ((long)(this[this.tabletsa_ComprobantesDet.IdComprobanteColumn]));
                }
                set {
                    this[this.tabletsa_ComprobantesDet.IdComprobanteColumn] = value;
                }
            }
            
            public System.DateTime Fecha {
                get {
                    return ((System.DateTime)(this[this.tabletsa_ComprobantesDet.FechaColumn]));
                }
                set {
                    this[this.tabletsa_ComprobantesDet.FechaColumn] = value;
                }
            }
            
            public string Tipo {
                get {
                    return ((string)(this[this.tabletsa_ComprobantesDet.TipoColumn]));
                }
                set {
                    this[this.tabletsa_ComprobantesDet.TipoColumn] = value;
                }
            }
            
            public string Numero {
                get {
                    return ((string)(this[this.tabletsa_ComprobantesDet.NumeroColumn]));
                }
                set {
                    this[this.tabletsa_ComprobantesDet.NumeroColumn] = value;
                }
            }
            
            public short IdRenglon {
                get {
                    return ((short)(this[this.tabletsa_ComprobantesDet.IdRenglonColumn]));
                }
                set {
                    this[this.tabletsa_ComprobantesDet.IdRenglonColumn] = value;
                }
            }
            
            public string IdProducto {
                get {
                    try {
                        return ((string)(this[this.tabletsa_ComprobantesDet.IdProductoColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletsa_ComprobantesDet.IdProductoColumn] = value;
                }
            }
            
            public System.Decimal PrecioCostoNeto {
                get {
                    try {
                        return ((System.Decimal)(this[this.tabletsa_ComprobantesDet.PrecioCostoNetoColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletsa_ComprobantesDet.PrecioCostoNetoColumn] = value;
                }
            }
            
            public System.Decimal PrecioCostoFinal {
                get {
                    try {
                        return ((System.Decimal)(this[this.tabletsa_ComprobantesDet.PrecioCostoFinalColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletsa_ComprobantesDet.PrecioCostoFinalColumn] = value;
                }
            }
            
            public System.Decimal Rentabilidad {
                get {
                    try {
                        return ((System.Decimal)(this[this.tabletsa_ComprobantesDet.RentabilidadColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletsa_ComprobantesDet.RentabilidadColumn] = value;
                }
            }
            
            public System.Decimal PrecioVentaNeto {
                get {
                    try {
                        return ((System.Decimal)(this[this.tabletsa_ComprobantesDet.PrecioVentaNetoColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletsa_ComprobantesDet.PrecioVentaNetoColumn] = value;
                }
            }
            
            public System.Decimal PrecioVentaFinal {
                get {
                    try {
                        return ((System.Decimal)(this[this.tabletsa_ComprobantesDet.PrecioVentaFinalColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletsa_ComprobantesDet.PrecioVentaFinalColumn] = value;
                }
            }
            
            public System.Decimal BaseImponible {
                get {
                    try {
                        return ((System.Decimal)(this[this.tabletsa_ComprobantesDet.BaseImponibleColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletsa_ComprobantesDet.BaseImponibleColumn] = value;
                }
            }
            
            public System.Decimal Bonificacion {
                get {
                    try {
                        return ((System.Decimal)(this[this.tabletsa_ComprobantesDet.BonificacionColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletsa_ComprobantesDet.BonificacionColumn] = value;
                }
            }
            
            public System.Decimal AlicuotaIva {
                get {
                    try {
                        return ((System.Decimal)(this[this.tabletsa_ComprobantesDet.AlicuotaIvaColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletsa_ComprobantesDet.AlicuotaIvaColumn] = value;
                }
            }
            
            public System.Decimal Cantidad {
                get {
                    try {
                        return ((System.Decimal)(this[this.tabletsa_ComprobantesDet.CantidadColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletsa_ComprobantesDet.CantidadColumn] = value;
                }
            }
            
            public System.DateTime FechaCreacion {
                get {
                    try {
                        return ((System.DateTime)(this[this.tabletsa_ComprobantesDet.FechaCreacionColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletsa_ComprobantesDet.FechaCreacionColumn] = value;
                }
            }
            
            public long IdConexionCreacion {
                get {
                    try {
                        return ((long)(this[this.tabletsa_ComprobantesDet.IdConexionCreacionColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletsa_ComprobantesDet.IdConexionCreacionColumn] = value;
                }
            }
            
            public System.Byte[] UltimaModificacion {
                get {
                    try {
                        return ((System.Byte[])(this[this.tabletsa_ComprobantesDet.UltimaModificacionColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletsa_ComprobantesDet.UltimaModificacionColumn] = value;
                }
            }
            
            public long IdConexionUltimaModificacion {
                get {
                    try {
                        return ((long)(this[this.tabletsa_ComprobantesDet.IdConexionUltimaModificacionColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletsa_ComprobantesDet.IdConexionUltimaModificacionColumn] = value;
                }
            }
            
            public long IdReservado {
                get {
                    try {
                        return ((long)(this[this.tabletsa_ComprobantesDet.IdReservadoColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletsa_ComprobantesDet.IdReservadoColumn] = value;
                }
            }
            
            public System.Guid RowId {
                get {
                    try {
                        return ((System.Guid)(this[this.tabletsa_ComprobantesDet.RowIdColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletsa_ComprobantesDet.RowIdColumn] = value;
                }
            }
            
            public long IdSucursal {
                get {
                    try {
                        return ((long)(this[this.tabletsa_ComprobantesDet.IdSucursalColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletsa_ComprobantesDet.IdSucursalColumn] = value;
                }
            }
            
            public long IdEmpresa {
                get {
                    try {
                        return ((long)(this[this.tabletsa_ComprobantesDet.IdEmpresaColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletsa_ComprobantesDet.IdEmpresaColumn] = value;
                }
            }
            
            public bool IsIdProductoNull() {
                return this.IsNull(this.tabletsa_ComprobantesDet.IdProductoColumn);
            }
            
            public void SetIdProductoNull() {
                this[this.tabletsa_ComprobantesDet.IdProductoColumn] = System.Convert.DBNull;
            }
            
            public bool IsPrecioCostoNetoNull() {
                return this.IsNull(this.tabletsa_ComprobantesDet.PrecioCostoNetoColumn);
            }
            
            public void SetPrecioCostoNetoNull() {
                this[this.tabletsa_ComprobantesDet.PrecioCostoNetoColumn] = System.Convert.DBNull;
            }
            
            public bool IsPrecioCostoFinalNull() {
                return this.IsNull(this.tabletsa_ComprobantesDet.PrecioCostoFinalColumn);
            }
            
            public void SetPrecioCostoFinalNull() {
                this[this.tabletsa_ComprobantesDet.PrecioCostoFinalColumn] = System.Convert.DBNull;
            }
            
            public bool IsRentabilidadNull() {
                return this.IsNull(this.tabletsa_ComprobantesDet.RentabilidadColumn);
            }
            
            public void SetRentabilidadNull() {
                this[this.tabletsa_ComprobantesDet.RentabilidadColumn] = System.Convert.DBNull;
            }
            
            public bool IsPrecioVentaNetoNull() {
                return this.IsNull(this.tabletsa_ComprobantesDet.PrecioVentaNetoColumn);
            }
            
            public void SetPrecioVentaNetoNull() {
                this[this.tabletsa_ComprobantesDet.PrecioVentaNetoColumn] = System.Convert.DBNull;
            }
            
            public bool IsPrecioVentaFinalNull() {
                return this.IsNull(this.tabletsa_ComprobantesDet.PrecioVentaFinalColumn);
            }
            
            public void SetPrecioVentaFinalNull() {
                this[this.tabletsa_ComprobantesDet.PrecioVentaFinalColumn] = System.Convert.DBNull;
            }
            
            public bool IsBaseImponibleNull() {
                return this.IsNull(this.tabletsa_ComprobantesDet.BaseImponibleColumn);
            }
            
            public void SetBaseImponibleNull() {
                this[this.tabletsa_ComprobantesDet.BaseImponibleColumn] = System.Convert.DBNull;
            }
            
            public bool IsBonificacionNull() {
                return this.IsNull(this.tabletsa_ComprobantesDet.BonificacionColumn);
            }
            
            public void SetBonificacionNull() {
                this[this.tabletsa_ComprobantesDet.BonificacionColumn] = System.Convert.DBNull;
            }
            
            public bool IsAlicuotaIvaNull() {
                return this.IsNull(this.tabletsa_ComprobantesDet.AlicuotaIvaColumn);
            }
            
            public void SetAlicuotaIvaNull() {
                this[this.tabletsa_ComprobantesDet.AlicuotaIvaColumn] = System.Convert.DBNull;
            }
            
            public bool IsCantidadNull() {
                return this.IsNull(this.tabletsa_ComprobantesDet.CantidadColumn);
            }
            
            public void SetCantidadNull() {
                this[this.tabletsa_ComprobantesDet.CantidadColumn] = System.Convert.DBNull;
            }
            
            public bool IsFechaCreacionNull() {
                return this.IsNull(this.tabletsa_ComprobantesDet.FechaCreacionColumn);
            }
            
            public void SetFechaCreacionNull() {
                this[this.tabletsa_ComprobantesDet.FechaCreacionColumn] = System.Convert.DBNull;
            }
            
            public bool IsIdConexionCreacionNull() {
                return this.IsNull(this.tabletsa_ComprobantesDet.IdConexionCreacionColumn);
            }
            
            public void SetIdConexionCreacionNull() {
                this[this.tabletsa_ComprobantesDet.IdConexionCreacionColumn] = System.Convert.DBNull;
            }
            
            public bool IsUltimaModificacionNull() {
                return this.IsNull(this.tabletsa_ComprobantesDet.UltimaModificacionColumn);
            }
            
            public void SetUltimaModificacionNull() {
                this[this.tabletsa_ComprobantesDet.UltimaModificacionColumn] = System.Convert.DBNull;
            }
            
            public bool IsIdConexionUltimaModificacionNull() {
                return this.IsNull(this.tabletsa_ComprobantesDet.IdConexionUltimaModificacionColumn);
            }
            
            public void SetIdConexionUltimaModificacionNull() {
                this[this.tabletsa_ComprobantesDet.IdConexionUltimaModificacionColumn] = System.Convert.DBNull;
            }
            
            public bool IsIdReservadoNull() {
                return this.IsNull(this.tabletsa_ComprobantesDet.IdReservadoColumn);
            }
            
            public void SetIdReservadoNull() {
                this[this.tabletsa_ComprobantesDet.IdReservadoColumn] = System.Convert.DBNull;
            }
            
            public bool IsRowIdNull() {
                return this.IsNull(this.tabletsa_ComprobantesDet.RowIdColumn);
            }
            
            public void SetRowIdNull() {
                this[this.tabletsa_ComprobantesDet.RowIdColumn] = System.Convert.DBNull;
            }
            
            public bool IsIdSucursalNull() {
                return this.IsNull(this.tabletsa_ComprobantesDet.IdSucursalColumn);
            }
            
            public void SetIdSucursalNull() {
                this[this.tabletsa_ComprobantesDet.IdSucursalColumn] = System.Convert.DBNull;
            }
            
            public bool IsIdEmpresaNull() {
                return this.IsNull(this.tabletsa_ComprobantesDet.IdEmpresaColumn);
            }
            
            public void SetIdEmpresaNull() {
                this[this.tabletsa_ComprobantesDet.IdEmpresaColumn] = System.Convert.DBNull;
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class tsa_ComprobantesDetRowChangeEvent : EventArgs {
            
            private tsa_ComprobantesDetRow eventRow;
            
            private DataRowAction eventAction;
            
            public tsa_ComprobantesDetRowChangeEvent(tsa_ComprobantesDetRow row, DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            public tsa_ComprobantesDetRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            public DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
