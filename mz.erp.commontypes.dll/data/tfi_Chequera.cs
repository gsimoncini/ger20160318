//------------------------------------------------------------------------------
// <autogenerated>
//     This code was generated by a tool.
//     Runtime Version: 1.1.4322.573
//
//     Changes to this file may cause incorrect behavior and will be lost if 
//     the code is regenerated.
// </autogenerated>
//------------------------------------------------------------------------------

namespace mz.erp.commontypes.data {
    using System;
    using System.Data;
    using System.Xml;
    using System.Runtime.Serialization;
    
    
    [Serializable()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Diagnostics.DebuggerStepThrough()]
    [System.ComponentModel.ToolboxItem(true)]
    public class tfi_ChequeraDataset : DataSet {
        
        private tfi_ChequeraDataTable tabletfi_Chequera;
        
        public tfi_ChequeraDataset() {
            this.InitClass();
            System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            this.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        protected tfi_ChequeraDataset(SerializationInfo info, StreamingContext context) {
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((strSchema != null)) {
                DataSet ds = new DataSet();
                ds.ReadXmlSchema(new XmlTextReader(new System.IO.StringReader(strSchema)));
                if ((ds.Tables["tfi_Chequera"] != null)) {
                    this.Tables.Add(new tfi_ChequeraDataTable(ds.Tables["tfi_Chequera"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.InitClass();
            }
            this.GetSerializationData(info, context);
            System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            this.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public tfi_ChequeraDataTable tfi_Chequera {
            get {
                return this.tabletfi_Chequera;
            }
        }
        
        public override DataSet Clone() {
            tfi_ChequeraDataset cln = ((tfi_ChequeraDataset)(base.Clone()));
            cln.InitVars();
            return cln;
        }
        
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        protected override void ReadXmlSerializable(XmlReader reader) {
            this.Reset();
            DataSet ds = new DataSet();
            ds.ReadXml(reader);
            if ((ds.Tables["tfi_Chequera"] != null)) {
                this.Tables.Add(new tfi_ChequeraDataTable(ds.Tables["tfi_Chequera"]));
            }
            this.DataSetName = ds.DataSetName;
            this.Prefix = ds.Prefix;
            this.Namespace = ds.Namespace;
            this.Locale = ds.Locale;
            this.CaseSensitive = ds.CaseSensitive;
            this.EnforceConstraints = ds.EnforceConstraints;
            this.Merge(ds, false, System.Data.MissingSchemaAction.Add);
            this.InitVars();
        }
        
        protected override System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            System.IO.MemoryStream stream = new System.IO.MemoryStream();
            this.WriteXmlSchema(new XmlTextWriter(stream, null));
            stream.Position = 0;
            return System.Xml.Schema.XmlSchema.Read(new XmlTextReader(stream), null);
        }
        
        internal void InitVars() {
            this.tabletfi_Chequera = ((tfi_ChequeraDataTable)(this.Tables["tfi_Chequera"]));
            if ((this.tabletfi_Chequera != null)) {
                this.tabletfi_Chequera.InitVars();
            }
        }
        
        private void InitClass() {
            this.DataSetName = "tfi_ChequeraDataset";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/tfi_Chequera.xsd";
            this.Locale = new System.Globalization.CultureInfo("en-US");
            this.CaseSensitive = false;
            this.EnforceConstraints = true;
            this.tabletfi_Chequera = new tfi_ChequeraDataTable();
            this.Tables.Add(this.tabletfi_Chequera);
        }
        
        private bool ShouldSerializetfi_Chequera() {
            return false;
        }
        
        private void SchemaChanged(object sender, System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        public delegate void tfi_ChequeraRowChangeEventHandler(object sender, tfi_ChequeraRowChangeEvent e);
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class tfi_ChequeraDataTable : DataTable, System.Collections.IEnumerable {
            
            private DataColumn columnIdChequera;
            
            private DataColumn columnIdBanco;
            
            private DataColumn columnIdCuenta;
            
            private DataColumn columnCodigoChequera;
            
            private DataColumn columnComienzo;
            
            private DataColumn columnFinal;
            
            private DataColumn columnFechaCreacion;
            
            private DataColumn columnIdConexionCreacion;
            
            private DataColumn columnUltimaModificacion;
            
            private DataColumn columnIdConexionUltimaModificacion;
            
            private DataColumn columnIdReservado;
            
            private DataColumn columnIdEmpresa;
            
            private DataColumn columnRowId;
            
            private DataColumn columnFechaApertura;
            
            private DataColumn columnFechaCierre;
            
            internal tfi_ChequeraDataTable() : 
                    base("tfi_Chequera") {
                this.InitClass();
            }
            
            internal tfi_ChequeraDataTable(DataTable table) : 
                    base(table.TableName) {
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
                this.DisplayExpression = table.DisplayExpression;
            }
            
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            internal DataColumn IdChequeraColumn {
                get {
                    return this.columnIdChequera;
                }
            }
            
            internal DataColumn IdBancoColumn {
                get {
                    return this.columnIdBanco;
                }
            }
            
            internal DataColumn IdCuentaColumn {
                get {
                    return this.columnIdCuenta;
                }
            }
            
            internal DataColumn CodigoChequeraColumn {
                get {
                    return this.columnCodigoChequera;
                }
            }
            
            internal DataColumn ComienzoColumn {
                get {
                    return this.columnComienzo;
                }
            }
            
            internal DataColumn FinalColumn {
                get {
                    return this.columnFinal;
                }
            }
            
            internal DataColumn FechaCreacionColumn {
                get {
                    return this.columnFechaCreacion;
                }
            }
            
            internal DataColumn IdConexionCreacionColumn {
                get {
                    return this.columnIdConexionCreacion;
                }
            }
            
            internal DataColumn UltimaModificacionColumn {
                get {
                    return this.columnUltimaModificacion;
                }
            }
            
            internal DataColumn IdConexionUltimaModificacionColumn {
                get {
                    return this.columnIdConexionUltimaModificacion;
                }
            }
            
            internal DataColumn IdReservadoColumn {
                get {
                    return this.columnIdReservado;
                }
            }
            
            internal DataColumn IdEmpresaColumn {
                get {
                    return this.columnIdEmpresa;
                }
            }
            
            internal DataColumn RowIdColumn {
                get {
                    return this.columnRowId;
                }
            }
            
            internal DataColumn FechaAperturaColumn {
                get {
                    return this.columnFechaApertura;
                }
            }
            
            internal DataColumn FechaCierreColumn {
                get {
                    return this.columnFechaCierre;
                }
            }
            
            public tfi_ChequeraRow this[int index] {
                get {
                    return ((tfi_ChequeraRow)(this.Rows[index]));
                }
            }
            
            public event tfi_ChequeraRowChangeEventHandler tfi_ChequeraRowChanged;
            
            public event tfi_ChequeraRowChangeEventHandler tfi_ChequeraRowChanging;
            
            public event tfi_ChequeraRowChangeEventHandler tfi_ChequeraRowDeleted;
            
            public event tfi_ChequeraRowChangeEventHandler tfi_ChequeraRowDeleting;
            
            public void Addtfi_ChequeraRow(tfi_ChequeraRow row) {
                this.Rows.Add(row);
            }
            
            public tfi_ChequeraRow Addtfi_ChequeraRow(string IdChequera, string IdBanco, string IdCuenta, long CodigoChequera, string Comienzo, string Final, System.DateTime FechaCreacion, long IdConexionCreacion, System.Byte[] UltimaModificacion, long IdConexionUltimaModificacion, long IdReservado, long IdEmpresa, System.Guid RowId, System.DateTime FechaApertura, System.DateTime FechaCierre) {
                tfi_ChequeraRow rowtfi_ChequeraRow = ((tfi_ChequeraRow)(this.NewRow()));
                rowtfi_ChequeraRow.ItemArray = new object[] {
                        IdChequera,
                        IdBanco,
                        IdCuenta,
                        CodigoChequera,
                        Comienzo,
                        Final,
                        FechaCreacion,
                        IdConexionCreacion,
                        UltimaModificacion,
                        IdConexionUltimaModificacion,
                        IdReservado,
                        IdEmpresa,
                        RowId,
                        FechaApertura,
                        FechaCierre};
                this.Rows.Add(rowtfi_ChequeraRow);
                return rowtfi_ChequeraRow;
            }
            
            public tfi_ChequeraRow FindByIdChequera(string IdChequera) {
                return ((tfi_ChequeraRow)(this.Rows.Find(new object[] {
                            IdChequera})));
            }
            
            public System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            public override DataTable Clone() {
                tfi_ChequeraDataTable cln = ((tfi_ChequeraDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            protected override DataTable CreateInstance() {
                return new tfi_ChequeraDataTable();
            }
            
            internal void InitVars() {
                this.columnIdChequera = this.Columns["IdChequera"];
                this.columnIdBanco = this.Columns["IdBanco"];
                this.columnIdCuenta = this.Columns["IdCuenta"];
                this.columnCodigoChequera = this.Columns["CodigoChequera"];
                this.columnComienzo = this.Columns["Comienzo"];
                this.columnFinal = this.Columns["Final"];
                this.columnFechaCreacion = this.Columns["FechaCreacion"];
                this.columnIdConexionCreacion = this.Columns["IdConexionCreacion"];
                this.columnUltimaModificacion = this.Columns["UltimaModificacion"];
                this.columnIdConexionUltimaModificacion = this.Columns["IdConexionUltimaModificacion"];
                this.columnIdReservado = this.Columns["IdReservado"];
                this.columnIdEmpresa = this.Columns["IdEmpresa"];
                this.columnRowId = this.Columns["RowId"];
                this.columnFechaApertura = this.Columns["FechaApertura"];
                this.columnFechaCierre = this.Columns["FechaCierre"];
            }
            
            private void InitClass() {
                this.columnIdChequera = new DataColumn("IdChequera", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdChequera);
                this.columnIdBanco = new DataColumn("IdBanco", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdBanco);
                this.columnIdCuenta = new DataColumn("IdCuenta", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdCuenta);
                this.columnCodigoChequera = new DataColumn("CodigoChequera", typeof(long), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnCodigoChequera);
                this.columnComienzo = new DataColumn("Comienzo", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnComienzo);
                this.columnFinal = new DataColumn("Final", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnFinal);
                this.columnFechaCreacion = new DataColumn("FechaCreacion", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnFechaCreacion);
                this.columnIdConexionCreacion = new DataColumn("IdConexionCreacion", typeof(long), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdConexionCreacion);
                this.columnUltimaModificacion = new DataColumn("UltimaModificacion", typeof(System.Byte[]), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnUltimaModificacion);
                this.columnIdConexionUltimaModificacion = new DataColumn("IdConexionUltimaModificacion", typeof(long), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdConexionUltimaModificacion);
                this.columnIdReservado = new DataColumn("IdReservado", typeof(long), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdReservado);
                this.columnIdEmpresa = new DataColumn("IdEmpresa", typeof(long), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdEmpresa);
                this.columnRowId = new DataColumn("RowId", typeof(System.Guid), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnRowId);
                this.columnFechaApertura = new DataColumn("FechaApertura", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnFechaApertura);
                this.columnFechaCierre = new DataColumn("FechaCierre", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnFechaCierre);
                this.Constraints.Add(new UniqueConstraint("tfi_ChequeraKey1", new DataColumn[] {
                                this.columnIdChequera}, true));
                this.columnIdChequera.AllowDBNull = false;
                this.columnIdChequera.Unique = true;
                this.columnIdBanco.AllowDBNull = false;
                this.columnIdCuenta.AllowDBNull = false;
                this.columnComienzo.AllowDBNull = false;
                this.columnFinal.AllowDBNull = false;
                this.columnUltimaModificacion.ReadOnly = true;
            }
            
            public tfi_ChequeraRow Newtfi_ChequeraRow() {
                return ((tfi_ChequeraRow)(this.NewRow()));
            }
            
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder) {
                return new tfi_ChequeraRow(builder);
            }
            
            protected override System.Type GetRowType() {
                return typeof(tfi_ChequeraRow);
            }
            
            protected override void OnRowChanged(DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.tfi_ChequeraRowChanged != null)) {
                    this.tfi_ChequeraRowChanged(this, new tfi_ChequeraRowChangeEvent(((tfi_ChequeraRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowChanging(DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.tfi_ChequeraRowChanging != null)) {
                    this.tfi_ChequeraRowChanging(this, new tfi_ChequeraRowChangeEvent(((tfi_ChequeraRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleted(DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.tfi_ChequeraRowDeleted != null)) {
                    this.tfi_ChequeraRowDeleted(this, new tfi_ChequeraRowChangeEvent(((tfi_ChequeraRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleting(DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.tfi_ChequeraRowDeleting != null)) {
                    this.tfi_ChequeraRowDeleting(this, new tfi_ChequeraRowChangeEvent(((tfi_ChequeraRow)(e.Row)), e.Action));
                }
            }
            
            public void Removetfi_ChequeraRow(tfi_ChequeraRow row) {
                this.Rows.Remove(row);
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class tfi_ChequeraRow : DataRow {
            
            private tfi_ChequeraDataTable tabletfi_Chequera;
            
            internal tfi_ChequeraRow(DataRowBuilder rb) : 
                    base(rb) {
                this.tabletfi_Chequera = ((tfi_ChequeraDataTable)(this.Table));
            }
            
            public string IdChequera {
                get {
                    return ((string)(this[this.tabletfi_Chequera.IdChequeraColumn]));
                }
                set {
                    this[this.tabletfi_Chequera.IdChequeraColumn] = value;
                }
            }
            
            public string IdBanco {
                get {
                    return ((string)(this[this.tabletfi_Chequera.IdBancoColumn]));
                }
                set {
                    this[this.tabletfi_Chequera.IdBancoColumn] = value;
                }
            }
            
            public string IdCuenta {
                get {
                    return ((string)(this[this.tabletfi_Chequera.IdCuentaColumn]));
                }
                set {
                    this[this.tabletfi_Chequera.IdCuentaColumn] = value;
                }
            }
            
            public long CodigoChequera {
                get {
                    try {
                        return ((long)(this[this.tabletfi_Chequera.CodigoChequeraColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletfi_Chequera.CodigoChequeraColumn] = value;
                }
            }
            
            public string Comienzo {
                get {
                    return ((string)(this[this.tabletfi_Chequera.ComienzoColumn]));
                }
                set {
                    this[this.tabletfi_Chequera.ComienzoColumn] = value;
                }
            }
            
            public string Final {
                get {
                    return ((string)(this[this.tabletfi_Chequera.FinalColumn]));
                }
                set {
                    this[this.tabletfi_Chequera.FinalColumn] = value;
                }
            }
            
            public System.DateTime FechaCreacion {
                get {
                    try {
                        return ((System.DateTime)(this[this.tabletfi_Chequera.FechaCreacionColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletfi_Chequera.FechaCreacionColumn] = value;
                }
            }
            
            public long IdConexionCreacion {
                get {
                    try {
                        return ((long)(this[this.tabletfi_Chequera.IdConexionCreacionColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletfi_Chequera.IdConexionCreacionColumn] = value;
                }
            }
            
            public System.Byte[] UltimaModificacion {
                get {
                    try {
                        return ((System.Byte[])(this[this.tabletfi_Chequera.UltimaModificacionColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletfi_Chequera.UltimaModificacionColumn] = value;
                }
            }
            
            public long IdConexionUltimaModificacion {
                get {
                    try {
                        return ((long)(this[this.tabletfi_Chequera.IdConexionUltimaModificacionColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletfi_Chequera.IdConexionUltimaModificacionColumn] = value;
                }
            }
            
            public long IdReservado {
                get {
                    try {
                        return ((long)(this[this.tabletfi_Chequera.IdReservadoColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletfi_Chequera.IdReservadoColumn] = value;
                }
            }
            
            public long IdEmpresa {
                get {
                    try {
                        return ((long)(this[this.tabletfi_Chequera.IdEmpresaColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletfi_Chequera.IdEmpresaColumn] = value;
                }
            }
            
            public System.Guid RowId {
                get {
                    try {
                        return ((System.Guid)(this[this.tabletfi_Chequera.RowIdColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletfi_Chequera.RowIdColumn] = value;
                }
            }
            
            public System.DateTime FechaApertura {
                get {
                    try {
                        return ((System.DateTime)(this[this.tabletfi_Chequera.FechaAperturaColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletfi_Chequera.FechaAperturaColumn] = value;
                }
            }
            
            public System.DateTime FechaCierre {
                get {
                    try {
                        return ((System.DateTime)(this[this.tabletfi_Chequera.FechaCierreColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletfi_Chequera.FechaCierreColumn] = value;
                }
            }
            
            public bool IsCodigoChequeraNull() {
                return this.IsNull(this.tabletfi_Chequera.CodigoChequeraColumn);
            }
            
            public void SetCodigoChequeraNull() {
                this[this.tabletfi_Chequera.CodigoChequeraColumn] = System.Convert.DBNull;
            }
            
            public bool IsFechaCreacionNull() {
                return this.IsNull(this.tabletfi_Chequera.FechaCreacionColumn);
            }
            
            public void SetFechaCreacionNull() {
                this[this.tabletfi_Chequera.FechaCreacionColumn] = System.Convert.DBNull;
            }
            
            public bool IsIdConexionCreacionNull() {
                return this.IsNull(this.tabletfi_Chequera.IdConexionCreacionColumn);
            }
            
            public void SetIdConexionCreacionNull() {
                this[this.tabletfi_Chequera.IdConexionCreacionColumn] = System.Convert.DBNull;
            }
            
            public bool IsUltimaModificacionNull() {
                return this.IsNull(this.tabletfi_Chequera.UltimaModificacionColumn);
            }
            
            public void SetUltimaModificacionNull() {
                this[this.tabletfi_Chequera.UltimaModificacionColumn] = System.Convert.DBNull;
            }
            
            public bool IsIdConexionUltimaModificacionNull() {
                return this.IsNull(this.tabletfi_Chequera.IdConexionUltimaModificacionColumn);
            }
            
            public void SetIdConexionUltimaModificacionNull() {
                this[this.tabletfi_Chequera.IdConexionUltimaModificacionColumn] = System.Convert.DBNull;
            }
            
            public bool IsIdReservadoNull() {
                return this.IsNull(this.tabletfi_Chequera.IdReservadoColumn);
            }
            
            public void SetIdReservadoNull() {
                this[this.tabletfi_Chequera.IdReservadoColumn] = System.Convert.DBNull;
            }
            
            public bool IsIdEmpresaNull() {
                return this.IsNull(this.tabletfi_Chequera.IdEmpresaColumn);
            }
            
            public void SetIdEmpresaNull() {
                this[this.tabletfi_Chequera.IdEmpresaColumn] = System.Convert.DBNull;
            }
            
            public bool IsRowIdNull() {
                return this.IsNull(this.tabletfi_Chequera.RowIdColumn);
            }
            
            public void SetRowIdNull() {
                this[this.tabletfi_Chequera.RowIdColumn] = System.Convert.DBNull;
            }
            
            public bool IsFechaAperturaNull() {
                return this.IsNull(this.tabletfi_Chequera.FechaAperturaColumn);
            }
            
            public void SetFechaAperturaNull() {
                this[this.tabletfi_Chequera.FechaAperturaColumn] = System.Convert.DBNull;
            }
            
            public bool IsFechaCierreNull() {
                return this.IsNull(this.tabletfi_Chequera.FechaCierreColumn);
            }
            
            public void SetFechaCierreNull() {
                this[this.tabletfi_Chequera.FechaCierreColumn] = System.Convert.DBNull;
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class tfi_ChequeraRowChangeEvent : EventArgs {
            
            private tfi_ChequeraRow eventRow;
            
            private DataRowAction eventAction;
            
            public tfi_ChequeraRowChangeEvent(tfi_ChequeraRow row, DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            public tfi_ChequeraRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            public DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
