//------------------------------------------------------------------------------
// <autogenerated>
//     This code was generated by a tool.
//     Runtime Version: 1.1.4322.2407
//
//     Changes to this file may cause incorrect behavior and will be lost if 
//     the code is regenerated.
// </autogenerated>
//------------------------------------------------------------------------------

namespace mz.erp.commontypes.data {
    using System;
    using System.Data;
    using System.Xml;
    using System.Runtime.Serialization;
    
    
    [Serializable()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Diagnostics.DebuggerStepThrough()]
    [System.ComponentModel.ToolboxItem(true)]
    public class tsa_ComprobantesExDataset : DataSet {
        
        private tsa_ComprobantesDataTable tabletsa_Comprobantes;
        
        private tsa_ComprobanteDetalleDeudaDataTable tabletsa_ComprobanteDetalleDeuda;
        
        private tsa_AplicacionPagosDataTable tabletsa_AplicacionPagos;
        
        private tfi_ValoresDataTable tabletfi_Valores;
        
        private tsa_ComprobantesDetDataTable tabletsa_ComprobantesDet;
        
        private tsa_ComprobanteDetalleImpuestosDataTable tabletsa_ComprobanteDetalleImpuestos;
        
        private tsa_ComprobanteValoresVarAuxDataTable tabletsa_ComprobanteValoresVarAux;
        
        private tsa_ComprobanteDetalleDescripcionAdicionalDataTable tabletsa_ComprobanteDetalleDescripcionAdicional;
        
        private tsa_ComprobantesRelacionOrigenDestinoDataTable tabletsa_ComprobantesRelacionOrigenDestino;
        
        private tsa_ComprobanteDetalleDePagosDataTable tabletsa_ComprobanteDetalleDePagos;
        
        private tsa_ComprobantesOrdenReparacionDataTable tabletsa_ComprobantesOrdenReparacion;
        
        private tsa_ComprobanteDetalleOrdenReparacionDataTable tabletsa_ComprobanteDetalleOrdenReparacion;
        
        private tlg_MovimientosDeStockDataTable tabletlg_MovimientosDeStock;
        
        private tsa_ComprobantesMovimientosDeStockDataTable tabletsa_ComprobantesMovimientosDeStock;
        
        private tfi_ValoresDatosAuxiliaresDataTable tabletfi_ValoresDatosAuxiliares;
        
        private tsa_ComprobantesAutorizacionesDataTable tabletsa_ComprobantesAutorizaciones;
        
        private tsh_ProductosAuxiliaresDataTable tabletsh_ProductosAuxiliares;
        
        private tsa_ComprobantesDetAuxiliaresDataTable tabletsa_ComprobantesDetAuxiliares;
        
        private DataRelation relationtsa_Comprobantestsa_AplicacionPagos;
        
        private DataRelation relationtsa_Comprobantestsa_ComprobanteDetalleDeuda;
        
        private DataRelation relationtsa_Comprobantestsa_ComprobantesDet;
        
        private DataRelation relationtsa_ComprobantesDettsa_ComprobanteDetalleImpuestos;
        
        private DataRelation relationtsa_Comprobantestsa_ComprobanteValoresVarAux;
        
        private DataRelation relationtsa_ComprobantesDettsa_ComprobanteDetalleDescripcionAdicional;
        
        private DataRelation relationtsa_Comprobantestsa_AplicacionPagos1;
        
        private DataRelation relationtsa_Comprobantestsa_ComprobanteDetalleDePagos;
        
        private DataRelation relationtfi_Valorestsa_ComprobanteDetalleDePagos;
        
        private DataRelation relationtsa_Comprobantestsa_ComprobantesOrdenReparacion;
        
        private DataRelation relationtsa_Comprobantestsa_ComprobanteDetalleOrdenReparacion;
        
        private DataRelation relationtsa_Comprobantestsa_ComprobantesMovimientosDeStock;
        
        private DataRelation relationtlg_MovimientosDeStocktsa_ComprobantesMovimientosDeStock;
        
        private DataRelation relationtfi_Valorestfi_ValoresDatosAuxiliares;
        
        private DataRelation relationtsa_Comprobantestsa_ComprobantesAutorizaciones;
        
        private DataRelation relationtsa_ComprobantesDettsa_ComprobantesDetAuxiliares;
        
        public tsa_ComprobantesExDataset() {
            this.InitClass();
            System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            this.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        protected tsa_ComprobantesExDataset(SerializationInfo info, StreamingContext context) {
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((strSchema != null)) {
                DataSet ds = new DataSet();
                ds.ReadXmlSchema(new XmlTextReader(new System.IO.StringReader(strSchema)));
                if ((ds.Tables["tsa_Comprobantes"] != null)) {
                    this.Tables.Add(new tsa_ComprobantesDataTable(ds.Tables["tsa_Comprobantes"]));
                }
                if ((ds.Tables["tsa_ComprobanteDetalleDeuda"] != null)) {
                    this.Tables.Add(new tsa_ComprobanteDetalleDeudaDataTable(ds.Tables["tsa_ComprobanteDetalleDeuda"]));
                }
                if ((ds.Tables["tsa_AplicacionPagos"] != null)) {
                    this.Tables.Add(new tsa_AplicacionPagosDataTable(ds.Tables["tsa_AplicacionPagos"]));
                }
                if ((ds.Tables["tfi_Valores"] != null)) {
                    this.Tables.Add(new tfi_ValoresDataTable(ds.Tables["tfi_Valores"]));
                }
                if ((ds.Tables["tsa_ComprobantesDet"] != null)) {
                    this.Tables.Add(new tsa_ComprobantesDetDataTable(ds.Tables["tsa_ComprobantesDet"]));
                }
                if ((ds.Tables["tsa_ComprobanteDetalleImpuestos"] != null)) {
                    this.Tables.Add(new tsa_ComprobanteDetalleImpuestosDataTable(ds.Tables["tsa_ComprobanteDetalleImpuestos"]));
                }
                if ((ds.Tables["tsa_ComprobanteValoresVarAux"] != null)) {
                    this.Tables.Add(new tsa_ComprobanteValoresVarAuxDataTable(ds.Tables["tsa_ComprobanteValoresVarAux"]));
                }
                if ((ds.Tables["tsa_ComprobanteDetalleDescripcionAdicional"] != null)) {
                    this.Tables.Add(new tsa_ComprobanteDetalleDescripcionAdicionalDataTable(ds.Tables["tsa_ComprobanteDetalleDescripcionAdicional"]));
                }
                if ((ds.Tables["tsa_ComprobantesRelacionOrigenDestino"] != null)) {
                    this.Tables.Add(new tsa_ComprobantesRelacionOrigenDestinoDataTable(ds.Tables["tsa_ComprobantesRelacionOrigenDestino"]));
                }
                if ((ds.Tables["tsa_ComprobanteDetalleDePagos"] != null)) {
                    this.Tables.Add(new tsa_ComprobanteDetalleDePagosDataTable(ds.Tables["tsa_ComprobanteDetalleDePagos"]));
                }
                if ((ds.Tables["tsa_ComprobantesOrdenReparacion"] != null)) {
                    this.Tables.Add(new tsa_ComprobantesOrdenReparacionDataTable(ds.Tables["tsa_ComprobantesOrdenReparacion"]));
                }
                if ((ds.Tables["tsa_ComprobanteDetalleOrdenReparacion"] != null)) {
                    this.Tables.Add(new tsa_ComprobanteDetalleOrdenReparacionDataTable(ds.Tables["tsa_ComprobanteDetalleOrdenReparacion"]));
                }
                if ((ds.Tables["tlg_MovimientosDeStock"] != null)) {
                    this.Tables.Add(new tlg_MovimientosDeStockDataTable(ds.Tables["tlg_MovimientosDeStock"]));
                }
                if ((ds.Tables["tsa_ComprobantesMovimientosDeStock"] != null)) {
                    this.Tables.Add(new tsa_ComprobantesMovimientosDeStockDataTable(ds.Tables["tsa_ComprobantesMovimientosDeStock"]));
                }
                if ((ds.Tables["tfi_ValoresDatosAuxiliares"] != null)) {
                    this.Tables.Add(new tfi_ValoresDatosAuxiliaresDataTable(ds.Tables["tfi_ValoresDatosAuxiliares"]));
                }
                if ((ds.Tables["tsa_ComprobantesAutorizaciones"] != null)) {
                    this.Tables.Add(new tsa_ComprobantesAutorizacionesDataTable(ds.Tables["tsa_ComprobantesAutorizaciones"]));
                }
                if ((ds.Tables["tsh_ProductosAuxiliares"] != null)) {
                    this.Tables.Add(new tsh_ProductosAuxiliaresDataTable(ds.Tables["tsh_ProductosAuxiliares"]));
                }
                if ((ds.Tables["tsa_ComprobantesDetAuxiliares"] != null)) {
                    this.Tables.Add(new tsa_ComprobantesDetAuxiliaresDataTable(ds.Tables["tsa_ComprobantesDetAuxiliares"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.InitClass();
            }
            this.GetSerializationData(info, context);
            System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            this.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public tsa_ComprobantesDataTable tsa_Comprobantes {
            get {
                return this.tabletsa_Comprobantes;
            }
        }
        
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public tsa_ComprobanteDetalleDeudaDataTable tsa_ComprobanteDetalleDeuda {
            get {
                return this.tabletsa_ComprobanteDetalleDeuda;
            }
        }
        
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public tsa_AplicacionPagosDataTable tsa_AplicacionPagos {
            get {
                return this.tabletsa_AplicacionPagos;
            }
        }
        
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public tfi_ValoresDataTable tfi_Valores {
            get {
                return this.tabletfi_Valores;
            }
        }
        
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public tsa_ComprobantesDetDataTable tsa_ComprobantesDet {
            get {
                return this.tabletsa_ComprobantesDet;
            }
        }
        
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public tsa_ComprobanteDetalleImpuestosDataTable tsa_ComprobanteDetalleImpuestos {
            get {
                return this.tabletsa_ComprobanteDetalleImpuestos;
            }
        }
        
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public tsa_ComprobanteValoresVarAuxDataTable tsa_ComprobanteValoresVarAux {
            get {
                return this.tabletsa_ComprobanteValoresVarAux;
            }
        }
        
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public tsa_ComprobanteDetalleDescripcionAdicionalDataTable tsa_ComprobanteDetalleDescripcionAdicional {
            get {
                return this.tabletsa_ComprobanteDetalleDescripcionAdicional;
            }
        }
        
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public tsa_ComprobantesRelacionOrigenDestinoDataTable tsa_ComprobantesRelacionOrigenDestino {
            get {
                return this.tabletsa_ComprobantesRelacionOrigenDestino;
            }
        }
        
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public tsa_ComprobanteDetalleDePagosDataTable tsa_ComprobanteDetalleDePagos {
            get {
                return this.tabletsa_ComprobanteDetalleDePagos;
            }
        }
        
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public tsa_ComprobantesOrdenReparacionDataTable tsa_ComprobantesOrdenReparacion {
            get {
                return this.tabletsa_ComprobantesOrdenReparacion;
            }
        }
        
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public tsa_ComprobanteDetalleOrdenReparacionDataTable tsa_ComprobanteDetalleOrdenReparacion {
            get {
                return this.tabletsa_ComprobanteDetalleOrdenReparacion;
            }
        }
        
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public tlg_MovimientosDeStockDataTable tlg_MovimientosDeStock {
            get {
                return this.tabletlg_MovimientosDeStock;
            }
        }
        
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public tsa_ComprobantesMovimientosDeStockDataTable tsa_ComprobantesMovimientosDeStock {
            get {
                return this.tabletsa_ComprobantesMovimientosDeStock;
            }
        }
        
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public tfi_ValoresDatosAuxiliaresDataTable tfi_ValoresDatosAuxiliares {
            get {
                return this.tabletfi_ValoresDatosAuxiliares;
            }
        }
        
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public tsa_ComprobantesAutorizacionesDataTable tsa_ComprobantesAutorizaciones {
            get {
                return this.tabletsa_ComprobantesAutorizaciones;
            }
        }
        
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public tsh_ProductosAuxiliaresDataTable tsh_ProductosAuxiliares {
            get {
                return this.tabletsh_ProductosAuxiliares;
            }
        }
        
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public tsa_ComprobantesDetAuxiliaresDataTable tsa_ComprobantesDetAuxiliares {
            get {
                return this.tabletsa_ComprobantesDetAuxiliares;
            }
        }
        
        public override DataSet Clone() {
            tsa_ComprobantesExDataset cln = ((tsa_ComprobantesExDataset)(base.Clone()));
            cln.InitVars();
            return cln;
        }
        
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        protected override void ReadXmlSerializable(XmlReader reader) {
            this.Reset();
            DataSet ds = new DataSet();
            ds.ReadXml(reader);
            if ((ds.Tables["tsa_Comprobantes"] != null)) {
                this.Tables.Add(new tsa_ComprobantesDataTable(ds.Tables["tsa_Comprobantes"]));
            }
            if ((ds.Tables["tsa_ComprobanteDetalleDeuda"] != null)) {
                this.Tables.Add(new tsa_ComprobanteDetalleDeudaDataTable(ds.Tables["tsa_ComprobanteDetalleDeuda"]));
            }
            if ((ds.Tables["tsa_AplicacionPagos"] != null)) {
                this.Tables.Add(new tsa_AplicacionPagosDataTable(ds.Tables["tsa_AplicacionPagos"]));
            }
            if ((ds.Tables["tfi_Valores"] != null)) {
                this.Tables.Add(new tfi_ValoresDataTable(ds.Tables["tfi_Valores"]));
            }
            if ((ds.Tables["tsa_ComprobantesDet"] != null)) {
                this.Tables.Add(new tsa_ComprobantesDetDataTable(ds.Tables["tsa_ComprobantesDet"]));
            }
            if ((ds.Tables["tsa_ComprobanteDetalleImpuestos"] != null)) {
                this.Tables.Add(new tsa_ComprobanteDetalleImpuestosDataTable(ds.Tables["tsa_ComprobanteDetalleImpuestos"]));
            }
            if ((ds.Tables["tsa_ComprobanteValoresVarAux"] != null)) {
                this.Tables.Add(new tsa_ComprobanteValoresVarAuxDataTable(ds.Tables["tsa_ComprobanteValoresVarAux"]));
            }
            if ((ds.Tables["tsa_ComprobanteDetalleDescripcionAdicional"] != null)) {
                this.Tables.Add(new tsa_ComprobanteDetalleDescripcionAdicionalDataTable(ds.Tables["tsa_ComprobanteDetalleDescripcionAdicional"]));
            }
            if ((ds.Tables["tsa_ComprobantesRelacionOrigenDestino"] != null)) {
                this.Tables.Add(new tsa_ComprobantesRelacionOrigenDestinoDataTable(ds.Tables["tsa_ComprobantesRelacionOrigenDestino"]));
            }
            if ((ds.Tables["tsa_ComprobanteDetalleDePagos"] != null)) {
                this.Tables.Add(new tsa_ComprobanteDetalleDePagosDataTable(ds.Tables["tsa_ComprobanteDetalleDePagos"]));
            }
            if ((ds.Tables["tsa_ComprobantesOrdenReparacion"] != null)) {
                this.Tables.Add(new tsa_ComprobantesOrdenReparacionDataTable(ds.Tables["tsa_ComprobantesOrdenReparacion"]));
            }
            if ((ds.Tables["tsa_ComprobanteDetalleOrdenReparacion"] != null)) {
                this.Tables.Add(new tsa_ComprobanteDetalleOrdenReparacionDataTable(ds.Tables["tsa_ComprobanteDetalleOrdenReparacion"]));
            }
            if ((ds.Tables["tlg_MovimientosDeStock"] != null)) {
                this.Tables.Add(new tlg_MovimientosDeStockDataTable(ds.Tables["tlg_MovimientosDeStock"]));
            }
            if ((ds.Tables["tsa_ComprobantesMovimientosDeStock"] != null)) {
                this.Tables.Add(new tsa_ComprobantesMovimientosDeStockDataTable(ds.Tables["tsa_ComprobantesMovimientosDeStock"]));
            }
            if ((ds.Tables["tfi_ValoresDatosAuxiliares"] != null)) {
                this.Tables.Add(new tfi_ValoresDatosAuxiliaresDataTable(ds.Tables["tfi_ValoresDatosAuxiliares"]));
            }
            if ((ds.Tables["tsa_ComprobantesAutorizaciones"] != null)) {
                this.Tables.Add(new tsa_ComprobantesAutorizacionesDataTable(ds.Tables["tsa_ComprobantesAutorizaciones"]));
            }
            if ((ds.Tables["tsh_ProductosAuxiliares"] != null)) {
                this.Tables.Add(new tsh_ProductosAuxiliaresDataTable(ds.Tables["tsh_ProductosAuxiliares"]));
            }
            if ((ds.Tables["tsa_ComprobantesDetAuxiliares"] != null)) {
                this.Tables.Add(new tsa_ComprobantesDetAuxiliaresDataTable(ds.Tables["tsa_ComprobantesDetAuxiliares"]));
            }
            this.DataSetName = ds.DataSetName;
            this.Prefix = ds.Prefix;
            this.Namespace = ds.Namespace;
            this.Locale = ds.Locale;
            this.CaseSensitive = ds.CaseSensitive;
            this.EnforceConstraints = ds.EnforceConstraints;
            this.Merge(ds, false, System.Data.MissingSchemaAction.Add);
            this.InitVars();
        }
        
        protected override System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            System.IO.MemoryStream stream = new System.IO.MemoryStream();
            this.WriteXmlSchema(new XmlTextWriter(stream, null));
            stream.Position = 0;
            return System.Xml.Schema.XmlSchema.Read(new XmlTextReader(stream), null);
        }
        
        internal void InitVars() {
            this.tabletsa_Comprobantes = ((tsa_ComprobantesDataTable)(this.Tables["tsa_Comprobantes"]));
            if ((this.tabletsa_Comprobantes != null)) {
                this.tabletsa_Comprobantes.InitVars();
            }
            this.tabletsa_ComprobanteDetalleDeuda = ((tsa_ComprobanteDetalleDeudaDataTable)(this.Tables["tsa_ComprobanteDetalleDeuda"]));
            if ((this.tabletsa_ComprobanteDetalleDeuda != null)) {
                this.tabletsa_ComprobanteDetalleDeuda.InitVars();
            }
            this.tabletsa_AplicacionPagos = ((tsa_AplicacionPagosDataTable)(this.Tables["tsa_AplicacionPagos"]));
            if ((this.tabletsa_AplicacionPagos != null)) {
                this.tabletsa_AplicacionPagos.InitVars();
            }
            this.tabletfi_Valores = ((tfi_ValoresDataTable)(this.Tables["tfi_Valores"]));
            if ((this.tabletfi_Valores != null)) {
                this.tabletfi_Valores.InitVars();
            }
            this.tabletsa_ComprobantesDet = ((tsa_ComprobantesDetDataTable)(this.Tables["tsa_ComprobantesDet"]));
            if ((this.tabletsa_ComprobantesDet != null)) {
                this.tabletsa_ComprobantesDet.InitVars();
            }
            this.tabletsa_ComprobanteDetalleImpuestos = ((tsa_ComprobanteDetalleImpuestosDataTable)(this.Tables["tsa_ComprobanteDetalleImpuestos"]));
            if ((this.tabletsa_ComprobanteDetalleImpuestos != null)) {
                this.tabletsa_ComprobanteDetalleImpuestos.InitVars();
            }
            this.tabletsa_ComprobanteValoresVarAux = ((tsa_ComprobanteValoresVarAuxDataTable)(this.Tables["tsa_ComprobanteValoresVarAux"]));
            if ((this.tabletsa_ComprobanteValoresVarAux != null)) {
                this.tabletsa_ComprobanteValoresVarAux.InitVars();
            }
            this.tabletsa_ComprobanteDetalleDescripcionAdicional = ((tsa_ComprobanteDetalleDescripcionAdicionalDataTable)(this.Tables["tsa_ComprobanteDetalleDescripcionAdicional"]));
            if ((this.tabletsa_ComprobanteDetalleDescripcionAdicional != null)) {
                this.tabletsa_ComprobanteDetalleDescripcionAdicional.InitVars();
            }
            this.tabletsa_ComprobantesRelacionOrigenDestino = ((tsa_ComprobantesRelacionOrigenDestinoDataTable)(this.Tables["tsa_ComprobantesRelacionOrigenDestino"]));
            if ((this.tabletsa_ComprobantesRelacionOrigenDestino != null)) {
                this.tabletsa_ComprobantesRelacionOrigenDestino.InitVars();
            }
            this.tabletsa_ComprobanteDetalleDePagos = ((tsa_ComprobanteDetalleDePagosDataTable)(this.Tables["tsa_ComprobanteDetalleDePagos"]));
            if ((this.tabletsa_ComprobanteDetalleDePagos != null)) {
                this.tabletsa_ComprobanteDetalleDePagos.InitVars();
            }
            this.tabletsa_ComprobantesOrdenReparacion = ((tsa_ComprobantesOrdenReparacionDataTable)(this.Tables["tsa_ComprobantesOrdenReparacion"]));
            if ((this.tabletsa_ComprobantesOrdenReparacion != null)) {
                this.tabletsa_ComprobantesOrdenReparacion.InitVars();
            }
            this.tabletsa_ComprobanteDetalleOrdenReparacion = ((tsa_ComprobanteDetalleOrdenReparacionDataTable)(this.Tables["tsa_ComprobanteDetalleOrdenReparacion"]));
            if ((this.tabletsa_ComprobanteDetalleOrdenReparacion != null)) {
                this.tabletsa_ComprobanteDetalleOrdenReparacion.InitVars();
            }
            this.tabletlg_MovimientosDeStock = ((tlg_MovimientosDeStockDataTable)(this.Tables["tlg_MovimientosDeStock"]));
            if ((this.tabletlg_MovimientosDeStock != null)) {
                this.tabletlg_MovimientosDeStock.InitVars();
            }
            this.tabletsa_ComprobantesMovimientosDeStock = ((tsa_ComprobantesMovimientosDeStockDataTable)(this.Tables["tsa_ComprobantesMovimientosDeStock"]));
            if ((this.tabletsa_ComprobantesMovimientosDeStock != null)) {
                this.tabletsa_ComprobantesMovimientosDeStock.InitVars();
            }
            this.tabletfi_ValoresDatosAuxiliares = ((tfi_ValoresDatosAuxiliaresDataTable)(this.Tables["tfi_ValoresDatosAuxiliares"]));
            if ((this.tabletfi_ValoresDatosAuxiliares != null)) {
                this.tabletfi_ValoresDatosAuxiliares.InitVars();
            }
            this.tabletsa_ComprobantesAutorizaciones = ((tsa_ComprobantesAutorizacionesDataTable)(this.Tables["tsa_ComprobantesAutorizaciones"]));
            if ((this.tabletsa_ComprobantesAutorizaciones != null)) {
                this.tabletsa_ComprobantesAutorizaciones.InitVars();
            }
            this.tabletsh_ProductosAuxiliares = ((tsh_ProductosAuxiliaresDataTable)(this.Tables["tsh_ProductosAuxiliares"]));
            if ((this.tabletsh_ProductosAuxiliares != null)) {
                this.tabletsh_ProductosAuxiliares.InitVars();
            }
            this.tabletsa_ComprobantesDetAuxiliares = ((tsa_ComprobantesDetAuxiliaresDataTable)(this.Tables["tsa_ComprobantesDetAuxiliares"]));
            if ((this.tabletsa_ComprobantesDetAuxiliares != null)) {
                this.tabletsa_ComprobantesDetAuxiliares.InitVars();
            }
            this.relationtsa_Comprobantestsa_AplicacionPagos = this.Relations["tsa_Comprobantestsa_AplicacionPagos"];
            this.relationtsa_Comprobantestsa_ComprobanteDetalleDeuda = this.Relations["tsa_Comprobantestsa_ComprobanteDetalleDeuda"];
            this.relationtsa_Comprobantestsa_ComprobantesDet = this.Relations["tsa_Comprobantestsa_ComprobantesDet"];
            this.relationtsa_ComprobantesDettsa_ComprobanteDetalleImpuestos = this.Relations["tsa_ComprobantesDettsa_ComprobanteDetalleImpuestos"];
            this.relationtsa_Comprobantestsa_ComprobanteValoresVarAux = this.Relations["tsa_Comprobantestsa_ComprobanteValoresVarAux"];
            this.relationtsa_ComprobantesDettsa_ComprobanteDetalleDescripcionAdicional = this.Relations["tsa_ComprobantesDettsa_ComprobanteDetalleDescripcionAdicional"];
            this.relationtsa_Comprobantestsa_AplicacionPagos1 = this.Relations["tsa_Comprobantestsa_AplicacionPagos1"];
            this.relationtsa_Comprobantestsa_ComprobanteDetalleDePagos = this.Relations["tsa_Comprobantestsa_ComprobanteDetalleDePagos"];
            this.relationtfi_Valorestsa_ComprobanteDetalleDePagos = this.Relations["tfi_Valorestsa_ComprobanteDetalleDePagos"];
            this.relationtsa_Comprobantestsa_ComprobantesOrdenReparacion = this.Relations["tsa_Comprobantestsa_ComprobantesOrdenReparacion"];
            this.relationtsa_Comprobantestsa_ComprobanteDetalleOrdenReparacion = this.Relations["tsa_Comprobantestsa_ComprobanteDetalleOrdenReparacion"];
            this.relationtsa_Comprobantestsa_ComprobantesMovimientosDeStock = this.Relations["tsa_Comprobantestsa_ComprobantesMovimientosDeStock"];
            this.relationtlg_MovimientosDeStocktsa_ComprobantesMovimientosDeStock = this.Relations["tlg_MovimientosDeStocktsa_ComprobantesMovimientosDeStock"];
            this.relationtfi_Valorestfi_ValoresDatosAuxiliares = this.Relations["tfi_Valorestfi_ValoresDatosAuxiliares"];
            this.relationtsa_Comprobantestsa_ComprobantesAutorizaciones = this.Relations["tsa_Comprobantestsa_ComprobantesAutorizaciones"];
            this.relationtsa_ComprobantesDettsa_ComprobantesDetAuxiliares = this.Relations["tsa_ComprobantesDettsa_ComprobantesDetAuxiliares"];
        }
        
        private void InitClass() {
            this.DataSetName = "tsa_ComprobantesExDataset";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/tsa_ComprobantesEx.xsd";
            this.Locale = new System.Globalization.CultureInfo("en-US");
            this.CaseSensitive = false;
            this.EnforceConstraints = true;
            this.tabletsa_Comprobantes = new tsa_ComprobantesDataTable();
            this.Tables.Add(this.tabletsa_Comprobantes);
            this.tabletsa_ComprobanteDetalleDeuda = new tsa_ComprobanteDetalleDeudaDataTable();
            this.Tables.Add(this.tabletsa_ComprobanteDetalleDeuda);
            this.tabletsa_AplicacionPagos = new tsa_AplicacionPagosDataTable();
            this.Tables.Add(this.tabletsa_AplicacionPagos);
            this.tabletfi_Valores = new tfi_ValoresDataTable();
            this.Tables.Add(this.tabletfi_Valores);
            this.tabletsa_ComprobantesDet = new tsa_ComprobantesDetDataTable();
            this.Tables.Add(this.tabletsa_ComprobantesDet);
            this.tabletsa_ComprobanteDetalleImpuestos = new tsa_ComprobanteDetalleImpuestosDataTable();
            this.Tables.Add(this.tabletsa_ComprobanteDetalleImpuestos);
            this.tabletsa_ComprobanteValoresVarAux = new tsa_ComprobanteValoresVarAuxDataTable();
            this.Tables.Add(this.tabletsa_ComprobanteValoresVarAux);
            this.tabletsa_ComprobanteDetalleDescripcionAdicional = new tsa_ComprobanteDetalleDescripcionAdicionalDataTable();
            this.Tables.Add(this.tabletsa_ComprobanteDetalleDescripcionAdicional);
            this.tabletsa_ComprobantesRelacionOrigenDestino = new tsa_ComprobantesRelacionOrigenDestinoDataTable();
            this.Tables.Add(this.tabletsa_ComprobantesRelacionOrigenDestino);
            this.tabletsa_ComprobanteDetalleDePagos = new tsa_ComprobanteDetalleDePagosDataTable();
            this.Tables.Add(this.tabletsa_ComprobanteDetalleDePagos);
            this.tabletsa_ComprobantesOrdenReparacion = new tsa_ComprobantesOrdenReparacionDataTable();
            this.Tables.Add(this.tabletsa_ComprobantesOrdenReparacion);
            this.tabletsa_ComprobanteDetalleOrdenReparacion = new tsa_ComprobanteDetalleOrdenReparacionDataTable();
            this.Tables.Add(this.tabletsa_ComprobanteDetalleOrdenReparacion);
            this.tabletlg_MovimientosDeStock = new tlg_MovimientosDeStockDataTable();
            this.Tables.Add(this.tabletlg_MovimientosDeStock);
            this.tabletsa_ComprobantesMovimientosDeStock = new tsa_ComprobantesMovimientosDeStockDataTable();
            this.Tables.Add(this.tabletsa_ComprobantesMovimientosDeStock);
            this.tabletfi_ValoresDatosAuxiliares = new tfi_ValoresDatosAuxiliaresDataTable();
            this.Tables.Add(this.tabletfi_ValoresDatosAuxiliares);
            this.tabletsa_ComprobantesAutorizaciones = new tsa_ComprobantesAutorizacionesDataTable();
            this.Tables.Add(this.tabletsa_ComprobantesAutorizaciones);
            this.tabletsh_ProductosAuxiliares = new tsh_ProductosAuxiliaresDataTable();
            this.Tables.Add(this.tabletsh_ProductosAuxiliares);
            this.tabletsa_ComprobantesDetAuxiliares = new tsa_ComprobantesDetAuxiliaresDataTable();
            this.Tables.Add(this.tabletsa_ComprobantesDetAuxiliares);
            ForeignKeyConstraint fkc;
            fkc = new ForeignKeyConstraint("tsa_Comprobantestsa_ComprobanteDetalleDeuda", new DataColumn[] {
                        this.tabletsa_Comprobantes.IdComprobanteColumn}, new DataColumn[] {
                        this.tabletsa_ComprobanteDetalleDeuda.IdComprobanteColumn});
            this.tabletsa_ComprobanteDetalleDeuda.Constraints.Add(fkc);
            fkc.AcceptRejectRule = System.Data.AcceptRejectRule.None;
            fkc.DeleteRule = System.Data.Rule.Cascade;
            fkc.UpdateRule = System.Data.Rule.Cascade;
            fkc = new ForeignKeyConstraint("tsa_Comprobantestsa_AplicacionPagos", new DataColumn[] {
                        this.tabletsa_Comprobantes.IdComprobanteColumn}, new DataColumn[] {
                        this.tabletsa_AplicacionPagos.IdComprobanteDestinoColumn});
            this.tabletsa_AplicacionPagos.Constraints.Add(fkc);
            fkc.AcceptRejectRule = System.Data.AcceptRejectRule.None;
            fkc.DeleteRule = System.Data.Rule.Cascade;
            fkc.UpdateRule = System.Data.Rule.Cascade;
            fkc = new ForeignKeyConstraint("tsa_Comprobantestsa_AplicacionPagos1", new DataColumn[] {
                        this.tabletsa_Comprobantes.IdComprobanteColumn}, new DataColumn[] {
                        this.tabletsa_AplicacionPagos.IdComprobanteOrigenColumn});
            this.tabletsa_AplicacionPagos.Constraints.Add(fkc);
            fkc.AcceptRejectRule = System.Data.AcceptRejectRule.None;
            fkc.DeleteRule = System.Data.Rule.Cascade;
            fkc.UpdateRule = System.Data.Rule.Cascade;
            fkc = new ForeignKeyConstraint("tsa_Comprobantestsa_ComprobantesDet", new DataColumn[] {
                        this.tabletsa_Comprobantes.IdComprobanteColumn}, new DataColumn[] {
                        this.tabletsa_ComprobantesDet.IdComprobanteColumn});
            this.tabletsa_ComprobantesDet.Constraints.Add(fkc);
            fkc.AcceptRejectRule = System.Data.AcceptRejectRule.None;
            fkc.DeleteRule = System.Data.Rule.Cascade;
            fkc.UpdateRule = System.Data.Rule.Cascade;
            fkc = new ForeignKeyConstraint("tsa_ComprobantesDettsa_ComprobanteDetalleImpuestos", new DataColumn[] {
                        this.tabletsa_ComprobantesDet.IdComprobanteColumn,
                        this.tabletsa_ComprobantesDet.OrdinalColumn}, new DataColumn[] {
                        this.tabletsa_ComprobanteDetalleImpuestos.IdComprobanteColumn,
                        this.tabletsa_ComprobanteDetalleImpuestos.OrdinalColumn});
            this.tabletsa_ComprobanteDetalleImpuestos.Constraints.Add(fkc);
            fkc.AcceptRejectRule = System.Data.AcceptRejectRule.None;
            fkc.DeleteRule = System.Data.Rule.Cascade;
            fkc.UpdateRule = System.Data.Rule.Cascade;
            fkc = new ForeignKeyConstraint("tsa_Comprobantestsa_ComprobanteValoresVarAux", new DataColumn[] {
                        this.tabletsa_Comprobantes.IdComprobanteColumn}, new DataColumn[] {
                        this.tabletsa_ComprobanteValoresVarAux.IdComprobanteColumn});
            this.tabletsa_ComprobanteValoresVarAux.Constraints.Add(fkc);
            fkc.AcceptRejectRule = System.Data.AcceptRejectRule.None;
            fkc.DeleteRule = System.Data.Rule.Cascade;
            fkc.UpdateRule = System.Data.Rule.Cascade;
            fkc = new ForeignKeyConstraint("tsa_ComprobantesDettsa_ComprobanteDetalleDescripcionAdicional", new DataColumn[] {
                        this.tabletsa_ComprobantesDet.IdComprobanteColumn,
                        this.tabletsa_ComprobantesDet.OrdinalColumn}, new DataColumn[] {
                        this.tabletsa_ComprobanteDetalleDescripcionAdicional.IdComprobanteColumn,
                        this.tabletsa_ComprobanteDetalleDescripcionAdicional.OrdinalColumn});
            this.tabletsa_ComprobanteDetalleDescripcionAdicional.Constraints.Add(fkc);
            fkc.AcceptRejectRule = System.Data.AcceptRejectRule.None;
            fkc.DeleteRule = System.Data.Rule.Cascade;
            fkc.UpdateRule = System.Data.Rule.Cascade;
            fkc = new ForeignKeyConstraint("tsa_Comprobantestsa_ComprobanteDetalleDePagos", new DataColumn[] {
                        this.tabletsa_Comprobantes.IdComprobanteColumn}, new DataColumn[] {
                        this.tabletsa_ComprobanteDetalleDePagos.IdComprobanteColumn});
            this.tabletsa_ComprobanteDetalleDePagos.Constraints.Add(fkc);
            fkc.AcceptRejectRule = System.Data.AcceptRejectRule.None;
            fkc.DeleteRule = System.Data.Rule.Cascade;
            fkc.UpdateRule = System.Data.Rule.Cascade;
            fkc = new ForeignKeyConstraint("tfi_Valorestsa_ComprobanteDetalleDePagos", new DataColumn[] {
                        this.tabletfi_Valores.IdValorColumn}, new DataColumn[] {
                        this.tabletsa_ComprobanteDetalleDePagos.IdValorColumn});
            this.tabletsa_ComprobanteDetalleDePagos.Constraints.Add(fkc);
            fkc.AcceptRejectRule = System.Data.AcceptRejectRule.None;
            fkc.DeleteRule = System.Data.Rule.Cascade;
            fkc.UpdateRule = System.Data.Rule.Cascade;
            fkc = new ForeignKeyConstraint("tsa_Comprobantestsa_ComprobantesOrdenReparacion", new DataColumn[] {
                        this.tabletsa_Comprobantes.IdComprobanteColumn}, new DataColumn[] {
                        this.tabletsa_ComprobantesOrdenReparacion.IdComprobanteColumn});
            this.tabletsa_ComprobantesOrdenReparacion.Constraints.Add(fkc);
            fkc.AcceptRejectRule = System.Data.AcceptRejectRule.None;
            fkc.DeleteRule = System.Data.Rule.Cascade;
            fkc.UpdateRule = System.Data.Rule.Cascade;
            fkc = new ForeignKeyConstraint("tsa_Comprobantestsa_ComprobanteDetalleOrdenReparacion", new DataColumn[] {
                        this.tabletsa_Comprobantes.IdComprobanteColumn}, new DataColumn[] {
                        this.tabletsa_ComprobanteDetalleOrdenReparacion.IdComprobanteColumn});
            this.tabletsa_ComprobanteDetalleOrdenReparacion.Constraints.Add(fkc);
            fkc.AcceptRejectRule = System.Data.AcceptRejectRule.None;
            fkc.DeleteRule = System.Data.Rule.Cascade;
            fkc.UpdateRule = System.Data.Rule.Cascade;
            fkc = new ForeignKeyConstraint("tsa_Comprobantestsa_ComprobantesMovimientosDeStock", new DataColumn[] {
                        this.tabletsa_Comprobantes.IdComprobanteColumn}, new DataColumn[] {
                        this.tabletsa_ComprobantesMovimientosDeStock.IdComprobanteColumn});
            this.tabletsa_ComprobantesMovimientosDeStock.Constraints.Add(fkc);
            fkc.AcceptRejectRule = System.Data.AcceptRejectRule.None;
            fkc.DeleteRule = System.Data.Rule.Cascade;
            fkc.UpdateRule = System.Data.Rule.Cascade;
            fkc = new ForeignKeyConstraint("tlg_MovimientosDeStocktsa_ComprobantesMovimientosDeStock", new DataColumn[] {
                        this.tabletlg_MovimientosDeStock.IdMovimientoDeStockColumn}, new DataColumn[] {
                        this.tabletsa_ComprobantesMovimientosDeStock.IdMovimientoDeStockColumn});
            this.tabletsa_ComprobantesMovimientosDeStock.Constraints.Add(fkc);
            fkc.AcceptRejectRule = System.Data.AcceptRejectRule.None;
            fkc.DeleteRule = System.Data.Rule.Cascade;
            fkc.UpdateRule = System.Data.Rule.Cascade;
            fkc = new ForeignKeyConstraint("tfi_Valorestfi_ValoresDatosAuxiliares", new DataColumn[] {
                        this.tabletfi_Valores.IdValorColumn}, new DataColumn[] {
                        this.tabletfi_ValoresDatosAuxiliares.IdValorColumn});
            this.tabletfi_ValoresDatosAuxiliares.Constraints.Add(fkc);
            fkc.AcceptRejectRule = System.Data.AcceptRejectRule.None;
            fkc.DeleteRule = System.Data.Rule.Cascade;
            fkc.UpdateRule = System.Data.Rule.Cascade;
            fkc = new ForeignKeyConstraint("tsa_Comprobantestsa_ComprobantesAutorizaciones", new DataColumn[] {
                        this.tabletsa_Comprobantes.IdComprobanteColumn}, new DataColumn[] {
                        this.tabletsa_ComprobantesAutorizaciones.IdComprobanteColumn});
            this.tabletsa_ComprobantesAutorizaciones.Constraints.Add(fkc);
            fkc.AcceptRejectRule = System.Data.AcceptRejectRule.None;
            fkc.DeleteRule = System.Data.Rule.Cascade;
            fkc.UpdateRule = System.Data.Rule.Cascade;
            fkc = new ForeignKeyConstraint("tsa_ComprobantesDettsa_ComprobantesDetAuxiliares", new DataColumn[] {
                        this.tabletsa_ComprobantesDet.IdComprobanteColumn,
                        this.tabletsa_ComprobantesDet.OrdinalColumn}, new DataColumn[] {
                        this.tabletsa_ComprobantesDetAuxiliares.IdComprobanteColumn,
                        this.tabletsa_ComprobantesDetAuxiliares.OrdinalColumn});
            this.tabletsa_ComprobantesDetAuxiliares.Constraints.Add(fkc);
            fkc.AcceptRejectRule = System.Data.AcceptRejectRule.None;
            fkc.DeleteRule = System.Data.Rule.Cascade;
            fkc.UpdateRule = System.Data.Rule.Cascade;
            this.relationtsa_Comprobantestsa_AplicacionPagos = new DataRelation("tsa_Comprobantestsa_AplicacionPagos", new DataColumn[] {
                        this.tabletsa_Comprobantes.IdComprobanteColumn}, new DataColumn[] {
                        this.tabletsa_AplicacionPagos.IdComprobanteDestinoColumn}, false);
            this.Relations.Add(this.relationtsa_Comprobantestsa_AplicacionPagos);
            this.relationtsa_Comprobantestsa_ComprobanteDetalleDeuda = new DataRelation("tsa_Comprobantestsa_ComprobanteDetalleDeuda", new DataColumn[] {
                        this.tabletsa_Comprobantes.IdComprobanteColumn}, new DataColumn[] {
                        this.tabletsa_ComprobanteDetalleDeuda.IdComprobanteColumn}, false);
            this.Relations.Add(this.relationtsa_Comprobantestsa_ComprobanteDetalleDeuda);
            this.relationtsa_Comprobantestsa_ComprobantesDet = new DataRelation("tsa_Comprobantestsa_ComprobantesDet", new DataColumn[] {
                        this.tabletsa_Comprobantes.IdComprobanteColumn}, new DataColumn[] {
                        this.tabletsa_ComprobantesDet.IdComprobanteColumn}, false);
            this.Relations.Add(this.relationtsa_Comprobantestsa_ComprobantesDet);
            this.relationtsa_ComprobantesDettsa_ComprobanteDetalleImpuestos = new DataRelation("tsa_ComprobantesDettsa_ComprobanteDetalleImpuestos", new DataColumn[] {
                        this.tabletsa_ComprobantesDet.IdComprobanteColumn,
                        this.tabletsa_ComprobantesDet.OrdinalColumn}, new DataColumn[] {
                        this.tabletsa_ComprobanteDetalleImpuestos.IdComprobanteColumn,
                        this.tabletsa_ComprobanteDetalleImpuestos.OrdinalColumn}, false);
            this.Relations.Add(this.relationtsa_ComprobantesDettsa_ComprobanteDetalleImpuestos);
            this.relationtsa_Comprobantestsa_ComprobanteValoresVarAux = new DataRelation("tsa_Comprobantestsa_ComprobanteValoresVarAux", new DataColumn[] {
                        this.tabletsa_Comprobantes.IdComprobanteColumn}, new DataColumn[] {
                        this.tabletsa_ComprobanteValoresVarAux.IdComprobanteColumn}, false);
            this.Relations.Add(this.relationtsa_Comprobantestsa_ComprobanteValoresVarAux);
            this.relationtsa_ComprobantesDettsa_ComprobanteDetalleDescripcionAdicional = new DataRelation("tsa_ComprobantesDettsa_ComprobanteDetalleDescripcionAdicional", new DataColumn[] {
                        this.tabletsa_ComprobantesDet.IdComprobanteColumn,
                        this.tabletsa_ComprobantesDet.OrdinalColumn}, new DataColumn[] {
                        this.tabletsa_ComprobanteDetalleDescripcionAdicional.IdComprobanteColumn,
                        this.tabletsa_ComprobanteDetalleDescripcionAdicional.OrdinalColumn}, false);
            this.Relations.Add(this.relationtsa_ComprobantesDettsa_ComprobanteDetalleDescripcionAdicional);
            this.relationtsa_Comprobantestsa_AplicacionPagos1 = new DataRelation("tsa_Comprobantestsa_AplicacionPagos1", new DataColumn[] {
                        this.tabletsa_Comprobantes.IdComprobanteColumn}, new DataColumn[] {
                        this.tabletsa_AplicacionPagos.IdComprobanteOrigenColumn}, false);
            this.Relations.Add(this.relationtsa_Comprobantestsa_AplicacionPagos1);
            this.relationtsa_Comprobantestsa_ComprobanteDetalleDePagos = new DataRelation("tsa_Comprobantestsa_ComprobanteDetalleDePagos", new DataColumn[] {
                        this.tabletsa_Comprobantes.IdComprobanteColumn}, new DataColumn[] {
                        this.tabletsa_ComprobanteDetalleDePagos.IdComprobanteColumn}, false);
            this.Relations.Add(this.relationtsa_Comprobantestsa_ComprobanteDetalleDePagos);
            this.relationtfi_Valorestsa_ComprobanteDetalleDePagos = new DataRelation("tfi_Valorestsa_ComprobanteDetalleDePagos", new DataColumn[] {
                        this.tabletfi_Valores.IdValorColumn}, new DataColumn[] {
                        this.tabletsa_ComprobanteDetalleDePagos.IdValorColumn}, false);
            this.Relations.Add(this.relationtfi_Valorestsa_ComprobanteDetalleDePagos);
            this.relationtsa_Comprobantestsa_ComprobantesOrdenReparacion = new DataRelation("tsa_Comprobantestsa_ComprobantesOrdenReparacion", new DataColumn[] {
                        this.tabletsa_Comprobantes.IdComprobanteColumn}, new DataColumn[] {
                        this.tabletsa_ComprobantesOrdenReparacion.IdComprobanteColumn}, false);
            this.Relations.Add(this.relationtsa_Comprobantestsa_ComprobantesOrdenReparacion);
            this.relationtsa_Comprobantestsa_ComprobanteDetalleOrdenReparacion = new DataRelation("tsa_Comprobantestsa_ComprobanteDetalleOrdenReparacion", new DataColumn[] {
                        this.tabletsa_Comprobantes.IdComprobanteColumn}, new DataColumn[] {
                        this.tabletsa_ComprobanteDetalleOrdenReparacion.IdComprobanteColumn}, false);
            this.Relations.Add(this.relationtsa_Comprobantestsa_ComprobanteDetalleOrdenReparacion);
            this.relationtsa_Comprobantestsa_ComprobantesMovimientosDeStock = new DataRelation("tsa_Comprobantestsa_ComprobantesMovimientosDeStock", new DataColumn[] {
                        this.tabletsa_Comprobantes.IdComprobanteColumn}, new DataColumn[] {
                        this.tabletsa_ComprobantesMovimientosDeStock.IdComprobanteColumn}, false);
            this.Relations.Add(this.relationtsa_Comprobantestsa_ComprobantesMovimientosDeStock);
            this.relationtlg_MovimientosDeStocktsa_ComprobantesMovimientosDeStock = new DataRelation("tlg_MovimientosDeStocktsa_ComprobantesMovimientosDeStock", new DataColumn[] {
                        this.tabletlg_MovimientosDeStock.IdMovimientoDeStockColumn}, new DataColumn[] {
                        this.tabletsa_ComprobantesMovimientosDeStock.IdMovimientoDeStockColumn}, false);
            this.Relations.Add(this.relationtlg_MovimientosDeStocktsa_ComprobantesMovimientosDeStock);
            this.relationtfi_Valorestfi_ValoresDatosAuxiliares = new DataRelation("tfi_Valorestfi_ValoresDatosAuxiliares", new DataColumn[] {
                        this.tabletfi_Valores.IdValorColumn}, new DataColumn[] {
                        this.tabletfi_ValoresDatosAuxiliares.IdValorColumn}, false);
            this.Relations.Add(this.relationtfi_Valorestfi_ValoresDatosAuxiliares);
            this.relationtsa_Comprobantestsa_ComprobantesAutorizaciones = new DataRelation("tsa_Comprobantestsa_ComprobantesAutorizaciones", new DataColumn[] {
                        this.tabletsa_Comprobantes.IdComprobanteColumn}, new DataColumn[] {
                        this.tabletsa_ComprobantesAutorizaciones.IdComprobanteColumn}, false);
            this.Relations.Add(this.relationtsa_Comprobantestsa_ComprobantesAutorizaciones);
            this.relationtsa_ComprobantesDettsa_ComprobantesDetAuxiliares = new DataRelation("tsa_ComprobantesDettsa_ComprobantesDetAuxiliares", new DataColumn[] {
                        this.tabletsa_ComprobantesDet.IdComprobanteColumn,
                        this.tabletsa_ComprobantesDet.OrdinalColumn}, new DataColumn[] {
                        this.tabletsa_ComprobantesDetAuxiliares.IdComprobanteColumn,
                        this.tabletsa_ComprobantesDetAuxiliares.OrdinalColumn}, false);
            this.Relations.Add(this.relationtsa_ComprobantesDettsa_ComprobantesDetAuxiliares);
        }
        
        private bool ShouldSerializetsa_Comprobantes() {
            return false;
        }
        
        private bool ShouldSerializetsa_ComprobanteDetalleDeuda() {
            return false;
        }
        
        private bool ShouldSerializetsa_AplicacionPagos() {
            return false;
        }
        
        private bool ShouldSerializetfi_Valores() {
            return false;
        }
        
        private bool ShouldSerializetsa_ComprobantesDet() {
            return false;
        }
        
        private bool ShouldSerializetsa_ComprobanteDetalleImpuestos() {
            return false;
        }
        
        private bool ShouldSerializetsa_ComprobanteValoresVarAux() {
            return false;
        }
        
        private bool ShouldSerializetsa_ComprobanteDetalleDescripcionAdicional() {
            return false;
        }
        
        private bool ShouldSerializetsa_ComprobantesRelacionOrigenDestino() {
            return false;
        }
        
        private bool ShouldSerializetsa_ComprobanteDetalleDePagos() {
            return false;
        }
        
        private bool ShouldSerializetsa_ComprobantesOrdenReparacion() {
            return false;
        }
        
        private bool ShouldSerializetsa_ComprobanteDetalleOrdenReparacion() {
            return false;
        }
        
        private bool ShouldSerializetlg_MovimientosDeStock() {
            return false;
        }
        
        private bool ShouldSerializetsa_ComprobantesMovimientosDeStock() {
            return false;
        }
        
        private bool ShouldSerializetfi_ValoresDatosAuxiliares() {
            return false;
        }
        
        private bool ShouldSerializetsa_ComprobantesAutorizaciones() {
            return false;
        }
        
        private bool ShouldSerializetsh_ProductosAuxiliares() {
            return false;
        }
        
        private bool ShouldSerializetsa_ComprobantesDetAuxiliares() {
            return false;
        }
        
        private void SchemaChanged(object sender, System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        public delegate void tsa_ComprobantesRowChangeEventHandler(object sender, tsa_ComprobantesRowChangeEvent e);
        
        public delegate void tsa_ComprobanteDetalleDeudaRowChangeEventHandler(object sender, tsa_ComprobanteDetalleDeudaRowChangeEvent e);
        
        public delegate void tsa_AplicacionPagosRowChangeEventHandler(object sender, tsa_AplicacionPagosRowChangeEvent e);
        
        public delegate void tfi_ValoresRowChangeEventHandler(object sender, tfi_ValoresRowChangeEvent e);
        
        public delegate void tsa_ComprobantesDetRowChangeEventHandler(object sender, tsa_ComprobantesDetRowChangeEvent e);
        
        public delegate void tsa_ComprobanteDetalleImpuestosRowChangeEventHandler(object sender, tsa_ComprobanteDetalleImpuestosRowChangeEvent e);
        
        public delegate void tsa_ComprobanteValoresVarAuxRowChangeEventHandler(object sender, tsa_ComprobanteValoresVarAuxRowChangeEvent e);
        
        public delegate void tsa_ComprobanteDetalleDescripcionAdicionalRowChangeEventHandler(object sender, tsa_ComprobanteDetalleDescripcionAdicionalRowChangeEvent e);
        
        public delegate void tsa_ComprobantesRelacionOrigenDestinoRowChangeEventHandler(object sender, tsa_ComprobantesRelacionOrigenDestinoRowChangeEvent e);
        
        public delegate void tsa_ComprobanteDetalleDePagosRowChangeEventHandler(object sender, tsa_ComprobanteDetalleDePagosRowChangeEvent e);
        
        public delegate void tsa_ComprobantesOrdenReparacionRowChangeEventHandler(object sender, tsa_ComprobantesOrdenReparacionRowChangeEvent e);
        
        public delegate void tsa_ComprobanteDetalleOrdenReparacionRowChangeEventHandler(object sender, tsa_ComprobanteDetalleOrdenReparacionRowChangeEvent e);
        
        public delegate void tlg_MovimientosDeStockRowChangeEventHandler(object sender, tlg_MovimientosDeStockRowChangeEvent e);
        
        public delegate void tsa_ComprobantesMovimientosDeStockRowChangeEventHandler(object sender, tsa_ComprobantesMovimientosDeStockRowChangeEvent e);
        
        public delegate void tfi_ValoresDatosAuxiliaresRowChangeEventHandler(object sender, tfi_ValoresDatosAuxiliaresRowChangeEvent e);
        
        public delegate void tsa_ComprobantesAutorizacionesRowChangeEventHandler(object sender, tsa_ComprobantesAutorizacionesRowChangeEvent e);
        
        public delegate void tsh_ProductosAuxiliaresRowChangeEventHandler(object sender, tsh_ProductosAuxiliaresRowChangeEvent e);
        
        public delegate void tsa_ComprobantesDetAuxiliaresRowChangeEventHandler(object sender, tsa_ComprobantesDetAuxiliaresRowChangeEvent e);
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class tsa_ComprobantesDataTable : DataTable, System.Collections.IEnumerable {
            
            private DataColumn columnIdComprobante;
            
            private DataColumn columnIdEmpresa;
            
            private DataColumn columnIdSucursal;
            
            private DataColumn columnIdInstanciaCaja;
            
            private DataColumn columnIdTipoDeComprobante;
            
            private DataColumn columnNumero;
            
            private DataColumn columnFecha;
            
            private DataColumn columnIdCuenta;
            
            private DataColumn columnIdResponsable;
            
            private DataColumn columnTotal;
            
            private DataColumn columnIdMonedaCierre;
            
            private DataColumn columnIdCotizacionCierre;
            
            private DataColumn columnFechaCreacion;
            
            private DataColumn columnIdConexionCreacion;
            
            private DataColumn columnUltimaModificacion;
            
            private DataColumn columnIdConexionUltimaModificacion;
            
            private DataColumn columnIdReservado;
            
            private DataColumn columnRowId;
            
            private DataColumn columnIdGenerado;
            
            private DataColumn columnRowIdGenerado;
            
            private DataColumn columnCliente;
            
            private DataColumn columnDomicilio;
            
            private DataColumn columnTipoDocumento;
            
            private DataColumn columnDocumento;
            
            private DataColumn columnObservaciones;
            
            private DataColumn columnAux1;
            
            private DataColumn columnAux2;
            
            private DataColumn columnAux3;
            
            private DataColumn columnIdCondicionDeVenta;
            
            private DataColumn columnCampoAuxiliar1;
            
            private DataColumn columnCampoAuxiliar2;
            
            private DataColumn columnCampoAuxiliar3;
            
            private DataColumn columnCampoAuxiliar4;
            
            private DataColumn columnCampoAuxiliar5;
            
            private DataColumn columnIdCotizacionCierreDolarOficial;
            
            internal tsa_ComprobantesDataTable() : 
                    base("tsa_Comprobantes") {
                this.InitClass();
            }
            
            internal tsa_ComprobantesDataTable(DataTable table) : 
                    base(table.TableName) {
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
                this.DisplayExpression = table.DisplayExpression;
            }
            
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            internal DataColumn IdComprobanteColumn {
                get {
                    return this.columnIdComprobante;
                }
            }
            
            internal DataColumn IdEmpresaColumn {
                get {
                    return this.columnIdEmpresa;
                }
            }
            
            internal DataColumn IdSucursalColumn {
                get {
                    return this.columnIdSucursal;
                }
            }
            
            internal DataColumn IdInstanciaCajaColumn {
                get {
                    return this.columnIdInstanciaCaja;
                }
            }
            
            internal DataColumn IdTipoDeComprobanteColumn {
                get {
                    return this.columnIdTipoDeComprobante;
                }
            }
            
            internal DataColumn NumeroColumn {
                get {
                    return this.columnNumero;
                }
            }
            
            internal DataColumn FechaColumn {
                get {
                    return this.columnFecha;
                }
            }
            
            internal DataColumn IdCuentaColumn {
                get {
                    return this.columnIdCuenta;
                }
            }
            
            internal DataColumn IdResponsableColumn {
                get {
                    return this.columnIdResponsable;
                }
            }
            
            internal DataColumn TotalColumn {
                get {
                    return this.columnTotal;
                }
            }
            
            internal DataColumn IdMonedaCierreColumn {
                get {
                    return this.columnIdMonedaCierre;
                }
            }
            
            internal DataColumn IdCotizacionCierreColumn {
                get {
                    return this.columnIdCotizacionCierre;
                }
            }
            
            internal DataColumn FechaCreacionColumn {
                get {
                    return this.columnFechaCreacion;
                }
            }
            
            internal DataColumn IdConexionCreacionColumn {
                get {
                    return this.columnIdConexionCreacion;
                }
            }
            
            internal DataColumn UltimaModificacionColumn {
                get {
                    return this.columnUltimaModificacion;
                }
            }
            
            internal DataColumn IdConexionUltimaModificacionColumn {
                get {
                    return this.columnIdConexionUltimaModificacion;
                }
            }
            
            internal DataColumn IdReservadoColumn {
                get {
                    return this.columnIdReservado;
                }
            }
            
            internal DataColumn RowIdColumn {
                get {
                    return this.columnRowId;
                }
            }
            
            internal DataColumn IdGeneradoColumn {
                get {
                    return this.columnIdGenerado;
                }
            }
            
            internal DataColumn RowIdGeneradoColumn {
                get {
                    return this.columnRowIdGenerado;
                }
            }
            
            internal DataColumn ClienteColumn {
                get {
                    return this.columnCliente;
                }
            }
            
            internal DataColumn DomicilioColumn {
                get {
                    return this.columnDomicilio;
                }
            }
            
            internal DataColumn TipoDocumentoColumn {
                get {
                    return this.columnTipoDocumento;
                }
            }
            
            internal DataColumn DocumentoColumn {
                get {
                    return this.columnDocumento;
                }
            }
            
            internal DataColumn ObservacionesColumn {
                get {
                    return this.columnObservaciones;
                }
            }
            
            internal DataColumn Aux1Column {
                get {
                    return this.columnAux1;
                }
            }
            
            internal DataColumn Aux2Column {
                get {
                    return this.columnAux2;
                }
            }
            
            internal DataColumn Aux3Column {
                get {
                    return this.columnAux3;
                }
            }
            
            internal DataColumn IdCondicionDeVentaColumn {
                get {
                    return this.columnIdCondicionDeVenta;
                }
            }
            
            internal DataColumn CampoAuxiliar1Column {
                get {
                    return this.columnCampoAuxiliar1;
                }
            }
            
            internal DataColumn CampoAuxiliar2Column {
                get {
                    return this.columnCampoAuxiliar2;
                }
            }
            
            internal DataColumn CampoAuxiliar3Column {
                get {
                    return this.columnCampoAuxiliar3;
                }
            }
            
            internal DataColumn CampoAuxiliar4Column {
                get {
                    return this.columnCampoAuxiliar4;
                }
            }
            
            internal DataColumn CampoAuxiliar5Column {
                get {
                    return this.columnCampoAuxiliar5;
                }
            }
            
            internal DataColumn IdCotizacionCierreDolarOficialColumn {
                get {
                    return this.columnIdCotizacionCierreDolarOficial;
                }
            }
            
            public tsa_ComprobantesRow this[int index] {
                get {
                    return ((tsa_ComprobantesRow)(this.Rows[index]));
                }
            }
            
            public event tsa_ComprobantesRowChangeEventHandler tsa_ComprobantesRowChanged;
            
            public event tsa_ComprobantesRowChangeEventHandler tsa_ComprobantesRowChanging;
            
            public event tsa_ComprobantesRowChangeEventHandler tsa_ComprobantesRowDeleted;
            
            public event tsa_ComprobantesRowChangeEventHandler tsa_ComprobantesRowDeleting;
            
            public void Addtsa_ComprobantesRow(tsa_ComprobantesRow row) {
                this.Rows.Add(row);
            }
            
            public tsa_ComprobantesRow Addtsa_ComprobantesRow(
                        string IdComprobante, 
                        long IdEmpresa, 
                        long IdSucursal, 
                        string IdInstanciaCaja, 
                        string IdTipoDeComprobante, 
                        string Numero, 
                        System.DateTime Fecha, 
                        string IdCuenta, 
                        string IdResponsable, 
                        System.Decimal Total, 
                        string IdMonedaCierre, 
                        string IdCotizacionCierre, 
                        System.DateTime FechaCreacion, 
                        long IdConexionCreacion, 
                        System.Byte[] UltimaModificacion, 
                        long IdConexionUltimaModificacion, 
                        long IdReservado, 
                        System.Guid RowId, 
                        string IdGenerado, 
                        string RowIdGenerado, 
                        string Cliente, 
                        string Domicilio, 
                        string TipoDocumento, 
                        string Documento, 
                        string Observaciones, 
                        string Aux1, 
                        string Aux2, 
                        string Aux3, 
                        string IdCondicionDeVenta, 
                        string CampoAuxiliar1, 
                        string CampoAuxiliar2, 
                        string CampoAuxiliar3, 
                        string CampoAuxiliar4, 
                        string CampoAuxiliar5, 
                        string IdCotizacionCierreDolarOficial) {
                tsa_ComprobantesRow rowtsa_ComprobantesRow = ((tsa_ComprobantesRow)(this.NewRow()));
                rowtsa_ComprobantesRow.ItemArray = new object[] {
                        IdComprobante,
                        IdEmpresa,
                        IdSucursal,
                        IdInstanciaCaja,
                        IdTipoDeComprobante,
                        Numero,
                        Fecha,
                        IdCuenta,
                        IdResponsable,
                        Total,
                        IdMonedaCierre,
                        IdCotizacionCierre,
                        FechaCreacion,
                        IdConexionCreacion,
                        UltimaModificacion,
                        IdConexionUltimaModificacion,
                        IdReservado,
                        RowId,
                        IdGenerado,
                        RowIdGenerado,
                        Cliente,
                        Domicilio,
                        TipoDocumento,
                        Documento,
                        Observaciones,
                        Aux1,
                        Aux2,
                        Aux3,
                        IdCondicionDeVenta,
                        CampoAuxiliar1,
                        CampoAuxiliar2,
                        CampoAuxiliar3,
                        CampoAuxiliar4,
                        CampoAuxiliar5,
                        IdCotizacionCierreDolarOficial};
                this.Rows.Add(rowtsa_ComprobantesRow);
                return rowtsa_ComprobantesRow;
            }
            
            public tsa_ComprobantesRow FindByIdComprobante(string IdComprobante) {
                return ((tsa_ComprobantesRow)(this.Rows.Find(new object[] {
                            IdComprobante})));
            }
            
            public System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            public override DataTable Clone() {
                tsa_ComprobantesDataTable cln = ((tsa_ComprobantesDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            protected override DataTable CreateInstance() {
                return new tsa_ComprobantesDataTable();
            }
            
            internal void InitVars() {
                this.columnIdComprobante = this.Columns["IdComprobante"];
                this.columnIdEmpresa = this.Columns["IdEmpresa"];
                this.columnIdSucursal = this.Columns["IdSucursal"];
                this.columnIdInstanciaCaja = this.Columns["IdInstanciaCaja"];
                this.columnIdTipoDeComprobante = this.Columns["IdTipoDeComprobante"];
                this.columnNumero = this.Columns["Numero"];
                this.columnFecha = this.Columns["Fecha"];
                this.columnIdCuenta = this.Columns["IdCuenta"];
                this.columnIdResponsable = this.Columns["IdResponsable"];
                this.columnTotal = this.Columns["Total"];
                this.columnIdMonedaCierre = this.Columns["IdMonedaCierre"];
                this.columnIdCotizacionCierre = this.Columns["IdCotizacionCierre"];
                this.columnFechaCreacion = this.Columns["FechaCreacion"];
                this.columnIdConexionCreacion = this.Columns["IdConexionCreacion"];
                this.columnUltimaModificacion = this.Columns["UltimaModificacion"];
                this.columnIdConexionUltimaModificacion = this.Columns["IdConexionUltimaModificacion"];
                this.columnIdReservado = this.Columns["IdReservado"];
                this.columnRowId = this.Columns["RowId"];
                this.columnIdGenerado = this.Columns["IdGenerado"];
                this.columnRowIdGenerado = this.Columns["RowIdGenerado"];
                this.columnCliente = this.Columns["Cliente"];
                this.columnDomicilio = this.Columns["Domicilio"];
                this.columnTipoDocumento = this.Columns["TipoDocumento"];
                this.columnDocumento = this.Columns["Documento"];
                this.columnObservaciones = this.Columns["Observaciones"];
                this.columnAux1 = this.Columns["Aux1"];
                this.columnAux2 = this.Columns["Aux2"];
                this.columnAux3 = this.Columns["Aux3"];
                this.columnIdCondicionDeVenta = this.Columns["IdCondicionDeVenta"];
                this.columnCampoAuxiliar1 = this.Columns["CampoAuxiliar1"];
                this.columnCampoAuxiliar2 = this.Columns["CampoAuxiliar2"];
                this.columnCampoAuxiliar3 = this.Columns["CampoAuxiliar3"];
                this.columnCampoAuxiliar4 = this.Columns["CampoAuxiliar4"];
                this.columnCampoAuxiliar5 = this.Columns["CampoAuxiliar5"];
                this.columnIdCotizacionCierreDolarOficial = this.Columns["IdCotizacionCierreDolarOficial"];
            }
            
            private void InitClass() {
                this.columnIdComprobante = new DataColumn("IdComprobante", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdComprobante);
                this.columnIdEmpresa = new DataColumn("IdEmpresa", typeof(long), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdEmpresa);
                this.columnIdSucursal = new DataColumn("IdSucursal", typeof(long), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdSucursal);
                this.columnIdInstanciaCaja = new DataColumn("IdInstanciaCaja", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdInstanciaCaja);
                this.columnIdTipoDeComprobante = new DataColumn("IdTipoDeComprobante", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdTipoDeComprobante);
                this.columnNumero = new DataColumn("Numero", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnNumero);
                this.columnFecha = new DataColumn("Fecha", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnFecha);
                this.columnIdCuenta = new DataColumn("IdCuenta", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdCuenta);
                this.columnIdResponsable = new DataColumn("IdResponsable", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdResponsable);
                this.columnTotal = new DataColumn("Total", typeof(System.Decimal), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnTotal);
                this.columnIdMonedaCierre = new DataColumn("IdMonedaCierre", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdMonedaCierre);
                this.columnIdCotizacionCierre = new DataColumn("IdCotizacionCierre", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdCotizacionCierre);
                this.columnFechaCreacion = new DataColumn("FechaCreacion", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnFechaCreacion);
                this.columnIdConexionCreacion = new DataColumn("IdConexionCreacion", typeof(long), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdConexionCreacion);
                this.columnUltimaModificacion = new DataColumn("UltimaModificacion", typeof(System.Byte[]), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnUltimaModificacion);
                this.columnIdConexionUltimaModificacion = new DataColumn("IdConexionUltimaModificacion", typeof(long), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdConexionUltimaModificacion);
                this.columnIdReservado = new DataColumn("IdReservado", typeof(long), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdReservado);
                this.columnRowId = new DataColumn("RowId", typeof(System.Guid), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnRowId);
                this.columnIdGenerado = new DataColumn("IdGenerado", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdGenerado);
                this.columnRowIdGenerado = new DataColumn("RowIdGenerado", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnRowIdGenerado);
                this.columnCliente = new DataColumn("Cliente", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnCliente);
                this.columnDomicilio = new DataColumn("Domicilio", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnDomicilio);
                this.columnTipoDocumento = new DataColumn("TipoDocumento", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnTipoDocumento);
                this.columnDocumento = new DataColumn("Documento", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnDocumento);
                this.columnObservaciones = new DataColumn("Observaciones", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnObservaciones);
                this.columnAux1 = new DataColumn("Aux1", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnAux1);
                this.columnAux2 = new DataColumn("Aux2", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnAux2);
                this.columnAux3 = new DataColumn("Aux3", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnAux3);
                this.columnIdCondicionDeVenta = new DataColumn("IdCondicionDeVenta", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdCondicionDeVenta);
                this.columnCampoAuxiliar1 = new DataColumn("CampoAuxiliar1", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnCampoAuxiliar1);
                this.columnCampoAuxiliar2 = new DataColumn("CampoAuxiliar2", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnCampoAuxiliar2);
                this.columnCampoAuxiliar3 = new DataColumn("CampoAuxiliar3", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnCampoAuxiliar3);
                this.columnCampoAuxiliar4 = new DataColumn("CampoAuxiliar4", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnCampoAuxiliar4);
                this.columnCampoAuxiliar5 = new DataColumn("CampoAuxiliar5", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnCampoAuxiliar5);
                this.columnIdCotizacionCierreDolarOficial = new DataColumn("IdCotizacionCierreDolarOficial", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdCotizacionCierreDolarOficial);
                this.Constraints.Add(new UniqueConstraint("tsa_ComprobantesExKey1", new DataColumn[] {
                                this.columnIdComprobante}, true));
                this.columnIdComprobante.AllowDBNull = false;
                this.columnIdComprobante.Unique = true;
                this.columnUltimaModificacion.ReadOnly = true;
            }
            
            public tsa_ComprobantesRow Newtsa_ComprobantesRow() {
                return ((tsa_ComprobantesRow)(this.NewRow()));
            }
            
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder) {
                return new tsa_ComprobantesRow(builder);
            }
            
            protected override System.Type GetRowType() {
                return typeof(tsa_ComprobantesRow);
            }
            
            protected override void OnRowChanged(DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.tsa_ComprobantesRowChanged != null)) {
                    this.tsa_ComprobantesRowChanged(this, new tsa_ComprobantesRowChangeEvent(((tsa_ComprobantesRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowChanging(DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.tsa_ComprobantesRowChanging != null)) {
                    this.tsa_ComprobantesRowChanging(this, new tsa_ComprobantesRowChangeEvent(((tsa_ComprobantesRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleted(DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.tsa_ComprobantesRowDeleted != null)) {
                    this.tsa_ComprobantesRowDeleted(this, new tsa_ComprobantesRowChangeEvent(((tsa_ComprobantesRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleting(DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.tsa_ComprobantesRowDeleting != null)) {
                    this.tsa_ComprobantesRowDeleting(this, new tsa_ComprobantesRowChangeEvent(((tsa_ComprobantesRow)(e.Row)), e.Action));
                }
            }
            
            public void Removetsa_ComprobantesRow(tsa_ComprobantesRow row) {
                this.Rows.Remove(row);
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class tsa_ComprobantesRow : DataRow {
            
            private tsa_ComprobantesDataTable tabletsa_Comprobantes;
            
            internal tsa_ComprobantesRow(DataRowBuilder rb) : 
                    base(rb) {
                this.tabletsa_Comprobantes = ((tsa_ComprobantesDataTable)(this.Table));
            }
            
            public string IdComprobante {
                get {
                    return ((string)(this[this.tabletsa_Comprobantes.IdComprobanteColumn]));
                }
                set {
                    this[this.tabletsa_Comprobantes.IdComprobanteColumn] = value;
                }
            }
            
            public long IdEmpresa {
                get {
                    try {
                        return ((long)(this[this.tabletsa_Comprobantes.IdEmpresaColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletsa_Comprobantes.IdEmpresaColumn] = value;
                }
            }
            
            public long IdSucursal {
                get {
                    try {
                        return ((long)(this[this.tabletsa_Comprobantes.IdSucursalColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletsa_Comprobantes.IdSucursalColumn] = value;
                }
            }
            
            public string IdInstanciaCaja {
                get {
                    try {
                        return ((string)(this[this.tabletsa_Comprobantes.IdInstanciaCajaColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletsa_Comprobantes.IdInstanciaCajaColumn] = value;
                }
            }
            
            public string IdTipoDeComprobante {
                get {
                    try {
                        return ((string)(this[this.tabletsa_Comprobantes.IdTipoDeComprobanteColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletsa_Comprobantes.IdTipoDeComprobanteColumn] = value;
                }
            }
            
            public string Numero {
                get {
                    try {
                        return ((string)(this[this.tabletsa_Comprobantes.NumeroColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletsa_Comprobantes.NumeroColumn] = value;
                }
            }
            
            public System.DateTime Fecha {
                get {
                    try {
                        return ((System.DateTime)(this[this.tabletsa_Comprobantes.FechaColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletsa_Comprobantes.FechaColumn] = value;
                }
            }
            
            public string IdCuenta {
                get {
                    try {
                        return ((string)(this[this.tabletsa_Comprobantes.IdCuentaColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletsa_Comprobantes.IdCuentaColumn] = value;
                }
            }
            
            public string IdResponsable {
                get {
                    try {
                        return ((string)(this[this.tabletsa_Comprobantes.IdResponsableColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletsa_Comprobantes.IdResponsableColumn] = value;
                }
            }
            
            public System.Decimal Total {
                get {
                    try {
                        return ((System.Decimal)(this[this.tabletsa_Comprobantes.TotalColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletsa_Comprobantes.TotalColumn] = value;
                }
            }
            
            public string IdMonedaCierre {
                get {
                    try {
                        return ((string)(this[this.tabletsa_Comprobantes.IdMonedaCierreColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletsa_Comprobantes.IdMonedaCierreColumn] = value;
                }
            }
            
            public string IdCotizacionCierre {
                get {
                    try {
                        return ((string)(this[this.tabletsa_Comprobantes.IdCotizacionCierreColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletsa_Comprobantes.IdCotizacionCierreColumn] = value;
                }
            }
            
            public System.DateTime FechaCreacion {
                get {
                    try {
                        return ((System.DateTime)(this[this.tabletsa_Comprobantes.FechaCreacionColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletsa_Comprobantes.FechaCreacionColumn] = value;
                }
            }
            
            public long IdConexionCreacion {
                get {
                    try {
                        return ((long)(this[this.tabletsa_Comprobantes.IdConexionCreacionColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletsa_Comprobantes.IdConexionCreacionColumn] = value;
                }
            }
            
            public System.Byte[] UltimaModificacion {
                get {
                    try {
                        return ((System.Byte[])(this[this.tabletsa_Comprobantes.UltimaModificacionColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletsa_Comprobantes.UltimaModificacionColumn] = value;
                }
            }
            
            public long IdConexionUltimaModificacion {
                get {
                    try {
                        return ((long)(this[this.tabletsa_Comprobantes.IdConexionUltimaModificacionColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletsa_Comprobantes.IdConexionUltimaModificacionColumn] = value;
                }
            }
            
            public long IdReservado {
                get {
                    try {
                        return ((long)(this[this.tabletsa_Comprobantes.IdReservadoColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletsa_Comprobantes.IdReservadoColumn] = value;
                }
            }
            
            public System.Guid RowId {
                get {
                    try {
                        return ((System.Guid)(this[this.tabletsa_Comprobantes.RowIdColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletsa_Comprobantes.RowIdColumn] = value;
                }
            }
            
            public string IdGenerado {
                get {
                    try {
                        return ((string)(this[this.tabletsa_Comprobantes.IdGeneradoColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletsa_Comprobantes.IdGeneradoColumn] = value;
                }
            }
            
            public string RowIdGenerado {
                get {
                    try {
                        return ((string)(this[this.tabletsa_Comprobantes.RowIdGeneradoColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletsa_Comprobantes.RowIdGeneradoColumn] = value;
                }
            }
            
            public string Cliente {
                get {
                    try {
                        return ((string)(this[this.tabletsa_Comprobantes.ClienteColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletsa_Comprobantes.ClienteColumn] = value;
                }
            }
            
            public string Domicilio {
                get {
                    try {
                        return ((string)(this[this.tabletsa_Comprobantes.DomicilioColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletsa_Comprobantes.DomicilioColumn] = value;
                }
            }
            
            public string TipoDocumento {
                get {
                    try {
                        return ((string)(this[this.tabletsa_Comprobantes.TipoDocumentoColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletsa_Comprobantes.TipoDocumentoColumn] = value;
                }
            }
            
            public string Documento {
                get {
                    try {
                        return ((string)(this[this.tabletsa_Comprobantes.DocumentoColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletsa_Comprobantes.DocumentoColumn] = value;
                }
            }
            
            public string Observaciones {
                get {
                    try {
                        return ((string)(this[this.tabletsa_Comprobantes.ObservacionesColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletsa_Comprobantes.ObservacionesColumn] = value;
                }
            }
            
            public string Aux1 {
                get {
                    try {
                        return ((string)(this[this.tabletsa_Comprobantes.Aux1Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletsa_Comprobantes.Aux1Column] = value;
                }
            }
            
            public string Aux2 {
                get {
                    try {
                        return ((string)(this[this.tabletsa_Comprobantes.Aux2Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletsa_Comprobantes.Aux2Column] = value;
                }
            }
            
            public string Aux3 {
                get {
                    try {
                        return ((string)(this[this.tabletsa_Comprobantes.Aux3Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletsa_Comprobantes.Aux3Column] = value;
                }
            }
            
            public string IdCondicionDeVenta {
                get {
                    if (this.IsIdCondicionDeVentaNull()) {
                        return null;
                    }
                    else {
                        return ((string)(this[this.tabletsa_Comprobantes.IdCondicionDeVentaColumn]));
                    }
                }
                set {
                    this[this.tabletsa_Comprobantes.IdCondicionDeVentaColumn] = value;
                }
            }
            
            public string CampoAuxiliar1 {
                get {
                    try {
                        return ((string)(this[this.tabletsa_Comprobantes.CampoAuxiliar1Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletsa_Comprobantes.CampoAuxiliar1Column] = value;
                }
            }
            
            public string CampoAuxiliar2 {
                get {
                    try {
                        return ((string)(this[this.tabletsa_Comprobantes.CampoAuxiliar2Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletsa_Comprobantes.CampoAuxiliar2Column] = value;
                }
            }
            
            public string CampoAuxiliar3 {
                get {
                    try {
                        return ((string)(this[this.tabletsa_Comprobantes.CampoAuxiliar3Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletsa_Comprobantes.CampoAuxiliar3Column] = value;
                }
            }
            
            public string CampoAuxiliar4 {
                get {
                    try {
                        return ((string)(this[this.tabletsa_Comprobantes.CampoAuxiliar4Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletsa_Comprobantes.CampoAuxiliar4Column] = value;
                }
            }
            
            public string CampoAuxiliar5 {
                get {
                    try {
                        return ((string)(this[this.tabletsa_Comprobantes.CampoAuxiliar5Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletsa_Comprobantes.CampoAuxiliar5Column] = value;
                }
            }
            
            public string IdCotizacionCierreDolarOficial {
                get {
                    try {
                        return ((string)(this[this.tabletsa_Comprobantes.IdCotizacionCierreDolarOficialColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletsa_Comprobantes.IdCotizacionCierreDolarOficialColumn] = value;
                }
            }
            
            public bool IsIdEmpresaNull() {
                return this.IsNull(this.tabletsa_Comprobantes.IdEmpresaColumn);
            }
            
            public void SetIdEmpresaNull() {
                this[this.tabletsa_Comprobantes.IdEmpresaColumn] = System.Convert.DBNull;
            }
            
            public bool IsIdSucursalNull() {
                return this.IsNull(this.tabletsa_Comprobantes.IdSucursalColumn);
            }
            
            public void SetIdSucursalNull() {
                this[this.tabletsa_Comprobantes.IdSucursalColumn] = System.Convert.DBNull;
            }
            
            public bool IsIdInstanciaCajaNull() {
                return this.IsNull(this.tabletsa_Comprobantes.IdInstanciaCajaColumn);
            }
            
            public void SetIdInstanciaCajaNull() {
                this[this.tabletsa_Comprobantes.IdInstanciaCajaColumn] = System.Convert.DBNull;
            }
            
            public bool IsIdTipoDeComprobanteNull() {
                return this.IsNull(this.tabletsa_Comprobantes.IdTipoDeComprobanteColumn);
            }
            
            public void SetIdTipoDeComprobanteNull() {
                this[this.tabletsa_Comprobantes.IdTipoDeComprobanteColumn] = System.Convert.DBNull;
            }
            
            public bool IsNumeroNull() {
                return this.IsNull(this.tabletsa_Comprobantes.NumeroColumn);
            }
            
            public void SetNumeroNull() {
                this[this.tabletsa_Comprobantes.NumeroColumn] = System.Convert.DBNull;
            }
            
            public bool IsFechaNull() {
                return this.IsNull(this.tabletsa_Comprobantes.FechaColumn);
            }
            
            public void SetFechaNull() {
                this[this.tabletsa_Comprobantes.FechaColumn] = System.Convert.DBNull;
            }
            
            public bool IsIdCuentaNull() {
                return this.IsNull(this.tabletsa_Comprobantes.IdCuentaColumn);
            }
            
            public void SetIdCuentaNull() {
                this[this.tabletsa_Comprobantes.IdCuentaColumn] = System.Convert.DBNull;
            }
            
            public bool IsIdResponsableNull() {
                return this.IsNull(this.tabletsa_Comprobantes.IdResponsableColumn);
            }
            
            public void SetIdResponsableNull() {
                this[this.tabletsa_Comprobantes.IdResponsableColumn] = System.Convert.DBNull;
            }
            
            public bool IsTotalNull() {
                return this.IsNull(this.tabletsa_Comprobantes.TotalColumn);
            }
            
            public void SetTotalNull() {
                this[this.tabletsa_Comprobantes.TotalColumn] = System.Convert.DBNull;
            }
            
            public bool IsIdMonedaCierreNull() {
                return this.IsNull(this.tabletsa_Comprobantes.IdMonedaCierreColumn);
            }
            
            public void SetIdMonedaCierreNull() {
                this[this.tabletsa_Comprobantes.IdMonedaCierreColumn] = System.Convert.DBNull;
            }
            
            public bool IsIdCotizacionCierreNull() {
                return this.IsNull(this.tabletsa_Comprobantes.IdCotizacionCierreColumn);
            }
            
            public void SetIdCotizacionCierreNull() {
                this[this.tabletsa_Comprobantes.IdCotizacionCierreColumn] = System.Convert.DBNull;
            }
            
            public bool IsFechaCreacionNull() {
                return this.IsNull(this.tabletsa_Comprobantes.FechaCreacionColumn);
            }
            
            public void SetFechaCreacionNull() {
                this[this.tabletsa_Comprobantes.FechaCreacionColumn] = System.Convert.DBNull;
            }
            
            public bool IsIdConexionCreacionNull() {
                return this.IsNull(this.tabletsa_Comprobantes.IdConexionCreacionColumn);
            }
            
            public void SetIdConexionCreacionNull() {
                this[this.tabletsa_Comprobantes.IdConexionCreacionColumn] = System.Convert.DBNull;
            }
            
            public bool IsUltimaModificacionNull() {
                return this.IsNull(this.tabletsa_Comprobantes.UltimaModificacionColumn);
            }
            
            public void SetUltimaModificacionNull() {
                this[this.tabletsa_Comprobantes.UltimaModificacionColumn] = System.Convert.DBNull;
            }
            
            public bool IsIdConexionUltimaModificacionNull() {
                return this.IsNull(this.tabletsa_Comprobantes.IdConexionUltimaModificacionColumn);
            }
            
            public void SetIdConexionUltimaModificacionNull() {
                this[this.tabletsa_Comprobantes.IdConexionUltimaModificacionColumn] = System.Convert.DBNull;
            }
            
            public bool IsIdReservadoNull() {
                return this.IsNull(this.tabletsa_Comprobantes.IdReservadoColumn);
            }
            
            public void SetIdReservadoNull() {
                this[this.tabletsa_Comprobantes.IdReservadoColumn] = System.Convert.DBNull;
            }
            
            public bool IsRowIdNull() {
                return this.IsNull(this.tabletsa_Comprobantes.RowIdColumn);
            }
            
            public void SetRowIdNull() {
                this[this.tabletsa_Comprobantes.RowIdColumn] = System.Convert.DBNull;
            }
            
            public bool IsIdGeneradoNull() {
                return this.IsNull(this.tabletsa_Comprobantes.IdGeneradoColumn);
            }
            
            public void SetIdGeneradoNull() {
                this[this.tabletsa_Comprobantes.IdGeneradoColumn] = System.Convert.DBNull;
            }
            
            public bool IsRowIdGeneradoNull() {
                return this.IsNull(this.tabletsa_Comprobantes.RowIdGeneradoColumn);
            }
            
            public void SetRowIdGeneradoNull() {
                this[this.tabletsa_Comprobantes.RowIdGeneradoColumn] = System.Convert.DBNull;
            }
            
            public bool IsClienteNull() {
                return this.IsNull(this.tabletsa_Comprobantes.ClienteColumn);
            }
            
            public void SetClienteNull() {
                this[this.tabletsa_Comprobantes.ClienteColumn] = System.Convert.DBNull;
            }
            
            public bool IsDomicilioNull() {
                return this.IsNull(this.tabletsa_Comprobantes.DomicilioColumn);
            }
            
            public void SetDomicilioNull() {
                this[this.tabletsa_Comprobantes.DomicilioColumn] = System.Convert.DBNull;
            }
            
            public bool IsTipoDocumentoNull() {
                return this.IsNull(this.tabletsa_Comprobantes.TipoDocumentoColumn);
            }
            
            public void SetTipoDocumentoNull() {
                this[this.tabletsa_Comprobantes.TipoDocumentoColumn] = System.Convert.DBNull;
            }
            
            public bool IsDocumentoNull() {
                return this.IsNull(this.tabletsa_Comprobantes.DocumentoColumn);
            }
            
            public void SetDocumentoNull() {
                this[this.tabletsa_Comprobantes.DocumentoColumn] = System.Convert.DBNull;
            }
            
            public bool IsObservacionesNull() {
                return this.IsNull(this.tabletsa_Comprobantes.ObservacionesColumn);
            }
            
            public void SetObservacionesNull() {
                this[this.tabletsa_Comprobantes.ObservacionesColumn] = System.Convert.DBNull;
            }
            
            public bool IsAux1Null() {
                return this.IsNull(this.tabletsa_Comprobantes.Aux1Column);
            }
            
            public void SetAux1Null() {
                this[this.tabletsa_Comprobantes.Aux1Column] = System.Convert.DBNull;
            }
            
            public bool IsAux2Null() {
                return this.IsNull(this.tabletsa_Comprobantes.Aux2Column);
            }
            
            public void SetAux2Null() {
                this[this.tabletsa_Comprobantes.Aux2Column] = System.Convert.DBNull;
            }
            
            public bool IsAux3Null() {
                return this.IsNull(this.tabletsa_Comprobantes.Aux3Column);
            }
            
            public void SetAux3Null() {
                this[this.tabletsa_Comprobantes.Aux3Column] = System.Convert.DBNull;
            }
            
            public bool IsIdCondicionDeVentaNull() {
                return this.IsNull(this.tabletsa_Comprobantes.IdCondicionDeVentaColumn);
            }
            
            public void SetIdCondicionDeVentaNull() {
                this[this.tabletsa_Comprobantes.IdCondicionDeVentaColumn] = System.Convert.DBNull;
            }
            
            public bool IsCampoAuxiliar1Null() {
                return this.IsNull(this.tabletsa_Comprobantes.CampoAuxiliar1Column);
            }
            
            public void SetCampoAuxiliar1Null() {
                this[this.tabletsa_Comprobantes.CampoAuxiliar1Column] = System.Convert.DBNull;
            }
            
            public bool IsCampoAuxiliar2Null() {
                return this.IsNull(this.tabletsa_Comprobantes.CampoAuxiliar2Column);
            }
            
            public void SetCampoAuxiliar2Null() {
                this[this.tabletsa_Comprobantes.CampoAuxiliar2Column] = System.Convert.DBNull;
            }
            
            public bool IsCampoAuxiliar3Null() {
                return this.IsNull(this.tabletsa_Comprobantes.CampoAuxiliar3Column);
            }
            
            public void SetCampoAuxiliar3Null() {
                this[this.tabletsa_Comprobantes.CampoAuxiliar3Column] = System.Convert.DBNull;
            }
            
            public bool IsCampoAuxiliar4Null() {
                return this.IsNull(this.tabletsa_Comprobantes.CampoAuxiliar4Column);
            }
            
            public void SetCampoAuxiliar4Null() {
                this[this.tabletsa_Comprobantes.CampoAuxiliar4Column] = System.Convert.DBNull;
            }
            
            public bool IsCampoAuxiliar5Null() {
                return this.IsNull(this.tabletsa_Comprobantes.CampoAuxiliar5Column);
            }
            
            public void SetCampoAuxiliar5Null() {
                this[this.tabletsa_Comprobantes.CampoAuxiliar5Column] = System.Convert.DBNull;
            }
            
            public bool IsIdCotizacionCierreDolarOficialNull() {
                return this.IsNull(this.tabletsa_Comprobantes.IdCotizacionCierreDolarOficialColumn);
            }
            
            public void SetIdCotizacionCierreDolarOficialNull() {
                this[this.tabletsa_Comprobantes.IdCotizacionCierreDolarOficialColumn] = System.Convert.DBNull;
            }
            
            public tsa_AplicacionPagosRow[] Gettsa_AplicacionPagosRowsBytsa_Comprobantestsa_AplicacionPagos() {
                return ((tsa_AplicacionPagosRow[])(this.GetChildRows(this.Table.ChildRelations["tsa_Comprobantestsa_AplicacionPagos"])));
            }
            
            public tsa_ComprobanteDetalleDeudaRow[] Gettsa_ComprobanteDetalleDeudaRows() {
                return ((tsa_ComprobanteDetalleDeudaRow[])(this.GetChildRows(this.Table.ChildRelations["tsa_Comprobantestsa_ComprobanteDetalleDeuda"])));
            }
            
            public tsa_ComprobantesDetRow[] Gettsa_ComprobantesDetRows() {
                return ((tsa_ComprobantesDetRow[])(this.GetChildRows(this.Table.ChildRelations["tsa_Comprobantestsa_ComprobantesDet"])));
            }
            
            public tsa_ComprobanteValoresVarAuxRow[] Gettsa_ComprobanteValoresVarAuxRows() {
                return ((tsa_ComprobanteValoresVarAuxRow[])(this.GetChildRows(this.Table.ChildRelations["tsa_Comprobantestsa_ComprobanteValoresVarAux"])));
            }
            
            public tsa_AplicacionPagosRow[] Gettsa_AplicacionPagosRowsBytsa_Comprobantestsa_AplicacionPagos1() {
                return ((tsa_AplicacionPagosRow[])(this.GetChildRows(this.Table.ChildRelations["tsa_Comprobantestsa_AplicacionPagos1"])));
            }
            
            public tsa_ComprobanteDetalleDePagosRow[] Gettsa_ComprobanteDetalleDePagosRows() {
                return ((tsa_ComprobanteDetalleDePagosRow[])(this.GetChildRows(this.Table.ChildRelations["tsa_Comprobantestsa_ComprobanteDetalleDePagos"])));
            }
            
            public tsa_ComprobantesOrdenReparacionRow[] Gettsa_ComprobantesOrdenReparacionRows() {
                return ((tsa_ComprobantesOrdenReparacionRow[])(this.GetChildRows(this.Table.ChildRelations["tsa_Comprobantestsa_ComprobantesOrdenReparacion"])));
            }
            
            public tsa_ComprobanteDetalleOrdenReparacionRow[] Gettsa_ComprobanteDetalleOrdenReparacionRows() {
                return ((tsa_ComprobanteDetalleOrdenReparacionRow[])(this.GetChildRows(this.Table.ChildRelations["tsa_Comprobantestsa_ComprobanteDetalleOrdenReparacion"])));
            }
            
            public tsa_ComprobantesMovimientosDeStockRow[] Gettsa_ComprobantesMovimientosDeStockRows() {
                return ((tsa_ComprobantesMovimientosDeStockRow[])(this.GetChildRows(this.Table.ChildRelations["tsa_Comprobantestsa_ComprobantesMovimientosDeStock"])));
            }
            
            public tsa_ComprobantesAutorizacionesRow[] Gettsa_ComprobantesAutorizacionesRows() {
                return ((tsa_ComprobantesAutorizacionesRow[])(this.GetChildRows(this.Table.ChildRelations["tsa_Comprobantestsa_ComprobantesAutorizaciones"])));
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class tsa_ComprobantesRowChangeEvent : EventArgs {
            
            private tsa_ComprobantesRow eventRow;
            
            private DataRowAction eventAction;
            
            public tsa_ComprobantesRowChangeEvent(tsa_ComprobantesRow row, DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            public tsa_ComprobantesRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            public DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class tsa_ComprobanteDetalleDeudaDataTable : DataTable, System.Collections.IEnumerable {
            
            private DataColumn columnIdComprobante;
            
            private DataColumn columnIdTipoDeComprobante;
            
            private DataColumn columnNumero;
            
            private DataColumn columnFechaEmision;
            
            private DataColumn columnFechaVencimiento;
            
            private DataColumn columnCuota;
            
            private DataColumn columnImporte;
            
            private DataColumn columnSaldo;
            
            private DataColumn columnIdMonedaCierre;
            
            private DataColumn columnIdCotizacionCierre;
            
            private DataColumn columnFechaCreacion;
            
            private DataColumn columnIdConexionCreacion;
            
            private DataColumn columnUltimaModificacion;
            
            private DataColumn columnIdConexionUltimaModificacion;
            
            private DataColumn columnIdReservado;
            
            private DataColumn columnRowId;
            
            private DataColumn columnIdSucursal;
            
            private DataColumn columnIdEmpresa;
            
            private DataColumn columnRowIdGenerdo;
            
            internal tsa_ComprobanteDetalleDeudaDataTable() : 
                    base("tsa_ComprobanteDetalleDeuda") {
                this.InitClass();
            }
            
            internal tsa_ComprobanteDetalleDeudaDataTable(DataTable table) : 
                    base(table.TableName) {
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
                this.DisplayExpression = table.DisplayExpression;
            }
            
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            internal DataColumn IdComprobanteColumn {
                get {
                    return this.columnIdComprobante;
                }
            }
            
            internal DataColumn IdTipoDeComprobanteColumn {
                get {
                    return this.columnIdTipoDeComprobante;
                }
            }
            
            internal DataColumn NumeroColumn {
                get {
                    return this.columnNumero;
                }
            }
            
            internal DataColumn FechaEmisionColumn {
                get {
                    return this.columnFechaEmision;
                }
            }
            
            internal DataColumn FechaVencimientoColumn {
                get {
                    return this.columnFechaVencimiento;
                }
            }
            
            internal DataColumn CuotaColumn {
                get {
                    return this.columnCuota;
                }
            }
            
            internal DataColumn ImporteColumn {
                get {
                    return this.columnImporte;
                }
            }
            
            internal DataColumn SaldoColumn {
                get {
                    return this.columnSaldo;
                }
            }
            
            internal DataColumn IdMonedaCierreColumn {
                get {
                    return this.columnIdMonedaCierre;
                }
            }
            
            internal DataColumn IdCotizacionCierreColumn {
                get {
                    return this.columnIdCotizacionCierre;
                }
            }
            
            internal DataColumn FechaCreacionColumn {
                get {
                    return this.columnFechaCreacion;
                }
            }
            
            internal DataColumn IdConexionCreacionColumn {
                get {
                    return this.columnIdConexionCreacion;
                }
            }
            
            internal DataColumn UltimaModificacionColumn {
                get {
                    return this.columnUltimaModificacion;
                }
            }
            
            internal DataColumn IdConexionUltimaModificacionColumn {
                get {
                    return this.columnIdConexionUltimaModificacion;
                }
            }
            
            internal DataColumn IdReservadoColumn {
                get {
                    return this.columnIdReservado;
                }
            }
            
            internal DataColumn RowIdColumn {
                get {
                    return this.columnRowId;
                }
            }
            
            internal DataColumn IdSucursalColumn {
                get {
                    return this.columnIdSucursal;
                }
            }
            
            internal DataColumn IdEmpresaColumn {
                get {
                    return this.columnIdEmpresa;
                }
            }
            
            internal DataColumn RowIdGenerdoColumn {
                get {
                    return this.columnRowIdGenerdo;
                }
            }
            
            public tsa_ComprobanteDetalleDeudaRow this[int index] {
                get {
                    return ((tsa_ComprobanteDetalleDeudaRow)(this.Rows[index]));
                }
            }
            
            public event tsa_ComprobanteDetalleDeudaRowChangeEventHandler tsa_ComprobanteDetalleDeudaRowChanged;
            
            public event tsa_ComprobanteDetalleDeudaRowChangeEventHandler tsa_ComprobanteDetalleDeudaRowChanging;
            
            public event tsa_ComprobanteDetalleDeudaRowChangeEventHandler tsa_ComprobanteDetalleDeudaRowDeleted;
            
            public event tsa_ComprobanteDetalleDeudaRowChangeEventHandler tsa_ComprobanteDetalleDeudaRowDeleting;
            
            public void Addtsa_ComprobanteDetalleDeudaRow(tsa_ComprobanteDetalleDeudaRow row) {
                this.Rows.Add(row);
            }
            
            public tsa_ComprobanteDetalleDeudaRow Addtsa_ComprobanteDetalleDeudaRow(
                        tsa_ComprobantesRow parenttsa_ComprobantesRowBytsa_Comprobantestsa_ComprobanteDetalleDeuda, 
                        string IdTipoDeComprobante, 
                        string Numero, 
                        System.DateTime FechaEmision, 
                        System.DateTime FechaVencimiento, 
                        short Cuota, 
                        System.Decimal Importe, 
                        System.Decimal Saldo, 
                        string IdMonedaCierre, 
                        string IdCotizacionCierre, 
                        System.DateTime FechaCreacion, 
                        long IdConexionCreacion, 
                        System.Byte[] UltimaModificacion, 
                        long IdConexionUltimaModificacion, 
                        long IdReservado, 
                        System.Guid RowId, 
                        long IdSucursal, 
                        long IdEmpresa, 
                        string RowIdGenerdo) {
                tsa_ComprobanteDetalleDeudaRow rowtsa_ComprobanteDetalleDeudaRow = ((tsa_ComprobanteDetalleDeudaRow)(this.NewRow()));
                rowtsa_ComprobanteDetalleDeudaRow.ItemArray = new object[] {
                        parenttsa_ComprobantesRowBytsa_Comprobantestsa_ComprobanteDetalleDeuda[0],
                        IdTipoDeComprobante,
                        Numero,
                        FechaEmision,
                        FechaVencimiento,
                        Cuota,
                        Importe,
                        Saldo,
                        IdMonedaCierre,
                        IdCotizacionCierre,
                        FechaCreacion,
                        IdConexionCreacion,
                        UltimaModificacion,
                        IdConexionUltimaModificacion,
                        IdReservado,
                        RowId,
                        IdSucursal,
                        IdEmpresa,
                        RowIdGenerdo};
                this.Rows.Add(rowtsa_ComprobanteDetalleDeudaRow);
                return rowtsa_ComprobanteDetalleDeudaRow;
            }
            
            public tsa_ComprobanteDetalleDeudaRow FindByIdComprobanteCuota(string IdComprobante, short Cuota) {
                return ((tsa_ComprobanteDetalleDeudaRow)(this.Rows.Find(new object[] {
                            IdComprobante,
                            Cuota})));
            }
            
            public System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            public override DataTable Clone() {
                tsa_ComprobanteDetalleDeudaDataTable cln = ((tsa_ComprobanteDetalleDeudaDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            protected override DataTable CreateInstance() {
                return new tsa_ComprobanteDetalleDeudaDataTable();
            }
            
            internal void InitVars() {
                this.columnIdComprobante = this.Columns["IdComprobante"];
                this.columnIdTipoDeComprobante = this.Columns["IdTipoDeComprobante"];
                this.columnNumero = this.Columns["Numero"];
                this.columnFechaEmision = this.Columns["FechaEmision"];
                this.columnFechaVencimiento = this.Columns["FechaVencimiento"];
                this.columnCuota = this.Columns["Cuota"];
                this.columnImporte = this.Columns["Importe"];
                this.columnSaldo = this.Columns["Saldo"];
                this.columnIdMonedaCierre = this.Columns["IdMonedaCierre"];
                this.columnIdCotizacionCierre = this.Columns["IdCotizacionCierre"];
                this.columnFechaCreacion = this.Columns["FechaCreacion"];
                this.columnIdConexionCreacion = this.Columns["IdConexionCreacion"];
                this.columnUltimaModificacion = this.Columns["UltimaModificacion"];
                this.columnIdConexionUltimaModificacion = this.Columns["IdConexionUltimaModificacion"];
                this.columnIdReservado = this.Columns["IdReservado"];
                this.columnRowId = this.Columns["RowId"];
                this.columnIdSucursal = this.Columns["IdSucursal"];
                this.columnIdEmpresa = this.Columns["IdEmpresa"];
                this.columnRowIdGenerdo = this.Columns["RowIdGenerdo"];
            }
            
            private void InitClass() {
                this.columnIdComprobante = new DataColumn("IdComprobante", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdComprobante);
                this.columnIdTipoDeComprobante = new DataColumn("IdTipoDeComprobante", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdTipoDeComprobante);
                this.columnNumero = new DataColumn("Numero", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnNumero);
                this.columnFechaEmision = new DataColumn("FechaEmision", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnFechaEmision);
                this.columnFechaVencimiento = new DataColumn("FechaVencimiento", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnFechaVencimiento);
                this.columnCuota = new DataColumn("Cuota", typeof(short), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnCuota);
                this.columnImporte = new DataColumn("Importe", typeof(System.Decimal), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnImporte);
                this.columnSaldo = new DataColumn("Saldo", typeof(System.Decimal), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnSaldo);
                this.columnIdMonedaCierre = new DataColumn("IdMonedaCierre", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdMonedaCierre);
                this.columnIdCotizacionCierre = new DataColumn("IdCotizacionCierre", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdCotizacionCierre);
                this.columnFechaCreacion = new DataColumn("FechaCreacion", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnFechaCreacion);
                this.columnIdConexionCreacion = new DataColumn("IdConexionCreacion", typeof(long), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdConexionCreacion);
                this.columnUltimaModificacion = new DataColumn("UltimaModificacion", typeof(System.Byte[]), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnUltimaModificacion);
                this.columnIdConexionUltimaModificacion = new DataColumn("IdConexionUltimaModificacion", typeof(long), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdConexionUltimaModificacion);
                this.columnIdReservado = new DataColumn("IdReservado", typeof(long), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdReservado);
                this.columnRowId = new DataColumn("RowId", typeof(System.Guid), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnRowId);
                this.columnIdSucursal = new DataColumn("IdSucursal", typeof(long), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdSucursal);
                this.columnIdEmpresa = new DataColumn("IdEmpresa", typeof(long), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdEmpresa);
                this.columnRowIdGenerdo = new DataColumn("RowIdGenerdo", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnRowIdGenerdo);
                this.Constraints.Add(new UniqueConstraint("tsa_ComprobantesExKey4", new DataColumn[] {
                                this.columnIdComprobante,
                                this.columnCuota}, true));
                this.columnIdComprobante.AllowDBNull = false;
                this.columnIdTipoDeComprobante.AllowDBNull = false;
                this.columnNumero.AllowDBNull = false;
                this.columnFechaEmision.AllowDBNull = false;
                this.columnCuota.AllowDBNull = false;
                this.columnImporte.AllowDBNull = false;
                this.columnSaldo.AllowDBNull = false;
                this.columnUltimaModificacion.ReadOnly = true;
            }
            
            public tsa_ComprobanteDetalleDeudaRow Newtsa_ComprobanteDetalleDeudaRow() {
                return ((tsa_ComprobanteDetalleDeudaRow)(this.NewRow()));
            }
            
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder) {
                return new tsa_ComprobanteDetalleDeudaRow(builder);
            }
            
            protected override System.Type GetRowType() {
                return typeof(tsa_ComprobanteDetalleDeudaRow);
            }
            
            protected override void OnRowChanged(DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.tsa_ComprobanteDetalleDeudaRowChanged != null)) {
                    this.tsa_ComprobanteDetalleDeudaRowChanged(this, new tsa_ComprobanteDetalleDeudaRowChangeEvent(((tsa_ComprobanteDetalleDeudaRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowChanging(DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.tsa_ComprobanteDetalleDeudaRowChanging != null)) {
                    this.tsa_ComprobanteDetalleDeudaRowChanging(this, new tsa_ComprobanteDetalleDeudaRowChangeEvent(((tsa_ComprobanteDetalleDeudaRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleted(DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.tsa_ComprobanteDetalleDeudaRowDeleted != null)) {
                    this.tsa_ComprobanteDetalleDeudaRowDeleted(this, new tsa_ComprobanteDetalleDeudaRowChangeEvent(((tsa_ComprobanteDetalleDeudaRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleting(DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.tsa_ComprobanteDetalleDeudaRowDeleting != null)) {
                    this.tsa_ComprobanteDetalleDeudaRowDeleting(this, new tsa_ComprobanteDetalleDeudaRowChangeEvent(((tsa_ComprobanteDetalleDeudaRow)(e.Row)), e.Action));
                }
            }
            
            public void Removetsa_ComprobanteDetalleDeudaRow(tsa_ComprobanteDetalleDeudaRow row) {
                this.Rows.Remove(row);
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class tsa_ComprobanteDetalleDeudaRow : DataRow {
            
            private tsa_ComprobanteDetalleDeudaDataTable tabletsa_ComprobanteDetalleDeuda;
            
            internal tsa_ComprobanteDetalleDeudaRow(DataRowBuilder rb) : 
                    base(rb) {
                this.tabletsa_ComprobanteDetalleDeuda = ((tsa_ComprobanteDetalleDeudaDataTable)(this.Table));
            }
            
            public string IdComprobante {
                get {
                    return ((string)(this[this.tabletsa_ComprobanteDetalleDeuda.IdComprobanteColumn]));
                }
                set {
                    this[this.tabletsa_ComprobanteDetalleDeuda.IdComprobanteColumn] = value;
                }
            }
            
            public string IdTipoDeComprobante {
                get {
                    return ((string)(this[this.tabletsa_ComprobanteDetalleDeuda.IdTipoDeComprobanteColumn]));
                }
                set {
                    this[this.tabletsa_ComprobanteDetalleDeuda.IdTipoDeComprobanteColumn] = value;
                }
            }
            
            public string Numero {
                get {
                    return ((string)(this[this.tabletsa_ComprobanteDetalleDeuda.NumeroColumn]));
                }
                set {
                    this[this.tabletsa_ComprobanteDetalleDeuda.NumeroColumn] = value;
                }
            }
            
            public System.DateTime FechaEmision {
                get {
                    return ((System.DateTime)(this[this.tabletsa_ComprobanteDetalleDeuda.FechaEmisionColumn]));
                }
                set {
                    this[this.tabletsa_ComprobanteDetalleDeuda.FechaEmisionColumn] = value;
                }
            }
            
            public System.DateTime FechaVencimiento {
                get {
                    try {
                        return ((System.DateTime)(this[this.tabletsa_ComprobanteDetalleDeuda.FechaVencimientoColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletsa_ComprobanteDetalleDeuda.FechaVencimientoColumn] = value;
                }
            }
            
            public short Cuota {
                get {
                    return ((short)(this[this.tabletsa_ComprobanteDetalleDeuda.CuotaColumn]));
                }
                set {
                    this[this.tabletsa_ComprobanteDetalleDeuda.CuotaColumn] = value;
                }
            }
            
            public System.Decimal Importe {
                get {
                    return ((System.Decimal)(this[this.tabletsa_ComprobanteDetalleDeuda.ImporteColumn]));
                }
                set {
                    this[this.tabletsa_ComprobanteDetalleDeuda.ImporteColumn] = value;
                }
            }
            
            public System.Decimal Saldo {
                get {
                    return ((System.Decimal)(this[this.tabletsa_ComprobanteDetalleDeuda.SaldoColumn]));
                }
                set {
                    this[this.tabletsa_ComprobanteDetalleDeuda.SaldoColumn] = value;
                }
            }
            
            public string IdMonedaCierre {
                get {
                    try {
                        return ((string)(this[this.tabletsa_ComprobanteDetalleDeuda.IdMonedaCierreColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletsa_ComprobanteDetalleDeuda.IdMonedaCierreColumn] = value;
                }
            }
            
            public string IdCotizacionCierre {
                get {
                    try {
                        return ((string)(this[this.tabletsa_ComprobanteDetalleDeuda.IdCotizacionCierreColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletsa_ComprobanteDetalleDeuda.IdCotizacionCierreColumn] = value;
                }
            }
            
            public System.DateTime FechaCreacion {
                get {
                    try {
                        return ((System.DateTime)(this[this.tabletsa_ComprobanteDetalleDeuda.FechaCreacionColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletsa_ComprobanteDetalleDeuda.FechaCreacionColumn] = value;
                }
            }
            
            public long IdConexionCreacion {
                get {
                    try {
                        return ((long)(this[this.tabletsa_ComprobanteDetalleDeuda.IdConexionCreacionColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletsa_ComprobanteDetalleDeuda.IdConexionCreacionColumn] = value;
                }
            }
            
            public System.Byte[] UltimaModificacion {
                get {
                    try {
                        return ((System.Byte[])(this[this.tabletsa_ComprobanteDetalleDeuda.UltimaModificacionColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletsa_ComprobanteDetalleDeuda.UltimaModificacionColumn] = value;
                }
            }
            
            public long IdConexionUltimaModificacion {
                get {
                    try {
                        return ((long)(this[this.tabletsa_ComprobanteDetalleDeuda.IdConexionUltimaModificacionColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletsa_ComprobanteDetalleDeuda.IdConexionUltimaModificacionColumn] = value;
                }
            }
            
            public long IdReservado {
                get {
                    try {
                        return ((long)(this[this.tabletsa_ComprobanteDetalleDeuda.IdReservadoColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletsa_ComprobanteDetalleDeuda.IdReservadoColumn] = value;
                }
            }
            
            public System.Guid RowId {
                get {
                    try {
                        return ((System.Guid)(this[this.tabletsa_ComprobanteDetalleDeuda.RowIdColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletsa_ComprobanteDetalleDeuda.RowIdColumn] = value;
                }
            }
            
            public long IdSucursal {
                get {
                    try {
                        return ((long)(this[this.tabletsa_ComprobanteDetalleDeuda.IdSucursalColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletsa_ComprobanteDetalleDeuda.IdSucursalColumn] = value;
                }
            }
            
            public long IdEmpresa {
                get {
                    try {
                        return ((long)(this[this.tabletsa_ComprobanteDetalleDeuda.IdEmpresaColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletsa_ComprobanteDetalleDeuda.IdEmpresaColumn] = value;
                }
            }
            
            public string RowIdGenerdo {
                get {
                    try {
                        return ((string)(this[this.tabletsa_ComprobanteDetalleDeuda.RowIdGenerdoColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletsa_ComprobanteDetalleDeuda.RowIdGenerdoColumn] = value;
                }
            }
            
            public tsa_ComprobantesRow tsa_ComprobantesRow {
                get {
                    return ((tsa_ComprobantesRow)(this.GetParentRow(this.Table.ParentRelations["tsa_Comprobantestsa_ComprobanteDetalleDeuda"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["tsa_Comprobantestsa_ComprobanteDetalleDeuda"]);
                }
            }
            
            public bool IsFechaVencimientoNull() {
                return this.IsNull(this.tabletsa_ComprobanteDetalleDeuda.FechaVencimientoColumn);
            }
            
            public void SetFechaVencimientoNull() {
                this[this.tabletsa_ComprobanteDetalleDeuda.FechaVencimientoColumn] = System.Convert.DBNull;
            }
            
            public bool IsIdMonedaCierreNull() {
                return this.IsNull(this.tabletsa_ComprobanteDetalleDeuda.IdMonedaCierreColumn);
            }
            
            public void SetIdMonedaCierreNull() {
                this[this.tabletsa_ComprobanteDetalleDeuda.IdMonedaCierreColumn] = System.Convert.DBNull;
            }
            
            public bool IsIdCotizacionCierreNull() {
                return this.IsNull(this.tabletsa_ComprobanteDetalleDeuda.IdCotizacionCierreColumn);
            }
            
            public void SetIdCotizacionCierreNull() {
                this[this.tabletsa_ComprobanteDetalleDeuda.IdCotizacionCierreColumn] = System.Convert.DBNull;
            }
            
            public bool IsFechaCreacionNull() {
                return this.IsNull(this.tabletsa_ComprobanteDetalleDeuda.FechaCreacionColumn);
            }
            
            public void SetFechaCreacionNull() {
                this[this.tabletsa_ComprobanteDetalleDeuda.FechaCreacionColumn] = System.Convert.DBNull;
            }
            
            public bool IsIdConexionCreacionNull() {
                return this.IsNull(this.tabletsa_ComprobanteDetalleDeuda.IdConexionCreacionColumn);
            }
            
            public void SetIdConexionCreacionNull() {
                this[this.tabletsa_ComprobanteDetalleDeuda.IdConexionCreacionColumn] = System.Convert.DBNull;
            }
            
            public bool IsUltimaModificacionNull() {
                return this.IsNull(this.tabletsa_ComprobanteDetalleDeuda.UltimaModificacionColumn);
            }
            
            public void SetUltimaModificacionNull() {
                this[this.tabletsa_ComprobanteDetalleDeuda.UltimaModificacionColumn] = System.Convert.DBNull;
            }
            
            public bool IsIdConexionUltimaModificacionNull() {
                return this.IsNull(this.tabletsa_ComprobanteDetalleDeuda.IdConexionUltimaModificacionColumn);
            }
            
            public void SetIdConexionUltimaModificacionNull() {
                this[this.tabletsa_ComprobanteDetalleDeuda.IdConexionUltimaModificacionColumn] = System.Convert.DBNull;
            }
            
            public bool IsIdReservadoNull() {
                return this.IsNull(this.tabletsa_ComprobanteDetalleDeuda.IdReservadoColumn);
            }
            
            public void SetIdReservadoNull() {
                this[this.tabletsa_ComprobanteDetalleDeuda.IdReservadoColumn] = System.Convert.DBNull;
            }
            
            public bool IsRowIdNull() {
                return this.IsNull(this.tabletsa_ComprobanteDetalleDeuda.RowIdColumn);
            }
            
            public void SetRowIdNull() {
                this[this.tabletsa_ComprobanteDetalleDeuda.RowIdColumn] = System.Convert.DBNull;
            }
            
            public bool IsIdSucursalNull() {
                return this.IsNull(this.tabletsa_ComprobanteDetalleDeuda.IdSucursalColumn);
            }
            
            public void SetIdSucursalNull() {
                this[this.tabletsa_ComprobanteDetalleDeuda.IdSucursalColumn] = System.Convert.DBNull;
            }
            
            public bool IsIdEmpresaNull() {
                return this.IsNull(this.tabletsa_ComprobanteDetalleDeuda.IdEmpresaColumn);
            }
            
            public void SetIdEmpresaNull() {
                this[this.tabletsa_ComprobanteDetalleDeuda.IdEmpresaColumn] = System.Convert.DBNull;
            }
            
            public bool IsRowIdGenerdoNull() {
                return this.IsNull(this.tabletsa_ComprobanteDetalleDeuda.RowIdGenerdoColumn);
            }
            
            public void SetRowIdGenerdoNull() {
                this[this.tabletsa_ComprobanteDetalleDeuda.RowIdGenerdoColumn] = System.Convert.DBNull;
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class tsa_ComprobanteDetalleDeudaRowChangeEvent : EventArgs {
            
            private tsa_ComprobanteDetalleDeudaRow eventRow;
            
            private DataRowAction eventAction;
            
            public tsa_ComprobanteDetalleDeudaRowChangeEvent(tsa_ComprobanteDetalleDeudaRow row, DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            public tsa_ComprobanteDetalleDeudaRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            public DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class tsa_AplicacionPagosDataTable : DataTable, System.Collections.IEnumerable {
            
            private DataColumn columnIdTipoComprobanteOrigen;
            
            private DataColumn columnIdComprobanteOrigen;
            
            private DataColumn columnCuotaOrigen;
            
            private DataColumn columnImporte;
            
            private DataColumn columnIdTipoDeComprobanteDestino;
            
            private DataColumn columnIdComprobanteDestino;
            
            private DataColumn columnCuotaDestino;
            
            private DataColumn columnIdEmpresa;
            
            private DataColumn columnIdSucursal;
            
            private DataColumn columnFechaCreacion;
            
            private DataColumn columnIdConexionCreacion;
            
            private DataColumn columnUltimaModificacion;
            
            private DataColumn columnIdConexionUltimaModificacion;
            
            private DataColumn columnIdReservado;
            
            private DataColumn columnRowId;
            
            internal tsa_AplicacionPagosDataTable() : 
                    base("tsa_AplicacionPagos") {
                this.InitClass();
            }
            
            internal tsa_AplicacionPagosDataTable(DataTable table) : 
                    base(table.TableName) {
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
                this.DisplayExpression = table.DisplayExpression;
            }
            
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            internal DataColumn IdTipoComprobanteOrigenColumn {
                get {
                    return this.columnIdTipoComprobanteOrigen;
                }
            }
            
            internal DataColumn IdComprobanteOrigenColumn {
                get {
                    return this.columnIdComprobanteOrigen;
                }
            }
            
            internal DataColumn CuotaOrigenColumn {
                get {
                    return this.columnCuotaOrigen;
                }
            }
            
            internal DataColumn ImporteColumn {
                get {
                    return this.columnImporte;
                }
            }
            
            internal DataColumn IdTipoDeComprobanteDestinoColumn {
                get {
                    return this.columnIdTipoDeComprobanteDestino;
                }
            }
            
            internal DataColumn IdComprobanteDestinoColumn {
                get {
                    return this.columnIdComprobanteDestino;
                }
            }
            
            internal DataColumn CuotaDestinoColumn {
                get {
                    return this.columnCuotaDestino;
                }
            }
            
            internal DataColumn IdEmpresaColumn {
                get {
                    return this.columnIdEmpresa;
                }
            }
            
            internal DataColumn IdSucursalColumn {
                get {
                    return this.columnIdSucursal;
                }
            }
            
            internal DataColumn FechaCreacionColumn {
                get {
                    return this.columnFechaCreacion;
                }
            }
            
            internal DataColumn IdConexionCreacionColumn {
                get {
                    return this.columnIdConexionCreacion;
                }
            }
            
            internal DataColumn UltimaModificacionColumn {
                get {
                    return this.columnUltimaModificacion;
                }
            }
            
            internal DataColumn IdConexionUltimaModificacionColumn {
                get {
                    return this.columnIdConexionUltimaModificacion;
                }
            }
            
            internal DataColumn IdReservadoColumn {
                get {
                    return this.columnIdReservado;
                }
            }
            
            internal DataColumn RowIdColumn {
                get {
                    return this.columnRowId;
                }
            }
            
            public tsa_AplicacionPagosRow this[int index] {
                get {
                    return ((tsa_AplicacionPagosRow)(this.Rows[index]));
                }
            }
            
            public event tsa_AplicacionPagosRowChangeEventHandler tsa_AplicacionPagosRowChanged;
            
            public event tsa_AplicacionPagosRowChangeEventHandler tsa_AplicacionPagosRowChanging;
            
            public event tsa_AplicacionPagosRowChangeEventHandler tsa_AplicacionPagosRowDeleted;
            
            public event tsa_AplicacionPagosRowChangeEventHandler tsa_AplicacionPagosRowDeleting;
            
            public void Addtsa_AplicacionPagosRow(tsa_AplicacionPagosRow row) {
                this.Rows.Add(row);
            }
            
            public tsa_AplicacionPagosRow Addtsa_AplicacionPagosRow(string IdTipoComprobanteOrigen, tsa_ComprobantesRow parenttsa_ComprobantesRowBytsa_Comprobantestsa_AplicacionPagos1, short CuotaOrigen, System.Decimal Importe, string IdTipoDeComprobanteDestino, tsa_ComprobantesRow parenttsa_ComprobantesRowBytsa_Comprobantestsa_AplicacionPagos, short CuotaDestino, long IdEmpresa, long IdSucursal, System.DateTime FechaCreacion, long IdConexionCreacion, System.Byte[] UltimaModificacion, long IdConexionUltimaModificacion, long IdReservado, System.Guid RowId) {
                tsa_AplicacionPagosRow rowtsa_AplicacionPagosRow = ((tsa_AplicacionPagosRow)(this.NewRow()));
                rowtsa_AplicacionPagosRow.ItemArray = new object[] {
                        IdTipoComprobanteOrigen,
                        parenttsa_ComprobantesRowBytsa_Comprobantestsa_AplicacionPagos1[0],
                        CuotaOrigen,
                        Importe,
                        IdTipoDeComprobanteDestino,
                        parenttsa_ComprobantesRowBytsa_Comprobantestsa_AplicacionPagos[0],
                        CuotaDestino,
                        IdEmpresa,
                        IdSucursal,
                        FechaCreacion,
                        IdConexionCreacion,
                        UltimaModificacion,
                        IdConexionUltimaModificacion,
                        IdReservado,
                        RowId};
                this.Rows.Add(rowtsa_AplicacionPagosRow);
                return rowtsa_AplicacionPagosRow;
            }
            
            public tsa_AplicacionPagosRow FindByIdComprobanteOrigenCuotaOrigenIdComprobanteDestino(string IdComprobanteOrigen, short CuotaOrigen, string IdComprobanteDestino) {
                return ((tsa_AplicacionPagosRow)(this.Rows.Find(new object[] {
                            IdComprobanteOrigen,
                            CuotaOrigen,
                            IdComprobanteDestino})));
            }
            
            public System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            public override DataTable Clone() {
                tsa_AplicacionPagosDataTable cln = ((tsa_AplicacionPagosDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            protected override DataTable CreateInstance() {
                return new tsa_AplicacionPagosDataTable();
            }
            
            internal void InitVars() {
                this.columnIdTipoComprobanteOrigen = this.Columns["IdTipoComprobanteOrigen"];
                this.columnIdComprobanteOrigen = this.Columns["IdComprobanteOrigen"];
                this.columnCuotaOrigen = this.Columns["CuotaOrigen"];
                this.columnImporte = this.Columns["Importe"];
                this.columnIdTipoDeComprobanteDestino = this.Columns["IdTipoDeComprobanteDestino"];
                this.columnIdComprobanteDestino = this.Columns["IdComprobanteDestino"];
                this.columnCuotaDestino = this.Columns["CuotaDestino"];
                this.columnIdEmpresa = this.Columns["IdEmpresa"];
                this.columnIdSucursal = this.Columns["IdSucursal"];
                this.columnFechaCreacion = this.Columns["FechaCreacion"];
                this.columnIdConexionCreacion = this.Columns["IdConexionCreacion"];
                this.columnUltimaModificacion = this.Columns["UltimaModificacion"];
                this.columnIdConexionUltimaModificacion = this.Columns["IdConexionUltimaModificacion"];
                this.columnIdReservado = this.Columns["IdReservado"];
                this.columnRowId = this.Columns["RowId"];
            }
            
            private void InitClass() {
                this.columnIdTipoComprobanteOrigen = new DataColumn("IdTipoComprobanteOrigen", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdTipoComprobanteOrigen);
                this.columnIdComprobanteOrigen = new DataColumn("IdComprobanteOrigen", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdComprobanteOrigen);
                this.columnCuotaOrigen = new DataColumn("CuotaOrigen", typeof(short), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnCuotaOrigen);
                this.columnImporte = new DataColumn("Importe", typeof(System.Decimal), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnImporte);
                this.columnIdTipoDeComprobanteDestino = new DataColumn("IdTipoDeComprobanteDestino", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdTipoDeComprobanteDestino);
                this.columnIdComprobanteDestino = new DataColumn("IdComprobanteDestino", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdComprobanteDestino);
                this.columnCuotaDestino = new DataColumn("CuotaDestino", typeof(short), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnCuotaDestino);
                this.columnIdEmpresa = new DataColumn("IdEmpresa", typeof(long), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdEmpresa);
                this.columnIdSucursal = new DataColumn("IdSucursal", typeof(long), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdSucursal);
                this.columnFechaCreacion = new DataColumn("FechaCreacion", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnFechaCreacion);
                this.columnIdConexionCreacion = new DataColumn("IdConexionCreacion", typeof(long), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdConexionCreacion);
                this.columnUltimaModificacion = new DataColumn("UltimaModificacion", typeof(System.Byte[]), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnUltimaModificacion);
                this.columnIdConexionUltimaModificacion = new DataColumn("IdConexionUltimaModificacion", typeof(long), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdConexionUltimaModificacion);
                this.columnIdReservado = new DataColumn("IdReservado", typeof(long), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdReservado);
                this.columnRowId = new DataColumn("RowId", typeof(System.Guid), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnRowId);
                this.Constraints.Add(new UniqueConstraint("tsa_ComprobantesExKey5", new DataColumn[] {
                                this.columnIdComprobanteOrigen,
                                this.columnCuotaOrigen,
                                this.columnIdComprobanteDestino}, true));
                this.columnIdTipoComprobanteOrigen.AllowDBNull = false;
                this.columnIdComprobanteOrigen.AllowDBNull = false;
                this.columnCuotaOrigen.AllowDBNull = false;
                this.columnImporte.AllowDBNull = false;
                this.columnIdTipoDeComprobanteDestino.AllowDBNull = false;
                this.columnIdComprobanteDestino.AllowDBNull = false;
                this.columnCuotaDestino.AllowDBNull = false;
                this.columnUltimaModificacion.ReadOnly = true;
            }
            
            public tsa_AplicacionPagosRow Newtsa_AplicacionPagosRow() {
                return ((tsa_AplicacionPagosRow)(this.NewRow()));
            }
            
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder) {
                return new tsa_AplicacionPagosRow(builder);
            }
            
            protected override System.Type GetRowType() {
                return typeof(tsa_AplicacionPagosRow);
            }
            
            protected override void OnRowChanged(DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.tsa_AplicacionPagosRowChanged != null)) {
                    this.tsa_AplicacionPagosRowChanged(this, new tsa_AplicacionPagosRowChangeEvent(((tsa_AplicacionPagosRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowChanging(DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.tsa_AplicacionPagosRowChanging != null)) {
                    this.tsa_AplicacionPagosRowChanging(this, new tsa_AplicacionPagosRowChangeEvent(((tsa_AplicacionPagosRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleted(DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.tsa_AplicacionPagosRowDeleted != null)) {
                    this.tsa_AplicacionPagosRowDeleted(this, new tsa_AplicacionPagosRowChangeEvent(((tsa_AplicacionPagosRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleting(DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.tsa_AplicacionPagosRowDeleting != null)) {
                    this.tsa_AplicacionPagosRowDeleting(this, new tsa_AplicacionPagosRowChangeEvent(((tsa_AplicacionPagosRow)(e.Row)), e.Action));
                }
            }
            
            public void Removetsa_AplicacionPagosRow(tsa_AplicacionPagosRow row) {
                this.Rows.Remove(row);
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class tsa_AplicacionPagosRow : DataRow {
            
            private tsa_AplicacionPagosDataTable tabletsa_AplicacionPagos;
            
            internal tsa_AplicacionPagosRow(DataRowBuilder rb) : 
                    base(rb) {
                this.tabletsa_AplicacionPagos = ((tsa_AplicacionPagosDataTable)(this.Table));
            }
            
            public string IdTipoComprobanteOrigen {
                get {
                    return ((string)(this[this.tabletsa_AplicacionPagos.IdTipoComprobanteOrigenColumn]));
                }
                set {
                    this[this.tabletsa_AplicacionPagos.IdTipoComprobanteOrigenColumn] = value;
                }
            }
            
            public string IdComprobanteOrigen {
                get {
                    return ((string)(this[this.tabletsa_AplicacionPagos.IdComprobanteOrigenColumn]));
                }
                set {
                    this[this.tabletsa_AplicacionPagos.IdComprobanteOrigenColumn] = value;
                }
            }
            
            public short CuotaOrigen {
                get {
                    return ((short)(this[this.tabletsa_AplicacionPagos.CuotaOrigenColumn]));
                }
                set {
                    this[this.tabletsa_AplicacionPagos.CuotaOrigenColumn] = value;
                }
            }
            
            public System.Decimal Importe {
                get {
                    return ((System.Decimal)(this[this.tabletsa_AplicacionPagos.ImporteColumn]));
                }
                set {
                    this[this.tabletsa_AplicacionPagos.ImporteColumn] = value;
                }
            }
            
            public string IdTipoDeComprobanteDestino {
                get {
                    return ((string)(this[this.tabletsa_AplicacionPagos.IdTipoDeComprobanteDestinoColumn]));
                }
                set {
                    this[this.tabletsa_AplicacionPagos.IdTipoDeComprobanteDestinoColumn] = value;
                }
            }
            
            public string IdComprobanteDestino {
                get {
                    return ((string)(this[this.tabletsa_AplicacionPagos.IdComprobanteDestinoColumn]));
                }
                set {
                    this[this.tabletsa_AplicacionPagos.IdComprobanteDestinoColumn] = value;
                }
            }
            
            public short CuotaDestino {
                get {
                    return ((short)(this[this.tabletsa_AplicacionPagos.CuotaDestinoColumn]));
                }
                set {
                    this[this.tabletsa_AplicacionPagos.CuotaDestinoColumn] = value;
                }
            }
            
            public long IdEmpresa {
                get {
                    try {
                        return ((long)(this[this.tabletsa_AplicacionPagos.IdEmpresaColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletsa_AplicacionPagos.IdEmpresaColumn] = value;
                }
            }
            
            public long IdSucursal {
                get {
                    try {
                        return ((long)(this[this.tabletsa_AplicacionPagos.IdSucursalColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletsa_AplicacionPagos.IdSucursalColumn] = value;
                }
            }
            
            public System.DateTime FechaCreacion {
                get {
                    try {
                        return ((System.DateTime)(this[this.tabletsa_AplicacionPagos.FechaCreacionColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletsa_AplicacionPagos.FechaCreacionColumn] = value;
                }
            }
            
            public long IdConexionCreacion {
                get {
                    try {
                        return ((long)(this[this.tabletsa_AplicacionPagos.IdConexionCreacionColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletsa_AplicacionPagos.IdConexionCreacionColumn] = value;
                }
            }
            
            public System.Byte[] UltimaModificacion {
                get {
                    try {
                        return ((System.Byte[])(this[this.tabletsa_AplicacionPagos.UltimaModificacionColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletsa_AplicacionPagos.UltimaModificacionColumn] = value;
                }
            }
            
            public long IdConexionUltimaModificacion {
                get {
                    try {
                        return ((long)(this[this.tabletsa_AplicacionPagos.IdConexionUltimaModificacionColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletsa_AplicacionPagos.IdConexionUltimaModificacionColumn] = value;
                }
            }
            
            public long IdReservado {
                get {
                    try {
                        return ((long)(this[this.tabletsa_AplicacionPagos.IdReservadoColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletsa_AplicacionPagos.IdReservadoColumn] = value;
                }
            }
            
            public System.Guid RowId {
                get {
                    try {
                        return ((System.Guid)(this[this.tabletsa_AplicacionPagos.RowIdColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletsa_AplicacionPagos.RowIdColumn] = value;
                }
            }
            
            public tsa_ComprobantesRow tsa_ComprobantesRowBytsa_Comprobantestsa_AplicacionPagos {
                get {
                    return ((tsa_ComprobantesRow)(this.GetParentRow(this.Table.ParentRelations["tsa_Comprobantestsa_AplicacionPagos"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["tsa_Comprobantestsa_AplicacionPagos"]);
                }
            }
            
            public tsa_ComprobantesRow tsa_ComprobantesRowBytsa_Comprobantestsa_AplicacionPagos1 {
                get {
                    return ((tsa_ComprobantesRow)(this.GetParentRow(this.Table.ParentRelations["tsa_Comprobantestsa_AplicacionPagos1"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["tsa_Comprobantestsa_AplicacionPagos1"]);
                }
            }
            
            public bool IsIdEmpresaNull() {
                return this.IsNull(this.tabletsa_AplicacionPagos.IdEmpresaColumn);
            }
            
            public void SetIdEmpresaNull() {
                this[this.tabletsa_AplicacionPagos.IdEmpresaColumn] = System.Convert.DBNull;
            }
            
            public bool IsIdSucursalNull() {
                return this.IsNull(this.tabletsa_AplicacionPagos.IdSucursalColumn);
            }
            
            public void SetIdSucursalNull() {
                this[this.tabletsa_AplicacionPagos.IdSucursalColumn] = System.Convert.DBNull;
            }
            
            public bool IsFechaCreacionNull() {
                return this.IsNull(this.tabletsa_AplicacionPagos.FechaCreacionColumn);
            }
            
            public void SetFechaCreacionNull() {
                this[this.tabletsa_AplicacionPagos.FechaCreacionColumn] = System.Convert.DBNull;
            }
            
            public bool IsIdConexionCreacionNull() {
                return this.IsNull(this.tabletsa_AplicacionPagos.IdConexionCreacionColumn);
            }
            
            public void SetIdConexionCreacionNull() {
                this[this.tabletsa_AplicacionPagos.IdConexionCreacionColumn] = System.Convert.DBNull;
            }
            
            public bool IsUltimaModificacionNull() {
                return this.IsNull(this.tabletsa_AplicacionPagos.UltimaModificacionColumn);
            }
            
            public void SetUltimaModificacionNull() {
                this[this.tabletsa_AplicacionPagos.UltimaModificacionColumn] = System.Convert.DBNull;
            }
            
            public bool IsIdConexionUltimaModificacionNull() {
                return this.IsNull(this.tabletsa_AplicacionPagos.IdConexionUltimaModificacionColumn);
            }
            
            public void SetIdConexionUltimaModificacionNull() {
                this[this.tabletsa_AplicacionPagos.IdConexionUltimaModificacionColumn] = System.Convert.DBNull;
            }
            
            public bool IsIdReservadoNull() {
                return this.IsNull(this.tabletsa_AplicacionPagos.IdReservadoColumn);
            }
            
            public void SetIdReservadoNull() {
                this[this.tabletsa_AplicacionPagos.IdReservadoColumn] = System.Convert.DBNull;
            }
            
            public bool IsRowIdNull() {
                return this.IsNull(this.tabletsa_AplicacionPagos.RowIdColumn);
            }
            
            public void SetRowIdNull() {
                this[this.tabletsa_AplicacionPagos.RowIdColumn] = System.Convert.DBNull;
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class tsa_AplicacionPagosRowChangeEvent : EventArgs {
            
            private tsa_AplicacionPagosRow eventRow;
            
            private DataRowAction eventAction;
            
            public tsa_AplicacionPagosRowChangeEvent(tsa_AplicacionPagosRow row, DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            public tsa_AplicacionPagosRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            public DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class tfi_ValoresDataTable : DataTable, System.Collections.IEnumerable {
            
            private DataColumn columnIdValor;
            
            private DataColumn columnIdTDCompTesoreria;
            
            private DataColumn columnNumero;
            
            private DataColumn columnIdEntidad;
            
            private DataColumn columnFecha;
            
            private DataColumn columnFechaVencimiento;
            
            private DataColumn columnValor;
            
            private DataColumn columnIdMoneda;
            
            private DataColumn columnIdCotizacionMoneda;
            
            private DataColumn columnFechaCreacion;
            
            private DataColumn columnIdConexionCreacion;
            
            private DataColumn columnUltimaModificacion;
            
            private DataColumn columnIdConexionUltimaModificacion;
            
            private DataColumn columnIdReservado;
            
            private DataColumn columnRowId;
            
            private DataColumn columnIdEmpresa;
            
            private DataColumn columnIdSucursal;
            
            private DataColumn columnIdInstanciaCaja;
            
            private DataColumn columnSigno;
            
            private DataColumn columnIdEstadoCheque;
            
            internal tfi_ValoresDataTable() : 
                    base("tfi_Valores") {
                this.InitClass();
            }
            
            internal tfi_ValoresDataTable(DataTable table) : 
                    base(table.TableName) {
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
                this.DisplayExpression = table.DisplayExpression;
            }
            
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            internal DataColumn IdValorColumn {
                get {
                    return this.columnIdValor;
                }
            }
            
            internal DataColumn IdTDCompTesoreriaColumn {
                get {
                    return this.columnIdTDCompTesoreria;
                }
            }
            
            internal DataColumn NumeroColumn {
                get {
                    return this.columnNumero;
                }
            }
            
            internal DataColumn IdEntidadColumn {
                get {
                    return this.columnIdEntidad;
                }
            }
            
            internal DataColumn FechaColumn {
                get {
                    return this.columnFecha;
                }
            }
            
            internal DataColumn FechaVencimientoColumn {
                get {
                    return this.columnFechaVencimiento;
                }
            }
            
            internal DataColumn ValorColumn {
                get {
                    return this.columnValor;
                }
            }
            
            internal DataColumn IdMonedaColumn {
                get {
                    return this.columnIdMoneda;
                }
            }
            
            internal DataColumn IdCotizacionMonedaColumn {
                get {
                    return this.columnIdCotizacionMoneda;
                }
            }
            
            internal DataColumn FechaCreacionColumn {
                get {
                    return this.columnFechaCreacion;
                }
            }
            
            internal DataColumn IdConexionCreacionColumn {
                get {
                    return this.columnIdConexionCreacion;
                }
            }
            
            internal DataColumn UltimaModificacionColumn {
                get {
                    return this.columnUltimaModificacion;
                }
            }
            
            internal DataColumn IdConexionUltimaModificacionColumn {
                get {
                    return this.columnIdConexionUltimaModificacion;
                }
            }
            
            internal DataColumn IdReservadoColumn {
                get {
                    return this.columnIdReservado;
                }
            }
            
            internal DataColumn RowIdColumn {
                get {
                    return this.columnRowId;
                }
            }
            
            internal DataColumn IdEmpresaColumn {
                get {
                    return this.columnIdEmpresa;
                }
            }
            
            internal DataColumn IdSucursalColumn {
                get {
                    return this.columnIdSucursal;
                }
            }
            
            internal DataColumn IdInstanciaCajaColumn {
                get {
                    return this.columnIdInstanciaCaja;
                }
            }
            
            internal DataColumn SignoColumn {
                get {
                    return this.columnSigno;
                }
            }
            
            internal DataColumn IdEstadoChequeColumn {
                get {
                    return this.columnIdEstadoCheque;
                }
            }
            
            public tfi_ValoresRow this[int index] {
                get {
                    return ((tfi_ValoresRow)(this.Rows[index]));
                }
            }
            
            public event tfi_ValoresRowChangeEventHandler tfi_ValoresRowChanged;
            
            public event tfi_ValoresRowChangeEventHandler tfi_ValoresRowChanging;
            
            public event tfi_ValoresRowChangeEventHandler tfi_ValoresRowDeleted;
            
            public event tfi_ValoresRowChangeEventHandler tfi_ValoresRowDeleting;
            
            public void Addtfi_ValoresRow(tfi_ValoresRow row) {
                this.Rows.Add(row);
            }
            
            public tfi_ValoresRow Addtfi_ValoresRow(
                        string IdValor, 
                        string IdTDCompTesoreria, 
                        string Numero, 
                        string IdEntidad, 
                        System.DateTime Fecha, 
                        System.DateTime FechaVencimiento, 
                        System.Decimal Valor, 
                        string IdMoneda, 
                        string IdCotizacionMoneda, 
                        System.DateTime FechaCreacion, 
                        long IdConexionCreacion, 
                        System.Byte[] UltimaModificacion, 
                        long IdConexionUltimaModificacion, 
                        long IdReservado, 
                        System.Guid RowId, 
                        long IdEmpresa, 
                        long IdSucursal, 
                        string IdInstanciaCaja, 
                        int Signo, 
                        string IdEstadoCheque) {
                tfi_ValoresRow rowtfi_ValoresRow = ((tfi_ValoresRow)(this.NewRow()));
                rowtfi_ValoresRow.ItemArray = new object[] {
                        IdValor,
                        IdTDCompTesoreria,
                        Numero,
                        IdEntidad,
                        Fecha,
                        FechaVencimiento,
                        Valor,
                        IdMoneda,
                        IdCotizacionMoneda,
                        FechaCreacion,
                        IdConexionCreacion,
                        UltimaModificacion,
                        IdConexionUltimaModificacion,
                        IdReservado,
                        RowId,
                        IdEmpresa,
                        IdSucursal,
                        IdInstanciaCaja,
                        Signo,
                        IdEstadoCheque};
                this.Rows.Add(rowtfi_ValoresRow);
                return rowtfi_ValoresRow;
            }
            
            public tfi_ValoresRow FindByIdValor(string IdValor) {
                return ((tfi_ValoresRow)(this.Rows.Find(new object[] {
                            IdValor})));
            }
            
            public System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            public override DataTable Clone() {
                tfi_ValoresDataTable cln = ((tfi_ValoresDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            protected override DataTable CreateInstance() {
                return new tfi_ValoresDataTable();
            }
            
            internal void InitVars() {
                this.columnIdValor = this.Columns["IdValor"];
                this.columnIdTDCompTesoreria = this.Columns["IdTDCompTesoreria"];
                this.columnNumero = this.Columns["Numero"];
                this.columnIdEntidad = this.Columns["IdEntidad"];
                this.columnFecha = this.Columns["Fecha"];
                this.columnFechaVencimiento = this.Columns["FechaVencimiento"];
                this.columnValor = this.Columns["Valor"];
                this.columnIdMoneda = this.Columns["IdMoneda"];
                this.columnIdCotizacionMoneda = this.Columns["IdCotizacionMoneda"];
                this.columnFechaCreacion = this.Columns["FechaCreacion"];
                this.columnIdConexionCreacion = this.Columns["IdConexionCreacion"];
                this.columnUltimaModificacion = this.Columns["UltimaModificacion"];
                this.columnIdConexionUltimaModificacion = this.Columns["IdConexionUltimaModificacion"];
                this.columnIdReservado = this.Columns["IdReservado"];
                this.columnRowId = this.Columns["RowId"];
                this.columnIdEmpresa = this.Columns["IdEmpresa"];
                this.columnIdSucursal = this.Columns["IdSucursal"];
                this.columnIdInstanciaCaja = this.Columns["IdInstanciaCaja"];
                this.columnSigno = this.Columns["Signo"];
                this.columnIdEstadoCheque = this.Columns["IdEstadoCheque"];
            }
            
            private void InitClass() {
                this.columnIdValor = new DataColumn("IdValor", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdValor);
                this.columnIdTDCompTesoreria = new DataColumn("IdTDCompTesoreria", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdTDCompTesoreria);
                this.columnNumero = new DataColumn("Numero", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnNumero);
                this.columnIdEntidad = new DataColumn("IdEntidad", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdEntidad);
                this.columnFecha = new DataColumn("Fecha", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnFecha);
                this.columnFechaVencimiento = new DataColumn("FechaVencimiento", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnFechaVencimiento);
                this.columnValor = new DataColumn("Valor", typeof(System.Decimal), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnValor);
                this.columnIdMoneda = new DataColumn("IdMoneda", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdMoneda);
                this.columnIdCotizacionMoneda = new DataColumn("IdCotizacionMoneda", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdCotizacionMoneda);
                this.columnFechaCreacion = new DataColumn("FechaCreacion", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnFechaCreacion);
                this.columnIdConexionCreacion = new DataColumn("IdConexionCreacion", typeof(long), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdConexionCreacion);
                this.columnUltimaModificacion = new DataColumn("UltimaModificacion", typeof(System.Byte[]), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnUltimaModificacion);
                this.columnIdConexionUltimaModificacion = new DataColumn("IdConexionUltimaModificacion", typeof(long), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdConexionUltimaModificacion);
                this.columnIdReservado = new DataColumn("IdReservado", typeof(long), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdReservado);
                this.columnRowId = new DataColumn("RowId", typeof(System.Guid), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnRowId);
                this.columnIdEmpresa = new DataColumn("IdEmpresa", typeof(long), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdEmpresa);
                this.columnIdSucursal = new DataColumn("IdSucursal", typeof(long), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdSucursal);
                this.columnIdInstanciaCaja = new DataColumn("IdInstanciaCaja", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdInstanciaCaja);
                this.columnSigno = new DataColumn("Signo", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnSigno);
                this.columnIdEstadoCheque = new DataColumn("IdEstadoCheque", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdEstadoCheque);
                this.Constraints.Add(new UniqueConstraint("tsa_ComprobantesExKey6", new DataColumn[] {
                                this.columnIdValor}, true));
                this.columnIdValor.AllowDBNull = false;
                this.columnIdValor.Unique = true;
                this.columnIdTDCompTesoreria.AllowDBNull = false;
                this.columnUltimaModificacion.ReadOnly = true;
            }
            
            public tfi_ValoresRow Newtfi_ValoresRow() {
                return ((tfi_ValoresRow)(this.NewRow()));
            }
            
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder) {
                return new tfi_ValoresRow(builder);
            }
            
            protected override System.Type GetRowType() {
                return typeof(tfi_ValoresRow);
            }
            
            protected override void OnRowChanged(DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.tfi_ValoresRowChanged != null)) {
                    this.tfi_ValoresRowChanged(this, new tfi_ValoresRowChangeEvent(((tfi_ValoresRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowChanging(DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.tfi_ValoresRowChanging != null)) {
                    this.tfi_ValoresRowChanging(this, new tfi_ValoresRowChangeEvent(((tfi_ValoresRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleted(DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.tfi_ValoresRowDeleted != null)) {
                    this.tfi_ValoresRowDeleted(this, new tfi_ValoresRowChangeEvent(((tfi_ValoresRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleting(DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.tfi_ValoresRowDeleting != null)) {
                    this.tfi_ValoresRowDeleting(this, new tfi_ValoresRowChangeEvent(((tfi_ValoresRow)(e.Row)), e.Action));
                }
            }
            
            public void Removetfi_ValoresRow(tfi_ValoresRow row) {
                this.Rows.Remove(row);
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class tfi_ValoresRow : DataRow {
            
            private tfi_ValoresDataTable tabletfi_Valores;
            
            internal tfi_ValoresRow(DataRowBuilder rb) : 
                    base(rb) {
                this.tabletfi_Valores = ((tfi_ValoresDataTable)(this.Table));
            }
            
            public string IdValor {
                get {
                    return ((string)(this[this.tabletfi_Valores.IdValorColumn]));
                }
                set {
                    this[this.tabletfi_Valores.IdValorColumn] = value;
                }
            }
            
            public string IdTDCompTesoreria {
                get {
                    return ((string)(this[this.tabletfi_Valores.IdTDCompTesoreriaColumn]));
                }
                set {
                    this[this.tabletfi_Valores.IdTDCompTesoreriaColumn] = value;
                }
            }
            
            public string Numero {
                get {
                    try {
                        return ((string)(this[this.tabletfi_Valores.NumeroColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletfi_Valores.NumeroColumn] = value;
                }
            }
            
            public string IdEntidad {
                get {
                    try {
                        return ((string)(this[this.tabletfi_Valores.IdEntidadColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletfi_Valores.IdEntidadColumn] = value;
                }
            }
            
            public System.DateTime Fecha {
                get {
                    try {
                        return ((System.DateTime)(this[this.tabletfi_Valores.FechaColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletfi_Valores.FechaColumn] = value;
                }
            }
            
            public System.DateTime FechaVencimiento {
                get {
                    try {
                        return ((System.DateTime)(this[this.tabletfi_Valores.FechaVencimientoColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletfi_Valores.FechaVencimientoColumn] = value;
                }
            }
            
            public System.Decimal Valor {
                get {
                    try {
                        return ((System.Decimal)(this[this.tabletfi_Valores.ValorColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletfi_Valores.ValorColumn] = value;
                }
            }
            
            public string IdMoneda {
                get {
                    try {
                        return ((string)(this[this.tabletfi_Valores.IdMonedaColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletfi_Valores.IdMonedaColumn] = value;
                }
            }
            
            public string IdCotizacionMoneda {
                get {
                    try {
                        return ((string)(this[this.tabletfi_Valores.IdCotizacionMonedaColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletfi_Valores.IdCotizacionMonedaColumn] = value;
                }
            }
            
            public System.DateTime FechaCreacion {
                get {
                    try {
                        return ((System.DateTime)(this[this.tabletfi_Valores.FechaCreacionColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletfi_Valores.FechaCreacionColumn] = value;
                }
            }
            
            public long IdConexionCreacion {
                get {
                    try {
                        return ((long)(this[this.tabletfi_Valores.IdConexionCreacionColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletfi_Valores.IdConexionCreacionColumn] = value;
                }
            }
            
            public System.Byte[] UltimaModificacion {
                get {
                    try {
                        return ((System.Byte[])(this[this.tabletfi_Valores.UltimaModificacionColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletfi_Valores.UltimaModificacionColumn] = value;
                }
            }
            
            public long IdConexionUltimaModificacion {
                get {
                    try {
                        return ((long)(this[this.tabletfi_Valores.IdConexionUltimaModificacionColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletfi_Valores.IdConexionUltimaModificacionColumn] = value;
                }
            }
            
            public long IdReservado {
                get {
                    try {
                        return ((long)(this[this.tabletfi_Valores.IdReservadoColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletfi_Valores.IdReservadoColumn] = value;
                }
            }
            
            public System.Guid RowId {
                get {
                    try {
                        return ((System.Guid)(this[this.tabletfi_Valores.RowIdColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletfi_Valores.RowIdColumn] = value;
                }
            }
            
            public long IdEmpresa {
                get {
                    try {
                        return ((long)(this[this.tabletfi_Valores.IdEmpresaColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletfi_Valores.IdEmpresaColumn] = value;
                }
            }
            
            public long IdSucursal {
                get {
                    try {
                        return ((long)(this[this.tabletfi_Valores.IdSucursalColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletfi_Valores.IdSucursalColumn] = value;
                }
            }
            
            public string IdInstanciaCaja {
                get {
                    try {
                        return ((string)(this[this.tabletfi_Valores.IdInstanciaCajaColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletfi_Valores.IdInstanciaCajaColumn] = value;
                }
            }
            
            public int Signo {
                get {
                    try {
                        return ((int)(this[this.tabletfi_Valores.SignoColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletfi_Valores.SignoColumn] = value;
                }
            }
            
            public string IdEstadoCheque {
                get {
                    try {
                        return ((string)(this[this.tabletfi_Valores.IdEstadoChequeColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletfi_Valores.IdEstadoChequeColumn] = value;
                }
            }
            
            public bool IsNumeroNull() {
                return this.IsNull(this.tabletfi_Valores.NumeroColumn);
            }
            
            public void SetNumeroNull() {
                this[this.tabletfi_Valores.NumeroColumn] = System.Convert.DBNull;
            }
            
            public bool IsIdEntidadNull() {
                return this.IsNull(this.tabletfi_Valores.IdEntidadColumn);
            }
            
            public void SetIdEntidadNull() {
                this[this.tabletfi_Valores.IdEntidadColumn] = System.Convert.DBNull;
            }
            
            public bool IsFechaNull() {
                return this.IsNull(this.tabletfi_Valores.FechaColumn);
            }
            
            public void SetFechaNull() {
                this[this.tabletfi_Valores.FechaColumn] = System.Convert.DBNull;
            }
            
            public bool IsFechaVencimientoNull() {
                return this.IsNull(this.tabletfi_Valores.FechaVencimientoColumn);
            }
            
            public void SetFechaVencimientoNull() {
                this[this.tabletfi_Valores.FechaVencimientoColumn] = System.Convert.DBNull;
            }
            
            public bool IsValorNull() {
                return this.IsNull(this.tabletfi_Valores.ValorColumn);
            }
            
            public void SetValorNull() {
                this[this.tabletfi_Valores.ValorColumn] = System.Convert.DBNull;
            }
            
            public bool IsIdMonedaNull() {
                return this.IsNull(this.tabletfi_Valores.IdMonedaColumn);
            }
            
            public void SetIdMonedaNull() {
                this[this.tabletfi_Valores.IdMonedaColumn] = System.Convert.DBNull;
            }
            
            public bool IsIdCotizacionMonedaNull() {
                return this.IsNull(this.tabletfi_Valores.IdCotizacionMonedaColumn);
            }
            
            public void SetIdCotizacionMonedaNull() {
                this[this.tabletfi_Valores.IdCotizacionMonedaColumn] = System.Convert.DBNull;
            }
            
            public bool IsFechaCreacionNull() {
                return this.IsNull(this.tabletfi_Valores.FechaCreacionColumn);
            }
            
            public void SetFechaCreacionNull() {
                this[this.tabletfi_Valores.FechaCreacionColumn] = System.Convert.DBNull;
            }
            
            public bool IsIdConexionCreacionNull() {
                return this.IsNull(this.tabletfi_Valores.IdConexionCreacionColumn);
            }
            
            public void SetIdConexionCreacionNull() {
                this[this.tabletfi_Valores.IdConexionCreacionColumn] = System.Convert.DBNull;
            }
            
            public bool IsUltimaModificacionNull() {
                return this.IsNull(this.tabletfi_Valores.UltimaModificacionColumn);
            }
            
            public void SetUltimaModificacionNull() {
                this[this.tabletfi_Valores.UltimaModificacionColumn] = System.Convert.DBNull;
            }
            
            public bool IsIdConexionUltimaModificacionNull() {
                return this.IsNull(this.tabletfi_Valores.IdConexionUltimaModificacionColumn);
            }
            
            public void SetIdConexionUltimaModificacionNull() {
                this[this.tabletfi_Valores.IdConexionUltimaModificacionColumn] = System.Convert.DBNull;
            }
            
            public bool IsIdReservadoNull() {
                return this.IsNull(this.tabletfi_Valores.IdReservadoColumn);
            }
            
            public void SetIdReservadoNull() {
                this[this.tabletfi_Valores.IdReservadoColumn] = System.Convert.DBNull;
            }
            
            public bool IsRowIdNull() {
                return this.IsNull(this.tabletfi_Valores.RowIdColumn);
            }
            
            public void SetRowIdNull() {
                this[this.tabletfi_Valores.RowIdColumn] = System.Convert.DBNull;
            }
            
            public bool IsIdEmpresaNull() {
                return this.IsNull(this.tabletfi_Valores.IdEmpresaColumn);
            }
            
            public void SetIdEmpresaNull() {
                this[this.tabletfi_Valores.IdEmpresaColumn] = System.Convert.DBNull;
            }
            
            public bool IsIdSucursalNull() {
                return this.IsNull(this.tabletfi_Valores.IdSucursalColumn);
            }
            
            public void SetIdSucursalNull() {
                this[this.tabletfi_Valores.IdSucursalColumn] = System.Convert.DBNull;
            }
            
            public bool IsIdInstanciaCajaNull() {
                return this.IsNull(this.tabletfi_Valores.IdInstanciaCajaColumn);
            }
            
            public void SetIdInstanciaCajaNull() {
                this[this.tabletfi_Valores.IdInstanciaCajaColumn] = System.Convert.DBNull;
            }
            
            public bool IsSignoNull() {
                return this.IsNull(this.tabletfi_Valores.SignoColumn);
            }
            
            public void SetSignoNull() {
                this[this.tabletfi_Valores.SignoColumn] = System.Convert.DBNull;
            }
            
            public bool IsIdEstadoChequeNull() {
                return this.IsNull(this.tabletfi_Valores.IdEstadoChequeColumn);
            }
            
            public void SetIdEstadoChequeNull() {
                this[this.tabletfi_Valores.IdEstadoChequeColumn] = System.Convert.DBNull;
            }
            
            public tsa_ComprobanteDetalleDePagosRow[] Gettsa_ComprobanteDetalleDePagosRows() {
                return ((tsa_ComprobanteDetalleDePagosRow[])(this.GetChildRows(this.Table.ChildRelations["tfi_Valorestsa_ComprobanteDetalleDePagos"])));
            }
            
            public tfi_ValoresDatosAuxiliaresRow[] Gettfi_ValoresDatosAuxiliaresRows() {
                return ((tfi_ValoresDatosAuxiliaresRow[])(this.GetChildRows(this.Table.ChildRelations["tfi_Valorestfi_ValoresDatosAuxiliares"])));
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class tfi_ValoresRowChangeEvent : EventArgs {
            
            private tfi_ValoresRow eventRow;
            
            private DataRowAction eventAction;
            
            public tfi_ValoresRowChangeEvent(tfi_ValoresRow row, DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            public tfi_ValoresRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            public DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class tsa_ComprobantesDetDataTable : DataTable, System.Collections.IEnumerable {
            
            private DataColumn columnIdComprobante;
            
            private DataColumn columnOrdinal;
            
            private DataColumn columnIdEmpresa;
            
            private DataColumn columnIdSucursal;
            
            private DataColumn columnIdTipoDeComprobante;
            
            private DataColumn columnFecha;
            
            private DataColumn columnNumero;
            
            private DataColumn columnIdProducto;
            
            private DataColumn columnCantidad;
            
            private DataColumn columnPrecioFinal;
            
            private DataColumn columnPrecioBruto;
            
            private DataColumn columnPrecioNeto;
            
            private DataColumn columnDescuentosAplicados;
            
            private DataColumn columnBonificacionRecargoFinanciero;
            
            private DataColumn columnBonificacionRecargoCuenta;
            
            private DataColumn columnBonificacionRecargoProducto;
            
            private DataColumn columnPrecioDeCosto;
            
            private DataColumn columnImpuestosDirectos;
            
            private DataColumn columnImpuestosIndirectos;
            
            private DataColumn columnIdMonedaOrigen;
            
            private DataColumn columnIdMonedaCierre;
            
            private DataColumn columnIdCotizacionCierre;
            
            private DataColumn columnFechaCreacion;
            
            private DataColumn columnIdConexionCreacion;
            
            private DataColumn columnUltimaModificacion;
            
            private DataColumn columnIdConexionUltimaModificacion;
            
            private DataColumn columnIdReservado;
            
            private DataColumn columnRowId;
            
            private DataColumn columnRowIdGenerado;
            
            private DataColumn columnVisible;
            
            private DataColumn columnIdListaDePrecio;
            
            private DataColumn columnCoeficienteListaDePrecio;
            
            private DataColumn columnModoDeAplicacion;
            
            private DataColumn columnPrecioNetoOriginal;
            
            private DataColumn columnPrecioBrutoOriginal;
            
            private DataColumn columnPrecioFinalOriginal;
            
            private DataColumn columnMaxDescuentoPorcentualOriginal;
            
            private DataColumn columnMaxDescuentoOriginal;
            
            private DataColumn columnDescuentoAplicadoVendedor;
            
            private DataColumn columnDescuentoPorcentualAplicadoVendedor;
            
            private DataColumn columnPrecioDeCostoDirectoOriginal;
            
            private DataColumn columnPrecioDeCostoIndirectoOriginal;
            
            private DataColumn columnPrecioDeCostoRefOriginal;
            
            private DataColumn columnCoeficiente1Original;
            
            private DataColumn columnCoeficiente2Original;
            
            private DataColumn columnCoeficiente3Original;
            
            private DataColumn columnCoeficiente4Original;
            
            private DataColumn columnCoeficiente5Original;
            
            private DataColumn columnCoeficiente6Original;
            
            private DataColumn columnCoeficiente7Original;
            
            private DataColumn columnCoeficiente8Original;
            
            private DataColumn columnCoeficiente9Original;
            
            private DataColumn columnCoeficiente10Original;
            
            private DataColumn columnCodigoSecundarioOriginal;
            
            private DataColumn columnPorcentajeDescuentoFijoAplicado;
            
            private DataColumn columnPrecioDeCostoReposicionOriginal;
            
            private DataColumn columnPrecioDeCostoPromedioPonderadoOriginal;
            
            private DataColumn columnPrecioDeVentaMercadoBolsaOriginal;
            
            private DataColumn columnPrecioDeVentaMercadoCadenaOriginal;
            
            private DataColumn columnPrecioDeVentaMercadoCompetenciaDirectaOriginal;
            
            private DataColumn columnUsaPrecioDeCostoReposicionOriginal;
            
            private DataColumn columnIdCotizacionCierrePrecioDeCostoRefOriginal;
            
            internal tsa_ComprobantesDetDataTable() : 
                    base("tsa_ComprobantesDet") {
                this.InitClass();
            }
            
            internal tsa_ComprobantesDetDataTable(DataTable table) : 
                    base(table.TableName) {
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
                this.DisplayExpression = table.DisplayExpression;
            }
            
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            internal DataColumn IdComprobanteColumn {
                get {
                    return this.columnIdComprobante;
                }
            }
            
            internal DataColumn OrdinalColumn {
                get {
                    return this.columnOrdinal;
                }
            }
            
            internal DataColumn IdEmpresaColumn {
                get {
                    return this.columnIdEmpresa;
                }
            }
            
            internal DataColumn IdSucursalColumn {
                get {
                    return this.columnIdSucursal;
                }
            }
            
            internal DataColumn IdTipoDeComprobanteColumn {
                get {
                    return this.columnIdTipoDeComprobante;
                }
            }
            
            internal DataColumn FechaColumn {
                get {
                    return this.columnFecha;
                }
            }
            
            internal DataColumn NumeroColumn {
                get {
                    return this.columnNumero;
                }
            }
            
            internal DataColumn IdProductoColumn {
                get {
                    return this.columnIdProducto;
                }
            }
            
            internal DataColumn CantidadColumn {
                get {
                    return this.columnCantidad;
                }
            }
            
            internal DataColumn PrecioFinalColumn {
                get {
                    return this.columnPrecioFinal;
                }
            }
            
            internal DataColumn PrecioBrutoColumn {
                get {
                    return this.columnPrecioBruto;
                }
            }
            
            internal DataColumn PrecioNetoColumn {
                get {
                    return this.columnPrecioNeto;
                }
            }
            
            internal DataColumn DescuentosAplicadosColumn {
                get {
                    return this.columnDescuentosAplicados;
                }
            }
            
            internal DataColumn BonificacionRecargoFinancieroColumn {
                get {
                    return this.columnBonificacionRecargoFinanciero;
                }
            }
            
            internal DataColumn BonificacionRecargoCuentaColumn {
                get {
                    return this.columnBonificacionRecargoCuenta;
                }
            }
            
            internal DataColumn BonificacionRecargoProductoColumn {
                get {
                    return this.columnBonificacionRecargoProducto;
                }
            }
            
            internal DataColumn PrecioDeCostoColumn {
                get {
                    return this.columnPrecioDeCosto;
                }
            }
            
            internal DataColumn ImpuestosDirectosColumn {
                get {
                    return this.columnImpuestosDirectos;
                }
            }
            
            internal DataColumn ImpuestosIndirectosColumn {
                get {
                    return this.columnImpuestosIndirectos;
                }
            }
            
            internal DataColumn IdMonedaOrigenColumn {
                get {
                    return this.columnIdMonedaOrigen;
                }
            }
            
            internal DataColumn IdMonedaCierreColumn {
                get {
                    return this.columnIdMonedaCierre;
                }
            }
            
            internal DataColumn IdCotizacionCierreColumn {
                get {
                    return this.columnIdCotizacionCierre;
                }
            }
            
            internal DataColumn FechaCreacionColumn {
                get {
                    return this.columnFechaCreacion;
                }
            }
            
            internal DataColumn IdConexionCreacionColumn {
                get {
                    return this.columnIdConexionCreacion;
                }
            }
            
            internal DataColumn UltimaModificacionColumn {
                get {
                    return this.columnUltimaModificacion;
                }
            }
            
            internal DataColumn IdConexionUltimaModificacionColumn {
                get {
                    return this.columnIdConexionUltimaModificacion;
                }
            }
            
            internal DataColumn IdReservadoColumn {
                get {
                    return this.columnIdReservado;
                }
            }
            
            internal DataColumn RowIdColumn {
                get {
                    return this.columnRowId;
                }
            }
            
            internal DataColumn RowIdGeneradoColumn {
                get {
                    return this.columnRowIdGenerado;
                }
            }
            
            internal DataColumn VisibleColumn {
                get {
                    return this.columnVisible;
                }
            }
            
            internal DataColumn IdListaDePrecioColumn {
                get {
                    return this.columnIdListaDePrecio;
                }
            }
            
            internal DataColumn CoeficienteListaDePrecioColumn {
                get {
                    return this.columnCoeficienteListaDePrecio;
                }
            }
            
            internal DataColumn ModoDeAplicacionColumn {
                get {
                    return this.columnModoDeAplicacion;
                }
            }
            
            internal DataColumn PrecioNetoOriginalColumn {
                get {
                    return this.columnPrecioNetoOriginal;
                }
            }
            
            internal DataColumn PrecioBrutoOriginalColumn {
                get {
                    return this.columnPrecioBrutoOriginal;
                }
            }
            
            internal DataColumn PrecioFinalOriginalColumn {
                get {
                    return this.columnPrecioFinalOriginal;
                }
            }
            
            internal DataColumn MaxDescuentoPorcentualOriginalColumn {
                get {
                    return this.columnMaxDescuentoPorcentualOriginal;
                }
            }
            
            internal DataColumn MaxDescuentoOriginalColumn {
                get {
                    return this.columnMaxDescuentoOriginal;
                }
            }
            
            internal DataColumn DescuentoAplicadoVendedorColumn {
                get {
                    return this.columnDescuentoAplicadoVendedor;
                }
            }
            
            internal DataColumn DescuentoPorcentualAplicadoVendedorColumn {
                get {
                    return this.columnDescuentoPorcentualAplicadoVendedor;
                }
            }
            
            internal DataColumn PrecioDeCostoDirectoOriginalColumn {
                get {
                    return this.columnPrecioDeCostoDirectoOriginal;
                }
            }
            
            internal DataColumn PrecioDeCostoIndirectoOriginalColumn {
                get {
                    return this.columnPrecioDeCostoIndirectoOriginal;
                }
            }
            
            internal DataColumn PrecioDeCostoRefOriginalColumn {
                get {
                    return this.columnPrecioDeCostoRefOriginal;
                }
            }
            
            internal DataColumn Coeficiente1OriginalColumn {
                get {
                    return this.columnCoeficiente1Original;
                }
            }
            
            internal DataColumn Coeficiente2OriginalColumn {
                get {
                    return this.columnCoeficiente2Original;
                }
            }
            
            internal DataColumn Coeficiente3OriginalColumn {
                get {
                    return this.columnCoeficiente3Original;
                }
            }
            
            internal DataColumn Coeficiente4OriginalColumn {
                get {
                    return this.columnCoeficiente4Original;
                }
            }
            
            internal DataColumn Coeficiente5OriginalColumn {
                get {
                    return this.columnCoeficiente5Original;
                }
            }
            
            internal DataColumn Coeficiente6OriginalColumn {
                get {
                    return this.columnCoeficiente6Original;
                }
            }
            
            internal DataColumn Coeficiente7OriginalColumn {
                get {
                    return this.columnCoeficiente7Original;
                }
            }
            
            internal DataColumn Coeficiente8OriginalColumn {
                get {
                    return this.columnCoeficiente8Original;
                }
            }
            
            internal DataColumn Coeficiente9OriginalColumn {
                get {
                    return this.columnCoeficiente9Original;
                }
            }
            
            internal DataColumn Coeficiente10OriginalColumn {
                get {
                    return this.columnCoeficiente10Original;
                }
            }
            
            internal DataColumn CodigoSecundarioOriginalColumn {
                get {
                    return this.columnCodigoSecundarioOriginal;
                }
            }
            
            internal DataColumn PorcentajeDescuentoFijoAplicadoColumn {
                get {
                    return this.columnPorcentajeDescuentoFijoAplicado;
                }
            }
            
            internal DataColumn PrecioDeCostoReposicionOriginalColumn {
                get {
                    return this.columnPrecioDeCostoReposicionOriginal;
                }
            }
            
            internal DataColumn PrecioDeCostoPromedioPonderadoOriginalColumn {
                get {
                    return this.columnPrecioDeCostoPromedioPonderadoOriginal;
                }
            }
            
            internal DataColumn PrecioDeVentaMercadoBolsaOriginalColumn {
                get {
                    return this.columnPrecioDeVentaMercadoBolsaOriginal;
                }
            }
            
            internal DataColumn PrecioDeVentaMercadoCadenaOriginalColumn {
                get {
                    return this.columnPrecioDeVentaMercadoCadenaOriginal;
                }
            }
            
            internal DataColumn PrecioDeVentaMercadoCompetenciaDirectaOriginalColumn {
                get {
                    return this.columnPrecioDeVentaMercadoCompetenciaDirectaOriginal;
                }
            }
            
            internal DataColumn UsaPrecioDeCostoReposicionOriginalColumn {
                get {
                    return this.columnUsaPrecioDeCostoReposicionOriginal;
                }
            }
            
            internal DataColumn IdCotizacionCierrePrecioDeCostoRefOriginalColumn {
                get {
                    return this.columnIdCotizacionCierrePrecioDeCostoRefOriginal;
                }
            }
            
            public tsa_ComprobantesDetRow this[int index] {
                get {
                    return ((tsa_ComprobantesDetRow)(this.Rows[index]));
                }
            }
            
            public event tsa_ComprobantesDetRowChangeEventHandler tsa_ComprobantesDetRowChanged;
            
            public event tsa_ComprobantesDetRowChangeEventHandler tsa_ComprobantesDetRowChanging;
            
            public event tsa_ComprobantesDetRowChangeEventHandler tsa_ComprobantesDetRowDeleted;
            
            public event tsa_ComprobantesDetRowChangeEventHandler tsa_ComprobantesDetRowDeleting;
            
            public void Addtsa_ComprobantesDetRow(tsa_ComprobantesDetRow row) {
                this.Rows.Add(row);
            }
            
            public tsa_ComprobantesDetRow Addtsa_ComprobantesDetRow(
                        tsa_ComprobantesRow parenttsa_ComprobantesRowBytsa_Comprobantestsa_ComprobantesDet, 
                        long Ordinal, 
                        long IdEmpresa, 
                        long IdSucursal, 
                        string IdTipoDeComprobante, 
                        System.DateTime Fecha, 
                        string Numero, 
                        string IdProducto, 
                        System.Decimal Cantidad, 
                        System.Decimal PrecioFinal, 
                        System.Decimal PrecioBruto, 
                        System.Decimal PrecioNeto, 
                        System.Decimal DescuentosAplicados, 
                        System.Decimal BonificacionRecargoFinanciero, 
                        System.Decimal BonificacionRecargoCuenta, 
                        System.Decimal BonificacionRecargoProducto, 
                        System.Decimal PrecioDeCosto, 
                        System.Decimal ImpuestosDirectos, 
                        System.Decimal ImpuestosIndirectos, 
                        string IdMonedaOrigen, 
                        string IdMonedaCierre, 
                        string IdCotizacionCierre, 
                        System.DateTime FechaCreacion, 
                        long IdConexionCreacion, 
                        System.Byte[] UltimaModificacion, 
                        long IdConexionUltimaModificacion, 
                        long IdReservado, 
                        System.Guid RowId, 
                        string RowIdGenerado, 
                        bool Visible, 
                        string IdListaDePrecio, 
                        System.Decimal CoeficienteListaDePrecio, 
                        string ModoDeAplicacion, 
                        System.Decimal PrecioNetoOriginal, 
                        System.Decimal PrecioBrutoOriginal, 
                        System.Decimal PrecioFinalOriginal, 
                        System.Decimal MaxDescuentoPorcentualOriginal, 
                        System.Decimal MaxDescuentoOriginal, 
                        System.Decimal DescuentoAplicadoVendedor, 
                        System.Decimal DescuentoPorcentualAplicadoVendedor, 
                        System.Decimal PrecioDeCostoDirectoOriginal, 
                        System.Decimal PrecioDeCostoIndirectoOriginal, 
                        System.Decimal PrecioDeCostoRefOriginal, 
                        System.Decimal Coeficiente1Original, 
                        System.Decimal Coeficiente2Original, 
                        System.Decimal Coeficiente3Original, 
                        System.Decimal Coeficiente4Original, 
                        System.Decimal Coeficiente5Original, 
                        System.Decimal Coeficiente6Original, 
                        System.Decimal Coeficiente7Original, 
                        System.Decimal Coeficiente8Original, 
                        System.Decimal Coeficiente9Original, 
                        System.Decimal Coeficiente10Original, 
                        string CodigoSecundarioOriginal, 
                        System.Decimal PorcentajeDescuentoFijoAplicado, 
                        System.Decimal PrecioDeCostoReposicionOriginal, 
                        System.Decimal PrecioDeCostoPromedioPonderadoOriginal, 
                        System.Decimal PrecioDeVentaMercadoBolsaOriginal, 
                        System.Decimal PrecioDeVentaMercadoCadenaOriginal, 
                        System.Decimal PrecioDeVentaMercadoCompetenciaDirectaOriginal, 
                        bool UsaPrecioDeCostoReposicionOriginal, 
                        string IdCotizacionCierrePrecioDeCostoRefOriginal) {
                tsa_ComprobantesDetRow rowtsa_ComprobantesDetRow = ((tsa_ComprobantesDetRow)(this.NewRow()));
                rowtsa_ComprobantesDetRow.ItemArray = new object[] {
                        parenttsa_ComprobantesRowBytsa_Comprobantestsa_ComprobantesDet[0],
                        Ordinal,
                        IdEmpresa,
                        IdSucursal,
                        IdTipoDeComprobante,
                        Fecha,
                        Numero,
                        IdProducto,
                        Cantidad,
                        PrecioFinal,
                        PrecioBruto,
                        PrecioNeto,
                        DescuentosAplicados,
                        BonificacionRecargoFinanciero,
                        BonificacionRecargoCuenta,
                        BonificacionRecargoProducto,
                        PrecioDeCosto,
                        ImpuestosDirectos,
                        ImpuestosIndirectos,
                        IdMonedaOrigen,
                        IdMonedaCierre,
                        IdCotizacionCierre,
                        FechaCreacion,
                        IdConexionCreacion,
                        UltimaModificacion,
                        IdConexionUltimaModificacion,
                        IdReservado,
                        RowId,
                        RowIdGenerado,
                        Visible,
                        IdListaDePrecio,
                        CoeficienteListaDePrecio,
                        ModoDeAplicacion,
                        PrecioNetoOriginal,
                        PrecioBrutoOriginal,
                        PrecioFinalOriginal,
                        MaxDescuentoPorcentualOriginal,
                        MaxDescuentoOriginal,
                        DescuentoAplicadoVendedor,
                        DescuentoPorcentualAplicadoVendedor,
                        PrecioDeCostoDirectoOriginal,
                        PrecioDeCostoIndirectoOriginal,
                        PrecioDeCostoRefOriginal,
                        Coeficiente1Original,
                        Coeficiente2Original,
                        Coeficiente3Original,
                        Coeficiente4Original,
                        Coeficiente5Original,
                        Coeficiente6Original,
                        Coeficiente7Original,
                        Coeficiente8Original,
                        Coeficiente9Original,
                        Coeficiente10Original,
                        CodigoSecundarioOriginal,
                        PorcentajeDescuentoFijoAplicado,
                        PrecioDeCostoReposicionOriginal,
                        PrecioDeCostoPromedioPonderadoOriginal,
                        PrecioDeVentaMercadoBolsaOriginal,
                        PrecioDeVentaMercadoCadenaOriginal,
                        PrecioDeVentaMercadoCompetenciaDirectaOriginal,
                        UsaPrecioDeCostoReposicionOriginal,
                        IdCotizacionCierrePrecioDeCostoRefOriginal};
                this.Rows.Add(rowtsa_ComprobantesDetRow);
                return rowtsa_ComprobantesDetRow;
            }
            
            public tsa_ComprobantesDetRow FindByIdComprobanteOrdinal(string IdComprobante, long Ordinal) {
                return ((tsa_ComprobantesDetRow)(this.Rows.Find(new object[] {
                            IdComprobante,
                            Ordinal})));
            }
            
            public System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            public override DataTable Clone() {
                tsa_ComprobantesDetDataTable cln = ((tsa_ComprobantesDetDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            protected override DataTable CreateInstance() {
                return new tsa_ComprobantesDetDataTable();
            }
            
            internal void InitVars() {
                this.columnIdComprobante = this.Columns["IdComprobante"];
                this.columnOrdinal = this.Columns["Ordinal"];
                this.columnIdEmpresa = this.Columns["IdEmpresa"];
                this.columnIdSucursal = this.Columns["IdSucursal"];
                this.columnIdTipoDeComprobante = this.Columns["IdTipoDeComprobante"];
                this.columnFecha = this.Columns["Fecha"];
                this.columnNumero = this.Columns["Numero"];
                this.columnIdProducto = this.Columns["IdProducto"];
                this.columnCantidad = this.Columns["Cantidad"];
                this.columnPrecioFinal = this.Columns["PrecioFinal"];
                this.columnPrecioBruto = this.Columns["PrecioBruto"];
                this.columnPrecioNeto = this.Columns["PrecioNeto"];
                this.columnDescuentosAplicados = this.Columns["DescuentosAplicados"];
                this.columnBonificacionRecargoFinanciero = this.Columns["BonificacionRecargoFinanciero"];
                this.columnBonificacionRecargoCuenta = this.Columns["BonificacionRecargoCuenta"];
                this.columnBonificacionRecargoProducto = this.Columns["BonificacionRecargoProducto"];
                this.columnPrecioDeCosto = this.Columns["PrecioDeCosto"];
                this.columnImpuestosDirectos = this.Columns["ImpuestosDirectos"];
                this.columnImpuestosIndirectos = this.Columns["ImpuestosIndirectos"];
                this.columnIdMonedaOrigen = this.Columns["IdMonedaOrigen"];
                this.columnIdMonedaCierre = this.Columns["IdMonedaCierre"];
                this.columnIdCotizacionCierre = this.Columns["IdCotizacionCierre"];
                this.columnFechaCreacion = this.Columns["FechaCreacion"];
                this.columnIdConexionCreacion = this.Columns["IdConexionCreacion"];
                this.columnUltimaModificacion = this.Columns["UltimaModificacion"];
                this.columnIdConexionUltimaModificacion = this.Columns["IdConexionUltimaModificacion"];
                this.columnIdReservado = this.Columns["IdReservado"];
                this.columnRowId = this.Columns["RowId"];
                this.columnRowIdGenerado = this.Columns["RowIdGenerado"];
                this.columnVisible = this.Columns["Visible"];
                this.columnIdListaDePrecio = this.Columns["IdListaDePrecio"];
                this.columnCoeficienteListaDePrecio = this.Columns["CoeficienteListaDePrecio"];
                this.columnModoDeAplicacion = this.Columns["ModoDeAplicacion"];
                this.columnPrecioNetoOriginal = this.Columns["PrecioNetoOriginal"];
                this.columnPrecioBrutoOriginal = this.Columns["PrecioBrutoOriginal"];
                this.columnPrecioFinalOriginal = this.Columns["PrecioFinalOriginal"];
                this.columnMaxDescuentoPorcentualOriginal = this.Columns["MaxDescuentoPorcentualOriginal"];
                this.columnMaxDescuentoOriginal = this.Columns["MaxDescuentoOriginal"];
                this.columnDescuentoAplicadoVendedor = this.Columns["DescuentoAplicadoVendedor"];
                this.columnDescuentoPorcentualAplicadoVendedor = this.Columns["DescuentoPorcentualAplicadoVendedor"];
                this.columnPrecioDeCostoDirectoOriginal = this.Columns["PrecioDeCostoDirectoOriginal"];
                this.columnPrecioDeCostoIndirectoOriginal = this.Columns["PrecioDeCostoIndirectoOriginal"];
                this.columnPrecioDeCostoRefOriginal = this.Columns["PrecioDeCostoRefOriginal"];
                this.columnCoeficiente1Original = this.Columns["Coeficiente1Original"];
                this.columnCoeficiente2Original = this.Columns["Coeficiente2Original"];
                this.columnCoeficiente3Original = this.Columns["Coeficiente3Original"];
                this.columnCoeficiente4Original = this.Columns["Coeficiente4Original"];
                this.columnCoeficiente5Original = this.Columns["Coeficiente5Original"];
                this.columnCoeficiente6Original = this.Columns["Coeficiente6Original"];
                this.columnCoeficiente7Original = this.Columns["Coeficiente7Original"];
                this.columnCoeficiente8Original = this.Columns["Coeficiente8Original"];
                this.columnCoeficiente9Original = this.Columns["Coeficiente9Original"];
                this.columnCoeficiente10Original = this.Columns["Coeficiente10Original"];
                this.columnCodigoSecundarioOriginal = this.Columns["CodigoSecundarioOriginal"];
                this.columnPorcentajeDescuentoFijoAplicado = this.Columns["PorcentajeDescuentoFijoAplicado"];
                this.columnPrecioDeCostoReposicionOriginal = this.Columns["PrecioDeCostoReposicionOriginal"];
                this.columnPrecioDeCostoPromedioPonderadoOriginal = this.Columns["PrecioDeCostoPromedioPonderadoOriginal"];
                this.columnPrecioDeVentaMercadoBolsaOriginal = this.Columns["PrecioDeVentaMercadoBolsaOriginal"];
                this.columnPrecioDeVentaMercadoCadenaOriginal = this.Columns["PrecioDeVentaMercadoCadenaOriginal"];
                this.columnPrecioDeVentaMercadoCompetenciaDirectaOriginal = this.Columns["PrecioDeVentaMercadoCompetenciaDirectaOriginal"];
                this.columnUsaPrecioDeCostoReposicionOriginal = this.Columns["UsaPrecioDeCostoReposicionOriginal"];
                this.columnIdCotizacionCierrePrecioDeCostoRefOriginal = this.Columns["IdCotizacionCierrePrecioDeCostoRefOriginal"];
            }
            
            private void InitClass() {
                this.columnIdComprobante = new DataColumn("IdComprobante", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdComprobante);
                this.columnOrdinal = new DataColumn("Ordinal", typeof(long), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnOrdinal);
                this.columnIdEmpresa = new DataColumn("IdEmpresa", typeof(long), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdEmpresa);
                this.columnIdSucursal = new DataColumn("IdSucursal", typeof(long), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdSucursal);
                this.columnIdTipoDeComprobante = new DataColumn("IdTipoDeComprobante", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdTipoDeComprobante);
                this.columnFecha = new DataColumn("Fecha", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnFecha);
                this.columnNumero = new DataColumn("Numero", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnNumero);
                this.columnIdProducto = new DataColumn("IdProducto", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdProducto);
                this.columnCantidad = new DataColumn("Cantidad", typeof(System.Decimal), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnCantidad);
                this.columnPrecioFinal = new DataColumn("PrecioFinal", typeof(System.Decimal), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnPrecioFinal);
                this.columnPrecioBruto = new DataColumn("PrecioBruto", typeof(System.Decimal), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnPrecioBruto);
                this.columnPrecioNeto = new DataColumn("PrecioNeto", typeof(System.Decimal), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnPrecioNeto);
                this.columnDescuentosAplicados = new DataColumn("DescuentosAplicados", typeof(System.Decimal), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnDescuentosAplicados);
                this.columnBonificacionRecargoFinanciero = new DataColumn("BonificacionRecargoFinanciero", typeof(System.Decimal), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnBonificacionRecargoFinanciero);
                this.columnBonificacionRecargoCuenta = new DataColumn("BonificacionRecargoCuenta", typeof(System.Decimal), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnBonificacionRecargoCuenta);
                this.columnBonificacionRecargoProducto = new DataColumn("BonificacionRecargoProducto", typeof(System.Decimal), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnBonificacionRecargoProducto);
                this.columnPrecioDeCosto = new DataColumn("PrecioDeCosto", typeof(System.Decimal), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnPrecioDeCosto);
                this.columnImpuestosDirectos = new DataColumn("ImpuestosDirectos", typeof(System.Decimal), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnImpuestosDirectos);
                this.columnImpuestosIndirectos = new DataColumn("ImpuestosIndirectos", typeof(System.Decimal), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnImpuestosIndirectos);
                this.columnIdMonedaOrigen = new DataColumn("IdMonedaOrigen", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdMonedaOrigen);
                this.columnIdMonedaCierre = new DataColumn("IdMonedaCierre", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdMonedaCierre);
                this.columnIdCotizacionCierre = new DataColumn("IdCotizacionCierre", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdCotizacionCierre);
                this.columnFechaCreacion = new DataColumn("FechaCreacion", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnFechaCreacion);
                this.columnIdConexionCreacion = new DataColumn("IdConexionCreacion", typeof(long), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdConexionCreacion);
                this.columnUltimaModificacion = new DataColumn("UltimaModificacion", typeof(System.Byte[]), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnUltimaModificacion);
                this.columnIdConexionUltimaModificacion = new DataColumn("IdConexionUltimaModificacion", typeof(long), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdConexionUltimaModificacion);
                this.columnIdReservado = new DataColumn("IdReservado", typeof(long), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdReservado);
                this.columnRowId = new DataColumn("RowId", typeof(System.Guid), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnRowId);
                this.columnRowIdGenerado = new DataColumn("RowIdGenerado", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnRowIdGenerado);
                this.columnVisible = new DataColumn("Visible", typeof(bool), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnVisible);
                this.columnIdListaDePrecio = new DataColumn("IdListaDePrecio", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdListaDePrecio);
                this.columnCoeficienteListaDePrecio = new DataColumn("CoeficienteListaDePrecio", typeof(System.Decimal), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnCoeficienteListaDePrecio);
                this.columnModoDeAplicacion = new DataColumn("ModoDeAplicacion", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnModoDeAplicacion);
                this.columnPrecioNetoOriginal = new DataColumn("PrecioNetoOriginal", typeof(System.Decimal), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnPrecioNetoOriginal);
                this.columnPrecioBrutoOriginal = new DataColumn("PrecioBrutoOriginal", typeof(System.Decimal), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnPrecioBrutoOriginal);
                this.columnPrecioFinalOriginal = new DataColumn("PrecioFinalOriginal", typeof(System.Decimal), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnPrecioFinalOriginal);
                this.columnMaxDescuentoPorcentualOriginal = new DataColumn("MaxDescuentoPorcentualOriginal", typeof(System.Decimal), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnMaxDescuentoPorcentualOriginal);
                this.columnMaxDescuentoOriginal = new DataColumn("MaxDescuentoOriginal", typeof(System.Decimal), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnMaxDescuentoOriginal);
                this.columnDescuentoAplicadoVendedor = new DataColumn("DescuentoAplicadoVendedor", typeof(System.Decimal), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnDescuentoAplicadoVendedor);
                this.columnDescuentoPorcentualAplicadoVendedor = new DataColumn("DescuentoPorcentualAplicadoVendedor", typeof(System.Decimal), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnDescuentoPorcentualAplicadoVendedor);
                this.columnPrecioDeCostoDirectoOriginal = new DataColumn("PrecioDeCostoDirectoOriginal", typeof(System.Decimal), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnPrecioDeCostoDirectoOriginal);
                this.columnPrecioDeCostoIndirectoOriginal = new DataColumn("PrecioDeCostoIndirectoOriginal", typeof(System.Decimal), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnPrecioDeCostoIndirectoOriginal);
                this.columnPrecioDeCostoRefOriginal = new DataColumn("PrecioDeCostoRefOriginal", typeof(System.Decimal), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnPrecioDeCostoRefOriginal);
                this.columnCoeficiente1Original = new DataColumn("Coeficiente1Original", typeof(System.Decimal), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnCoeficiente1Original);
                this.columnCoeficiente2Original = new DataColumn("Coeficiente2Original", typeof(System.Decimal), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnCoeficiente2Original);
                this.columnCoeficiente3Original = new DataColumn("Coeficiente3Original", typeof(System.Decimal), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnCoeficiente3Original);
                this.columnCoeficiente4Original = new DataColumn("Coeficiente4Original", typeof(System.Decimal), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnCoeficiente4Original);
                this.columnCoeficiente5Original = new DataColumn("Coeficiente5Original", typeof(System.Decimal), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnCoeficiente5Original);
                this.columnCoeficiente6Original = new DataColumn("Coeficiente6Original", typeof(System.Decimal), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnCoeficiente6Original);
                this.columnCoeficiente7Original = new DataColumn("Coeficiente7Original", typeof(System.Decimal), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnCoeficiente7Original);
                this.columnCoeficiente8Original = new DataColumn("Coeficiente8Original", typeof(System.Decimal), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnCoeficiente8Original);
                this.columnCoeficiente9Original = new DataColumn("Coeficiente9Original", typeof(System.Decimal), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnCoeficiente9Original);
                this.columnCoeficiente10Original = new DataColumn("Coeficiente10Original", typeof(System.Decimal), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnCoeficiente10Original);
                this.columnCodigoSecundarioOriginal = new DataColumn("CodigoSecundarioOriginal", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnCodigoSecundarioOriginal);
                this.columnPorcentajeDescuentoFijoAplicado = new DataColumn("PorcentajeDescuentoFijoAplicado", typeof(System.Decimal), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnPorcentajeDescuentoFijoAplicado);
                this.columnPrecioDeCostoReposicionOriginal = new DataColumn("PrecioDeCostoReposicionOriginal", typeof(System.Decimal), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnPrecioDeCostoReposicionOriginal);
                this.columnPrecioDeCostoPromedioPonderadoOriginal = new DataColumn("PrecioDeCostoPromedioPonderadoOriginal", typeof(System.Decimal), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnPrecioDeCostoPromedioPonderadoOriginal);
                this.columnPrecioDeVentaMercadoBolsaOriginal = new DataColumn("PrecioDeVentaMercadoBolsaOriginal", typeof(System.Decimal), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnPrecioDeVentaMercadoBolsaOriginal);
                this.columnPrecioDeVentaMercadoCadenaOriginal = new DataColumn("PrecioDeVentaMercadoCadenaOriginal", typeof(System.Decimal), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnPrecioDeVentaMercadoCadenaOriginal);
                this.columnPrecioDeVentaMercadoCompetenciaDirectaOriginal = new DataColumn("PrecioDeVentaMercadoCompetenciaDirectaOriginal", typeof(System.Decimal), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnPrecioDeVentaMercadoCompetenciaDirectaOriginal);
                this.columnUsaPrecioDeCostoReposicionOriginal = new DataColumn("UsaPrecioDeCostoReposicionOriginal", typeof(bool), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnUsaPrecioDeCostoReposicionOriginal);
                this.columnIdCotizacionCierrePrecioDeCostoRefOriginal = new DataColumn("IdCotizacionCierrePrecioDeCostoRefOriginal", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdCotizacionCierrePrecioDeCostoRefOriginal);
                this.Constraints.Add(new UniqueConstraint("tsa_ComprobantesExDatasetKey2", new DataColumn[] {
                                this.columnIdComprobante,
                                this.columnOrdinal}, true));
                this.columnIdComprobante.AllowDBNull = false;
                this.columnOrdinal.AllowDBNull = false;
                this.columnUltimaModificacion.ReadOnly = true;
            }
            
            public tsa_ComprobantesDetRow Newtsa_ComprobantesDetRow() {
                return ((tsa_ComprobantesDetRow)(this.NewRow()));
            }
            
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder) {
                return new tsa_ComprobantesDetRow(builder);
            }
            
            protected override System.Type GetRowType() {
                return typeof(tsa_ComprobantesDetRow);
            }
            
            protected override void OnRowChanged(DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.tsa_ComprobantesDetRowChanged != null)) {
                    this.tsa_ComprobantesDetRowChanged(this, new tsa_ComprobantesDetRowChangeEvent(((tsa_ComprobantesDetRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowChanging(DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.tsa_ComprobantesDetRowChanging != null)) {
                    this.tsa_ComprobantesDetRowChanging(this, new tsa_ComprobantesDetRowChangeEvent(((tsa_ComprobantesDetRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleted(DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.tsa_ComprobantesDetRowDeleted != null)) {
                    this.tsa_ComprobantesDetRowDeleted(this, new tsa_ComprobantesDetRowChangeEvent(((tsa_ComprobantesDetRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleting(DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.tsa_ComprobantesDetRowDeleting != null)) {
                    this.tsa_ComprobantesDetRowDeleting(this, new tsa_ComprobantesDetRowChangeEvent(((tsa_ComprobantesDetRow)(e.Row)), e.Action));
                }
            }
            
            public void Removetsa_ComprobantesDetRow(tsa_ComprobantesDetRow row) {
                this.Rows.Remove(row);
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class tsa_ComprobantesDetRow : DataRow {
            
            private tsa_ComprobantesDetDataTable tabletsa_ComprobantesDet;
            
            internal tsa_ComprobantesDetRow(DataRowBuilder rb) : 
                    base(rb) {
                this.tabletsa_ComprobantesDet = ((tsa_ComprobantesDetDataTable)(this.Table));
            }
            
            public string IdComprobante {
                get {
                    return ((string)(this[this.tabletsa_ComprobantesDet.IdComprobanteColumn]));
                }
                set {
                    this[this.tabletsa_ComprobantesDet.IdComprobanteColumn] = value;
                }
            }
            
            public long Ordinal {
                get {
                    return ((long)(this[this.tabletsa_ComprobantesDet.OrdinalColumn]));
                }
                set {
                    this[this.tabletsa_ComprobantesDet.OrdinalColumn] = value;
                }
            }
            
            public long IdEmpresa {
                get {
                    try {
                        return ((long)(this[this.tabletsa_ComprobantesDet.IdEmpresaColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletsa_ComprobantesDet.IdEmpresaColumn] = value;
                }
            }
            
            public long IdSucursal {
                get {
                    try {
                        return ((long)(this[this.tabletsa_ComprobantesDet.IdSucursalColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletsa_ComprobantesDet.IdSucursalColumn] = value;
                }
            }
            
            public string IdTipoDeComprobante {
                get {
                    try {
                        return ((string)(this[this.tabletsa_ComprobantesDet.IdTipoDeComprobanteColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletsa_ComprobantesDet.IdTipoDeComprobanteColumn] = value;
                }
            }
            
            public System.DateTime Fecha {
                get {
                    try {
                        return ((System.DateTime)(this[this.tabletsa_ComprobantesDet.FechaColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletsa_ComprobantesDet.FechaColumn] = value;
                }
            }
            
            public string Numero {
                get {
                    try {
                        return ((string)(this[this.tabletsa_ComprobantesDet.NumeroColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletsa_ComprobantesDet.NumeroColumn] = value;
                }
            }
            
            public string IdProducto {
                get {
                    try {
                        return ((string)(this[this.tabletsa_ComprobantesDet.IdProductoColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletsa_ComprobantesDet.IdProductoColumn] = value;
                }
            }
            
            public System.Decimal Cantidad {
                get {
                    try {
                        return ((System.Decimal)(this[this.tabletsa_ComprobantesDet.CantidadColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletsa_ComprobantesDet.CantidadColumn] = value;
                }
            }
            
            public System.Decimal PrecioFinal {
                get {
                    try {
                        return ((System.Decimal)(this[this.tabletsa_ComprobantesDet.PrecioFinalColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletsa_ComprobantesDet.PrecioFinalColumn] = value;
                }
            }
            
            public System.Decimal PrecioBruto {
                get {
                    try {
                        return ((System.Decimal)(this[this.tabletsa_ComprobantesDet.PrecioBrutoColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletsa_ComprobantesDet.PrecioBrutoColumn] = value;
                }
            }
            
            public System.Decimal PrecioNeto {
                get {
                    try {
                        return ((System.Decimal)(this[this.tabletsa_ComprobantesDet.PrecioNetoColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletsa_ComprobantesDet.PrecioNetoColumn] = value;
                }
            }
            
            public System.Decimal DescuentosAplicados {
                get {
                    try {
                        return ((System.Decimal)(this[this.tabletsa_ComprobantesDet.DescuentosAplicadosColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletsa_ComprobantesDet.DescuentosAplicadosColumn] = value;
                }
            }
            
            public System.Decimal BonificacionRecargoFinanciero {
                get {
                    try {
                        return ((System.Decimal)(this[this.tabletsa_ComprobantesDet.BonificacionRecargoFinancieroColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletsa_ComprobantesDet.BonificacionRecargoFinancieroColumn] = value;
                }
            }
            
            public System.Decimal BonificacionRecargoCuenta {
                get {
                    try {
                        return ((System.Decimal)(this[this.tabletsa_ComprobantesDet.BonificacionRecargoCuentaColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletsa_ComprobantesDet.BonificacionRecargoCuentaColumn] = value;
                }
            }
            
            public System.Decimal BonificacionRecargoProducto {
                get {
                    try {
                        return ((System.Decimal)(this[this.tabletsa_ComprobantesDet.BonificacionRecargoProductoColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletsa_ComprobantesDet.BonificacionRecargoProductoColumn] = value;
                }
            }
            
            public System.Decimal PrecioDeCosto {
                get {
                    try {
                        return ((System.Decimal)(this[this.tabletsa_ComprobantesDet.PrecioDeCostoColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletsa_ComprobantesDet.PrecioDeCostoColumn] = value;
                }
            }
            
            public System.Decimal ImpuestosDirectos {
                get {
                    try {
                        return ((System.Decimal)(this[this.tabletsa_ComprobantesDet.ImpuestosDirectosColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletsa_ComprobantesDet.ImpuestosDirectosColumn] = value;
                }
            }
            
            public System.Decimal ImpuestosIndirectos {
                get {
                    try {
                        return ((System.Decimal)(this[this.tabletsa_ComprobantesDet.ImpuestosIndirectosColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletsa_ComprobantesDet.ImpuestosIndirectosColumn] = value;
                }
            }
            
            public string IdMonedaOrigen {
                get {
                    try {
                        return ((string)(this[this.tabletsa_ComprobantesDet.IdMonedaOrigenColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletsa_ComprobantesDet.IdMonedaOrigenColumn] = value;
                }
            }
            
            public string IdMonedaCierre {
                get {
                    try {
                        return ((string)(this[this.tabletsa_ComprobantesDet.IdMonedaCierreColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletsa_ComprobantesDet.IdMonedaCierreColumn] = value;
                }
            }
            
            public string IdCotizacionCierre {
                get {
                    try {
                        return ((string)(this[this.tabletsa_ComprobantesDet.IdCotizacionCierreColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletsa_ComprobantesDet.IdCotizacionCierreColumn] = value;
                }
            }
            
            public System.DateTime FechaCreacion {
                get {
                    try {
                        return ((System.DateTime)(this[this.tabletsa_ComprobantesDet.FechaCreacionColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletsa_ComprobantesDet.FechaCreacionColumn] = value;
                }
            }
            
            public long IdConexionCreacion {
                get {
                    try {
                        return ((long)(this[this.tabletsa_ComprobantesDet.IdConexionCreacionColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletsa_ComprobantesDet.IdConexionCreacionColumn] = value;
                }
            }
            
            public System.Byte[] UltimaModificacion {
                get {
                    try {
                        return ((System.Byte[])(this[this.tabletsa_ComprobantesDet.UltimaModificacionColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletsa_ComprobantesDet.UltimaModificacionColumn] = value;
                }
            }
            
            public long IdConexionUltimaModificacion {
                get {
                    try {
                        return ((long)(this[this.tabletsa_ComprobantesDet.IdConexionUltimaModificacionColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletsa_ComprobantesDet.IdConexionUltimaModificacionColumn] = value;
                }
            }
            
            public long IdReservado {
                get {
                    try {
                        return ((long)(this[this.tabletsa_ComprobantesDet.IdReservadoColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletsa_ComprobantesDet.IdReservadoColumn] = value;
                }
            }
            
            public System.Guid RowId {
                get {
                    try {
                        return ((System.Guid)(this[this.tabletsa_ComprobantesDet.RowIdColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletsa_ComprobantesDet.RowIdColumn] = value;
                }
            }
            
            public string RowIdGenerado {
                get {
                    try {
                        return ((string)(this[this.tabletsa_ComprobantesDet.RowIdGeneradoColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletsa_ComprobantesDet.RowIdGeneradoColumn] = value;
                }
            }
            
            public bool Visible {
                get {
                    try {
                        return ((bool)(this[this.tabletsa_ComprobantesDet.VisibleColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletsa_ComprobantesDet.VisibleColumn] = value;
                }
            }
            
            public string IdListaDePrecio {
                get {
                    try {
                        return ((string)(this[this.tabletsa_ComprobantesDet.IdListaDePrecioColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletsa_ComprobantesDet.IdListaDePrecioColumn] = value;
                }
            }
            
            public System.Decimal CoeficienteListaDePrecio {
                get {
                    try {
                        return ((System.Decimal)(this[this.tabletsa_ComprobantesDet.CoeficienteListaDePrecioColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletsa_ComprobantesDet.CoeficienteListaDePrecioColumn] = value;
                }
            }
            
            public string ModoDeAplicacion {
                get {
                    try {
                        return ((string)(this[this.tabletsa_ComprobantesDet.ModoDeAplicacionColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletsa_ComprobantesDet.ModoDeAplicacionColumn] = value;
                }
            }
            
            public System.Decimal PrecioNetoOriginal {
                get {
                    try {
                        return ((System.Decimal)(this[this.tabletsa_ComprobantesDet.PrecioNetoOriginalColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletsa_ComprobantesDet.PrecioNetoOriginalColumn] = value;
                }
            }
            
            public System.Decimal PrecioBrutoOriginal {
                get {
                    try {
                        return ((System.Decimal)(this[this.tabletsa_ComprobantesDet.PrecioBrutoOriginalColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletsa_ComprobantesDet.PrecioBrutoOriginalColumn] = value;
                }
            }
            
            public System.Decimal PrecioFinalOriginal {
                get {
                    try {
                        return ((System.Decimal)(this[this.tabletsa_ComprobantesDet.PrecioFinalOriginalColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletsa_ComprobantesDet.PrecioFinalOriginalColumn] = value;
                }
            }
            
            public System.Decimal MaxDescuentoPorcentualOriginal {
                get {
                    try {
                        return ((System.Decimal)(this[this.tabletsa_ComprobantesDet.MaxDescuentoPorcentualOriginalColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletsa_ComprobantesDet.MaxDescuentoPorcentualOriginalColumn] = value;
                }
            }
            
            public System.Decimal MaxDescuentoOriginal {
                get {
                    try {
                        return ((System.Decimal)(this[this.tabletsa_ComprobantesDet.MaxDescuentoOriginalColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletsa_ComprobantesDet.MaxDescuentoOriginalColumn] = value;
                }
            }
            
            public System.Decimal DescuentoAplicadoVendedor {
                get {
                    try {
                        return ((System.Decimal)(this[this.tabletsa_ComprobantesDet.DescuentoAplicadoVendedorColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletsa_ComprobantesDet.DescuentoAplicadoVendedorColumn] = value;
                }
            }
            
            public System.Decimal DescuentoPorcentualAplicadoVendedor {
                get {
                    try {
                        return ((System.Decimal)(this[this.tabletsa_ComprobantesDet.DescuentoPorcentualAplicadoVendedorColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletsa_ComprobantesDet.DescuentoPorcentualAplicadoVendedorColumn] = value;
                }
            }
            
            public System.Decimal PrecioDeCostoDirectoOriginal {
                get {
                    try {
                        return ((System.Decimal)(this[this.tabletsa_ComprobantesDet.PrecioDeCostoDirectoOriginalColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletsa_ComprobantesDet.PrecioDeCostoDirectoOriginalColumn] = value;
                }
            }
            
            public System.Decimal PrecioDeCostoIndirectoOriginal {
                get {
                    try {
                        return ((System.Decimal)(this[this.tabletsa_ComprobantesDet.PrecioDeCostoIndirectoOriginalColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletsa_ComprobantesDet.PrecioDeCostoIndirectoOriginalColumn] = value;
                }
            }
            
            public System.Decimal PrecioDeCostoRefOriginal {
                get {
                    try {
                        return ((System.Decimal)(this[this.tabletsa_ComprobantesDet.PrecioDeCostoRefOriginalColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletsa_ComprobantesDet.PrecioDeCostoRefOriginalColumn] = value;
                }
            }
            
            public System.Decimal Coeficiente1Original {
                get {
                    try {
                        return ((System.Decimal)(this[this.tabletsa_ComprobantesDet.Coeficiente1OriginalColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletsa_ComprobantesDet.Coeficiente1OriginalColumn] = value;
                }
            }
            
            public System.Decimal Coeficiente2Original {
                get {
                    try {
                        return ((System.Decimal)(this[this.tabletsa_ComprobantesDet.Coeficiente2OriginalColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletsa_ComprobantesDet.Coeficiente2OriginalColumn] = value;
                }
            }
            
            public System.Decimal Coeficiente3Original {
                get {
                    try {
                        return ((System.Decimal)(this[this.tabletsa_ComprobantesDet.Coeficiente3OriginalColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletsa_ComprobantesDet.Coeficiente3OriginalColumn] = value;
                }
            }
            
            public System.Decimal Coeficiente4Original {
                get {
                    try {
                        return ((System.Decimal)(this[this.tabletsa_ComprobantesDet.Coeficiente4OriginalColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletsa_ComprobantesDet.Coeficiente4OriginalColumn] = value;
                }
            }
            
            public System.Decimal Coeficiente5Original {
                get {
                    try {
                        return ((System.Decimal)(this[this.tabletsa_ComprobantesDet.Coeficiente5OriginalColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletsa_ComprobantesDet.Coeficiente5OriginalColumn] = value;
                }
            }
            
            public System.Decimal Coeficiente6Original {
                get {
                    try {
                        return ((System.Decimal)(this[this.tabletsa_ComprobantesDet.Coeficiente6OriginalColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletsa_ComprobantesDet.Coeficiente6OriginalColumn] = value;
                }
            }
            
            public System.Decimal Coeficiente7Original {
                get {
                    try {
                        return ((System.Decimal)(this[this.tabletsa_ComprobantesDet.Coeficiente7OriginalColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletsa_ComprobantesDet.Coeficiente7OriginalColumn] = value;
                }
            }
            
            public System.Decimal Coeficiente8Original {
                get {
                    try {
                        return ((System.Decimal)(this[this.tabletsa_ComprobantesDet.Coeficiente8OriginalColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletsa_ComprobantesDet.Coeficiente8OriginalColumn] = value;
                }
            }
            
            public System.Decimal Coeficiente9Original {
                get {
                    try {
                        return ((System.Decimal)(this[this.tabletsa_ComprobantesDet.Coeficiente9OriginalColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletsa_ComprobantesDet.Coeficiente9OriginalColumn] = value;
                }
            }
            
            public System.Decimal Coeficiente10Original {
                get {
                    try {
                        return ((System.Decimal)(this[this.tabletsa_ComprobantesDet.Coeficiente10OriginalColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletsa_ComprobantesDet.Coeficiente10OriginalColumn] = value;
                }
            }
            
            public string CodigoSecundarioOriginal {
                get {
                    try {
                        return ((string)(this[this.tabletsa_ComprobantesDet.CodigoSecundarioOriginalColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletsa_ComprobantesDet.CodigoSecundarioOriginalColumn] = value;
                }
            }
            
            public System.Decimal PorcentajeDescuentoFijoAplicado {
                get {
                    try {
                        return ((System.Decimal)(this[this.tabletsa_ComprobantesDet.PorcentajeDescuentoFijoAplicadoColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletsa_ComprobantesDet.PorcentajeDescuentoFijoAplicadoColumn] = value;
                }
            }
            
            public System.Decimal PrecioDeCostoReposicionOriginal {
                get {
                    try {
                        return ((System.Decimal)(this[this.tabletsa_ComprobantesDet.PrecioDeCostoReposicionOriginalColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletsa_ComprobantesDet.PrecioDeCostoReposicionOriginalColumn] = value;
                }
            }
            
            public System.Decimal PrecioDeCostoPromedioPonderadoOriginal {
                get {
                    try {
                        return ((System.Decimal)(this[this.tabletsa_ComprobantesDet.PrecioDeCostoPromedioPonderadoOriginalColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletsa_ComprobantesDet.PrecioDeCostoPromedioPonderadoOriginalColumn] = value;
                }
            }
            
            public System.Decimal PrecioDeVentaMercadoBolsaOriginal {
                get {
                    try {
                        return ((System.Decimal)(this[this.tabletsa_ComprobantesDet.PrecioDeVentaMercadoBolsaOriginalColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletsa_ComprobantesDet.PrecioDeVentaMercadoBolsaOriginalColumn] = value;
                }
            }
            
            public System.Decimal PrecioDeVentaMercadoCadenaOriginal {
                get {
                    try {
                        return ((System.Decimal)(this[this.tabletsa_ComprobantesDet.PrecioDeVentaMercadoCadenaOriginalColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletsa_ComprobantesDet.PrecioDeVentaMercadoCadenaOriginalColumn] = value;
                }
            }
            
            public System.Decimal PrecioDeVentaMercadoCompetenciaDirectaOriginal {
                get {
                    try {
                        return ((System.Decimal)(this[this.tabletsa_ComprobantesDet.PrecioDeVentaMercadoCompetenciaDirectaOriginalColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletsa_ComprobantesDet.PrecioDeVentaMercadoCompetenciaDirectaOriginalColumn] = value;
                }
            }
            
            public bool UsaPrecioDeCostoReposicionOriginal {
                get {
                    try {
                        return ((bool)(this[this.tabletsa_ComprobantesDet.UsaPrecioDeCostoReposicionOriginalColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletsa_ComprobantesDet.UsaPrecioDeCostoReposicionOriginalColumn] = value;
                }
            }
            
            public string IdCotizacionCierrePrecioDeCostoRefOriginal {
                get {
                    try {
                        return ((string)(this[this.tabletsa_ComprobantesDet.IdCotizacionCierrePrecioDeCostoRefOriginalColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletsa_ComprobantesDet.IdCotizacionCierrePrecioDeCostoRefOriginalColumn] = value;
                }
            }
            
            public tsa_ComprobantesRow tsa_ComprobantesRow {
                get {
                    return ((tsa_ComprobantesRow)(this.GetParentRow(this.Table.ParentRelations["tsa_Comprobantestsa_ComprobantesDet"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["tsa_Comprobantestsa_ComprobantesDet"]);
                }
            }
            
            public bool IsIdEmpresaNull() {
                return this.IsNull(this.tabletsa_ComprobantesDet.IdEmpresaColumn);
            }
            
            public void SetIdEmpresaNull() {
                this[this.tabletsa_ComprobantesDet.IdEmpresaColumn] = System.Convert.DBNull;
            }
            
            public bool IsIdSucursalNull() {
                return this.IsNull(this.tabletsa_ComprobantesDet.IdSucursalColumn);
            }
            
            public void SetIdSucursalNull() {
                this[this.tabletsa_ComprobantesDet.IdSucursalColumn] = System.Convert.DBNull;
            }
            
            public bool IsIdTipoDeComprobanteNull() {
                return this.IsNull(this.tabletsa_ComprobantesDet.IdTipoDeComprobanteColumn);
            }
            
            public void SetIdTipoDeComprobanteNull() {
                this[this.tabletsa_ComprobantesDet.IdTipoDeComprobanteColumn] = System.Convert.DBNull;
            }
            
            public bool IsFechaNull() {
                return this.IsNull(this.tabletsa_ComprobantesDet.FechaColumn);
            }
            
            public void SetFechaNull() {
                this[this.tabletsa_ComprobantesDet.FechaColumn] = System.Convert.DBNull;
            }
            
            public bool IsNumeroNull() {
                return this.IsNull(this.tabletsa_ComprobantesDet.NumeroColumn);
            }
            
            public void SetNumeroNull() {
                this[this.tabletsa_ComprobantesDet.NumeroColumn] = System.Convert.DBNull;
            }
            
            public bool IsIdProductoNull() {
                return this.IsNull(this.tabletsa_ComprobantesDet.IdProductoColumn);
            }
            
            public void SetIdProductoNull() {
                this[this.tabletsa_ComprobantesDet.IdProductoColumn] = System.Convert.DBNull;
            }
            
            public bool IsCantidadNull() {
                return this.IsNull(this.tabletsa_ComprobantesDet.CantidadColumn);
            }
            
            public void SetCantidadNull() {
                this[this.tabletsa_ComprobantesDet.CantidadColumn] = System.Convert.DBNull;
            }
            
            public bool IsPrecioFinalNull() {
                return this.IsNull(this.tabletsa_ComprobantesDet.PrecioFinalColumn);
            }
            
            public void SetPrecioFinalNull() {
                this[this.tabletsa_ComprobantesDet.PrecioFinalColumn] = System.Convert.DBNull;
            }
            
            public bool IsPrecioBrutoNull() {
                return this.IsNull(this.tabletsa_ComprobantesDet.PrecioBrutoColumn);
            }
            
            public void SetPrecioBrutoNull() {
                this[this.tabletsa_ComprobantesDet.PrecioBrutoColumn] = System.Convert.DBNull;
            }
            
            public bool IsPrecioNetoNull() {
                return this.IsNull(this.tabletsa_ComprobantesDet.PrecioNetoColumn);
            }
            
            public void SetPrecioNetoNull() {
                this[this.tabletsa_ComprobantesDet.PrecioNetoColumn] = System.Convert.DBNull;
            }
            
            public bool IsDescuentosAplicadosNull() {
                return this.IsNull(this.tabletsa_ComprobantesDet.DescuentosAplicadosColumn);
            }
            
            public void SetDescuentosAplicadosNull() {
                this[this.tabletsa_ComprobantesDet.DescuentosAplicadosColumn] = System.Convert.DBNull;
            }
            
            public bool IsBonificacionRecargoFinancieroNull() {
                return this.IsNull(this.tabletsa_ComprobantesDet.BonificacionRecargoFinancieroColumn);
            }
            
            public void SetBonificacionRecargoFinancieroNull() {
                this[this.tabletsa_ComprobantesDet.BonificacionRecargoFinancieroColumn] = System.Convert.DBNull;
            }
            
            public bool IsBonificacionRecargoCuentaNull() {
                return this.IsNull(this.tabletsa_ComprobantesDet.BonificacionRecargoCuentaColumn);
            }
            
            public void SetBonificacionRecargoCuentaNull() {
                this[this.tabletsa_ComprobantesDet.BonificacionRecargoCuentaColumn] = System.Convert.DBNull;
            }
            
            public bool IsBonificacionRecargoProductoNull() {
                return this.IsNull(this.tabletsa_ComprobantesDet.BonificacionRecargoProductoColumn);
            }
            
            public void SetBonificacionRecargoProductoNull() {
                this[this.tabletsa_ComprobantesDet.BonificacionRecargoProductoColumn] = System.Convert.DBNull;
            }
            
            public bool IsPrecioDeCostoNull() {
                return this.IsNull(this.tabletsa_ComprobantesDet.PrecioDeCostoColumn);
            }
            
            public void SetPrecioDeCostoNull() {
                this[this.tabletsa_ComprobantesDet.PrecioDeCostoColumn] = System.Convert.DBNull;
            }
            
            public bool IsImpuestosDirectosNull() {
                return this.IsNull(this.tabletsa_ComprobantesDet.ImpuestosDirectosColumn);
            }
            
            public void SetImpuestosDirectosNull() {
                this[this.tabletsa_ComprobantesDet.ImpuestosDirectosColumn] = System.Convert.DBNull;
            }
            
            public bool IsImpuestosIndirectosNull() {
                return this.IsNull(this.tabletsa_ComprobantesDet.ImpuestosIndirectosColumn);
            }
            
            public void SetImpuestosIndirectosNull() {
                this[this.tabletsa_ComprobantesDet.ImpuestosIndirectosColumn] = System.Convert.DBNull;
            }
            
            public bool IsIdMonedaOrigenNull() {
                return this.IsNull(this.tabletsa_ComprobantesDet.IdMonedaOrigenColumn);
            }
            
            public void SetIdMonedaOrigenNull() {
                this[this.tabletsa_ComprobantesDet.IdMonedaOrigenColumn] = System.Convert.DBNull;
            }
            
            public bool IsIdMonedaCierreNull() {
                return this.IsNull(this.tabletsa_ComprobantesDet.IdMonedaCierreColumn);
            }
            
            public void SetIdMonedaCierreNull() {
                this[this.tabletsa_ComprobantesDet.IdMonedaCierreColumn] = System.Convert.DBNull;
            }
            
            public bool IsIdCotizacionCierreNull() {
                return this.IsNull(this.tabletsa_ComprobantesDet.IdCotizacionCierreColumn);
            }
            
            public void SetIdCotizacionCierreNull() {
                this[this.tabletsa_ComprobantesDet.IdCotizacionCierreColumn] = System.Convert.DBNull;
            }
            
            public bool IsFechaCreacionNull() {
                return this.IsNull(this.tabletsa_ComprobantesDet.FechaCreacionColumn);
            }
            
            public void SetFechaCreacionNull() {
                this[this.tabletsa_ComprobantesDet.FechaCreacionColumn] = System.Convert.DBNull;
            }
            
            public bool IsIdConexionCreacionNull() {
                return this.IsNull(this.tabletsa_ComprobantesDet.IdConexionCreacionColumn);
            }
            
            public void SetIdConexionCreacionNull() {
                this[this.tabletsa_ComprobantesDet.IdConexionCreacionColumn] = System.Convert.DBNull;
            }
            
            public bool IsUltimaModificacionNull() {
                return this.IsNull(this.tabletsa_ComprobantesDet.UltimaModificacionColumn);
            }
            
            public void SetUltimaModificacionNull() {
                this[this.tabletsa_ComprobantesDet.UltimaModificacionColumn] = System.Convert.DBNull;
            }
            
            public bool IsIdConexionUltimaModificacionNull() {
                return this.IsNull(this.tabletsa_ComprobantesDet.IdConexionUltimaModificacionColumn);
            }
            
            public void SetIdConexionUltimaModificacionNull() {
                this[this.tabletsa_ComprobantesDet.IdConexionUltimaModificacionColumn] = System.Convert.DBNull;
            }
            
            public bool IsIdReservadoNull() {
                return this.IsNull(this.tabletsa_ComprobantesDet.IdReservadoColumn);
            }
            
            public void SetIdReservadoNull() {
                this[this.tabletsa_ComprobantesDet.IdReservadoColumn] = System.Convert.DBNull;
            }
            
            public bool IsRowIdNull() {
                return this.IsNull(this.tabletsa_ComprobantesDet.RowIdColumn);
            }
            
            public void SetRowIdNull() {
                this[this.tabletsa_ComprobantesDet.RowIdColumn] = System.Convert.DBNull;
            }
            
            public bool IsRowIdGeneradoNull() {
                return this.IsNull(this.tabletsa_ComprobantesDet.RowIdGeneradoColumn);
            }
            
            public void SetRowIdGeneradoNull() {
                this[this.tabletsa_ComprobantesDet.RowIdGeneradoColumn] = System.Convert.DBNull;
            }
            
            public bool IsVisibleNull() {
                return this.IsNull(this.tabletsa_ComprobantesDet.VisibleColumn);
            }
            
            public void SetVisibleNull() {
                this[this.tabletsa_ComprobantesDet.VisibleColumn] = System.Convert.DBNull;
            }
            
            public bool IsIdListaDePrecioNull() {
                return this.IsNull(this.tabletsa_ComprobantesDet.IdListaDePrecioColumn);
            }
            
            public void SetIdListaDePrecioNull() {
                this[this.tabletsa_ComprobantesDet.IdListaDePrecioColumn] = System.Convert.DBNull;
            }
            
            public bool IsCoeficienteListaDePrecioNull() {
                return this.IsNull(this.tabletsa_ComprobantesDet.CoeficienteListaDePrecioColumn);
            }
            
            public void SetCoeficienteListaDePrecioNull() {
                this[this.tabletsa_ComprobantesDet.CoeficienteListaDePrecioColumn] = System.Convert.DBNull;
            }
            
            public bool IsModoDeAplicacionNull() {
                return this.IsNull(this.tabletsa_ComprobantesDet.ModoDeAplicacionColumn);
            }
            
            public void SetModoDeAplicacionNull() {
                this[this.tabletsa_ComprobantesDet.ModoDeAplicacionColumn] = System.Convert.DBNull;
            }
            
            public bool IsPrecioNetoOriginalNull() {
                return this.IsNull(this.tabletsa_ComprobantesDet.PrecioNetoOriginalColumn);
            }
            
            public void SetPrecioNetoOriginalNull() {
                this[this.tabletsa_ComprobantesDet.PrecioNetoOriginalColumn] = System.Convert.DBNull;
            }
            
            public bool IsPrecioBrutoOriginalNull() {
                return this.IsNull(this.tabletsa_ComprobantesDet.PrecioBrutoOriginalColumn);
            }
            
            public void SetPrecioBrutoOriginalNull() {
                this[this.tabletsa_ComprobantesDet.PrecioBrutoOriginalColumn] = System.Convert.DBNull;
            }
            
            public bool IsPrecioFinalOriginalNull() {
                return this.IsNull(this.tabletsa_ComprobantesDet.PrecioFinalOriginalColumn);
            }
            
            public void SetPrecioFinalOriginalNull() {
                this[this.tabletsa_ComprobantesDet.PrecioFinalOriginalColumn] = System.Convert.DBNull;
            }
            
            public bool IsMaxDescuentoPorcentualOriginalNull() {
                return this.IsNull(this.tabletsa_ComprobantesDet.MaxDescuentoPorcentualOriginalColumn);
            }
            
            public void SetMaxDescuentoPorcentualOriginalNull() {
                this[this.tabletsa_ComprobantesDet.MaxDescuentoPorcentualOriginalColumn] = System.Convert.DBNull;
            }
            
            public bool IsMaxDescuentoOriginalNull() {
                return this.IsNull(this.tabletsa_ComprobantesDet.MaxDescuentoOriginalColumn);
            }
            
            public void SetMaxDescuentoOriginalNull() {
                this[this.tabletsa_ComprobantesDet.MaxDescuentoOriginalColumn] = System.Convert.DBNull;
            }
            
            public bool IsDescuentoAplicadoVendedorNull() {
                return this.IsNull(this.tabletsa_ComprobantesDet.DescuentoAplicadoVendedorColumn);
            }
            
            public void SetDescuentoAplicadoVendedorNull() {
                this[this.tabletsa_ComprobantesDet.DescuentoAplicadoVendedorColumn] = System.Convert.DBNull;
            }
            
            public bool IsDescuentoPorcentualAplicadoVendedorNull() {
                return this.IsNull(this.tabletsa_ComprobantesDet.DescuentoPorcentualAplicadoVendedorColumn);
            }
            
            public void SetDescuentoPorcentualAplicadoVendedorNull() {
                this[this.tabletsa_ComprobantesDet.DescuentoPorcentualAplicadoVendedorColumn] = System.Convert.DBNull;
            }
            
            public bool IsPrecioDeCostoDirectoOriginalNull() {
                return this.IsNull(this.tabletsa_ComprobantesDet.PrecioDeCostoDirectoOriginalColumn);
            }
            
            public void SetPrecioDeCostoDirectoOriginalNull() {
                this[this.tabletsa_ComprobantesDet.PrecioDeCostoDirectoOriginalColumn] = System.Convert.DBNull;
            }
            
            public bool IsPrecioDeCostoIndirectoOriginalNull() {
                return this.IsNull(this.tabletsa_ComprobantesDet.PrecioDeCostoIndirectoOriginalColumn);
            }
            
            public void SetPrecioDeCostoIndirectoOriginalNull() {
                this[this.tabletsa_ComprobantesDet.PrecioDeCostoIndirectoOriginalColumn] = System.Convert.DBNull;
            }
            
            public bool IsPrecioDeCostoRefOriginalNull() {
                return this.IsNull(this.tabletsa_ComprobantesDet.PrecioDeCostoRefOriginalColumn);
            }
            
            public void SetPrecioDeCostoRefOriginalNull() {
                this[this.tabletsa_ComprobantesDet.PrecioDeCostoRefOriginalColumn] = System.Convert.DBNull;
            }
            
            public bool IsCoeficiente1OriginalNull() {
                return this.IsNull(this.tabletsa_ComprobantesDet.Coeficiente1OriginalColumn);
            }
            
            public void SetCoeficiente1OriginalNull() {
                this[this.tabletsa_ComprobantesDet.Coeficiente1OriginalColumn] = System.Convert.DBNull;
            }
            
            public bool IsCoeficiente2OriginalNull() {
                return this.IsNull(this.tabletsa_ComprobantesDet.Coeficiente2OriginalColumn);
            }
            
            public void SetCoeficiente2OriginalNull() {
                this[this.tabletsa_ComprobantesDet.Coeficiente2OriginalColumn] = System.Convert.DBNull;
            }
            
            public bool IsCoeficiente3OriginalNull() {
                return this.IsNull(this.tabletsa_ComprobantesDet.Coeficiente3OriginalColumn);
            }
            
            public void SetCoeficiente3OriginalNull() {
                this[this.tabletsa_ComprobantesDet.Coeficiente3OriginalColumn] = System.Convert.DBNull;
            }
            
            public bool IsCoeficiente4OriginalNull() {
                return this.IsNull(this.tabletsa_ComprobantesDet.Coeficiente4OriginalColumn);
            }
            
            public void SetCoeficiente4OriginalNull() {
                this[this.tabletsa_ComprobantesDet.Coeficiente4OriginalColumn] = System.Convert.DBNull;
            }
            
            public bool IsCoeficiente5OriginalNull() {
                return this.IsNull(this.tabletsa_ComprobantesDet.Coeficiente5OriginalColumn);
            }
            
            public void SetCoeficiente5OriginalNull() {
                this[this.tabletsa_ComprobantesDet.Coeficiente5OriginalColumn] = System.Convert.DBNull;
            }
            
            public bool IsCoeficiente6OriginalNull() {
                return this.IsNull(this.tabletsa_ComprobantesDet.Coeficiente6OriginalColumn);
            }
            
            public void SetCoeficiente6OriginalNull() {
                this[this.tabletsa_ComprobantesDet.Coeficiente6OriginalColumn] = System.Convert.DBNull;
            }
            
            public bool IsCoeficiente7OriginalNull() {
                return this.IsNull(this.tabletsa_ComprobantesDet.Coeficiente7OriginalColumn);
            }
            
            public void SetCoeficiente7OriginalNull() {
                this[this.tabletsa_ComprobantesDet.Coeficiente7OriginalColumn] = System.Convert.DBNull;
            }
            
            public bool IsCoeficiente8OriginalNull() {
                return this.IsNull(this.tabletsa_ComprobantesDet.Coeficiente8OriginalColumn);
            }
            
            public void SetCoeficiente8OriginalNull() {
                this[this.tabletsa_ComprobantesDet.Coeficiente8OriginalColumn] = System.Convert.DBNull;
            }
            
            public bool IsCoeficiente9OriginalNull() {
                return this.IsNull(this.tabletsa_ComprobantesDet.Coeficiente9OriginalColumn);
            }
            
            public void SetCoeficiente9OriginalNull() {
                this[this.tabletsa_ComprobantesDet.Coeficiente9OriginalColumn] = System.Convert.DBNull;
            }
            
            public bool IsCoeficiente10OriginalNull() {
                return this.IsNull(this.tabletsa_ComprobantesDet.Coeficiente10OriginalColumn);
            }
            
            public void SetCoeficiente10OriginalNull() {
                this[this.tabletsa_ComprobantesDet.Coeficiente10OriginalColumn] = System.Convert.DBNull;
            }
            
            public bool IsCodigoSecundarioOriginalNull() {
                return this.IsNull(this.tabletsa_ComprobantesDet.CodigoSecundarioOriginalColumn);
            }
            
            public void SetCodigoSecundarioOriginalNull() {
                this[this.tabletsa_ComprobantesDet.CodigoSecundarioOriginalColumn] = System.Convert.DBNull;
            }
            
            public bool IsPorcentajeDescuentoFijoAplicadoNull() {
                return this.IsNull(this.tabletsa_ComprobantesDet.PorcentajeDescuentoFijoAplicadoColumn);
            }
            
            public void SetPorcentajeDescuentoFijoAplicadoNull() {
                this[this.tabletsa_ComprobantesDet.PorcentajeDescuentoFijoAplicadoColumn] = System.Convert.DBNull;
            }
            
            public bool IsPrecioDeCostoReposicionOriginalNull() {
                return this.IsNull(this.tabletsa_ComprobantesDet.PrecioDeCostoReposicionOriginalColumn);
            }
            
            public void SetPrecioDeCostoReposicionOriginalNull() {
                this[this.tabletsa_ComprobantesDet.PrecioDeCostoReposicionOriginalColumn] = System.Convert.DBNull;
            }
            
            public bool IsPrecioDeCostoPromedioPonderadoOriginalNull() {
                return this.IsNull(this.tabletsa_ComprobantesDet.PrecioDeCostoPromedioPonderadoOriginalColumn);
            }
            
            public void SetPrecioDeCostoPromedioPonderadoOriginalNull() {
                this[this.tabletsa_ComprobantesDet.PrecioDeCostoPromedioPonderadoOriginalColumn] = System.Convert.DBNull;
            }
            
            public bool IsPrecioDeVentaMercadoBolsaOriginalNull() {
                return this.IsNull(this.tabletsa_ComprobantesDet.PrecioDeVentaMercadoBolsaOriginalColumn);
            }
            
            public void SetPrecioDeVentaMercadoBolsaOriginalNull() {
                this[this.tabletsa_ComprobantesDet.PrecioDeVentaMercadoBolsaOriginalColumn] = System.Convert.DBNull;
            }
            
            public bool IsPrecioDeVentaMercadoCadenaOriginalNull() {
                return this.IsNull(this.tabletsa_ComprobantesDet.PrecioDeVentaMercadoCadenaOriginalColumn);
            }
            
            public void SetPrecioDeVentaMercadoCadenaOriginalNull() {
                this[this.tabletsa_ComprobantesDet.PrecioDeVentaMercadoCadenaOriginalColumn] = System.Convert.DBNull;
            }
            
            public bool IsPrecioDeVentaMercadoCompetenciaDirectaOriginalNull() {
                return this.IsNull(this.tabletsa_ComprobantesDet.PrecioDeVentaMercadoCompetenciaDirectaOriginalColumn);
            }
            
            public void SetPrecioDeVentaMercadoCompetenciaDirectaOriginalNull() {
                this[this.tabletsa_ComprobantesDet.PrecioDeVentaMercadoCompetenciaDirectaOriginalColumn] = System.Convert.DBNull;
            }
            
            public bool IsUsaPrecioDeCostoReposicionOriginalNull() {
                return this.IsNull(this.tabletsa_ComprobantesDet.UsaPrecioDeCostoReposicionOriginalColumn);
            }
            
            public void SetUsaPrecioDeCostoReposicionOriginalNull() {
                this[this.tabletsa_ComprobantesDet.UsaPrecioDeCostoReposicionOriginalColumn] = System.Convert.DBNull;
            }
            
            public bool IsIdCotizacionCierrePrecioDeCostoRefOriginalNull() {
                return this.IsNull(this.tabletsa_ComprobantesDet.IdCotizacionCierrePrecioDeCostoRefOriginalColumn);
            }
            
            public void SetIdCotizacionCierrePrecioDeCostoRefOriginalNull() {
                this[this.tabletsa_ComprobantesDet.IdCotizacionCierrePrecioDeCostoRefOriginalColumn] = System.Convert.DBNull;
            }
            
            public tsa_ComprobanteDetalleImpuestosRow[] Gettsa_ComprobanteDetalleImpuestosRows() {
                return ((tsa_ComprobanteDetalleImpuestosRow[])(this.GetChildRows(this.Table.ChildRelations["tsa_ComprobantesDettsa_ComprobanteDetalleImpuestos"])));
            }
            
            public tsa_ComprobanteDetalleDescripcionAdicionalRow[] Gettsa_ComprobanteDetalleDescripcionAdicionalRows() {
                return ((tsa_ComprobanteDetalleDescripcionAdicionalRow[])(this.GetChildRows(this.Table.ChildRelations["tsa_ComprobantesDettsa_ComprobanteDetalleDescripcionAdicional"])));
            }
            
            public tsa_ComprobantesDetAuxiliaresRow[] Gettsa_ComprobantesDetAuxiliaresRows() {
                return ((tsa_ComprobantesDetAuxiliaresRow[])(this.GetChildRows(this.Table.ChildRelations["tsa_ComprobantesDettsa_ComprobantesDetAuxiliares"])));
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class tsa_ComprobantesDetRowChangeEvent : EventArgs {
            
            private tsa_ComprobantesDetRow eventRow;
            
            private DataRowAction eventAction;
            
            public tsa_ComprobantesDetRowChangeEvent(tsa_ComprobantesDetRow row, DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            public tsa_ComprobantesDetRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            public DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class tsa_ComprobanteDetalleImpuestosDataTable : DataTable, System.Collections.IEnumerable {
            
            private DataColumn columnIdComprobante;
            
            private DataColumn columnOrdinal;
            
            private DataColumn columnIdImpuesto;
            
            private DataColumn columnIdEmpresa;
            
            private DataColumn columnIdSucursal;
            
            private DataColumn columnIdTipoDeComprobante;
            
            private DataColumn columnFecha;
            
            private DataColumn columnNumero;
            
            private DataColumn columnAplicadoA;
            
            private DataColumn columnValor;
            
            private DataColumn columnIdMonedaOrigen;
            
            private DataColumn columnIdMonedaCierre;
            
            private DataColumn columnIdCotizacionCierre;
            
            private DataColumn columnFechaCreacion;
            
            private DataColumn columnIdConexionCreacion;
            
            private DataColumn columnUltimaModificacion;
            
            private DataColumn columnIdConexionUltimaModificacion;
            
            private DataColumn columnIdReservado;
            
            private DataColumn columnRowId;
            
            private DataColumn columnRowIdGenerado;
            
            internal tsa_ComprobanteDetalleImpuestosDataTable() : 
                    base("tsa_ComprobanteDetalleImpuestos") {
                this.InitClass();
            }
            
            internal tsa_ComprobanteDetalleImpuestosDataTable(DataTable table) : 
                    base(table.TableName) {
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
                this.DisplayExpression = table.DisplayExpression;
            }
            
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            internal DataColumn IdComprobanteColumn {
                get {
                    return this.columnIdComprobante;
                }
            }
            
            internal DataColumn OrdinalColumn {
                get {
                    return this.columnOrdinal;
                }
            }
            
            internal DataColumn IdImpuestoColumn {
                get {
                    return this.columnIdImpuesto;
                }
            }
            
            internal DataColumn IdEmpresaColumn {
                get {
                    return this.columnIdEmpresa;
                }
            }
            
            internal DataColumn IdSucursalColumn {
                get {
                    return this.columnIdSucursal;
                }
            }
            
            internal DataColumn IdTipoDeComprobanteColumn {
                get {
                    return this.columnIdTipoDeComprobante;
                }
            }
            
            internal DataColumn FechaColumn {
                get {
                    return this.columnFecha;
                }
            }
            
            internal DataColumn NumeroColumn {
                get {
                    return this.columnNumero;
                }
            }
            
            internal DataColumn AplicadoAColumn {
                get {
                    return this.columnAplicadoA;
                }
            }
            
            internal DataColumn ValorColumn {
                get {
                    return this.columnValor;
                }
            }
            
            internal DataColumn IdMonedaOrigenColumn {
                get {
                    return this.columnIdMonedaOrigen;
                }
            }
            
            internal DataColumn IdMonedaCierreColumn {
                get {
                    return this.columnIdMonedaCierre;
                }
            }
            
            internal DataColumn IdCotizacionCierreColumn {
                get {
                    return this.columnIdCotizacionCierre;
                }
            }
            
            internal DataColumn FechaCreacionColumn {
                get {
                    return this.columnFechaCreacion;
                }
            }
            
            internal DataColumn IdConexionCreacionColumn {
                get {
                    return this.columnIdConexionCreacion;
                }
            }
            
            internal DataColumn UltimaModificacionColumn {
                get {
                    return this.columnUltimaModificacion;
                }
            }
            
            internal DataColumn IdConexionUltimaModificacionColumn {
                get {
                    return this.columnIdConexionUltimaModificacion;
                }
            }
            
            internal DataColumn IdReservadoColumn {
                get {
                    return this.columnIdReservado;
                }
            }
            
            internal DataColumn RowIdColumn {
                get {
                    return this.columnRowId;
                }
            }
            
            internal DataColumn RowIdGeneradoColumn {
                get {
                    return this.columnRowIdGenerado;
                }
            }
            
            public tsa_ComprobanteDetalleImpuestosRow this[int index] {
                get {
                    return ((tsa_ComprobanteDetalleImpuestosRow)(this.Rows[index]));
                }
            }
            
            public event tsa_ComprobanteDetalleImpuestosRowChangeEventHandler tsa_ComprobanteDetalleImpuestosRowChanged;
            
            public event tsa_ComprobanteDetalleImpuestosRowChangeEventHandler tsa_ComprobanteDetalleImpuestosRowChanging;
            
            public event tsa_ComprobanteDetalleImpuestosRowChangeEventHandler tsa_ComprobanteDetalleImpuestosRowDeleted;
            
            public event tsa_ComprobanteDetalleImpuestosRowChangeEventHandler tsa_ComprobanteDetalleImpuestosRowDeleting;
            
            public void Addtsa_ComprobanteDetalleImpuestosRow(tsa_ComprobanteDetalleImpuestosRow row) {
                this.Rows.Add(row);
            }
            
            public tsa_ComprobanteDetalleImpuestosRow Addtsa_ComprobanteDetalleImpuestosRow(
                        string IdComprobante, 
                        long Ordinal, 
                        string IdImpuesto, 
                        long IdEmpresa, 
                        long IdSucursal, 
                        string IdTipoDeComprobante, 
                        System.DateTime Fecha, 
                        string Numero, 
                        string AplicadoA, 
                        System.Decimal Valor, 
                        string IdMonedaOrigen, 
                        string IdMonedaCierre, 
                        string IdCotizacionCierre, 
                        System.DateTime FechaCreacion, 
                        long IdConexionCreacion, 
                        System.Byte[] UltimaModificacion, 
                        long IdConexionUltimaModificacion, 
                        long IdReservado, 
                        System.Guid RowId, 
                        string RowIdGenerado) {
                tsa_ComprobanteDetalleImpuestosRow rowtsa_ComprobanteDetalleImpuestosRow = ((tsa_ComprobanteDetalleImpuestosRow)(this.NewRow()));
                rowtsa_ComprobanteDetalleImpuestosRow.ItemArray = new object[] {
                        IdComprobante,
                        Ordinal,
                        IdImpuesto,
                        IdEmpresa,
                        IdSucursal,
                        IdTipoDeComprobante,
                        Fecha,
                        Numero,
                        AplicadoA,
                        Valor,
                        IdMonedaOrigen,
                        IdMonedaCierre,
                        IdCotizacionCierre,
                        FechaCreacion,
                        IdConexionCreacion,
                        UltimaModificacion,
                        IdConexionUltimaModificacion,
                        IdReservado,
                        RowId,
                        RowIdGenerado};
                this.Rows.Add(rowtsa_ComprobanteDetalleImpuestosRow);
                return rowtsa_ComprobanteDetalleImpuestosRow;
            }
            
            public tsa_ComprobanteDetalleImpuestosRow FindByIdComprobanteOrdinalIdImpuesto(string IdComprobante, long Ordinal, string IdImpuesto) {
                return ((tsa_ComprobanteDetalleImpuestosRow)(this.Rows.Find(new object[] {
                            IdComprobante,
                            Ordinal,
                            IdImpuesto})));
            }
            
            public System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            public override DataTable Clone() {
                tsa_ComprobanteDetalleImpuestosDataTable cln = ((tsa_ComprobanteDetalleImpuestosDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            protected override DataTable CreateInstance() {
                return new tsa_ComprobanteDetalleImpuestosDataTable();
            }
            
            internal void InitVars() {
                this.columnIdComprobante = this.Columns["IdComprobante"];
                this.columnOrdinal = this.Columns["Ordinal"];
                this.columnIdImpuesto = this.Columns["IdImpuesto"];
                this.columnIdEmpresa = this.Columns["IdEmpresa"];
                this.columnIdSucursal = this.Columns["IdSucursal"];
                this.columnIdTipoDeComprobante = this.Columns["IdTipoDeComprobante"];
                this.columnFecha = this.Columns["Fecha"];
                this.columnNumero = this.Columns["Numero"];
                this.columnAplicadoA = this.Columns["AplicadoA"];
                this.columnValor = this.Columns["Valor"];
                this.columnIdMonedaOrigen = this.Columns["IdMonedaOrigen"];
                this.columnIdMonedaCierre = this.Columns["IdMonedaCierre"];
                this.columnIdCotizacionCierre = this.Columns["IdCotizacionCierre"];
                this.columnFechaCreacion = this.Columns["FechaCreacion"];
                this.columnIdConexionCreacion = this.Columns["IdConexionCreacion"];
                this.columnUltimaModificacion = this.Columns["UltimaModificacion"];
                this.columnIdConexionUltimaModificacion = this.Columns["IdConexionUltimaModificacion"];
                this.columnIdReservado = this.Columns["IdReservado"];
                this.columnRowId = this.Columns["RowId"];
                this.columnRowIdGenerado = this.Columns["RowIdGenerado"];
            }
            
            private void InitClass() {
                this.columnIdComprobante = new DataColumn("IdComprobante", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdComprobante);
                this.columnOrdinal = new DataColumn("Ordinal", typeof(long), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnOrdinal);
                this.columnIdImpuesto = new DataColumn("IdImpuesto", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdImpuesto);
                this.columnIdEmpresa = new DataColumn("IdEmpresa", typeof(long), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdEmpresa);
                this.columnIdSucursal = new DataColumn("IdSucursal", typeof(long), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdSucursal);
                this.columnIdTipoDeComprobante = new DataColumn("IdTipoDeComprobante", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdTipoDeComprobante);
                this.columnFecha = new DataColumn("Fecha", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnFecha);
                this.columnNumero = new DataColumn("Numero", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnNumero);
                this.columnAplicadoA = new DataColumn("AplicadoA", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnAplicadoA);
                this.columnValor = new DataColumn("Valor", typeof(System.Decimal), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnValor);
                this.columnIdMonedaOrigen = new DataColumn("IdMonedaOrigen", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdMonedaOrigen);
                this.columnIdMonedaCierre = new DataColumn("IdMonedaCierre", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdMonedaCierre);
                this.columnIdCotizacionCierre = new DataColumn("IdCotizacionCierre", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdCotizacionCierre);
                this.columnFechaCreacion = new DataColumn("FechaCreacion", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnFechaCreacion);
                this.columnIdConexionCreacion = new DataColumn("IdConexionCreacion", typeof(long), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdConexionCreacion);
                this.columnUltimaModificacion = new DataColumn("UltimaModificacion", typeof(System.Byte[]), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnUltimaModificacion);
                this.columnIdConexionUltimaModificacion = new DataColumn("IdConexionUltimaModificacion", typeof(long), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdConexionUltimaModificacion);
                this.columnIdReservado = new DataColumn("IdReservado", typeof(long), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdReservado);
                this.columnRowId = new DataColumn("RowId", typeof(System.Guid), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnRowId);
                this.columnRowIdGenerado = new DataColumn("RowIdGenerado", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnRowIdGenerado);
                this.Constraints.Add(new UniqueConstraint("tsa_ComprobantesExDatasetKey3", new DataColumn[] {
                                this.columnIdComprobante,
                                this.columnOrdinal,
                                this.columnIdImpuesto}, true));
                this.columnIdComprobante.AllowDBNull = false;
                this.columnOrdinal.AllowDBNull = false;
                this.columnIdImpuesto.AllowDBNull = false;
                this.columnIdEmpresa.AllowDBNull = false;
                this.columnIdSucursal.AllowDBNull = false;
                this.columnUltimaModificacion.ReadOnly = true;
            }
            
            public tsa_ComprobanteDetalleImpuestosRow Newtsa_ComprobanteDetalleImpuestosRow() {
                return ((tsa_ComprobanteDetalleImpuestosRow)(this.NewRow()));
            }
            
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder) {
                return new tsa_ComprobanteDetalleImpuestosRow(builder);
            }
            
            protected override System.Type GetRowType() {
                return typeof(tsa_ComprobanteDetalleImpuestosRow);
            }
            
            protected override void OnRowChanged(DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.tsa_ComprobanteDetalleImpuestosRowChanged != null)) {
                    this.tsa_ComprobanteDetalleImpuestosRowChanged(this, new tsa_ComprobanteDetalleImpuestosRowChangeEvent(((tsa_ComprobanteDetalleImpuestosRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowChanging(DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.tsa_ComprobanteDetalleImpuestosRowChanging != null)) {
                    this.tsa_ComprobanteDetalleImpuestosRowChanging(this, new tsa_ComprobanteDetalleImpuestosRowChangeEvent(((tsa_ComprobanteDetalleImpuestosRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleted(DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.tsa_ComprobanteDetalleImpuestosRowDeleted != null)) {
                    this.tsa_ComprobanteDetalleImpuestosRowDeleted(this, new tsa_ComprobanteDetalleImpuestosRowChangeEvent(((tsa_ComprobanteDetalleImpuestosRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleting(DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.tsa_ComprobanteDetalleImpuestosRowDeleting != null)) {
                    this.tsa_ComprobanteDetalleImpuestosRowDeleting(this, new tsa_ComprobanteDetalleImpuestosRowChangeEvent(((tsa_ComprobanteDetalleImpuestosRow)(e.Row)), e.Action));
                }
            }
            
            public void Removetsa_ComprobanteDetalleImpuestosRow(tsa_ComprobanteDetalleImpuestosRow row) {
                this.Rows.Remove(row);
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class tsa_ComprobanteDetalleImpuestosRow : DataRow {
            
            private tsa_ComprobanteDetalleImpuestosDataTable tabletsa_ComprobanteDetalleImpuestos;
            
            internal tsa_ComprobanteDetalleImpuestosRow(DataRowBuilder rb) : 
                    base(rb) {
                this.tabletsa_ComprobanteDetalleImpuestos = ((tsa_ComprobanteDetalleImpuestosDataTable)(this.Table));
            }
            
            public string IdComprobante {
                get {
                    return ((string)(this[this.tabletsa_ComprobanteDetalleImpuestos.IdComprobanteColumn]));
                }
                set {
                    this[this.tabletsa_ComprobanteDetalleImpuestos.IdComprobanteColumn] = value;
                }
            }
            
            public long Ordinal {
                get {
                    return ((long)(this[this.tabletsa_ComprobanteDetalleImpuestos.OrdinalColumn]));
                }
                set {
                    this[this.tabletsa_ComprobanteDetalleImpuestos.OrdinalColumn] = value;
                }
            }
            
            public string IdImpuesto {
                get {
                    return ((string)(this[this.tabletsa_ComprobanteDetalleImpuestos.IdImpuestoColumn]));
                }
                set {
                    this[this.tabletsa_ComprobanteDetalleImpuestos.IdImpuestoColumn] = value;
                }
            }
            
            public long IdEmpresa {
                get {
                    return ((long)(this[this.tabletsa_ComprobanteDetalleImpuestos.IdEmpresaColumn]));
                }
                set {
                    this[this.tabletsa_ComprobanteDetalleImpuestos.IdEmpresaColumn] = value;
                }
            }
            
            public long IdSucursal {
                get {
                    return ((long)(this[this.tabletsa_ComprobanteDetalleImpuestos.IdSucursalColumn]));
                }
                set {
                    this[this.tabletsa_ComprobanteDetalleImpuestos.IdSucursalColumn] = value;
                }
            }
            
            public string IdTipoDeComprobante {
                get {
                    try {
                        return ((string)(this[this.tabletsa_ComprobanteDetalleImpuestos.IdTipoDeComprobanteColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletsa_ComprobanteDetalleImpuestos.IdTipoDeComprobanteColumn] = value;
                }
            }
            
            public System.DateTime Fecha {
                get {
                    try {
                        return ((System.DateTime)(this[this.tabletsa_ComprobanteDetalleImpuestos.FechaColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletsa_ComprobanteDetalleImpuestos.FechaColumn] = value;
                }
            }
            
            public string Numero {
                get {
                    try {
                        return ((string)(this[this.tabletsa_ComprobanteDetalleImpuestos.NumeroColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletsa_ComprobanteDetalleImpuestos.NumeroColumn] = value;
                }
            }
            
            public string AplicadoA {
                get {
                    try {
                        return ((string)(this[this.tabletsa_ComprobanteDetalleImpuestos.AplicadoAColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletsa_ComprobanteDetalleImpuestos.AplicadoAColumn] = value;
                }
            }
            
            public System.Decimal Valor {
                get {
                    try {
                        return ((System.Decimal)(this[this.tabletsa_ComprobanteDetalleImpuestos.ValorColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletsa_ComprobanteDetalleImpuestos.ValorColumn] = value;
                }
            }
            
            public string IdMonedaOrigen {
                get {
                    try {
                        return ((string)(this[this.tabletsa_ComprobanteDetalleImpuestos.IdMonedaOrigenColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletsa_ComprobanteDetalleImpuestos.IdMonedaOrigenColumn] = value;
                }
            }
            
            public string IdMonedaCierre {
                get {
                    try {
                        return ((string)(this[this.tabletsa_ComprobanteDetalleImpuestos.IdMonedaCierreColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletsa_ComprobanteDetalleImpuestos.IdMonedaCierreColumn] = value;
                }
            }
            
            public string IdCotizacionCierre {
                get {
                    try {
                        return ((string)(this[this.tabletsa_ComprobanteDetalleImpuestos.IdCotizacionCierreColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletsa_ComprobanteDetalleImpuestos.IdCotizacionCierreColumn] = value;
                }
            }
            
            public System.DateTime FechaCreacion {
                get {
                    try {
                        return ((System.DateTime)(this[this.tabletsa_ComprobanteDetalleImpuestos.FechaCreacionColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletsa_ComprobanteDetalleImpuestos.FechaCreacionColumn] = value;
                }
            }
            
            public long IdConexionCreacion {
                get {
                    try {
                        return ((long)(this[this.tabletsa_ComprobanteDetalleImpuestos.IdConexionCreacionColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletsa_ComprobanteDetalleImpuestos.IdConexionCreacionColumn] = value;
                }
            }
            
            public System.Byte[] UltimaModificacion {
                get {
                    try {
                        return ((System.Byte[])(this[this.tabletsa_ComprobanteDetalleImpuestos.UltimaModificacionColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletsa_ComprobanteDetalleImpuestos.UltimaModificacionColumn] = value;
                }
            }
            
            public long IdConexionUltimaModificacion {
                get {
                    try {
                        return ((long)(this[this.tabletsa_ComprobanteDetalleImpuestos.IdConexionUltimaModificacionColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletsa_ComprobanteDetalleImpuestos.IdConexionUltimaModificacionColumn] = value;
                }
            }
            
            public long IdReservado {
                get {
                    try {
                        return ((long)(this[this.tabletsa_ComprobanteDetalleImpuestos.IdReservadoColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletsa_ComprobanteDetalleImpuestos.IdReservadoColumn] = value;
                }
            }
            
            public System.Guid RowId {
                get {
                    try {
                        return ((System.Guid)(this[this.tabletsa_ComprobanteDetalleImpuestos.RowIdColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletsa_ComprobanteDetalleImpuestos.RowIdColumn] = value;
                }
            }
            
            public string RowIdGenerado {
                get {
                    try {
                        return ((string)(this[this.tabletsa_ComprobanteDetalleImpuestos.RowIdGeneradoColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletsa_ComprobanteDetalleImpuestos.RowIdGeneradoColumn] = value;
                }
            }
            
            public tsa_ComprobantesDetRow tsa_ComprobantesDetRowParent {
                get {
                    return ((tsa_ComprobantesDetRow)(this.GetParentRow(this.Table.ParentRelations["tsa_ComprobantesDettsa_ComprobanteDetalleImpuestos"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["tsa_ComprobantesDettsa_ComprobanteDetalleImpuestos"]);
                }
            }
            
            public bool IsIdTipoDeComprobanteNull() {
                return this.IsNull(this.tabletsa_ComprobanteDetalleImpuestos.IdTipoDeComprobanteColumn);
            }
            
            public void SetIdTipoDeComprobanteNull() {
                this[this.tabletsa_ComprobanteDetalleImpuestos.IdTipoDeComprobanteColumn] = System.Convert.DBNull;
            }
            
            public bool IsFechaNull() {
                return this.IsNull(this.tabletsa_ComprobanteDetalleImpuestos.FechaColumn);
            }
            
            public void SetFechaNull() {
                this[this.tabletsa_ComprobanteDetalleImpuestos.FechaColumn] = System.Convert.DBNull;
            }
            
            public bool IsNumeroNull() {
                return this.IsNull(this.tabletsa_ComprobanteDetalleImpuestos.NumeroColumn);
            }
            
            public void SetNumeroNull() {
                this[this.tabletsa_ComprobanteDetalleImpuestos.NumeroColumn] = System.Convert.DBNull;
            }
            
            public bool IsAplicadoANull() {
                return this.IsNull(this.tabletsa_ComprobanteDetalleImpuestos.AplicadoAColumn);
            }
            
            public void SetAplicadoANull() {
                this[this.tabletsa_ComprobanteDetalleImpuestos.AplicadoAColumn] = System.Convert.DBNull;
            }
            
            public bool IsValorNull() {
                return this.IsNull(this.tabletsa_ComprobanteDetalleImpuestos.ValorColumn);
            }
            
            public void SetValorNull() {
                this[this.tabletsa_ComprobanteDetalleImpuestos.ValorColumn] = System.Convert.DBNull;
            }
            
            public bool IsIdMonedaOrigenNull() {
                return this.IsNull(this.tabletsa_ComprobanteDetalleImpuestos.IdMonedaOrigenColumn);
            }
            
            public void SetIdMonedaOrigenNull() {
                this[this.tabletsa_ComprobanteDetalleImpuestos.IdMonedaOrigenColumn] = System.Convert.DBNull;
            }
            
            public bool IsIdMonedaCierreNull() {
                return this.IsNull(this.tabletsa_ComprobanteDetalleImpuestos.IdMonedaCierreColumn);
            }
            
            public void SetIdMonedaCierreNull() {
                this[this.tabletsa_ComprobanteDetalleImpuestos.IdMonedaCierreColumn] = System.Convert.DBNull;
            }
            
            public bool IsIdCotizacionCierreNull() {
                return this.IsNull(this.tabletsa_ComprobanteDetalleImpuestos.IdCotizacionCierreColumn);
            }
            
            public void SetIdCotizacionCierreNull() {
                this[this.tabletsa_ComprobanteDetalleImpuestos.IdCotizacionCierreColumn] = System.Convert.DBNull;
            }
            
            public bool IsFechaCreacionNull() {
                return this.IsNull(this.tabletsa_ComprobanteDetalleImpuestos.FechaCreacionColumn);
            }
            
            public void SetFechaCreacionNull() {
                this[this.tabletsa_ComprobanteDetalleImpuestos.FechaCreacionColumn] = System.Convert.DBNull;
            }
            
            public bool IsIdConexionCreacionNull() {
                return this.IsNull(this.tabletsa_ComprobanteDetalleImpuestos.IdConexionCreacionColumn);
            }
            
            public void SetIdConexionCreacionNull() {
                this[this.tabletsa_ComprobanteDetalleImpuestos.IdConexionCreacionColumn] = System.Convert.DBNull;
            }
            
            public bool IsUltimaModificacionNull() {
                return this.IsNull(this.tabletsa_ComprobanteDetalleImpuestos.UltimaModificacionColumn);
            }
            
            public void SetUltimaModificacionNull() {
                this[this.tabletsa_ComprobanteDetalleImpuestos.UltimaModificacionColumn] = System.Convert.DBNull;
            }
            
            public bool IsIdConexionUltimaModificacionNull() {
                return this.IsNull(this.tabletsa_ComprobanteDetalleImpuestos.IdConexionUltimaModificacionColumn);
            }
            
            public void SetIdConexionUltimaModificacionNull() {
                this[this.tabletsa_ComprobanteDetalleImpuestos.IdConexionUltimaModificacionColumn] = System.Convert.DBNull;
            }
            
            public bool IsIdReservadoNull() {
                return this.IsNull(this.tabletsa_ComprobanteDetalleImpuestos.IdReservadoColumn);
            }
            
            public void SetIdReservadoNull() {
                this[this.tabletsa_ComprobanteDetalleImpuestos.IdReservadoColumn] = System.Convert.DBNull;
            }
            
            public bool IsRowIdNull() {
                return this.IsNull(this.tabletsa_ComprobanteDetalleImpuestos.RowIdColumn);
            }
            
            public void SetRowIdNull() {
                this[this.tabletsa_ComprobanteDetalleImpuestos.RowIdColumn] = System.Convert.DBNull;
            }
            
            public bool IsRowIdGeneradoNull() {
                return this.IsNull(this.tabletsa_ComprobanteDetalleImpuestos.RowIdGeneradoColumn);
            }
            
            public void SetRowIdGeneradoNull() {
                this[this.tabletsa_ComprobanteDetalleImpuestos.RowIdGeneradoColumn] = System.Convert.DBNull;
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class tsa_ComprobanteDetalleImpuestosRowChangeEvent : EventArgs {
            
            private tsa_ComprobanteDetalleImpuestosRow eventRow;
            
            private DataRowAction eventAction;
            
            public tsa_ComprobanteDetalleImpuestosRowChangeEvent(tsa_ComprobanteDetalleImpuestosRow row, DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            public tsa_ComprobanteDetalleImpuestosRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            public DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class tsa_ComprobanteValoresVarAuxDataTable : DataTable, System.Collections.IEnumerable {
            
            private DataColumn columnIdComprobante;
            
            private DataColumn columnIdVarAuxComprobante;
            
            private DataColumn columnValor;
            
            private DataColumn columnFechaCreacion;
            
            private DataColumn columnIdConexionCreacion;
            
            private DataColumn columnUltimaModificacion;
            
            private DataColumn columnIdConexionUltimaModificacion;
            
            private DataColumn columnIdReservado;
            
            private DataColumn columnRowId;
            
            private DataColumn columnIdEmpresa;
            
            private DataColumn columnIdSucursal;
            
            private DataColumn columnRowIdGenerado;
            
            internal tsa_ComprobanteValoresVarAuxDataTable() : 
                    base("tsa_ComprobanteValoresVarAux") {
                this.InitClass();
            }
            
            internal tsa_ComprobanteValoresVarAuxDataTable(DataTable table) : 
                    base(table.TableName) {
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
                this.DisplayExpression = table.DisplayExpression;
            }
            
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            internal DataColumn IdComprobanteColumn {
                get {
                    return this.columnIdComprobante;
                }
            }
            
            internal DataColumn IdVarAuxComprobanteColumn {
                get {
                    return this.columnIdVarAuxComprobante;
                }
            }
            
            internal DataColumn ValorColumn {
                get {
                    return this.columnValor;
                }
            }
            
            internal DataColumn FechaCreacionColumn {
                get {
                    return this.columnFechaCreacion;
                }
            }
            
            internal DataColumn IdConexionCreacionColumn {
                get {
                    return this.columnIdConexionCreacion;
                }
            }
            
            internal DataColumn UltimaModificacionColumn {
                get {
                    return this.columnUltimaModificacion;
                }
            }
            
            internal DataColumn IdConexionUltimaModificacionColumn {
                get {
                    return this.columnIdConexionUltimaModificacion;
                }
            }
            
            internal DataColumn IdReservadoColumn {
                get {
                    return this.columnIdReservado;
                }
            }
            
            internal DataColumn RowIdColumn {
                get {
                    return this.columnRowId;
                }
            }
            
            internal DataColumn IdEmpresaColumn {
                get {
                    return this.columnIdEmpresa;
                }
            }
            
            internal DataColumn IdSucursalColumn {
                get {
                    return this.columnIdSucursal;
                }
            }
            
            internal DataColumn RowIdGeneradoColumn {
                get {
                    return this.columnRowIdGenerado;
                }
            }
            
            public tsa_ComprobanteValoresVarAuxRow this[int index] {
                get {
                    return ((tsa_ComprobanteValoresVarAuxRow)(this.Rows[index]));
                }
            }
            
            public event tsa_ComprobanteValoresVarAuxRowChangeEventHandler tsa_ComprobanteValoresVarAuxRowChanged;
            
            public event tsa_ComprobanteValoresVarAuxRowChangeEventHandler tsa_ComprobanteValoresVarAuxRowChanging;
            
            public event tsa_ComprobanteValoresVarAuxRowChangeEventHandler tsa_ComprobanteValoresVarAuxRowDeleted;
            
            public event tsa_ComprobanteValoresVarAuxRowChangeEventHandler tsa_ComprobanteValoresVarAuxRowDeleting;
            
            public void Addtsa_ComprobanteValoresVarAuxRow(tsa_ComprobanteValoresVarAuxRow row) {
                this.Rows.Add(row);
            }
            
            public tsa_ComprobanteValoresVarAuxRow Addtsa_ComprobanteValoresVarAuxRow(tsa_ComprobantesRow parenttsa_ComprobantesRowBytsa_Comprobantestsa_ComprobanteValoresVarAux, string IdVarAuxComprobante, string Valor, System.DateTime FechaCreacion, long IdConexionCreacion, System.Byte[] UltimaModificacion, long IdConexionUltimaModificacion, long IdReservado, System.Guid RowId, long IdEmpresa, long IdSucursal, string RowIdGenerado) {
                tsa_ComprobanteValoresVarAuxRow rowtsa_ComprobanteValoresVarAuxRow = ((tsa_ComprobanteValoresVarAuxRow)(this.NewRow()));
                rowtsa_ComprobanteValoresVarAuxRow.ItemArray = new object[] {
                        parenttsa_ComprobantesRowBytsa_Comprobantestsa_ComprobanteValoresVarAux[0],
                        IdVarAuxComprobante,
                        Valor,
                        FechaCreacion,
                        IdConexionCreacion,
                        UltimaModificacion,
                        IdConexionUltimaModificacion,
                        IdReservado,
                        RowId,
                        IdEmpresa,
                        IdSucursal,
                        RowIdGenerado};
                this.Rows.Add(rowtsa_ComprobanteValoresVarAuxRow);
                return rowtsa_ComprobanteValoresVarAuxRow;
            }
            
            public tsa_ComprobanteValoresVarAuxRow FindByIdComprobanteIdVarAuxComprobante(string IdComprobante, string IdVarAuxComprobante) {
                return ((tsa_ComprobanteValoresVarAuxRow)(this.Rows.Find(new object[] {
                            IdComprobante,
                            IdVarAuxComprobante})));
            }
            
            public System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            public override DataTable Clone() {
                tsa_ComprobanteValoresVarAuxDataTable cln = ((tsa_ComprobanteValoresVarAuxDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            protected override DataTable CreateInstance() {
                return new tsa_ComprobanteValoresVarAuxDataTable();
            }
            
            internal void InitVars() {
                this.columnIdComprobante = this.Columns["IdComprobante"];
                this.columnIdVarAuxComprobante = this.Columns["IdVarAuxComprobante"];
                this.columnValor = this.Columns["Valor"];
                this.columnFechaCreacion = this.Columns["FechaCreacion"];
                this.columnIdConexionCreacion = this.Columns["IdConexionCreacion"];
                this.columnUltimaModificacion = this.Columns["UltimaModificacion"];
                this.columnIdConexionUltimaModificacion = this.Columns["IdConexionUltimaModificacion"];
                this.columnIdReservado = this.Columns["IdReservado"];
                this.columnRowId = this.Columns["RowId"];
                this.columnIdEmpresa = this.Columns["IdEmpresa"];
                this.columnIdSucursal = this.Columns["IdSucursal"];
                this.columnRowIdGenerado = this.Columns["RowIdGenerado"];
            }
            
            private void InitClass() {
                this.columnIdComprobante = new DataColumn("IdComprobante", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdComprobante);
                this.columnIdVarAuxComprobante = new DataColumn("IdVarAuxComprobante", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdVarAuxComprobante);
                this.columnValor = new DataColumn("Valor", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnValor);
                this.columnFechaCreacion = new DataColumn("FechaCreacion", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnFechaCreacion);
                this.columnIdConexionCreacion = new DataColumn("IdConexionCreacion", typeof(long), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdConexionCreacion);
                this.columnUltimaModificacion = new DataColumn("UltimaModificacion", typeof(System.Byte[]), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnUltimaModificacion);
                this.columnIdConexionUltimaModificacion = new DataColumn("IdConexionUltimaModificacion", typeof(long), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdConexionUltimaModificacion);
                this.columnIdReservado = new DataColumn("IdReservado", typeof(long), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdReservado);
                this.columnRowId = new DataColumn("RowId", typeof(System.Guid), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnRowId);
                this.columnIdEmpresa = new DataColumn("IdEmpresa", typeof(long), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdEmpresa);
                this.columnIdSucursal = new DataColumn("IdSucursal", typeof(long), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdSucursal);
                this.columnRowIdGenerado = new DataColumn("RowIdGenerado", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnRowIdGenerado);
                this.Constraints.Add(new UniqueConstraint("tsa_ComprobantesExDatasetKey5", new DataColumn[] {
                                this.columnIdComprobante,
                                this.columnIdVarAuxComprobante}, true));
                this.columnIdComprobante.AllowDBNull = false;
                this.columnIdVarAuxComprobante.AllowDBNull = false;
                this.columnUltimaModificacion.ReadOnly = true;
            }
            
            public tsa_ComprobanteValoresVarAuxRow Newtsa_ComprobanteValoresVarAuxRow() {
                return ((tsa_ComprobanteValoresVarAuxRow)(this.NewRow()));
            }
            
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder) {
                return new tsa_ComprobanteValoresVarAuxRow(builder);
            }
            
            protected override System.Type GetRowType() {
                return typeof(tsa_ComprobanteValoresVarAuxRow);
            }
            
            protected override void OnRowChanged(DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.tsa_ComprobanteValoresVarAuxRowChanged != null)) {
                    this.tsa_ComprobanteValoresVarAuxRowChanged(this, new tsa_ComprobanteValoresVarAuxRowChangeEvent(((tsa_ComprobanteValoresVarAuxRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowChanging(DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.tsa_ComprobanteValoresVarAuxRowChanging != null)) {
                    this.tsa_ComprobanteValoresVarAuxRowChanging(this, new tsa_ComprobanteValoresVarAuxRowChangeEvent(((tsa_ComprobanteValoresVarAuxRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleted(DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.tsa_ComprobanteValoresVarAuxRowDeleted != null)) {
                    this.tsa_ComprobanteValoresVarAuxRowDeleted(this, new tsa_ComprobanteValoresVarAuxRowChangeEvent(((tsa_ComprobanteValoresVarAuxRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleting(DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.tsa_ComprobanteValoresVarAuxRowDeleting != null)) {
                    this.tsa_ComprobanteValoresVarAuxRowDeleting(this, new tsa_ComprobanteValoresVarAuxRowChangeEvent(((tsa_ComprobanteValoresVarAuxRow)(e.Row)), e.Action));
                }
            }
            
            public void Removetsa_ComprobanteValoresVarAuxRow(tsa_ComprobanteValoresVarAuxRow row) {
                this.Rows.Remove(row);
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class tsa_ComprobanteValoresVarAuxRow : DataRow {
            
            private tsa_ComprobanteValoresVarAuxDataTable tabletsa_ComprobanteValoresVarAux;
            
            internal tsa_ComprobanteValoresVarAuxRow(DataRowBuilder rb) : 
                    base(rb) {
                this.tabletsa_ComprobanteValoresVarAux = ((tsa_ComprobanteValoresVarAuxDataTable)(this.Table));
            }
            
            public string IdComprobante {
                get {
                    return ((string)(this[this.tabletsa_ComprobanteValoresVarAux.IdComprobanteColumn]));
                }
                set {
                    this[this.tabletsa_ComprobanteValoresVarAux.IdComprobanteColumn] = value;
                }
            }
            
            public string IdVarAuxComprobante {
                get {
                    return ((string)(this[this.tabletsa_ComprobanteValoresVarAux.IdVarAuxComprobanteColumn]));
                }
                set {
                    this[this.tabletsa_ComprobanteValoresVarAux.IdVarAuxComprobanteColumn] = value;
                }
            }
            
            public string Valor {
                get {
                    try {
                        return ((string)(this[this.tabletsa_ComprobanteValoresVarAux.ValorColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletsa_ComprobanteValoresVarAux.ValorColumn] = value;
                }
            }
            
            public System.DateTime FechaCreacion {
                get {
                    try {
                        return ((System.DateTime)(this[this.tabletsa_ComprobanteValoresVarAux.FechaCreacionColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletsa_ComprobanteValoresVarAux.FechaCreacionColumn] = value;
                }
            }
            
            public long IdConexionCreacion {
                get {
                    try {
                        return ((long)(this[this.tabletsa_ComprobanteValoresVarAux.IdConexionCreacionColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletsa_ComprobanteValoresVarAux.IdConexionCreacionColumn] = value;
                }
            }
            
            public System.Byte[] UltimaModificacion {
                get {
                    try {
                        return ((System.Byte[])(this[this.tabletsa_ComprobanteValoresVarAux.UltimaModificacionColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletsa_ComprobanteValoresVarAux.UltimaModificacionColumn] = value;
                }
            }
            
            public long IdConexionUltimaModificacion {
                get {
                    try {
                        return ((long)(this[this.tabletsa_ComprobanteValoresVarAux.IdConexionUltimaModificacionColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletsa_ComprobanteValoresVarAux.IdConexionUltimaModificacionColumn] = value;
                }
            }
            
            public long IdReservado {
                get {
                    try {
                        return ((long)(this[this.tabletsa_ComprobanteValoresVarAux.IdReservadoColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletsa_ComprobanteValoresVarAux.IdReservadoColumn] = value;
                }
            }
            
            public System.Guid RowId {
                get {
                    try {
                        return ((System.Guid)(this[this.tabletsa_ComprobanteValoresVarAux.RowIdColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletsa_ComprobanteValoresVarAux.RowIdColumn] = value;
                }
            }
            
            public long IdEmpresa {
                get {
                    try {
                        return ((long)(this[this.tabletsa_ComprobanteValoresVarAux.IdEmpresaColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletsa_ComprobanteValoresVarAux.IdEmpresaColumn] = value;
                }
            }
            
            public long IdSucursal {
                get {
                    try {
                        return ((long)(this[this.tabletsa_ComprobanteValoresVarAux.IdSucursalColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletsa_ComprobanteValoresVarAux.IdSucursalColumn] = value;
                }
            }
            
            public string RowIdGenerado {
                get {
                    try {
                        return ((string)(this[this.tabletsa_ComprobanteValoresVarAux.RowIdGeneradoColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletsa_ComprobanteValoresVarAux.RowIdGeneradoColumn] = value;
                }
            }
            
            public tsa_ComprobantesRow tsa_ComprobantesRow {
                get {
                    return ((tsa_ComprobantesRow)(this.GetParentRow(this.Table.ParentRelations["tsa_Comprobantestsa_ComprobanteValoresVarAux"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["tsa_Comprobantestsa_ComprobanteValoresVarAux"]);
                }
            }
            
            public bool IsValorNull() {
                return this.IsNull(this.tabletsa_ComprobanteValoresVarAux.ValorColumn);
            }
            
            public void SetValorNull() {
                this[this.tabletsa_ComprobanteValoresVarAux.ValorColumn] = System.Convert.DBNull;
            }
            
            public bool IsFechaCreacionNull() {
                return this.IsNull(this.tabletsa_ComprobanteValoresVarAux.FechaCreacionColumn);
            }
            
            public void SetFechaCreacionNull() {
                this[this.tabletsa_ComprobanteValoresVarAux.FechaCreacionColumn] = System.Convert.DBNull;
            }
            
            public bool IsIdConexionCreacionNull() {
                return this.IsNull(this.tabletsa_ComprobanteValoresVarAux.IdConexionCreacionColumn);
            }
            
            public void SetIdConexionCreacionNull() {
                this[this.tabletsa_ComprobanteValoresVarAux.IdConexionCreacionColumn] = System.Convert.DBNull;
            }
            
            public bool IsUltimaModificacionNull() {
                return this.IsNull(this.tabletsa_ComprobanteValoresVarAux.UltimaModificacionColumn);
            }
            
            public void SetUltimaModificacionNull() {
                this[this.tabletsa_ComprobanteValoresVarAux.UltimaModificacionColumn] = System.Convert.DBNull;
            }
            
            public bool IsIdConexionUltimaModificacionNull() {
                return this.IsNull(this.tabletsa_ComprobanteValoresVarAux.IdConexionUltimaModificacionColumn);
            }
            
            public void SetIdConexionUltimaModificacionNull() {
                this[this.tabletsa_ComprobanteValoresVarAux.IdConexionUltimaModificacionColumn] = System.Convert.DBNull;
            }
            
            public bool IsIdReservadoNull() {
                return this.IsNull(this.tabletsa_ComprobanteValoresVarAux.IdReservadoColumn);
            }
            
            public void SetIdReservadoNull() {
                this[this.tabletsa_ComprobanteValoresVarAux.IdReservadoColumn] = System.Convert.DBNull;
            }
            
            public bool IsRowIdNull() {
                return this.IsNull(this.tabletsa_ComprobanteValoresVarAux.RowIdColumn);
            }
            
            public void SetRowIdNull() {
                this[this.tabletsa_ComprobanteValoresVarAux.RowIdColumn] = System.Convert.DBNull;
            }
            
            public bool IsIdEmpresaNull() {
                return this.IsNull(this.tabletsa_ComprobanteValoresVarAux.IdEmpresaColumn);
            }
            
            public void SetIdEmpresaNull() {
                this[this.tabletsa_ComprobanteValoresVarAux.IdEmpresaColumn] = System.Convert.DBNull;
            }
            
            public bool IsIdSucursalNull() {
                return this.IsNull(this.tabletsa_ComprobanteValoresVarAux.IdSucursalColumn);
            }
            
            public void SetIdSucursalNull() {
                this[this.tabletsa_ComprobanteValoresVarAux.IdSucursalColumn] = System.Convert.DBNull;
            }
            
            public bool IsRowIdGeneradoNull() {
                return this.IsNull(this.tabletsa_ComprobanteValoresVarAux.RowIdGeneradoColumn);
            }
            
            public void SetRowIdGeneradoNull() {
                this[this.tabletsa_ComprobanteValoresVarAux.RowIdGeneradoColumn] = System.Convert.DBNull;
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class tsa_ComprobanteValoresVarAuxRowChangeEvent : EventArgs {
            
            private tsa_ComprobanteValoresVarAuxRow eventRow;
            
            private DataRowAction eventAction;
            
            public tsa_ComprobanteValoresVarAuxRowChangeEvent(tsa_ComprobanteValoresVarAuxRow row, DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            public tsa_ComprobanteValoresVarAuxRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            public DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class tsa_ComprobanteDetalleDescripcionAdicionalDataTable : DataTable, System.Collections.IEnumerable {
            
            private DataColumn columnIdComprobante;
            
            private DataColumn columnOrdinal;
            
            private DataColumn columnDescripcion;
            
            private DataColumn columnIdEmpresa;
            
            private DataColumn columnIdSucursal;
            
            private DataColumn columnFechaCreacion;
            
            private DataColumn columnIdConexionCreacion;
            
            private DataColumn columnUltimaModificacion;
            
            private DataColumn columnIdConexionUltimaModificacion;
            
            private DataColumn columnIdReservado;
            
            private DataColumn columnRowId;
            
            private DataColumn columnRowIdGenerado;
            
            internal tsa_ComprobanteDetalleDescripcionAdicionalDataTable() : 
                    base("tsa_ComprobanteDetalleDescripcionAdicional") {
                this.InitClass();
            }
            
            internal tsa_ComprobanteDetalleDescripcionAdicionalDataTable(DataTable table) : 
                    base(table.TableName) {
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
                this.DisplayExpression = table.DisplayExpression;
            }
            
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            internal DataColumn IdComprobanteColumn {
                get {
                    return this.columnIdComprobante;
                }
            }
            
            internal DataColumn OrdinalColumn {
                get {
                    return this.columnOrdinal;
                }
            }
            
            internal DataColumn DescripcionColumn {
                get {
                    return this.columnDescripcion;
                }
            }
            
            internal DataColumn IdEmpresaColumn {
                get {
                    return this.columnIdEmpresa;
                }
            }
            
            internal DataColumn IdSucursalColumn {
                get {
                    return this.columnIdSucursal;
                }
            }
            
            internal DataColumn FechaCreacionColumn {
                get {
                    return this.columnFechaCreacion;
                }
            }
            
            internal DataColumn IdConexionCreacionColumn {
                get {
                    return this.columnIdConexionCreacion;
                }
            }
            
            internal DataColumn UltimaModificacionColumn {
                get {
                    return this.columnUltimaModificacion;
                }
            }
            
            internal DataColumn IdConexionUltimaModificacionColumn {
                get {
                    return this.columnIdConexionUltimaModificacion;
                }
            }
            
            internal DataColumn IdReservadoColumn {
                get {
                    return this.columnIdReservado;
                }
            }
            
            internal DataColumn RowIdColumn {
                get {
                    return this.columnRowId;
                }
            }
            
            internal DataColumn RowIdGeneradoColumn {
                get {
                    return this.columnRowIdGenerado;
                }
            }
            
            public tsa_ComprobanteDetalleDescripcionAdicionalRow this[int index] {
                get {
                    return ((tsa_ComprobanteDetalleDescripcionAdicionalRow)(this.Rows[index]));
                }
            }
            
            public event tsa_ComprobanteDetalleDescripcionAdicionalRowChangeEventHandler tsa_ComprobanteDetalleDescripcionAdicionalRowChanged;
            
            public event tsa_ComprobanteDetalleDescripcionAdicionalRowChangeEventHandler tsa_ComprobanteDetalleDescripcionAdicionalRowChanging;
            
            public event tsa_ComprobanteDetalleDescripcionAdicionalRowChangeEventHandler tsa_ComprobanteDetalleDescripcionAdicionalRowDeleted;
            
            public event tsa_ComprobanteDetalleDescripcionAdicionalRowChangeEventHandler tsa_ComprobanteDetalleDescripcionAdicionalRowDeleting;
            
            public void Addtsa_ComprobanteDetalleDescripcionAdicionalRow(tsa_ComprobanteDetalleDescripcionAdicionalRow row) {
                this.Rows.Add(row);
            }
            
            public tsa_ComprobanteDetalleDescripcionAdicionalRow Addtsa_ComprobanteDetalleDescripcionAdicionalRow(string IdComprobante, long Ordinal, string Descripcion, long IdEmpresa, long IdSucursal, System.DateTime FechaCreacion, long IdConexionCreacion, System.Byte[] UltimaModificacion, long IdConexionUltimaModificacion, long IdReservado, System.Guid RowId, string RowIdGenerado) {
                tsa_ComprobanteDetalleDescripcionAdicionalRow rowtsa_ComprobanteDetalleDescripcionAdicionalRow = ((tsa_ComprobanteDetalleDescripcionAdicionalRow)(this.NewRow()));
                rowtsa_ComprobanteDetalleDescripcionAdicionalRow.ItemArray = new object[] {
                        IdComprobante,
                        Ordinal,
                        Descripcion,
                        IdEmpresa,
                        IdSucursal,
                        FechaCreacion,
                        IdConexionCreacion,
                        UltimaModificacion,
                        IdConexionUltimaModificacion,
                        IdReservado,
                        RowId,
                        RowIdGenerado};
                this.Rows.Add(rowtsa_ComprobanteDetalleDescripcionAdicionalRow);
                return rowtsa_ComprobanteDetalleDescripcionAdicionalRow;
            }
            
            public tsa_ComprobanteDetalleDescripcionAdicionalRow FindByIdComprobanteOrdinal(string IdComprobante, long Ordinal) {
                return ((tsa_ComprobanteDetalleDescripcionAdicionalRow)(this.Rows.Find(new object[] {
                            IdComprobante,
                            Ordinal})));
            }
            
            public System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            public override DataTable Clone() {
                tsa_ComprobanteDetalleDescripcionAdicionalDataTable cln = ((tsa_ComprobanteDetalleDescripcionAdicionalDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            protected override DataTable CreateInstance() {
                return new tsa_ComprobanteDetalleDescripcionAdicionalDataTable();
            }
            
            internal void InitVars() {
                this.columnIdComprobante = this.Columns["IdComprobante"];
                this.columnOrdinal = this.Columns["Ordinal"];
                this.columnDescripcion = this.Columns["Descripcion"];
                this.columnIdEmpresa = this.Columns["IdEmpresa"];
                this.columnIdSucursal = this.Columns["IdSucursal"];
                this.columnFechaCreacion = this.Columns["FechaCreacion"];
                this.columnIdConexionCreacion = this.Columns["IdConexionCreacion"];
                this.columnUltimaModificacion = this.Columns["UltimaModificacion"];
                this.columnIdConexionUltimaModificacion = this.Columns["IdConexionUltimaModificacion"];
                this.columnIdReservado = this.Columns["IdReservado"];
                this.columnRowId = this.Columns["RowId"];
                this.columnRowIdGenerado = this.Columns["RowIdGenerado"];
            }
            
            private void InitClass() {
                this.columnIdComprobante = new DataColumn("IdComprobante", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdComprobante);
                this.columnOrdinal = new DataColumn("Ordinal", typeof(long), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnOrdinal);
                this.columnDescripcion = new DataColumn("Descripcion", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnDescripcion);
                this.columnIdEmpresa = new DataColumn("IdEmpresa", typeof(long), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdEmpresa);
                this.columnIdSucursal = new DataColumn("IdSucursal", typeof(long), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdSucursal);
                this.columnFechaCreacion = new DataColumn("FechaCreacion", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnFechaCreacion);
                this.columnIdConexionCreacion = new DataColumn("IdConexionCreacion", typeof(long), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdConexionCreacion);
                this.columnUltimaModificacion = new DataColumn("UltimaModificacion", typeof(System.Byte[]), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnUltimaModificacion);
                this.columnIdConexionUltimaModificacion = new DataColumn("IdConexionUltimaModificacion", typeof(long), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdConexionUltimaModificacion);
                this.columnIdReservado = new DataColumn("IdReservado", typeof(long), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdReservado);
                this.columnRowId = new DataColumn("RowId", typeof(System.Guid), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnRowId);
                this.columnRowIdGenerado = new DataColumn("RowIdGenerado", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnRowIdGenerado);
                this.Constraints.Add(new UniqueConstraint("tsa_ComprobantesExDatasetKey4", new DataColumn[] {
                                this.columnIdComprobante,
                                this.columnOrdinal}, true));
                this.columnIdComprobante.AllowDBNull = false;
                this.columnOrdinal.AllowDBNull = false;
                this.columnDescripcion.AllowDBNull = false;
                this.columnUltimaModificacion.ReadOnly = true;
            }
            
            public tsa_ComprobanteDetalleDescripcionAdicionalRow Newtsa_ComprobanteDetalleDescripcionAdicionalRow() {
                return ((tsa_ComprobanteDetalleDescripcionAdicionalRow)(this.NewRow()));
            }
            
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder) {
                return new tsa_ComprobanteDetalleDescripcionAdicionalRow(builder);
            }
            
            protected override System.Type GetRowType() {
                return typeof(tsa_ComprobanteDetalleDescripcionAdicionalRow);
            }
            
            protected override void OnRowChanged(DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.tsa_ComprobanteDetalleDescripcionAdicionalRowChanged != null)) {
                    this.tsa_ComprobanteDetalleDescripcionAdicionalRowChanged(this, new tsa_ComprobanteDetalleDescripcionAdicionalRowChangeEvent(((tsa_ComprobanteDetalleDescripcionAdicionalRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowChanging(DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.tsa_ComprobanteDetalleDescripcionAdicionalRowChanging != null)) {
                    this.tsa_ComprobanteDetalleDescripcionAdicionalRowChanging(this, new tsa_ComprobanteDetalleDescripcionAdicionalRowChangeEvent(((tsa_ComprobanteDetalleDescripcionAdicionalRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleted(DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.tsa_ComprobanteDetalleDescripcionAdicionalRowDeleted != null)) {
                    this.tsa_ComprobanteDetalleDescripcionAdicionalRowDeleted(this, new tsa_ComprobanteDetalleDescripcionAdicionalRowChangeEvent(((tsa_ComprobanteDetalleDescripcionAdicionalRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleting(DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.tsa_ComprobanteDetalleDescripcionAdicionalRowDeleting != null)) {
                    this.tsa_ComprobanteDetalleDescripcionAdicionalRowDeleting(this, new tsa_ComprobanteDetalleDescripcionAdicionalRowChangeEvent(((tsa_ComprobanteDetalleDescripcionAdicionalRow)(e.Row)), e.Action));
                }
            }
            
            public void Removetsa_ComprobanteDetalleDescripcionAdicionalRow(tsa_ComprobanteDetalleDescripcionAdicionalRow row) {
                this.Rows.Remove(row);
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class tsa_ComprobanteDetalleDescripcionAdicionalRow : DataRow {
            
            private tsa_ComprobanteDetalleDescripcionAdicionalDataTable tabletsa_ComprobanteDetalleDescripcionAdicional;
            
            internal tsa_ComprobanteDetalleDescripcionAdicionalRow(DataRowBuilder rb) : 
                    base(rb) {
                this.tabletsa_ComprobanteDetalleDescripcionAdicional = ((tsa_ComprobanteDetalleDescripcionAdicionalDataTable)(this.Table));
            }
            
            public string IdComprobante {
                get {
                    return ((string)(this[this.tabletsa_ComprobanteDetalleDescripcionAdicional.IdComprobanteColumn]));
                }
                set {
                    this[this.tabletsa_ComprobanteDetalleDescripcionAdicional.IdComprobanteColumn] = value;
                }
            }
            
            public long Ordinal {
                get {
                    return ((long)(this[this.tabletsa_ComprobanteDetalleDescripcionAdicional.OrdinalColumn]));
                }
                set {
                    this[this.tabletsa_ComprobanteDetalleDescripcionAdicional.OrdinalColumn] = value;
                }
            }
            
            public string Descripcion {
                get {
                    return ((string)(this[this.tabletsa_ComprobanteDetalleDescripcionAdicional.DescripcionColumn]));
                }
                set {
                    this[this.tabletsa_ComprobanteDetalleDescripcionAdicional.DescripcionColumn] = value;
                }
            }
            
            public long IdEmpresa {
                get {
                    try {
                        return ((long)(this[this.tabletsa_ComprobanteDetalleDescripcionAdicional.IdEmpresaColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletsa_ComprobanteDetalleDescripcionAdicional.IdEmpresaColumn] = value;
                }
            }
            
            public long IdSucursal {
                get {
                    try {
                        return ((long)(this[this.tabletsa_ComprobanteDetalleDescripcionAdicional.IdSucursalColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletsa_ComprobanteDetalleDescripcionAdicional.IdSucursalColumn] = value;
                }
            }
            
            public System.DateTime FechaCreacion {
                get {
                    try {
                        return ((System.DateTime)(this[this.tabletsa_ComprobanteDetalleDescripcionAdicional.FechaCreacionColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletsa_ComprobanteDetalleDescripcionAdicional.FechaCreacionColumn] = value;
                }
            }
            
            public long IdConexionCreacion {
                get {
                    try {
                        return ((long)(this[this.tabletsa_ComprobanteDetalleDescripcionAdicional.IdConexionCreacionColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletsa_ComprobanteDetalleDescripcionAdicional.IdConexionCreacionColumn] = value;
                }
            }
            
            public System.Byte[] UltimaModificacion {
                get {
                    try {
                        return ((System.Byte[])(this[this.tabletsa_ComprobanteDetalleDescripcionAdicional.UltimaModificacionColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletsa_ComprobanteDetalleDescripcionAdicional.UltimaModificacionColumn] = value;
                }
            }
            
            public long IdConexionUltimaModificacion {
                get {
                    try {
                        return ((long)(this[this.tabletsa_ComprobanteDetalleDescripcionAdicional.IdConexionUltimaModificacionColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletsa_ComprobanteDetalleDescripcionAdicional.IdConexionUltimaModificacionColumn] = value;
                }
            }
            
            public long IdReservado {
                get {
                    try {
                        return ((long)(this[this.tabletsa_ComprobanteDetalleDescripcionAdicional.IdReservadoColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletsa_ComprobanteDetalleDescripcionAdicional.IdReservadoColumn] = value;
                }
            }
            
            public System.Guid RowId {
                get {
                    try {
                        return ((System.Guid)(this[this.tabletsa_ComprobanteDetalleDescripcionAdicional.RowIdColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletsa_ComprobanteDetalleDescripcionAdicional.RowIdColumn] = value;
                }
            }
            
            public string RowIdGenerado {
                get {
                    try {
                        return ((string)(this[this.tabletsa_ComprobanteDetalleDescripcionAdicional.RowIdGeneradoColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletsa_ComprobanteDetalleDescripcionAdicional.RowIdGeneradoColumn] = value;
                }
            }
            
            public tsa_ComprobantesDetRow tsa_ComprobantesDetRowParent {
                get {
                    return ((tsa_ComprobantesDetRow)(this.GetParentRow(this.Table.ParentRelations["tsa_ComprobantesDettsa_ComprobanteDetalleDescripcionAdicional"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["tsa_ComprobantesDettsa_ComprobanteDetalleDescripcionAdicional"]);
                }
            }
            
            public bool IsIdEmpresaNull() {
                return this.IsNull(this.tabletsa_ComprobanteDetalleDescripcionAdicional.IdEmpresaColumn);
            }
            
            public void SetIdEmpresaNull() {
                this[this.tabletsa_ComprobanteDetalleDescripcionAdicional.IdEmpresaColumn] = System.Convert.DBNull;
            }
            
            public bool IsIdSucursalNull() {
                return this.IsNull(this.tabletsa_ComprobanteDetalleDescripcionAdicional.IdSucursalColumn);
            }
            
            public void SetIdSucursalNull() {
                this[this.tabletsa_ComprobanteDetalleDescripcionAdicional.IdSucursalColumn] = System.Convert.DBNull;
            }
            
            public bool IsFechaCreacionNull() {
                return this.IsNull(this.tabletsa_ComprobanteDetalleDescripcionAdicional.FechaCreacionColumn);
            }
            
            public void SetFechaCreacionNull() {
                this[this.tabletsa_ComprobanteDetalleDescripcionAdicional.FechaCreacionColumn] = System.Convert.DBNull;
            }
            
            public bool IsIdConexionCreacionNull() {
                return this.IsNull(this.tabletsa_ComprobanteDetalleDescripcionAdicional.IdConexionCreacionColumn);
            }
            
            public void SetIdConexionCreacionNull() {
                this[this.tabletsa_ComprobanteDetalleDescripcionAdicional.IdConexionCreacionColumn] = System.Convert.DBNull;
            }
            
            public bool IsUltimaModificacionNull() {
                return this.IsNull(this.tabletsa_ComprobanteDetalleDescripcionAdicional.UltimaModificacionColumn);
            }
            
            public void SetUltimaModificacionNull() {
                this[this.tabletsa_ComprobanteDetalleDescripcionAdicional.UltimaModificacionColumn] = System.Convert.DBNull;
            }
            
            public bool IsIdConexionUltimaModificacionNull() {
                return this.IsNull(this.tabletsa_ComprobanteDetalleDescripcionAdicional.IdConexionUltimaModificacionColumn);
            }
            
            public void SetIdConexionUltimaModificacionNull() {
                this[this.tabletsa_ComprobanteDetalleDescripcionAdicional.IdConexionUltimaModificacionColumn] = System.Convert.DBNull;
            }
            
            public bool IsIdReservadoNull() {
                return this.IsNull(this.tabletsa_ComprobanteDetalleDescripcionAdicional.IdReservadoColumn);
            }
            
            public void SetIdReservadoNull() {
                this[this.tabletsa_ComprobanteDetalleDescripcionAdicional.IdReservadoColumn] = System.Convert.DBNull;
            }
            
            public bool IsRowIdNull() {
                return this.IsNull(this.tabletsa_ComprobanteDetalleDescripcionAdicional.RowIdColumn);
            }
            
            public void SetRowIdNull() {
                this[this.tabletsa_ComprobanteDetalleDescripcionAdicional.RowIdColumn] = System.Convert.DBNull;
            }
            
            public bool IsRowIdGeneradoNull() {
                return this.IsNull(this.tabletsa_ComprobanteDetalleDescripcionAdicional.RowIdGeneradoColumn);
            }
            
            public void SetRowIdGeneradoNull() {
                this[this.tabletsa_ComprobanteDetalleDescripcionAdicional.RowIdGeneradoColumn] = System.Convert.DBNull;
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class tsa_ComprobanteDetalleDescripcionAdicionalRowChangeEvent : EventArgs {
            
            private tsa_ComprobanteDetalleDescripcionAdicionalRow eventRow;
            
            private DataRowAction eventAction;
            
            public tsa_ComprobanteDetalleDescripcionAdicionalRowChangeEvent(tsa_ComprobanteDetalleDescripcionAdicionalRow row, DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            public tsa_ComprobanteDetalleDescripcionAdicionalRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            public DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class tsa_ComprobantesRelacionOrigenDestinoDataTable : DataTable, System.Collections.IEnumerable {
            
            private DataColumn columnIdComprobanteOrigen;
            
            private DataColumn columnIdComprobanteDestino;
            
            private DataColumn columnIdOrdinalOrigen;
            
            private DataColumn columnIdOrdinalDestino;
            
            private DataColumn columnCantidad;
            
            private DataColumn columnFechaCreacion;
            
            private DataColumn columnIdConexionCreacion;
            
            private DataColumn columnUltimaModificacion;
            
            private DataColumn columnIdConexionUltimaModificacion;
            
            private DataColumn columnIdReservado;
            
            private DataColumn columnRowId;
            
            private DataColumn columnIdEmpresa;
            
            private DataColumn columnIdSucursal;
            
            private DataColumn columnRowIdGenerado;
            
            internal tsa_ComprobantesRelacionOrigenDestinoDataTable() : 
                    base("tsa_ComprobantesRelacionOrigenDestino") {
                this.InitClass();
            }
            
            internal tsa_ComprobantesRelacionOrigenDestinoDataTable(DataTable table) : 
                    base(table.TableName) {
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
                this.DisplayExpression = table.DisplayExpression;
            }
            
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            internal DataColumn IdComprobanteOrigenColumn {
                get {
                    return this.columnIdComprobanteOrigen;
                }
            }
            
            internal DataColumn IdComprobanteDestinoColumn {
                get {
                    return this.columnIdComprobanteDestino;
                }
            }
            
            internal DataColumn IdOrdinalOrigenColumn {
                get {
                    return this.columnIdOrdinalOrigen;
                }
            }
            
            internal DataColumn IdOrdinalDestinoColumn {
                get {
                    return this.columnIdOrdinalDestino;
                }
            }
            
            internal DataColumn CantidadColumn {
                get {
                    return this.columnCantidad;
                }
            }
            
            internal DataColumn FechaCreacionColumn {
                get {
                    return this.columnFechaCreacion;
                }
            }
            
            internal DataColumn IdConexionCreacionColumn {
                get {
                    return this.columnIdConexionCreacion;
                }
            }
            
            internal DataColumn UltimaModificacionColumn {
                get {
                    return this.columnUltimaModificacion;
                }
            }
            
            internal DataColumn IdConexionUltimaModificacionColumn {
                get {
                    return this.columnIdConexionUltimaModificacion;
                }
            }
            
            internal DataColumn IdReservadoColumn {
                get {
                    return this.columnIdReservado;
                }
            }
            
            internal DataColumn RowIdColumn {
                get {
                    return this.columnRowId;
                }
            }
            
            internal DataColumn IdEmpresaColumn {
                get {
                    return this.columnIdEmpresa;
                }
            }
            
            internal DataColumn IdSucursalColumn {
                get {
                    return this.columnIdSucursal;
                }
            }
            
            internal DataColumn RowIdGeneradoColumn {
                get {
                    return this.columnRowIdGenerado;
                }
            }
            
            public tsa_ComprobantesRelacionOrigenDestinoRow this[int index] {
                get {
                    return ((tsa_ComprobantesRelacionOrigenDestinoRow)(this.Rows[index]));
                }
            }
            
            public event tsa_ComprobantesRelacionOrigenDestinoRowChangeEventHandler tsa_ComprobantesRelacionOrigenDestinoRowChanged;
            
            public event tsa_ComprobantesRelacionOrigenDestinoRowChangeEventHandler tsa_ComprobantesRelacionOrigenDestinoRowChanging;
            
            public event tsa_ComprobantesRelacionOrigenDestinoRowChangeEventHandler tsa_ComprobantesRelacionOrigenDestinoRowDeleted;
            
            public event tsa_ComprobantesRelacionOrigenDestinoRowChangeEventHandler tsa_ComprobantesRelacionOrigenDestinoRowDeleting;
            
            public void Addtsa_ComprobantesRelacionOrigenDestinoRow(tsa_ComprobantesRelacionOrigenDestinoRow row) {
                this.Rows.Add(row);
            }
            
            public tsa_ComprobantesRelacionOrigenDestinoRow Addtsa_ComprobantesRelacionOrigenDestinoRow(string IdComprobanteOrigen, string IdComprobanteDestino, long IdOrdinalOrigen, long IdOrdinalDestino, System.Decimal Cantidad, System.DateTime FechaCreacion, long IdConexionCreacion, System.Byte[] UltimaModificacion, long IdConexionUltimaModificacion, long IdReservado, System.Guid RowId, long IdEmpresa, long IdSucursal, string RowIdGenerado) {
                tsa_ComprobantesRelacionOrigenDestinoRow rowtsa_ComprobantesRelacionOrigenDestinoRow = ((tsa_ComprobantesRelacionOrigenDestinoRow)(this.NewRow()));
                rowtsa_ComprobantesRelacionOrigenDestinoRow.ItemArray = new object[] {
                        IdComprobanteOrigen,
                        IdComprobanteDestino,
                        IdOrdinalOrigen,
                        IdOrdinalDestino,
                        Cantidad,
                        FechaCreacion,
                        IdConexionCreacion,
                        UltimaModificacion,
                        IdConexionUltimaModificacion,
                        IdReservado,
                        RowId,
                        IdEmpresa,
                        IdSucursal,
                        RowIdGenerado};
                this.Rows.Add(rowtsa_ComprobantesRelacionOrigenDestinoRow);
                return rowtsa_ComprobantesRelacionOrigenDestinoRow;
            }
            
            public System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            public override DataTable Clone() {
                tsa_ComprobantesRelacionOrigenDestinoDataTable cln = ((tsa_ComprobantesRelacionOrigenDestinoDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            protected override DataTable CreateInstance() {
                return new tsa_ComprobantesRelacionOrigenDestinoDataTable();
            }
            
            internal void InitVars() {
                this.columnIdComprobanteOrigen = this.Columns["IdComprobanteOrigen"];
                this.columnIdComprobanteDestino = this.Columns["IdComprobanteDestino"];
                this.columnIdOrdinalOrigen = this.Columns["IdOrdinalOrigen"];
                this.columnIdOrdinalDestino = this.Columns["IdOrdinalDestino"];
                this.columnCantidad = this.Columns["Cantidad"];
                this.columnFechaCreacion = this.Columns["FechaCreacion"];
                this.columnIdConexionCreacion = this.Columns["IdConexionCreacion"];
                this.columnUltimaModificacion = this.Columns["UltimaModificacion"];
                this.columnIdConexionUltimaModificacion = this.Columns["IdConexionUltimaModificacion"];
                this.columnIdReservado = this.Columns["IdReservado"];
                this.columnRowId = this.Columns["RowId"];
                this.columnIdEmpresa = this.Columns["IdEmpresa"];
                this.columnIdSucursal = this.Columns["IdSucursal"];
                this.columnRowIdGenerado = this.Columns["RowIdGenerado"];
            }
            
            private void InitClass() {
                this.columnIdComprobanteOrigen = new DataColumn("IdComprobanteOrigen", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdComprobanteOrigen);
                this.columnIdComprobanteDestino = new DataColumn("IdComprobanteDestino", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdComprobanteDestino);
                this.columnIdOrdinalOrigen = new DataColumn("IdOrdinalOrigen", typeof(long), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdOrdinalOrigen);
                this.columnIdOrdinalDestino = new DataColumn("IdOrdinalDestino", typeof(long), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdOrdinalDestino);
                this.columnCantidad = new DataColumn("Cantidad", typeof(System.Decimal), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnCantidad);
                this.columnFechaCreacion = new DataColumn("FechaCreacion", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnFechaCreacion);
                this.columnIdConexionCreacion = new DataColumn("IdConexionCreacion", typeof(long), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdConexionCreacion);
                this.columnUltimaModificacion = new DataColumn("UltimaModificacion", typeof(System.Byte[]), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnUltimaModificacion);
                this.columnIdConexionUltimaModificacion = new DataColumn("IdConexionUltimaModificacion", typeof(long), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdConexionUltimaModificacion);
                this.columnIdReservado = new DataColumn("IdReservado", typeof(long), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdReservado);
                this.columnRowId = new DataColumn("RowId", typeof(System.Guid), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnRowId);
                this.columnIdEmpresa = new DataColumn("IdEmpresa", typeof(long), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdEmpresa);
                this.columnIdSucursal = new DataColumn("IdSucursal", typeof(long), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdSucursal);
                this.columnRowIdGenerado = new DataColumn("RowIdGenerado", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnRowIdGenerado);
                this.columnUltimaModificacion.ReadOnly = true;
            }
            
            public tsa_ComprobantesRelacionOrigenDestinoRow Newtsa_ComprobantesRelacionOrigenDestinoRow() {
                return ((tsa_ComprobantesRelacionOrigenDestinoRow)(this.NewRow()));
            }
            
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder) {
                return new tsa_ComprobantesRelacionOrigenDestinoRow(builder);
            }
            
            protected override System.Type GetRowType() {
                return typeof(tsa_ComprobantesRelacionOrigenDestinoRow);
            }
            
            protected override void OnRowChanged(DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.tsa_ComprobantesRelacionOrigenDestinoRowChanged != null)) {
                    this.tsa_ComprobantesRelacionOrigenDestinoRowChanged(this, new tsa_ComprobantesRelacionOrigenDestinoRowChangeEvent(((tsa_ComprobantesRelacionOrigenDestinoRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowChanging(DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.tsa_ComprobantesRelacionOrigenDestinoRowChanging != null)) {
                    this.tsa_ComprobantesRelacionOrigenDestinoRowChanging(this, new tsa_ComprobantesRelacionOrigenDestinoRowChangeEvent(((tsa_ComprobantesRelacionOrigenDestinoRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleted(DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.tsa_ComprobantesRelacionOrigenDestinoRowDeleted != null)) {
                    this.tsa_ComprobantesRelacionOrigenDestinoRowDeleted(this, new tsa_ComprobantesRelacionOrigenDestinoRowChangeEvent(((tsa_ComprobantesRelacionOrigenDestinoRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleting(DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.tsa_ComprobantesRelacionOrigenDestinoRowDeleting != null)) {
                    this.tsa_ComprobantesRelacionOrigenDestinoRowDeleting(this, new tsa_ComprobantesRelacionOrigenDestinoRowChangeEvent(((tsa_ComprobantesRelacionOrigenDestinoRow)(e.Row)), e.Action));
                }
            }
            
            public void Removetsa_ComprobantesRelacionOrigenDestinoRow(tsa_ComprobantesRelacionOrigenDestinoRow row) {
                this.Rows.Remove(row);
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class tsa_ComprobantesRelacionOrigenDestinoRow : DataRow {
            
            private tsa_ComprobantesRelacionOrigenDestinoDataTable tabletsa_ComprobantesRelacionOrigenDestino;
            
            internal tsa_ComprobantesRelacionOrigenDestinoRow(DataRowBuilder rb) : 
                    base(rb) {
                this.tabletsa_ComprobantesRelacionOrigenDestino = ((tsa_ComprobantesRelacionOrigenDestinoDataTable)(this.Table));
            }
            
            public string IdComprobanteOrigen {
                get {
                    if (this.IsIdComprobanteOrigenNull()) {
                        return null;
                    }
                    else {
                        return ((string)(this[this.tabletsa_ComprobantesRelacionOrigenDestino.IdComprobanteOrigenColumn]));
                    }
                }
                set {
                    this[this.tabletsa_ComprobantesRelacionOrigenDestino.IdComprobanteOrigenColumn] = value;
                }
            }
            
            public string IdComprobanteDestino {
                get {
                    if (this.IsIdComprobanteDestinoNull()) {
                        return null;
                    }
                    else {
                        return ((string)(this[this.tabletsa_ComprobantesRelacionOrigenDestino.IdComprobanteDestinoColumn]));
                    }
                }
                set {
                    this[this.tabletsa_ComprobantesRelacionOrigenDestino.IdComprobanteDestinoColumn] = value;
                }
            }
            
            public long IdOrdinalOrigen {
                get {
                    try {
                        return ((long)(this[this.tabletsa_ComprobantesRelacionOrigenDestino.IdOrdinalOrigenColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletsa_ComprobantesRelacionOrigenDestino.IdOrdinalOrigenColumn] = value;
                }
            }
            
            public long IdOrdinalDestino {
                get {
                    try {
                        return ((long)(this[this.tabletsa_ComprobantesRelacionOrigenDestino.IdOrdinalDestinoColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletsa_ComprobantesRelacionOrigenDestino.IdOrdinalDestinoColumn] = value;
                }
            }
            
            public System.Decimal Cantidad {
                get {
                    try {
                        return ((System.Decimal)(this[this.tabletsa_ComprobantesRelacionOrigenDestino.CantidadColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletsa_ComprobantesRelacionOrigenDestino.CantidadColumn] = value;
                }
            }
            
            public System.DateTime FechaCreacion {
                get {
                    try {
                        return ((System.DateTime)(this[this.tabletsa_ComprobantesRelacionOrigenDestino.FechaCreacionColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletsa_ComprobantesRelacionOrigenDestino.FechaCreacionColumn] = value;
                }
            }
            
            public long IdConexionCreacion {
                get {
                    try {
                        return ((long)(this[this.tabletsa_ComprobantesRelacionOrigenDestino.IdConexionCreacionColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletsa_ComprobantesRelacionOrigenDestino.IdConexionCreacionColumn] = value;
                }
            }
            
            public System.Byte[] UltimaModificacion {
                get {
                    try {
                        return ((System.Byte[])(this[this.tabletsa_ComprobantesRelacionOrigenDestino.UltimaModificacionColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletsa_ComprobantesRelacionOrigenDestino.UltimaModificacionColumn] = value;
                }
            }
            
            public long IdConexionUltimaModificacion {
                get {
                    try {
                        return ((long)(this[this.tabletsa_ComprobantesRelacionOrigenDestino.IdConexionUltimaModificacionColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletsa_ComprobantesRelacionOrigenDestino.IdConexionUltimaModificacionColumn] = value;
                }
            }
            
            public long IdReservado {
                get {
                    try {
                        return ((long)(this[this.tabletsa_ComprobantesRelacionOrigenDestino.IdReservadoColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletsa_ComprobantesRelacionOrigenDestino.IdReservadoColumn] = value;
                }
            }
            
            public System.Guid RowId {
                get {
                    try {
                        return ((System.Guid)(this[this.tabletsa_ComprobantesRelacionOrigenDestino.RowIdColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletsa_ComprobantesRelacionOrigenDestino.RowIdColumn] = value;
                }
            }
            
            public long IdEmpresa {
                get {
                    try {
                        return ((long)(this[this.tabletsa_ComprobantesRelacionOrigenDestino.IdEmpresaColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletsa_ComprobantesRelacionOrigenDestino.IdEmpresaColumn] = value;
                }
            }
            
            public long IdSucursal {
                get {
                    try {
                        return ((long)(this[this.tabletsa_ComprobantesRelacionOrigenDestino.IdSucursalColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletsa_ComprobantesRelacionOrigenDestino.IdSucursalColumn] = value;
                }
            }
            
            public string RowIdGenerado {
                get {
                    try {
                        return ((string)(this[this.tabletsa_ComprobantesRelacionOrigenDestino.RowIdGeneradoColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletsa_ComprobantesRelacionOrigenDestino.RowIdGeneradoColumn] = value;
                }
            }
            
            public bool IsIdComprobanteOrigenNull() {
                return this.IsNull(this.tabletsa_ComprobantesRelacionOrigenDestino.IdComprobanteOrigenColumn);
            }
            
            public void SetIdComprobanteOrigenNull() {
                this[this.tabletsa_ComprobantesRelacionOrigenDestino.IdComprobanteOrigenColumn] = System.Convert.DBNull;
            }
            
            public bool IsIdComprobanteDestinoNull() {
                return this.IsNull(this.tabletsa_ComprobantesRelacionOrigenDestino.IdComprobanteDestinoColumn);
            }
            
            public void SetIdComprobanteDestinoNull() {
                this[this.tabletsa_ComprobantesRelacionOrigenDestino.IdComprobanteDestinoColumn] = System.Convert.DBNull;
            }
            
            public bool IsIdOrdinalOrigenNull() {
                return this.IsNull(this.tabletsa_ComprobantesRelacionOrigenDestino.IdOrdinalOrigenColumn);
            }
            
            public void SetIdOrdinalOrigenNull() {
                this[this.tabletsa_ComprobantesRelacionOrigenDestino.IdOrdinalOrigenColumn] = System.Convert.DBNull;
            }
            
            public bool IsIdOrdinalDestinoNull() {
                return this.IsNull(this.tabletsa_ComprobantesRelacionOrigenDestino.IdOrdinalDestinoColumn);
            }
            
            public void SetIdOrdinalDestinoNull() {
                this[this.tabletsa_ComprobantesRelacionOrigenDestino.IdOrdinalDestinoColumn] = System.Convert.DBNull;
            }
            
            public bool IsCantidadNull() {
                return this.IsNull(this.tabletsa_ComprobantesRelacionOrigenDestino.CantidadColumn);
            }
            
            public void SetCantidadNull() {
                this[this.tabletsa_ComprobantesRelacionOrigenDestino.CantidadColumn] = System.Convert.DBNull;
            }
            
            public bool IsFechaCreacionNull() {
                return this.IsNull(this.tabletsa_ComprobantesRelacionOrigenDestino.FechaCreacionColumn);
            }
            
            public void SetFechaCreacionNull() {
                this[this.tabletsa_ComprobantesRelacionOrigenDestino.FechaCreacionColumn] = System.Convert.DBNull;
            }
            
            public bool IsIdConexionCreacionNull() {
                return this.IsNull(this.tabletsa_ComprobantesRelacionOrigenDestino.IdConexionCreacionColumn);
            }
            
            public void SetIdConexionCreacionNull() {
                this[this.tabletsa_ComprobantesRelacionOrigenDestino.IdConexionCreacionColumn] = System.Convert.DBNull;
            }
            
            public bool IsUltimaModificacionNull() {
                return this.IsNull(this.tabletsa_ComprobantesRelacionOrigenDestino.UltimaModificacionColumn);
            }
            
            public void SetUltimaModificacionNull() {
                this[this.tabletsa_ComprobantesRelacionOrigenDestino.UltimaModificacionColumn] = System.Convert.DBNull;
            }
            
            public bool IsIdConexionUltimaModificacionNull() {
                return this.IsNull(this.tabletsa_ComprobantesRelacionOrigenDestino.IdConexionUltimaModificacionColumn);
            }
            
            public void SetIdConexionUltimaModificacionNull() {
                this[this.tabletsa_ComprobantesRelacionOrigenDestino.IdConexionUltimaModificacionColumn] = System.Convert.DBNull;
            }
            
            public bool IsIdReservadoNull() {
                return this.IsNull(this.tabletsa_ComprobantesRelacionOrigenDestino.IdReservadoColumn);
            }
            
            public void SetIdReservadoNull() {
                this[this.tabletsa_ComprobantesRelacionOrigenDestino.IdReservadoColumn] = System.Convert.DBNull;
            }
            
            public bool IsRowIdNull() {
                return this.IsNull(this.tabletsa_ComprobantesRelacionOrigenDestino.RowIdColumn);
            }
            
            public void SetRowIdNull() {
                this[this.tabletsa_ComprobantesRelacionOrigenDestino.RowIdColumn] = System.Convert.DBNull;
            }
            
            public bool IsIdEmpresaNull() {
                return this.IsNull(this.tabletsa_ComprobantesRelacionOrigenDestino.IdEmpresaColumn);
            }
            
            public void SetIdEmpresaNull() {
                this[this.tabletsa_ComprobantesRelacionOrigenDestino.IdEmpresaColumn] = System.Convert.DBNull;
            }
            
            public bool IsIdSucursalNull() {
                return this.IsNull(this.tabletsa_ComprobantesRelacionOrigenDestino.IdSucursalColumn);
            }
            
            public void SetIdSucursalNull() {
                this[this.tabletsa_ComprobantesRelacionOrigenDestino.IdSucursalColumn] = System.Convert.DBNull;
            }
            
            public bool IsRowIdGeneradoNull() {
                return this.IsNull(this.tabletsa_ComprobantesRelacionOrigenDestino.RowIdGeneradoColumn);
            }
            
            public void SetRowIdGeneradoNull() {
                this[this.tabletsa_ComprobantesRelacionOrigenDestino.RowIdGeneradoColumn] = System.Convert.DBNull;
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class tsa_ComprobantesRelacionOrigenDestinoRowChangeEvent : EventArgs {
            
            private tsa_ComprobantesRelacionOrigenDestinoRow eventRow;
            
            private DataRowAction eventAction;
            
            public tsa_ComprobantesRelacionOrigenDestinoRowChangeEvent(tsa_ComprobantesRelacionOrigenDestinoRow row, DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            public tsa_ComprobantesRelacionOrigenDestinoRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            public DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class tsa_ComprobanteDetalleDePagosDataTable : DataTable, System.Collections.IEnumerable {
            
            private DataColumn columnIdTipoDeComprobante;
            
            private DataColumn columnNumero;
            
            private DataColumn columnIdComprobante;
            
            private DataColumn columnIdValor;
            
            private DataColumn columnMonto;
            
            private DataColumn columnIdMoneda;
            
            private DataColumn columnIdCotizaicon;
            
            private DataColumn columnFechaCreacion;
            
            private DataColumn columnIdConexionCreacion;
            
            private DataColumn columnUltimaModificacion;
            
            private DataColumn columnIdConexionUltimaModificacion;
            
            private DataColumn columnIdReservado;
            
            private DataColumn columnRowId;
            
            private DataColumn columnIdSucursal;
            
            private DataColumn columnIdEmpresa;
            
            private DataColumn columnMontoSinRecargos;
            
            private DataColumn columnIdFormaDePago;
            
            internal tsa_ComprobanteDetalleDePagosDataTable() : 
                    base("tsa_ComprobanteDetalleDePagos") {
                this.InitClass();
            }
            
            internal tsa_ComprobanteDetalleDePagosDataTable(DataTable table) : 
                    base(table.TableName) {
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
                this.DisplayExpression = table.DisplayExpression;
            }
            
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            internal DataColumn IdTipoDeComprobanteColumn {
                get {
                    return this.columnIdTipoDeComprobante;
                }
            }
            
            internal DataColumn NumeroColumn {
                get {
                    return this.columnNumero;
                }
            }
            
            internal DataColumn IdComprobanteColumn {
                get {
                    return this.columnIdComprobante;
                }
            }
            
            internal DataColumn IdValorColumn {
                get {
                    return this.columnIdValor;
                }
            }
            
            internal DataColumn MontoColumn {
                get {
                    return this.columnMonto;
                }
            }
            
            internal DataColumn IdMonedaColumn {
                get {
                    return this.columnIdMoneda;
                }
            }
            
            internal DataColumn IdCotizaiconColumn {
                get {
                    return this.columnIdCotizaicon;
                }
            }
            
            internal DataColumn FechaCreacionColumn {
                get {
                    return this.columnFechaCreacion;
                }
            }
            
            internal DataColumn IdConexionCreacionColumn {
                get {
                    return this.columnIdConexionCreacion;
                }
            }
            
            internal DataColumn UltimaModificacionColumn {
                get {
                    return this.columnUltimaModificacion;
                }
            }
            
            internal DataColumn IdConexionUltimaModificacionColumn {
                get {
                    return this.columnIdConexionUltimaModificacion;
                }
            }
            
            internal DataColumn IdReservadoColumn {
                get {
                    return this.columnIdReservado;
                }
            }
            
            internal DataColumn RowIdColumn {
                get {
                    return this.columnRowId;
                }
            }
            
            internal DataColumn IdSucursalColumn {
                get {
                    return this.columnIdSucursal;
                }
            }
            
            internal DataColumn IdEmpresaColumn {
                get {
                    return this.columnIdEmpresa;
                }
            }
            
            internal DataColumn MontoSinRecargosColumn {
                get {
                    return this.columnMontoSinRecargos;
                }
            }
            
            internal DataColumn IdFormaDePagoColumn {
                get {
                    return this.columnIdFormaDePago;
                }
            }
            
            public tsa_ComprobanteDetalleDePagosRow this[int index] {
                get {
                    return ((tsa_ComprobanteDetalleDePagosRow)(this.Rows[index]));
                }
            }
            
            public event tsa_ComprobanteDetalleDePagosRowChangeEventHandler tsa_ComprobanteDetalleDePagosRowChanged;
            
            public event tsa_ComprobanteDetalleDePagosRowChangeEventHandler tsa_ComprobanteDetalleDePagosRowChanging;
            
            public event tsa_ComprobanteDetalleDePagosRowChangeEventHandler tsa_ComprobanteDetalleDePagosRowDeleted;
            
            public event tsa_ComprobanteDetalleDePagosRowChangeEventHandler tsa_ComprobanteDetalleDePagosRowDeleting;
            
            public void Addtsa_ComprobanteDetalleDePagosRow(tsa_ComprobanteDetalleDePagosRow row) {
                this.Rows.Add(row);
            }
            
            public tsa_ComprobanteDetalleDePagosRow Addtsa_ComprobanteDetalleDePagosRow(
                        string IdTipoDeComprobante, 
                        string Numero, 
                        tsa_ComprobantesRow parenttsa_ComprobantesRowBytsa_Comprobantestsa_ComprobanteDetalleDePagos, 
                        tfi_ValoresRow parenttfi_ValoresRowBytfi_Valorestsa_ComprobanteDetalleDePagos, 
                        System.Decimal Monto, 
                        string IdMoneda, 
                        string IdCotizaicon, 
                        System.DateTime FechaCreacion, 
                        long IdConexionCreacion, 
                        System.Byte[] UltimaModificacion, 
                        long IdConexionUltimaModificacion, 
                        long IdReservado, 
                        System.Guid RowId, 
                        long IdSucursal, 
                        long IdEmpresa, 
                        System.Decimal MontoSinRecargos, 
                        string IdFormaDePago) {
                tsa_ComprobanteDetalleDePagosRow rowtsa_ComprobanteDetalleDePagosRow = ((tsa_ComprobanteDetalleDePagosRow)(this.NewRow()));
                rowtsa_ComprobanteDetalleDePagosRow.ItemArray = new object[] {
                        IdTipoDeComprobante,
                        Numero,
                        parenttsa_ComprobantesRowBytsa_Comprobantestsa_ComprobanteDetalleDePagos[0],
                        parenttfi_ValoresRowBytfi_Valorestsa_ComprobanteDetalleDePagos[0],
                        Monto,
                        IdMoneda,
                        IdCotizaicon,
                        FechaCreacion,
                        IdConexionCreacion,
                        UltimaModificacion,
                        IdConexionUltimaModificacion,
                        IdReservado,
                        RowId,
                        IdSucursal,
                        IdEmpresa,
                        MontoSinRecargos,
                        IdFormaDePago};
                this.Rows.Add(rowtsa_ComprobanteDetalleDePagosRow);
                return rowtsa_ComprobanteDetalleDePagosRow;
            }
            
            public tsa_ComprobanteDetalleDePagosRow FindByIdComprobanteIdValor(string IdComprobante, string IdValor) {
                return ((tsa_ComprobanteDetalleDePagosRow)(this.Rows.Find(new object[] {
                            IdComprobante,
                            IdValor})));
            }
            
            public System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            public override DataTable Clone() {
                tsa_ComprobanteDetalleDePagosDataTable cln = ((tsa_ComprobanteDetalleDePagosDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            protected override DataTable CreateInstance() {
                return new tsa_ComprobanteDetalleDePagosDataTable();
            }
            
            internal void InitVars() {
                this.columnIdTipoDeComprobante = this.Columns["IdTipoDeComprobante"];
                this.columnNumero = this.Columns["Numero"];
                this.columnIdComprobante = this.Columns["IdComprobante"];
                this.columnIdValor = this.Columns["IdValor"];
                this.columnMonto = this.Columns["Monto"];
                this.columnIdMoneda = this.Columns["IdMoneda"];
                this.columnIdCotizaicon = this.Columns["IdCotizaicon"];
                this.columnFechaCreacion = this.Columns["FechaCreacion"];
                this.columnIdConexionCreacion = this.Columns["IdConexionCreacion"];
                this.columnUltimaModificacion = this.Columns["UltimaModificacion"];
                this.columnIdConexionUltimaModificacion = this.Columns["IdConexionUltimaModificacion"];
                this.columnIdReservado = this.Columns["IdReservado"];
                this.columnRowId = this.Columns["RowId"];
                this.columnIdSucursal = this.Columns["IdSucursal"];
                this.columnIdEmpresa = this.Columns["IdEmpresa"];
                this.columnMontoSinRecargos = this.Columns["MontoSinRecargos"];
                this.columnIdFormaDePago = this.Columns["IdFormaDePago"];
            }
            
            private void InitClass() {
                this.columnIdTipoDeComprobante = new DataColumn("IdTipoDeComprobante", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdTipoDeComprobante);
                this.columnNumero = new DataColumn("Numero", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnNumero);
                this.columnIdComprobante = new DataColumn("IdComprobante", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdComprobante);
                this.columnIdValor = new DataColumn("IdValor", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdValor);
                this.columnMonto = new DataColumn("Monto", typeof(System.Decimal), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnMonto);
                this.columnIdMoneda = new DataColumn("IdMoneda", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdMoneda);
                this.columnIdCotizaicon = new DataColumn("IdCotizaicon", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdCotizaicon);
                this.columnFechaCreacion = new DataColumn("FechaCreacion", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnFechaCreacion);
                this.columnIdConexionCreacion = new DataColumn("IdConexionCreacion", typeof(long), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdConexionCreacion);
                this.columnUltimaModificacion = new DataColumn("UltimaModificacion", typeof(System.Byte[]), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnUltimaModificacion);
                this.columnIdConexionUltimaModificacion = new DataColumn("IdConexionUltimaModificacion", typeof(long), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdConexionUltimaModificacion);
                this.columnIdReservado = new DataColumn("IdReservado", typeof(long), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdReservado);
                this.columnRowId = new DataColumn("RowId", typeof(System.Guid), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnRowId);
                this.columnIdSucursal = new DataColumn("IdSucursal", typeof(long), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdSucursal);
                this.columnIdEmpresa = new DataColumn("IdEmpresa", typeof(long), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdEmpresa);
                this.columnMontoSinRecargos = new DataColumn("MontoSinRecargos", typeof(System.Decimal), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnMontoSinRecargos);
                this.columnIdFormaDePago = new DataColumn("IdFormaDePago", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdFormaDePago);
                this.Constraints.Add(new UniqueConstraint("tsa_ComprobantesExDatasetKey6", new DataColumn[] {
                                this.columnIdComprobante,
                                this.columnIdValor}, true));
                this.columnIdTipoDeComprobante.AllowDBNull = false;
                this.columnNumero.AllowDBNull = false;
                this.columnIdComprobante.AllowDBNull = false;
                this.columnIdValor.AllowDBNull = false;
                this.columnMonto.AllowDBNull = false;
                this.columnIdMoneda.AllowDBNull = false;
                this.columnIdCotizaicon.AllowDBNull = false;
                this.columnUltimaModificacion.ReadOnly = true;
            }
            
            public tsa_ComprobanteDetalleDePagosRow Newtsa_ComprobanteDetalleDePagosRow() {
                return ((tsa_ComprobanteDetalleDePagosRow)(this.NewRow()));
            }
            
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder) {
                return new tsa_ComprobanteDetalleDePagosRow(builder);
            }
            
            protected override System.Type GetRowType() {
                return typeof(tsa_ComprobanteDetalleDePagosRow);
            }
            
            protected override void OnRowChanged(DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.tsa_ComprobanteDetalleDePagosRowChanged != null)) {
                    this.tsa_ComprobanteDetalleDePagosRowChanged(this, new tsa_ComprobanteDetalleDePagosRowChangeEvent(((tsa_ComprobanteDetalleDePagosRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowChanging(DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.tsa_ComprobanteDetalleDePagosRowChanging != null)) {
                    this.tsa_ComprobanteDetalleDePagosRowChanging(this, new tsa_ComprobanteDetalleDePagosRowChangeEvent(((tsa_ComprobanteDetalleDePagosRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleted(DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.tsa_ComprobanteDetalleDePagosRowDeleted != null)) {
                    this.tsa_ComprobanteDetalleDePagosRowDeleted(this, new tsa_ComprobanteDetalleDePagosRowChangeEvent(((tsa_ComprobanteDetalleDePagosRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleting(DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.tsa_ComprobanteDetalleDePagosRowDeleting != null)) {
                    this.tsa_ComprobanteDetalleDePagosRowDeleting(this, new tsa_ComprobanteDetalleDePagosRowChangeEvent(((tsa_ComprobanteDetalleDePagosRow)(e.Row)), e.Action));
                }
            }
            
            public void Removetsa_ComprobanteDetalleDePagosRow(tsa_ComprobanteDetalleDePagosRow row) {
                this.Rows.Remove(row);
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class tsa_ComprobanteDetalleDePagosRow : DataRow {
            
            private tsa_ComprobanteDetalleDePagosDataTable tabletsa_ComprobanteDetalleDePagos;
            
            internal tsa_ComprobanteDetalleDePagosRow(DataRowBuilder rb) : 
                    base(rb) {
                this.tabletsa_ComprobanteDetalleDePagos = ((tsa_ComprobanteDetalleDePagosDataTable)(this.Table));
            }
            
            public string IdTipoDeComprobante {
                get {
                    return ((string)(this[this.tabletsa_ComprobanteDetalleDePagos.IdTipoDeComprobanteColumn]));
                }
                set {
                    this[this.tabletsa_ComprobanteDetalleDePagos.IdTipoDeComprobanteColumn] = value;
                }
            }
            
            public string Numero {
                get {
                    return ((string)(this[this.tabletsa_ComprobanteDetalleDePagos.NumeroColumn]));
                }
                set {
                    this[this.tabletsa_ComprobanteDetalleDePagos.NumeroColumn] = value;
                }
            }
            
            public string IdComprobante {
                get {
                    return ((string)(this[this.tabletsa_ComprobanteDetalleDePagos.IdComprobanteColumn]));
                }
                set {
                    this[this.tabletsa_ComprobanteDetalleDePagos.IdComprobanteColumn] = value;
                }
            }
            
            public string IdValor {
                get {
                    return ((string)(this[this.tabletsa_ComprobanteDetalleDePagos.IdValorColumn]));
                }
                set {
                    this[this.tabletsa_ComprobanteDetalleDePagos.IdValorColumn] = value;
                }
            }
            
            public System.Decimal Monto {
                get {
                    return ((System.Decimal)(this[this.tabletsa_ComprobanteDetalleDePagos.MontoColumn]));
                }
                set {
                    this[this.tabletsa_ComprobanteDetalleDePagos.MontoColumn] = value;
                }
            }
            
            public string IdMoneda {
                get {
                    return ((string)(this[this.tabletsa_ComprobanteDetalleDePagos.IdMonedaColumn]));
                }
                set {
                    this[this.tabletsa_ComprobanteDetalleDePagos.IdMonedaColumn] = value;
                }
            }
            
            public string IdCotizaicon {
                get {
                    return ((string)(this[this.tabletsa_ComprobanteDetalleDePagos.IdCotizaiconColumn]));
                }
                set {
                    this[this.tabletsa_ComprobanteDetalleDePagos.IdCotizaiconColumn] = value;
                }
            }
            
            public System.DateTime FechaCreacion {
                get {
                    try {
                        return ((System.DateTime)(this[this.tabletsa_ComprobanteDetalleDePagos.FechaCreacionColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletsa_ComprobanteDetalleDePagos.FechaCreacionColumn] = value;
                }
            }
            
            public long IdConexionCreacion {
                get {
                    try {
                        return ((long)(this[this.tabletsa_ComprobanteDetalleDePagos.IdConexionCreacionColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletsa_ComprobanteDetalleDePagos.IdConexionCreacionColumn] = value;
                }
            }
            
            public System.Byte[] UltimaModificacion {
                get {
                    try {
                        return ((System.Byte[])(this[this.tabletsa_ComprobanteDetalleDePagos.UltimaModificacionColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletsa_ComprobanteDetalleDePagos.UltimaModificacionColumn] = value;
                }
            }
            
            public long IdConexionUltimaModificacion {
                get {
                    try {
                        return ((long)(this[this.tabletsa_ComprobanteDetalleDePagos.IdConexionUltimaModificacionColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletsa_ComprobanteDetalleDePagos.IdConexionUltimaModificacionColumn] = value;
                }
            }
            
            public long IdReservado {
                get {
                    try {
                        return ((long)(this[this.tabletsa_ComprobanteDetalleDePagos.IdReservadoColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletsa_ComprobanteDetalleDePagos.IdReservadoColumn] = value;
                }
            }
            
            public System.Guid RowId {
                get {
                    try {
                        return ((System.Guid)(this[this.tabletsa_ComprobanteDetalleDePagos.RowIdColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletsa_ComprobanteDetalleDePagos.RowIdColumn] = value;
                }
            }
            
            public long IdSucursal {
                get {
                    try {
                        return ((long)(this[this.tabletsa_ComprobanteDetalleDePagos.IdSucursalColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletsa_ComprobanteDetalleDePagos.IdSucursalColumn] = value;
                }
            }
            
            public long IdEmpresa {
                get {
                    try {
                        return ((long)(this[this.tabletsa_ComprobanteDetalleDePagos.IdEmpresaColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletsa_ComprobanteDetalleDePagos.IdEmpresaColumn] = value;
                }
            }
            
            public System.Decimal MontoSinRecargos {
                get {
                    try {
                        return ((System.Decimal)(this[this.tabletsa_ComprobanteDetalleDePagos.MontoSinRecargosColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletsa_ComprobanteDetalleDePagos.MontoSinRecargosColumn] = value;
                }
            }
            
            public string IdFormaDePago {
                get {
                    try {
                        return ((string)(this[this.tabletsa_ComprobanteDetalleDePagos.IdFormaDePagoColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletsa_ComprobanteDetalleDePagos.IdFormaDePagoColumn] = value;
                }
            }
            
            public tsa_ComprobantesRow tsa_ComprobantesRow {
                get {
                    return ((tsa_ComprobantesRow)(this.GetParentRow(this.Table.ParentRelations["tsa_Comprobantestsa_ComprobanteDetalleDePagos"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["tsa_Comprobantestsa_ComprobanteDetalleDePagos"]);
                }
            }
            
            public tfi_ValoresRow tfi_ValoresRow {
                get {
                    return ((tfi_ValoresRow)(this.GetParentRow(this.Table.ParentRelations["tfi_Valorestsa_ComprobanteDetalleDePagos"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["tfi_Valorestsa_ComprobanteDetalleDePagos"]);
                }
            }
            
            public bool IsFechaCreacionNull() {
                return this.IsNull(this.tabletsa_ComprobanteDetalleDePagos.FechaCreacionColumn);
            }
            
            public void SetFechaCreacionNull() {
                this[this.tabletsa_ComprobanteDetalleDePagos.FechaCreacionColumn] = System.Convert.DBNull;
            }
            
            public bool IsIdConexionCreacionNull() {
                return this.IsNull(this.tabletsa_ComprobanteDetalleDePagos.IdConexionCreacionColumn);
            }
            
            public void SetIdConexionCreacionNull() {
                this[this.tabletsa_ComprobanteDetalleDePagos.IdConexionCreacionColumn] = System.Convert.DBNull;
            }
            
            public bool IsUltimaModificacionNull() {
                return this.IsNull(this.tabletsa_ComprobanteDetalleDePagos.UltimaModificacionColumn);
            }
            
            public void SetUltimaModificacionNull() {
                this[this.tabletsa_ComprobanteDetalleDePagos.UltimaModificacionColumn] = System.Convert.DBNull;
            }
            
            public bool IsIdConexionUltimaModificacionNull() {
                return this.IsNull(this.tabletsa_ComprobanteDetalleDePagos.IdConexionUltimaModificacionColumn);
            }
            
            public void SetIdConexionUltimaModificacionNull() {
                this[this.tabletsa_ComprobanteDetalleDePagos.IdConexionUltimaModificacionColumn] = System.Convert.DBNull;
            }
            
            public bool IsIdReservadoNull() {
                return this.IsNull(this.tabletsa_ComprobanteDetalleDePagos.IdReservadoColumn);
            }
            
            public void SetIdReservadoNull() {
                this[this.tabletsa_ComprobanteDetalleDePagos.IdReservadoColumn] = System.Convert.DBNull;
            }
            
            public bool IsRowIdNull() {
                return this.IsNull(this.tabletsa_ComprobanteDetalleDePagos.RowIdColumn);
            }
            
            public void SetRowIdNull() {
                this[this.tabletsa_ComprobanteDetalleDePagos.RowIdColumn] = System.Convert.DBNull;
            }
            
            public bool IsIdSucursalNull() {
                return this.IsNull(this.tabletsa_ComprobanteDetalleDePagos.IdSucursalColumn);
            }
            
            public void SetIdSucursalNull() {
                this[this.tabletsa_ComprobanteDetalleDePagos.IdSucursalColumn] = System.Convert.DBNull;
            }
            
            public bool IsIdEmpresaNull() {
                return this.IsNull(this.tabletsa_ComprobanteDetalleDePagos.IdEmpresaColumn);
            }
            
            public void SetIdEmpresaNull() {
                this[this.tabletsa_ComprobanteDetalleDePagos.IdEmpresaColumn] = System.Convert.DBNull;
            }
            
            public bool IsMontoSinRecargosNull() {
                return this.IsNull(this.tabletsa_ComprobanteDetalleDePagos.MontoSinRecargosColumn);
            }
            
            public void SetMontoSinRecargosNull() {
                this[this.tabletsa_ComprobanteDetalleDePagos.MontoSinRecargosColumn] = System.Convert.DBNull;
            }
            
            public bool IsIdFormaDePagoNull() {
                return this.IsNull(this.tabletsa_ComprobanteDetalleDePagos.IdFormaDePagoColumn);
            }
            
            public void SetIdFormaDePagoNull() {
                this[this.tabletsa_ComprobanteDetalleDePagos.IdFormaDePagoColumn] = System.Convert.DBNull;
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class tsa_ComprobanteDetalleDePagosRowChangeEvent : EventArgs {
            
            private tsa_ComprobanteDetalleDePagosRow eventRow;
            
            private DataRowAction eventAction;
            
            public tsa_ComprobanteDetalleDePagosRowChangeEvent(tsa_ComprobanteDetalleDePagosRow row, DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            public tsa_ComprobanteDetalleDePagosRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            public DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class tsa_ComprobantesOrdenReparacionDataTable : DataTable, System.Collections.IEnumerable {
            
            private DataColumn columnIdComprobante;
            
            private DataColumn columnIdOrdenReparacion;
            
            private DataColumn columnFechaCreacion;
            
            private DataColumn columnIdConexionCreacion;
            
            private DataColumn columnUltimaModificacion;
            
            private DataColumn columnIdConexionUltimaModificacion;
            
            private DataColumn columnIdReservado;
            
            private DataColumn columnRowId;
            
            private DataColumn columnIdSucursal;
            
            private DataColumn columnIdEmpresa;
            
            internal tsa_ComprobantesOrdenReparacionDataTable() : 
                    base("tsa_ComprobantesOrdenReparacion") {
                this.InitClass();
            }
            
            internal tsa_ComprobantesOrdenReparacionDataTable(DataTable table) : 
                    base(table.TableName) {
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
                this.DisplayExpression = table.DisplayExpression;
            }
            
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            internal DataColumn IdComprobanteColumn {
                get {
                    return this.columnIdComprobante;
                }
            }
            
            internal DataColumn IdOrdenReparacionColumn {
                get {
                    return this.columnIdOrdenReparacion;
                }
            }
            
            internal DataColumn FechaCreacionColumn {
                get {
                    return this.columnFechaCreacion;
                }
            }
            
            internal DataColumn IdConexionCreacionColumn {
                get {
                    return this.columnIdConexionCreacion;
                }
            }
            
            internal DataColumn UltimaModificacionColumn {
                get {
                    return this.columnUltimaModificacion;
                }
            }
            
            internal DataColumn IdConexionUltimaModificacionColumn {
                get {
                    return this.columnIdConexionUltimaModificacion;
                }
            }
            
            internal DataColumn IdReservadoColumn {
                get {
                    return this.columnIdReservado;
                }
            }
            
            internal DataColumn RowIdColumn {
                get {
                    return this.columnRowId;
                }
            }
            
            internal DataColumn IdSucursalColumn {
                get {
                    return this.columnIdSucursal;
                }
            }
            
            internal DataColumn IdEmpresaColumn {
                get {
                    return this.columnIdEmpresa;
                }
            }
            
            public tsa_ComprobantesOrdenReparacionRow this[int index] {
                get {
                    return ((tsa_ComprobantesOrdenReparacionRow)(this.Rows[index]));
                }
            }
            
            public event tsa_ComprobantesOrdenReparacionRowChangeEventHandler tsa_ComprobantesOrdenReparacionRowChanged;
            
            public event tsa_ComprobantesOrdenReparacionRowChangeEventHandler tsa_ComprobantesOrdenReparacionRowChanging;
            
            public event tsa_ComprobantesOrdenReparacionRowChangeEventHandler tsa_ComprobantesOrdenReparacionRowDeleted;
            
            public event tsa_ComprobantesOrdenReparacionRowChangeEventHandler tsa_ComprobantesOrdenReparacionRowDeleting;
            
            public void Addtsa_ComprobantesOrdenReparacionRow(tsa_ComprobantesOrdenReparacionRow row) {
                this.Rows.Add(row);
            }
            
            public tsa_ComprobantesOrdenReparacionRow Addtsa_ComprobantesOrdenReparacionRow(tsa_ComprobantesRow parenttsa_ComprobantesRowBytsa_Comprobantestsa_ComprobantesOrdenReparacion, long IdOrdenReparacion, System.DateTime FechaCreacion, long IdConexionCreacion, System.Byte[] UltimaModificacion, long IdConexionUltimaModificacion, long IdReservado, System.Guid RowId, long IdSucursal, long IdEmpresa) {
                tsa_ComprobantesOrdenReparacionRow rowtsa_ComprobantesOrdenReparacionRow = ((tsa_ComprobantesOrdenReparacionRow)(this.NewRow()));
                rowtsa_ComprobantesOrdenReparacionRow.ItemArray = new object[] {
                        parenttsa_ComprobantesRowBytsa_Comprobantestsa_ComprobantesOrdenReparacion[0],
                        IdOrdenReparacion,
                        FechaCreacion,
                        IdConexionCreacion,
                        UltimaModificacion,
                        IdConexionUltimaModificacion,
                        IdReservado,
                        RowId,
                        IdSucursal,
                        IdEmpresa};
                this.Rows.Add(rowtsa_ComprobantesOrdenReparacionRow);
                return rowtsa_ComprobantesOrdenReparacionRow;
            }
            
            public tsa_ComprobantesOrdenReparacionRow FindByIdComprobanteIdOrdenReparacion(string IdComprobante, long IdOrdenReparacion) {
                return ((tsa_ComprobantesOrdenReparacionRow)(this.Rows.Find(new object[] {
                            IdComprobante,
                            IdOrdenReparacion})));
            }
            
            public System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            public override DataTable Clone() {
                tsa_ComprobantesOrdenReparacionDataTable cln = ((tsa_ComprobantesOrdenReparacionDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            protected override DataTable CreateInstance() {
                return new tsa_ComprobantesOrdenReparacionDataTable();
            }
            
            internal void InitVars() {
                this.columnIdComprobante = this.Columns["IdComprobante"];
                this.columnIdOrdenReparacion = this.Columns["IdOrdenReparacion"];
                this.columnFechaCreacion = this.Columns["FechaCreacion"];
                this.columnIdConexionCreacion = this.Columns["IdConexionCreacion"];
                this.columnUltimaModificacion = this.Columns["UltimaModificacion"];
                this.columnIdConexionUltimaModificacion = this.Columns["IdConexionUltimaModificacion"];
                this.columnIdReservado = this.Columns["IdReservado"];
                this.columnRowId = this.Columns["RowId"];
                this.columnIdSucursal = this.Columns["IdSucursal"];
                this.columnIdEmpresa = this.Columns["IdEmpresa"];
            }
            
            private void InitClass() {
                this.columnIdComprobante = new DataColumn("IdComprobante", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdComprobante);
                this.columnIdOrdenReparacion = new DataColumn("IdOrdenReparacion", typeof(long), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdOrdenReparacion);
                this.columnFechaCreacion = new DataColumn("FechaCreacion", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnFechaCreacion);
                this.columnIdConexionCreacion = new DataColumn("IdConexionCreacion", typeof(long), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdConexionCreacion);
                this.columnUltimaModificacion = new DataColumn("UltimaModificacion", typeof(System.Byte[]), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnUltimaModificacion);
                this.columnIdConexionUltimaModificacion = new DataColumn("IdConexionUltimaModificacion", typeof(long), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdConexionUltimaModificacion);
                this.columnIdReservado = new DataColumn("IdReservado", typeof(long), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdReservado);
                this.columnRowId = new DataColumn("RowId", typeof(System.Guid), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnRowId);
                this.columnIdSucursal = new DataColumn("IdSucursal", typeof(long), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdSucursal);
                this.columnIdEmpresa = new DataColumn("IdEmpresa", typeof(long), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdEmpresa);
                this.Constraints.Add(new UniqueConstraint("tsa_ComprobantesExDatasetKey7", new DataColumn[] {
                                this.columnIdComprobante,
                                this.columnIdOrdenReparacion}, true));
                this.columnIdComprobante.AllowDBNull = false;
                this.columnIdOrdenReparacion.AllowDBNull = false;
                this.columnUltimaModificacion.ReadOnly = true;
            }
            
            public tsa_ComprobantesOrdenReparacionRow Newtsa_ComprobantesOrdenReparacionRow() {
                return ((tsa_ComprobantesOrdenReparacionRow)(this.NewRow()));
            }
            
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder) {
                return new tsa_ComprobantesOrdenReparacionRow(builder);
            }
            
            protected override System.Type GetRowType() {
                return typeof(tsa_ComprobantesOrdenReparacionRow);
            }
            
            protected override void OnRowChanged(DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.tsa_ComprobantesOrdenReparacionRowChanged != null)) {
                    this.tsa_ComprobantesOrdenReparacionRowChanged(this, new tsa_ComprobantesOrdenReparacionRowChangeEvent(((tsa_ComprobantesOrdenReparacionRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowChanging(DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.tsa_ComprobantesOrdenReparacionRowChanging != null)) {
                    this.tsa_ComprobantesOrdenReparacionRowChanging(this, new tsa_ComprobantesOrdenReparacionRowChangeEvent(((tsa_ComprobantesOrdenReparacionRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleted(DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.tsa_ComprobantesOrdenReparacionRowDeleted != null)) {
                    this.tsa_ComprobantesOrdenReparacionRowDeleted(this, new tsa_ComprobantesOrdenReparacionRowChangeEvent(((tsa_ComprobantesOrdenReparacionRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleting(DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.tsa_ComprobantesOrdenReparacionRowDeleting != null)) {
                    this.tsa_ComprobantesOrdenReparacionRowDeleting(this, new tsa_ComprobantesOrdenReparacionRowChangeEvent(((tsa_ComprobantesOrdenReparacionRow)(e.Row)), e.Action));
                }
            }
            
            public void Removetsa_ComprobantesOrdenReparacionRow(tsa_ComprobantesOrdenReparacionRow row) {
                this.Rows.Remove(row);
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class tsa_ComprobantesOrdenReparacionRow : DataRow {
            
            private tsa_ComprobantesOrdenReparacionDataTable tabletsa_ComprobantesOrdenReparacion;
            
            internal tsa_ComprobantesOrdenReparacionRow(DataRowBuilder rb) : 
                    base(rb) {
                this.tabletsa_ComprobantesOrdenReparacion = ((tsa_ComprobantesOrdenReparacionDataTable)(this.Table));
            }
            
            public string IdComprobante {
                get {
                    return ((string)(this[this.tabletsa_ComprobantesOrdenReparacion.IdComprobanteColumn]));
                }
                set {
                    this[this.tabletsa_ComprobantesOrdenReparacion.IdComprobanteColumn] = value;
                }
            }
            
            public long IdOrdenReparacion {
                get {
                    return ((long)(this[this.tabletsa_ComprobantesOrdenReparacion.IdOrdenReparacionColumn]));
                }
                set {
                    this[this.tabletsa_ComprobantesOrdenReparacion.IdOrdenReparacionColumn] = value;
                }
            }
            
            public System.DateTime FechaCreacion {
                get {
                    try {
                        return ((System.DateTime)(this[this.tabletsa_ComprobantesOrdenReparacion.FechaCreacionColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletsa_ComprobantesOrdenReparacion.FechaCreacionColumn] = value;
                }
            }
            
            public long IdConexionCreacion {
                get {
                    try {
                        return ((long)(this[this.tabletsa_ComprobantesOrdenReparacion.IdConexionCreacionColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletsa_ComprobantesOrdenReparacion.IdConexionCreacionColumn] = value;
                }
            }
            
            public System.Byte[] UltimaModificacion {
                get {
                    try {
                        return ((System.Byte[])(this[this.tabletsa_ComprobantesOrdenReparacion.UltimaModificacionColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletsa_ComprobantesOrdenReparacion.UltimaModificacionColumn] = value;
                }
            }
            
            public long IdConexionUltimaModificacion {
                get {
                    try {
                        return ((long)(this[this.tabletsa_ComprobantesOrdenReparacion.IdConexionUltimaModificacionColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletsa_ComprobantesOrdenReparacion.IdConexionUltimaModificacionColumn] = value;
                }
            }
            
            public long IdReservado {
                get {
                    try {
                        return ((long)(this[this.tabletsa_ComprobantesOrdenReparacion.IdReservadoColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletsa_ComprobantesOrdenReparacion.IdReservadoColumn] = value;
                }
            }
            
            public System.Guid RowId {
                get {
                    try {
                        return ((System.Guid)(this[this.tabletsa_ComprobantesOrdenReparacion.RowIdColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletsa_ComprobantesOrdenReparacion.RowIdColumn] = value;
                }
            }
            
            public long IdSucursal {
                get {
                    try {
                        return ((long)(this[this.tabletsa_ComprobantesOrdenReparacion.IdSucursalColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletsa_ComprobantesOrdenReparacion.IdSucursalColumn] = value;
                }
            }
            
            public long IdEmpresa {
                get {
                    try {
                        return ((long)(this[this.tabletsa_ComprobantesOrdenReparacion.IdEmpresaColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletsa_ComprobantesOrdenReparacion.IdEmpresaColumn] = value;
                }
            }
            
            public tsa_ComprobantesRow tsa_ComprobantesRow {
                get {
                    return ((tsa_ComprobantesRow)(this.GetParentRow(this.Table.ParentRelations["tsa_Comprobantestsa_ComprobantesOrdenReparacion"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["tsa_Comprobantestsa_ComprobantesOrdenReparacion"]);
                }
            }
            
            public bool IsFechaCreacionNull() {
                return this.IsNull(this.tabletsa_ComprobantesOrdenReparacion.FechaCreacionColumn);
            }
            
            public void SetFechaCreacionNull() {
                this[this.tabletsa_ComprobantesOrdenReparacion.FechaCreacionColumn] = System.Convert.DBNull;
            }
            
            public bool IsIdConexionCreacionNull() {
                return this.IsNull(this.tabletsa_ComprobantesOrdenReparacion.IdConexionCreacionColumn);
            }
            
            public void SetIdConexionCreacionNull() {
                this[this.tabletsa_ComprobantesOrdenReparacion.IdConexionCreacionColumn] = System.Convert.DBNull;
            }
            
            public bool IsUltimaModificacionNull() {
                return this.IsNull(this.tabletsa_ComprobantesOrdenReparacion.UltimaModificacionColumn);
            }
            
            public void SetUltimaModificacionNull() {
                this[this.tabletsa_ComprobantesOrdenReparacion.UltimaModificacionColumn] = System.Convert.DBNull;
            }
            
            public bool IsIdConexionUltimaModificacionNull() {
                return this.IsNull(this.tabletsa_ComprobantesOrdenReparacion.IdConexionUltimaModificacionColumn);
            }
            
            public void SetIdConexionUltimaModificacionNull() {
                this[this.tabletsa_ComprobantesOrdenReparacion.IdConexionUltimaModificacionColumn] = System.Convert.DBNull;
            }
            
            public bool IsIdReservadoNull() {
                return this.IsNull(this.tabletsa_ComprobantesOrdenReparacion.IdReservadoColumn);
            }
            
            public void SetIdReservadoNull() {
                this[this.tabletsa_ComprobantesOrdenReparacion.IdReservadoColumn] = System.Convert.DBNull;
            }
            
            public bool IsRowIdNull() {
                return this.IsNull(this.tabletsa_ComprobantesOrdenReparacion.RowIdColumn);
            }
            
            public void SetRowIdNull() {
                this[this.tabletsa_ComprobantesOrdenReparacion.RowIdColumn] = System.Convert.DBNull;
            }
            
            public bool IsIdSucursalNull() {
                return this.IsNull(this.tabletsa_ComprobantesOrdenReparacion.IdSucursalColumn);
            }
            
            public void SetIdSucursalNull() {
                this[this.tabletsa_ComprobantesOrdenReparacion.IdSucursalColumn] = System.Convert.DBNull;
            }
            
            public bool IsIdEmpresaNull() {
                return this.IsNull(this.tabletsa_ComprobantesOrdenReparacion.IdEmpresaColumn);
            }
            
            public void SetIdEmpresaNull() {
                this[this.tabletsa_ComprobantesOrdenReparacion.IdEmpresaColumn] = System.Convert.DBNull;
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class tsa_ComprobantesOrdenReparacionRowChangeEvent : EventArgs {
            
            private tsa_ComprobantesOrdenReparacionRow eventRow;
            
            private DataRowAction eventAction;
            
            public tsa_ComprobantesOrdenReparacionRowChangeEvent(tsa_ComprobantesOrdenReparacionRow row, DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            public tsa_ComprobantesOrdenReparacionRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            public DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class tsa_ComprobanteDetalleOrdenReparacionDataTable : DataTable, System.Collections.IEnumerable {
            
            private DataColumn columnIdComprobante;
            
            private DataColumn columnIdOrdenReparacion;
            
            private DataColumn columnOrdinal;
            
            private DataColumn columnIdProducto;
            
            private DataColumn columnIdEstadoStockOrigen;
            
            private DataColumn columnIdEstadoStockDestino;
            
            private DataColumn columnIdMovimientoDeStockOrigen;
            
            private DataColumn columnIdMovimientoDeStockDestino;
            
            private DataColumn columnFechaCreacion;
            
            private DataColumn columnIdConexionCreacion;
            
            private DataColumn columnUltimaModificacion;
            
            private DataColumn columnIdConexionUltimaModificacion;
            
            private DataColumn columnIdReservado;
            
            private DataColumn columnRowId;
            
            private DataColumn columnIdSucursal;
            
            private DataColumn columnIdEmpresa;
            
            internal tsa_ComprobanteDetalleOrdenReparacionDataTable() : 
                    base("tsa_ComprobanteDetalleOrdenReparacion") {
                this.InitClass();
            }
            
            internal tsa_ComprobanteDetalleOrdenReparacionDataTable(DataTable table) : 
                    base(table.TableName) {
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
                this.DisplayExpression = table.DisplayExpression;
            }
            
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            internal DataColumn IdComprobanteColumn {
                get {
                    return this.columnIdComprobante;
                }
            }
            
            internal DataColumn IdOrdenReparacionColumn {
                get {
                    return this.columnIdOrdenReparacion;
                }
            }
            
            internal DataColumn OrdinalColumn {
                get {
                    return this.columnOrdinal;
                }
            }
            
            internal DataColumn IdProductoColumn {
                get {
                    return this.columnIdProducto;
                }
            }
            
            internal DataColumn IdEstadoStockOrigenColumn {
                get {
                    return this.columnIdEstadoStockOrigen;
                }
            }
            
            internal DataColumn IdEstadoStockDestinoColumn {
                get {
                    return this.columnIdEstadoStockDestino;
                }
            }
            
            internal DataColumn IdMovimientoDeStockOrigenColumn {
                get {
                    return this.columnIdMovimientoDeStockOrigen;
                }
            }
            
            internal DataColumn IdMovimientoDeStockDestinoColumn {
                get {
                    return this.columnIdMovimientoDeStockDestino;
                }
            }
            
            internal DataColumn FechaCreacionColumn {
                get {
                    return this.columnFechaCreacion;
                }
            }
            
            internal DataColumn IdConexionCreacionColumn {
                get {
                    return this.columnIdConexionCreacion;
                }
            }
            
            internal DataColumn UltimaModificacionColumn {
                get {
                    return this.columnUltimaModificacion;
                }
            }
            
            internal DataColumn IdConexionUltimaModificacionColumn {
                get {
                    return this.columnIdConexionUltimaModificacion;
                }
            }
            
            internal DataColumn IdReservadoColumn {
                get {
                    return this.columnIdReservado;
                }
            }
            
            internal DataColumn RowIdColumn {
                get {
                    return this.columnRowId;
                }
            }
            
            internal DataColumn IdSucursalColumn {
                get {
                    return this.columnIdSucursal;
                }
            }
            
            internal DataColumn IdEmpresaColumn {
                get {
                    return this.columnIdEmpresa;
                }
            }
            
            public tsa_ComprobanteDetalleOrdenReparacionRow this[int index] {
                get {
                    return ((tsa_ComprobanteDetalleOrdenReparacionRow)(this.Rows[index]));
                }
            }
            
            public event tsa_ComprobanteDetalleOrdenReparacionRowChangeEventHandler tsa_ComprobanteDetalleOrdenReparacionRowChanged;
            
            public event tsa_ComprobanteDetalleOrdenReparacionRowChangeEventHandler tsa_ComprobanteDetalleOrdenReparacionRowChanging;
            
            public event tsa_ComprobanteDetalleOrdenReparacionRowChangeEventHandler tsa_ComprobanteDetalleOrdenReparacionRowDeleted;
            
            public event tsa_ComprobanteDetalleOrdenReparacionRowChangeEventHandler tsa_ComprobanteDetalleOrdenReparacionRowDeleting;
            
            public void Addtsa_ComprobanteDetalleOrdenReparacionRow(tsa_ComprobanteDetalleOrdenReparacionRow row) {
                this.Rows.Add(row);
            }
            
            public tsa_ComprobanteDetalleOrdenReparacionRow Addtsa_ComprobanteDetalleOrdenReparacionRow(
                        tsa_ComprobantesRow parenttsa_ComprobantesRowBytsa_Comprobantestsa_ComprobanteDetalleOrdenReparacion, 
                        long IdOrdenReparacion, 
                        long Ordinal, 
                        string IdProducto, 
                        string IdEstadoStockOrigen, 
                        string IdEstadoStockDestino, 
                        string IdMovimientoDeStockOrigen, 
                        string IdMovimientoDeStockDestino, 
                        System.DateTime FechaCreacion, 
                        long IdConexionCreacion, 
                        System.Byte[] UltimaModificacion, 
                        long IdConexionUltimaModificacion, 
                        long IdReservado, 
                        System.Guid RowId, 
                        long IdSucursal, 
                        long IdEmpresa) {
                tsa_ComprobanteDetalleOrdenReparacionRow rowtsa_ComprobanteDetalleOrdenReparacionRow = ((tsa_ComprobanteDetalleOrdenReparacionRow)(this.NewRow()));
                rowtsa_ComprobanteDetalleOrdenReparacionRow.ItemArray = new object[] {
                        parenttsa_ComprobantesRowBytsa_Comprobantestsa_ComprobanteDetalleOrdenReparacion[0],
                        IdOrdenReparacion,
                        Ordinal,
                        IdProducto,
                        IdEstadoStockOrigen,
                        IdEstadoStockDestino,
                        IdMovimientoDeStockOrigen,
                        IdMovimientoDeStockDestino,
                        FechaCreacion,
                        IdConexionCreacion,
                        UltimaModificacion,
                        IdConexionUltimaModificacion,
                        IdReservado,
                        RowId,
                        IdSucursal,
                        IdEmpresa};
                this.Rows.Add(rowtsa_ComprobanteDetalleOrdenReparacionRow);
                return rowtsa_ComprobanteDetalleOrdenReparacionRow;
            }
            
            public tsa_ComprobanteDetalleOrdenReparacionRow FindByIdComprobanteIdOrdenReparacionOrdinal(string IdComprobante, long IdOrdenReparacion, long Ordinal) {
                return ((tsa_ComprobanteDetalleOrdenReparacionRow)(this.Rows.Find(new object[] {
                            IdComprobante,
                            IdOrdenReparacion,
                            Ordinal})));
            }
            
            public System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            public override DataTable Clone() {
                tsa_ComprobanteDetalleOrdenReparacionDataTable cln = ((tsa_ComprobanteDetalleOrdenReparacionDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            protected override DataTable CreateInstance() {
                return new tsa_ComprobanteDetalleOrdenReparacionDataTable();
            }
            
            internal void InitVars() {
                this.columnIdComprobante = this.Columns["IdComprobante"];
                this.columnIdOrdenReparacion = this.Columns["IdOrdenReparacion"];
                this.columnOrdinal = this.Columns["Ordinal"];
                this.columnIdProducto = this.Columns["IdProducto"];
                this.columnIdEstadoStockOrigen = this.Columns["IdEstadoStockOrigen"];
                this.columnIdEstadoStockDestino = this.Columns["IdEstadoStockDestino"];
                this.columnIdMovimientoDeStockOrigen = this.Columns["IdMovimientoDeStockOrigen"];
                this.columnIdMovimientoDeStockDestino = this.Columns["IdMovimientoDeStockDestino"];
                this.columnFechaCreacion = this.Columns["FechaCreacion"];
                this.columnIdConexionCreacion = this.Columns["IdConexionCreacion"];
                this.columnUltimaModificacion = this.Columns["UltimaModificacion"];
                this.columnIdConexionUltimaModificacion = this.Columns["IdConexionUltimaModificacion"];
                this.columnIdReservado = this.Columns["IdReservado"];
                this.columnRowId = this.Columns["RowId"];
                this.columnIdSucursal = this.Columns["IdSucursal"];
                this.columnIdEmpresa = this.Columns["IdEmpresa"];
            }
            
            private void InitClass() {
                this.columnIdComprobante = new DataColumn("IdComprobante", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdComprobante);
                this.columnIdOrdenReparacion = new DataColumn("IdOrdenReparacion", typeof(long), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdOrdenReparacion);
                this.columnOrdinal = new DataColumn("Ordinal", typeof(long), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnOrdinal);
                this.columnIdProducto = new DataColumn("IdProducto", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdProducto);
                this.columnIdEstadoStockOrigen = new DataColumn("IdEstadoStockOrigen", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdEstadoStockOrigen);
                this.columnIdEstadoStockDestino = new DataColumn("IdEstadoStockDestino", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdEstadoStockDestino);
                this.columnIdMovimientoDeStockOrigen = new DataColumn("IdMovimientoDeStockOrigen", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdMovimientoDeStockOrigen);
                this.columnIdMovimientoDeStockDestino = new DataColumn("IdMovimientoDeStockDestino", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdMovimientoDeStockDestino);
                this.columnFechaCreacion = new DataColumn("FechaCreacion", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnFechaCreacion);
                this.columnIdConexionCreacion = new DataColumn("IdConexionCreacion", typeof(long), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdConexionCreacion);
                this.columnUltimaModificacion = new DataColumn("UltimaModificacion", typeof(System.Byte[]), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnUltimaModificacion);
                this.columnIdConexionUltimaModificacion = new DataColumn("IdConexionUltimaModificacion", typeof(long), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdConexionUltimaModificacion);
                this.columnIdReservado = new DataColumn("IdReservado", typeof(long), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdReservado);
                this.columnRowId = new DataColumn("RowId", typeof(System.Guid), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnRowId);
                this.columnIdSucursal = new DataColumn("IdSucursal", typeof(long), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdSucursal);
                this.columnIdEmpresa = new DataColumn("IdEmpresa", typeof(long), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdEmpresa);
                this.Constraints.Add(new UniqueConstraint("tsa_ComprobantesExDatasetKey8", new DataColumn[] {
                                this.columnIdComprobante,
                                this.columnIdOrdenReparacion,
                                this.columnOrdinal}, true));
                this.columnIdComprobante.AllowDBNull = false;
                this.columnIdOrdenReparacion.AllowDBNull = false;
                this.columnOrdinal.AllowDBNull = false;
                this.columnUltimaModificacion.ReadOnly = true;
            }
            
            public tsa_ComprobanteDetalleOrdenReparacionRow Newtsa_ComprobanteDetalleOrdenReparacionRow() {
                return ((tsa_ComprobanteDetalleOrdenReparacionRow)(this.NewRow()));
            }
            
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder) {
                return new tsa_ComprobanteDetalleOrdenReparacionRow(builder);
            }
            
            protected override System.Type GetRowType() {
                return typeof(tsa_ComprobanteDetalleOrdenReparacionRow);
            }
            
            protected override void OnRowChanged(DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.tsa_ComprobanteDetalleOrdenReparacionRowChanged != null)) {
                    this.tsa_ComprobanteDetalleOrdenReparacionRowChanged(this, new tsa_ComprobanteDetalleOrdenReparacionRowChangeEvent(((tsa_ComprobanteDetalleOrdenReparacionRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowChanging(DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.tsa_ComprobanteDetalleOrdenReparacionRowChanging != null)) {
                    this.tsa_ComprobanteDetalleOrdenReparacionRowChanging(this, new tsa_ComprobanteDetalleOrdenReparacionRowChangeEvent(((tsa_ComprobanteDetalleOrdenReparacionRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleted(DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.tsa_ComprobanteDetalleOrdenReparacionRowDeleted != null)) {
                    this.tsa_ComprobanteDetalleOrdenReparacionRowDeleted(this, new tsa_ComprobanteDetalleOrdenReparacionRowChangeEvent(((tsa_ComprobanteDetalleOrdenReparacionRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleting(DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.tsa_ComprobanteDetalleOrdenReparacionRowDeleting != null)) {
                    this.tsa_ComprobanteDetalleOrdenReparacionRowDeleting(this, new tsa_ComprobanteDetalleOrdenReparacionRowChangeEvent(((tsa_ComprobanteDetalleOrdenReparacionRow)(e.Row)), e.Action));
                }
            }
            
            public void Removetsa_ComprobanteDetalleOrdenReparacionRow(tsa_ComprobanteDetalleOrdenReparacionRow row) {
                this.Rows.Remove(row);
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class tsa_ComprobanteDetalleOrdenReparacionRow : DataRow {
            
            private tsa_ComprobanteDetalleOrdenReparacionDataTable tabletsa_ComprobanteDetalleOrdenReparacion;
            
            internal tsa_ComprobanteDetalleOrdenReparacionRow(DataRowBuilder rb) : 
                    base(rb) {
                this.tabletsa_ComprobanteDetalleOrdenReparacion = ((tsa_ComprobanteDetalleOrdenReparacionDataTable)(this.Table));
            }
            
            public string IdComprobante {
                get {
                    return ((string)(this[this.tabletsa_ComprobanteDetalleOrdenReparacion.IdComprobanteColumn]));
                }
                set {
                    this[this.tabletsa_ComprobanteDetalleOrdenReparacion.IdComprobanteColumn] = value;
                }
            }
            
            public long IdOrdenReparacion {
                get {
                    return ((long)(this[this.tabletsa_ComprobanteDetalleOrdenReparacion.IdOrdenReparacionColumn]));
                }
                set {
                    this[this.tabletsa_ComprobanteDetalleOrdenReparacion.IdOrdenReparacionColumn] = value;
                }
            }
            
            public long Ordinal {
                get {
                    return ((long)(this[this.tabletsa_ComprobanteDetalleOrdenReparacion.OrdinalColumn]));
                }
                set {
                    this[this.tabletsa_ComprobanteDetalleOrdenReparacion.OrdinalColumn] = value;
                }
            }
            
            public string IdProducto {
                get {
                    try {
                        return ((string)(this[this.tabletsa_ComprobanteDetalleOrdenReparacion.IdProductoColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletsa_ComprobanteDetalleOrdenReparacion.IdProductoColumn] = value;
                }
            }
            
            public string IdEstadoStockOrigen {
                get {
                    try {
                        return ((string)(this[this.tabletsa_ComprobanteDetalleOrdenReparacion.IdEstadoStockOrigenColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletsa_ComprobanteDetalleOrdenReparacion.IdEstadoStockOrigenColumn] = value;
                }
            }
            
            public string IdEstadoStockDestino {
                get {
                    try {
                        return ((string)(this[this.tabletsa_ComprobanteDetalleOrdenReparacion.IdEstadoStockDestinoColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletsa_ComprobanteDetalleOrdenReparacion.IdEstadoStockDestinoColumn] = value;
                }
            }
            
            public string IdMovimientoDeStockOrigen {
                get {
                    try {
                        return ((string)(this[this.tabletsa_ComprobanteDetalleOrdenReparacion.IdMovimientoDeStockOrigenColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletsa_ComprobanteDetalleOrdenReparacion.IdMovimientoDeStockOrigenColumn] = value;
                }
            }
            
            public string IdMovimientoDeStockDestino {
                get {
                    try {
                        return ((string)(this[this.tabletsa_ComprobanteDetalleOrdenReparacion.IdMovimientoDeStockDestinoColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletsa_ComprobanteDetalleOrdenReparacion.IdMovimientoDeStockDestinoColumn] = value;
                }
            }
            
            public System.DateTime FechaCreacion {
                get {
                    try {
                        return ((System.DateTime)(this[this.tabletsa_ComprobanteDetalleOrdenReparacion.FechaCreacionColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletsa_ComprobanteDetalleOrdenReparacion.FechaCreacionColumn] = value;
                }
            }
            
            public long IdConexionCreacion {
                get {
                    try {
                        return ((long)(this[this.tabletsa_ComprobanteDetalleOrdenReparacion.IdConexionCreacionColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletsa_ComprobanteDetalleOrdenReparacion.IdConexionCreacionColumn] = value;
                }
            }
            
            public System.Byte[] UltimaModificacion {
                get {
                    try {
                        return ((System.Byte[])(this[this.tabletsa_ComprobanteDetalleOrdenReparacion.UltimaModificacionColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletsa_ComprobanteDetalleOrdenReparacion.UltimaModificacionColumn] = value;
                }
            }
            
            public long IdConexionUltimaModificacion {
                get {
                    try {
                        return ((long)(this[this.tabletsa_ComprobanteDetalleOrdenReparacion.IdConexionUltimaModificacionColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletsa_ComprobanteDetalleOrdenReparacion.IdConexionUltimaModificacionColumn] = value;
                }
            }
            
            public long IdReservado {
                get {
                    try {
                        return ((long)(this[this.tabletsa_ComprobanteDetalleOrdenReparacion.IdReservadoColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletsa_ComprobanteDetalleOrdenReparacion.IdReservadoColumn] = value;
                }
            }
            
            public System.Guid RowId {
                get {
                    try {
                        return ((System.Guid)(this[this.tabletsa_ComprobanteDetalleOrdenReparacion.RowIdColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletsa_ComprobanteDetalleOrdenReparacion.RowIdColumn] = value;
                }
            }
            
            public long IdSucursal {
                get {
                    try {
                        return ((long)(this[this.tabletsa_ComprobanteDetalleOrdenReparacion.IdSucursalColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletsa_ComprobanteDetalleOrdenReparacion.IdSucursalColumn] = value;
                }
            }
            
            public long IdEmpresa {
                get {
                    try {
                        return ((long)(this[this.tabletsa_ComprobanteDetalleOrdenReparacion.IdEmpresaColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletsa_ComprobanteDetalleOrdenReparacion.IdEmpresaColumn] = value;
                }
            }
            
            public tsa_ComprobantesRow tsa_ComprobantesRow {
                get {
                    return ((tsa_ComprobantesRow)(this.GetParentRow(this.Table.ParentRelations["tsa_Comprobantestsa_ComprobanteDetalleOrdenReparacion"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["tsa_Comprobantestsa_ComprobanteDetalleOrdenReparacion"]);
                }
            }
            
            public bool IsIdProductoNull() {
                return this.IsNull(this.tabletsa_ComprobanteDetalleOrdenReparacion.IdProductoColumn);
            }
            
            public void SetIdProductoNull() {
                this[this.tabletsa_ComprobanteDetalleOrdenReparacion.IdProductoColumn] = System.Convert.DBNull;
            }
            
            public bool IsIdEstadoStockOrigenNull() {
                return this.IsNull(this.tabletsa_ComprobanteDetalleOrdenReparacion.IdEstadoStockOrigenColumn);
            }
            
            public void SetIdEstadoStockOrigenNull() {
                this[this.tabletsa_ComprobanteDetalleOrdenReparacion.IdEstadoStockOrigenColumn] = System.Convert.DBNull;
            }
            
            public bool IsIdEstadoStockDestinoNull() {
                return this.IsNull(this.tabletsa_ComprobanteDetalleOrdenReparacion.IdEstadoStockDestinoColumn);
            }
            
            public void SetIdEstadoStockDestinoNull() {
                this[this.tabletsa_ComprobanteDetalleOrdenReparacion.IdEstadoStockDestinoColumn] = System.Convert.DBNull;
            }
            
            public bool IsIdMovimientoDeStockOrigenNull() {
                return this.IsNull(this.tabletsa_ComprobanteDetalleOrdenReparacion.IdMovimientoDeStockOrigenColumn);
            }
            
            public void SetIdMovimientoDeStockOrigenNull() {
                this[this.tabletsa_ComprobanteDetalleOrdenReparacion.IdMovimientoDeStockOrigenColumn] = System.Convert.DBNull;
            }
            
            public bool IsIdMovimientoDeStockDestinoNull() {
                return this.IsNull(this.tabletsa_ComprobanteDetalleOrdenReparacion.IdMovimientoDeStockDestinoColumn);
            }
            
            public void SetIdMovimientoDeStockDestinoNull() {
                this[this.tabletsa_ComprobanteDetalleOrdenReparacion.IdMovimientoDeStockDestinoColumn] = System.Convert.DBNull;
            }
            
            public bool IsFechaCreacionNull() {
                return this.IsNull(this.tabletsa_ComprobanteDetalleOrdenReparacion.FechaCreacionColumn);
            }
            
            public void SetFechaCreacionNull() {
                this[this.tabletsa_ComprobanteDetalleOrdenReparacion.FechaCreacionColumn] = System.Convert.DBNull;
            }
            
            public bool IsIdConexionCreacionNull() {
                return this.IsNull(this.tabletsa_ComprobanteDetalleOrdenReparacion.IdConexionCreacionColumn);
            }
            
            public void SetIdConexionCreacionNull() {
                this[this.tabletsa_ComprobanteDetalleOrdenReparacion.IdConexionCreacionColumn] = System.Convert.DBNull;
            }
            
            public bool IsUltimaModificacionNull() {
                return this.IsNull(this.tabletsa_ComprobanteDetalleOrdenReparacion.UltimaModificacionColumn);
            }
            
            public void SetUltimaModificacionNull() {
                this[this.tabletsa_ComprobanteDetalleOrdenReparacion.UltimaModificacionColumn] = System.Convert.DBNull;
            }
            
            public bool IsIdConexionUltimaModificacionNull() {
                return this.IsNull(this.tabletsa_ComprobanteDetalleOrdenReparacion.IdConexionUltimaModificacionColumn);
            }
            
            public void SetIdConexionUltimaModificacionNull() {
                this[this.tabletsa_ComprobanteDetalleOrdenReparacion.IdConexionUltimaModificacionColumn] = System.Convert.DBNull;
            }
            
            public bool IsIdReservadoNull() {
                return this.IsNull(this.tabletsa_ComprobanteDetalleOrdenReparacion.IdReservadoColumn);
            }
            
            public void SetIdReservadoNull() {
                this[this.tabletsa_ComprobanteDetalleOrdenReparacion.IdReservadoColumn] = System.Convert.DBNull;
            }
            
            public bool IsRowIdNull() {
                return this.IsNull(this.tabletsa_ComprobanteDetalleOrdenReparacion.RowIdColumn);
            }
            
            public void SetRowIdNull() {
                this[this.tabletsa_ComprobanteDetalleOrdenReparacion.RowIdColumn] = System.Convert.DBNull;
            }
            
            public bool IsIdSucursalNull() {
                return this.IsNull(this.tabletsa_ComprobanteDetalleOrdenReparacion.IdSucursalColumn);
            }
            
            public void SetIdSucursalNull() {
                this[this.tabletsa_ComprobanteDetalleOrdenReparacion.IdSucursalColumn] = System.Convert.DBNull;
            }
            
            public bool IsIdEmpresaNull() {
                return this.IsNull(this.tabletsa_ComprobanteDetalleOrdenReparacion.IdEmpresaColumn);
            }
            
            public void SetIdEmpresaNull() {
                this[this.tabletsa_ComprobanteDetalleOrdenReparacion.IdEmpresaColumn] = System.Convert.DBNull;
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class tsa_ComprobanteDetalleOrdenReparacionRowChangeEvent : EventArgs {
            
            private tsa_ComprobanteDetalleOrdenReparacionRow eventRow;
            
            private DataRowAction eventAction;
            
            public tsa_ComprobanteDetalleOrdenReparacionRowChangeEvent(tsa_ComprobanteDetalleOrdenReparacionRow row, DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            public tsa_ComprobanteDetalleOrdenReparacionRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            public DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class tlg_MovimientosDeStockDataTable : DataTable, System.Collections.IEnumerable {
            
            private DataColumn columnIdMovimientoDeStock;
            
            private DataColumn columnIdProducto;
            
            private DataColumn columnCantidad;
            
            private DataColumn columnIdDeposito;
            
            private DataColumn columnIdSeccion;
            
            private DataColumn columnIdEstadoDeStock;
            
            private DataColumn columnIdTipoDeAjuste;
            
            private DataColumn columnFechaCreacion;
            
            private DataColumn columnIdConexionCreacion;
            
            private DataColumn columnUltimaModificacion;
            
            private DataColumn columnIdConexionUltimaModificacion;
            
            private DataColumn columnIdReservado;
            
            private DataColumn columnRowId;
            
            private DataColumn columnIdSucursal;
            
            private DataColumn columnIdEmpresa;
            
            internal tlg_MovimientosDeStockDataTable() : 
                    base("tlg_MovimientosDeStock") {
                this.InitClass();
            }
            
            internal tlg_MovimientosDeStockDataTable(DataTable table) : 
                    base(table.TableName) {
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
                this.DisplayExpression = table.DisplayExpression;
            }
            
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            internal DataColumn IdMovimientoDeStockColumn {
                get {
                    return this.columnIdMovimientoDeStock;
                }
            }
            
            internal DataColumn IdProductoColumn {
                get {
                    return this.columnIdProducto;
                }
            }
            
            internal DataColumn CantidadColumn {
                get {
                    return this.columnCantidad;
                }
            }
            
            internal DataColumn IdDepositoColumn {
                get {
                    return this.columnIdDeposito;
                }
            }
            
            internal DataColumn IdSeccionColumn {
                get {
                    return this.columnIdSeccion;
                }
            }
            
            internal DataColumn IdEstadoDeStockColumn {
                get {
                    return this.columnIdEstadoDeStock;
                }
            }
            
            internal DataColumn IdTipoDeAjusteColumn {
                get {
                    return this.columnIdTipoDeAjuste;
                }
            }
            
            internal DataColumn FechaCreacionColumn {
                get {
                    return this.columnFechaCreacion;
                }
            }
            
            internal DataColumn IdConexionCreacionColumn {
                get {
                    return this.columnIdConexionCreacion;
                }
            }
            
            internal DataColumn UltimaModificacionColumn {
                get {
                    return this.columnUltimaModificacion;
                }
            }
            
            internal DataColumn IdConexionUltimaModificacionColumn {
                get {
                    return this.columnIdConexionUltimaModificacion;
                }
            }
            
            internal DataColumn IdReservadoColumn {
                get {
                    return this.columnIdReservado;
                }
            }
            
            internal DataColumn RowIdColumn {
                get {
                    return this.columnRowId;
                }
            }
            
            internal DataColumn IdSucursalColumn {
                get {
                    return this.columnIdSucursal;
                }
            }
            
            internal DataColumn IdEmpresaColumn {
                get {
                    return this.columnIdEmpresa;
                }
            }
            
            public tlg_MovimientosDeStockRow this[int index] {
                get {
                    return ((tlg_MovimientosDeStockRow)(this.Rows[index]));
                }
            }
            
            public event tlg_MovimientosDeStockRowChangeEventHandler tlg_MovimientosDeStockRowChanged;
            
            public event tlg_MovimientosDeStockRowChangeEventHandler tlg_MovimientosDeStockRowChanging;
            
            public event tlg_MovimientosDeStockRowChangeEventHandler tlg_MovimientosDeStockRowDeleted;
            
            public event tlg_MovimientosDeStockRowChangeEventHandler tlg_MovimientosDeStockRowDeleting;
            
            public void Addtlg_MovimientosDeStockRow(tlg_MovimientosDeStockRow row) {
                this.Rows.Add(row);
            }
            
            public tlg_MovimientosDeStockRow Addtlg_MovimientosDeStockRow(string IdMovimientoDeStock, string IdProducto, System.Decimal Cantidad, string IdDeposito, string IdSeccion, string IdEstadoDeStock, string IdTipoDeAjuste, System.DateTime FechaCreacion, long IdConexionCreacion, System.Byte[] UltimaModificacion, long IdConexionUltimaModificacion, long IdReservado, System.Guid RowId, long IdSucursal, long IdEmpresa) {
                tlg_MovimientosDeStockRow rowtlg_MovimientosDeStockRow = ((tlg_MovimientosDeStockRow)(this.NewRow()));
                rowtlg_MovimientosDeStockRow.ItemArray = new object[] {
                        IdMovimientoDeStock,
                        IdProducto,
                        Cantidad,
                        IdDeposito,
                        IdSeccion,
                        IdEstadoDeStock,
                        IdTipoDeAjuste,
                        FechaCreacion,
                        IdConexionCreacion,
                        UltimaModificacion,
                        IdConexionUltimaModificacion,
                        IdReservado,
                        RowId,
                        IdSucursal,
                        IdEmpresa};
                this.Rows.Add(rowtlg_MovimientosDeStockRow);
                return rowtlg_MovimientosDeStockRow;
            }
            
            public tlg_MovimientosDeStockRow FindByIdMovimientoDeStock(string IdMovimientoDeStock) {
                return ((tlg_MovimientosDeStockRow)(this.Rows.Find(new object[] {
                            IdMovimientoDeStock})));
            }
            
            public System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            public override DataTable Clone() {
                tlg_MovimientosDeStockDataTable cln = ((tlg_MovimientosDeStockDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            protected override DataTable CreateInstance() {
                return new tlg_MovimientosDeStockDataTable();
            }
            
            internal void InitVars() {
                this.columnIdMovimientoDeStock = this.Columns["IdMovimientoDeStock"];
                this.columnIdProducto = this.Columns["IdProducto"];
                this.columnCantidad = this.Columns["Cantidad"];
                this.columnIdDeposito = this.Columns["IdDeposito"];
                this.columnIdSeccion = this.Columns["IdSeccion"];
                this.columnIdEstadoDeStock = this.Columns["IdEstadoDeStock"];
                this.columnIdTipoDeAjuste = this.Columns["IdTipoDeAjuste"];
                this.columnFechaCreacion = this.Columns["FechaCreacion"];
                this.columnIdConexionCreacion = this.Columns["IdConexionCreacion"];
                this.columnUltimaModificacion = this.Columns["UltimaModificacion"];
                this.columnIdConexionUltimaModificacion = this.Columns["IdConexionUltimaModificacion"];
                this.columnIdReservado = this.Columns["IdReservado"];
                this.columnRowId = this.Columns["RowId"];
                this.columnIdSucursal = this.Columns["IdSucursal"];
                this.columnIdEmpresa = this.Columns["IdEmpresa"];
            }
            
            private void InitClass() {
                this.columnIdMovimientoDeStock = new DataColumn("IdMovimientoDeStock", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdMovimientoDeStock);
                this.columnIdProducto = new DataColumn("IdProducto", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdProducto);
                this.columnCantidad = new DataColumn("Cantidad", typeof(System.Decimal), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnCantidad);
                this.columnIdDeposito = new DataColumn("IdDeposito", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdDeposito);
                this.columnIdSeccion = new DataColumn("IdSeccion", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdSeccion);
                this.columnIdEstadoDeStock = new DataColumn("IdEstadoDeStock", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdEstadoDeStock);
                this.columnIdTipoDeAjuste = new DataColumn("IdTipoDeAjuste", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdTipoDeAjuste);
                this.columnFechaCreacion = new DataColumn("FechaCreacion", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnFechaCreacion);
                this.columnIdConexionCreacion = new DataColumn("IdConexionCreacion", typeof(long), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdConexionCreacion);
                this.columnUltimaModificacion = new DataColumn("UltimaModificacion", typeof(System.Byte[]), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnUltimaModificacion);
                this.columnIdConexionUltimaModificacion = new DataColumn("IdConexionUltimaModificacion", typeof(long), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdConexionUltimaModificacion);
                this.columnIdReservado = new DataColumn("IdReservado", typeof(long), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdReservado);
                this.columnRowId = new DataColumn("RowId", typeof(System.Guid), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnRowId);
                this.columnIdSucursal = new DataColumn("IdSucursal", typeof(long), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdSucursal);
                this.columnIdEmpresa = new DataColumn("IdEmpresa", typeof(long), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdEmpresa);
                this.Constraints.Add(new UniqueConstraint("tsa_ComprobantesExDatasetKey1", new DataColumn[] {
                                this.columnIdMovimientoDeStock}, true));
                this.columnIdMovimientoDeStock.AllowDBNull = false;
                this.columnIdMovimientoDeStock.Unique = true;
                this.columnIdProducto.AllowDBNull = false;
                this.columnCantidad.AllowDBNull = false;
                this.columnIdDeposito.AllowDBNull = false;
                this.columnIdSeccion.AllowDBNull = false;
                this.columnIdEstadoDeStock.AllowDBNull = false;
                this.columnUltimaModificacion.ReadOnly = true;
            }
            
            public tlg_MovimientosDeStockRow Newtlg_MovimientosDeStockRow() {
                return ((tlg_MovimientosDeStockRow)(this.NewRow()));
            }
            
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder) {
                return new tlg_MovimientosDeStockRow(builder);
            }
            
            protected override System.Type GetRowType() {
                return typeof(tlg_MovimientosDeStockRow);
            }
            
            protected override void OnRowChanged(DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.tlg_MovimientosDeStockRowChanged != null)) {
                    this.tlg_MovimientosDeStockRowChanged(this, new tlg_MovimientosDeStockRowChangeEvent(((tlg_MovimientosDeStockRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowChanging(DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.tlg_MovimientosDeStockRowChanging != null)) {
                    this.tlg_MovimientosDeStockRowChanging(this, new tlg_MovimientosDeStockRowChangeEvent(((tlg_MovimientosDeStockRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleted(DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.tlg_MovimientosDeStockRowDeleted != null)) {
                    this.tlg_MovimientosDeStockRowDeleted(this, new tlg_MovimientosDeStockRowChangeEvent(((tlg_MovimientosDeStockRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleting(DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.tlg_MovimientosDeStockRowDeleting != null)) {
                    this.tlg_MovimientosDeStockRowDeleting(this, new tlg_MovimientosDeStockRowChangeEvent(((tlg_MovimientosDeStockRow)(e.Row)), e.Action));
                }
            }
            
            public void Removetlg_MovimientosDeStockRow(tlg_MovimientosDeStockRow row) {
                this.Rows.Remove(row);
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class tlg_MovimientosDeStockRow : DataRow {
            
            private tlg_MovimientosDeStockDataTable tabletlg_MovimientosDeStock;
            
            internal tlg_MovimientosDeStockRow(DataRowBuilder rb) : 
                    base(rb) {
                this.tabletlg_MovimientosDeStock = ((tlg_MovimientosDeStockDataTable)(this.Table));
            }
            
            public string IdMovimientoDeStock {
                get {
                    return ((string)(this[this.tabletlg_MovimientosDeStock.IdMovimientoDeStockColumn]));
                }
                set {
                    this[this.tabletlg_MovimientosDeStock.IdMovimientoDeStockColumn] = value;
                }
            }
            
            public string IdProducto {
                get {
                    return ((string)(this[this.tabletlg_MovimientosDeStock.IdProductoColumn]));
                }
                set {
                    this[this.tabletlg_MovimientosDeStock.IdProductoColumn] = value;
                }
            }
            
            public System.Decimal Cantidad {
                get {
                    return ((System.Decimal)(this[this.tabletlg_MovimientosDeStock.CantidadColumn]));
                }
                set {
                    this[this.tabletlg_MovimientosDeStock.CantidadColumn] = value;
                }
            }
            
            public string IdDeposito {
                get {
                    return ((string)(this[this.tabletlg_MovimientosDeStock.IdDepositoColumn]));
                }
                set {
                    this[this.tabletlg_MovimientosDeStock.IdDepositoColumn] = value;
                }
            }
            
            public string IdSeccion {
                get {
                    return ((string)(this[this.tabletlg_MovimientosDeStock.IdSeccionColumn]));
                }
                set {
                    this[this.tabletlg_MovimientosDeStock.IdSeccionColumn] = value;
                }
            }
            
            public string IdEstadoDeStock {
                get {
                    return ((string)(this[this.tabletlg_MovimientosDeStock.IdEstadoDeStockColumn]));
                }
                set {
                    this[this.tabletlg_MovimientosDeStock.IdEstadoDeStockColumn] = value;
                }
            }
            
            public string IdTipoDeAjuste {
                get {
                    try {
                        return ((string)(this[this.tabletlg_MovimientosDeStock.IdTipoDeAjusteColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletlg_MovimientosDeStock.IdTipoDeAjusteColumn] = value;
                }
            }
            
            public System.DateTime FechaCreacion {
                get {
                    try {
                        return ((System.DateTime)(this[this.tabletlg_MovimientosDeStock.FechaCreacionColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletlg_MovimientosDeStock.FechaCreacionColumn] = value;
                }
            }
            
            public long IdConexionCreacion {
                get {
                    try {
                        return ((long)(this[this.tabletlg_MovimientosDeStock.IdConexionCreacionColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletlg_MovimientosDeStock.IdConexionCreacionColumn] = value;
                }
            }
            
            public System.Byte[] UltimaModificacion {
                get {
                    try {
                        return ((System.Byte[])(this[this.tabletlg_MovimientosDeStock.UltimaModificacionColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletlg_MovimientosDeStock.UltimaModificacionColumn] = value;
                }
            }
            
            public long IdConexionUltimaModificacion {
                get {
                    try {
                        return ((long)(this[this.tabletlg_MovimientosDeStock.IdConexionUltimaModificacionColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletlg_MovimientosDeStock.IdConexionUltimaModificacionColumn] = value;
                }
            }
            
            public long IdReservado {
                get {
                    try {
                        return ((long)(this[this.tabletlg_MovimientosDeStock.IdReservadoColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletlg_MovimientosDeStock.IdReservadoColumn] = value;
                }
            }
            
            public System.Guid RowId {
                get {
                    try {
                        return ((System.Guid)(this[this.tabletlg_MovimientosDeStock.RowIdColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletlg_MovimientosDeStock.RowIdColumn] = value;
                }
            }
            
            public long IdSucursal {
                get {
                    try {
                        return ((long)(this[this.tabletlg_MovimientosDeStock.IdSucursalColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletlg_MovimientosDeStock.IdSucursalColumn] = value;
                }
            }
            
            public long IdEmpresa {
                get {
                    try {
                        return ((long)(this[this.tabletlg_MovimientosDeStock.IdEmpresaColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletlg_MovimientosDeStock.IdEmpresaColumn] = value;
                }
            }
            
            public bool IsIdTipoDeAjusteNull() {
                return this.IsNull(this.tabletlg_MovimientosDeStock.IdTipoDeAjusteColumn);
            }
            
            public void SetIdTipoDeAjusteNull() {
                this[this.tabletlg_MovimientosDeStock.IdTipoDeAjusteColumn] = System.Convert.DBNull;
            }
            
            public bool IsFechaCreacionNull() {
                return this.IsNull(this.tabletlg_MovimientosDeStock.FechaCreacionColumn);
            }
            
            public void SetFechaCreacionNull() {
                this[this.tabletlg_MovimientosDeStock.FechaCreacionColumn] = System.Convert.DBNull;
            }
            
            public bool IsIdConexionCreacionNull() {
                return this.IsNull(this.tabletlg_MovimientosDeStock.IdConexionCreacionColumn);
            }
            
            public void SetIdConexionCreacionNull() {
                this[this.tabletlg_MovimientosDeStock.IdConexionCreacionColumn] = System.Convert.DBNull;
            }
            
            public bool IsUltimaModificacionNull() {
                return this.IsNull(this.tabletlg_MovimientosDeStock.UltimaModificacionColumn);
            }
            
            public void SetUltimaModificacionNull() {
                this[this.tabletlg_MovimientosDeStock.UltimaModificacionColumn] = System.Convert.DBNull;
            }
            
            public bool IsIdConexionUltimaModificacionNull() {
                return this.IsNull(this.tabletlg_MovimientosDeStock.IdConexionUltimaModificacionColumn);
            }
            
            public void SetIdConexionUltimaModificacionNull() {
                this[this.tabletlg_MovimientosDeStock.IdConexionUltimaModificacionColumn] = System.Convert.DBNull;
            }
            
            public bool IsIdReservadoNull() {
                return this.IsNull(this.tabletlg_MovimientosDeStock.IdReservadoColumn);
            }
            
            public void SetIdReservadoNull() {
                this[this.tabletlg_MovimientosDeStock.IdReservadoColumn] = System.Convert.DBNull;
            }
            
            public bool IsRowIdNull() {
                return this.IsNull(this.tabletlg_MovimientosDeStock.RowIdColumn);
            }
            
            public void SetRowIdNull() {
                this[this.tabletlg_MovimientosDeStock.RowIdColumn] = System.Convert.DBNull;
            }
            
            public bool IsIdSucursalNull() {
                return this.IsNull(this.tabletlg_MovimientosDeStock.IdSucursalColumn);
            }
            
            public void SetIdSucursalNull() {
                this[this.tabletlg_MovimientosDeStock.IdSucursalColumn] = System.Convert.DBNull;
            }
            
            public bool IsIdEmpresaNull() {
                return this.IsNull(this.tabletlg_MovimientosDeStock.IdEmpresaColumn);
            }
            
            public void SetIdEmpresaNull() {
                this[this.tabletlg_MovimientosDeStock.IdEmpresaColumn] = System.Convert.DBNull;
            }
            
            public tsa_ComprobantesMovimientosDeStockRow[] Gettsa_ComprobantesMovimientosDeStockRows() {
                return ((tsa_ComprobantesMovimientosDeStockRow[])(this.GetChildRows(this.Table.ChildRelations["tlg_MovimientosDeStocktsa_ComprobantesMovimientosDeStock"])));
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class tlg_MovimientosDeStockRowChangeEvent : EventArgs {
            
            private tlg_MovimientosDeStockRow eventRow;
            
            private DataRowAction eventAction;
            
            public tlg_MovimientosDeStockRowChangeEvent(tlg_MovimientosDeStockRow row, DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            public tlg_MovimientosDeStockRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            public DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class tsa_ComprobantesMovimientosDeStockDataTable : DataTable, System.Collections.IEnumerable {
            
            private DataColumn columnIdComprobante;
            
            private DataColumn columnIdMovimientoDeStock;
            
            private DataColumn columnFechaCreacion;
            
            private DataColumn columnIdConexionCreacion;
            
            private DataColumn columnUltimaModificacion;
            
            private DataColumn columnIdConexionUltimaModificacion;
            
            private DataColumn columnIdReservado;
            
            private DataColumn columnRowId;
            
            private DataColumn columnIdEmpresa;
            
            private DataColumn columnIdSucursal;
            
            internal tsa_ComprobantesMovimientosDeStockDataTable() : 
                    base("tsa_ComprobantesMovimientosDeStock") {
                this.InitClass();
            }
            
            internal tsa_ComprobantesMovimientosDeStockDataTable(DataTable table) : 
                    base(table.TableName) {
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
                this.DisplayExpression = table.DisplayExpression;
            }
            
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            internal DataColumn IdComprobanteColumn {
                get {
                    return this.columnIdComprobante;
                }
            }
            
            internal DataColumn IdMovimientoDeStockColumn {
                get {
                    return this.columnIdMovimientoDeStock;
                }
            }
            
            internal DataColumn FechaCreacionColumn {
                get {
                    return this.columnFechaCreacion;
                }
            }
            
            internal DataColumn IdConexionCreacionColumn {
                get {
                    return this.columnIdConexionCreacion;
                }
            }
            
            internal DataColumn UltimaModificacionColumn {
                get {
                    return this.columnUltimaModificacion;
                }
            }
            
            internal DataColumn IdConexionUltimaModificacionColumn {
                get {
                    return this.columnIdConexionUltimaModificacion;
                }
            }
            
            internal DataColumn IdReservadoColumn {
                get {
                    return this.columnIdReservado;
                }
            }
            
            internal DataColumn RowIdColumn {
                get {
                    return this.columnRowId;
                }
            }
            
            internal DataColumn IdEmpresaColumn {
                get {
                    return this.columnIdEmpresa;
                }
            }
            
            internal DataColumn IdSucursalColumn {
                get {
                    return this.columnIdSucursal;
                }
            }
            
            public tsa_ComprobantesMovimientosDeStockRow this[int index] {
                get {
                    return ((tsa_ComprobantesMovimientosDeStockRow)(this.Rows[index]));
                }
            }
            
            public event tsa_ComprobantesMovimientosDeStockRowChangeEventHandler tsa_ComprobantesMovimientosDeStockRowChanged;
            
            public event tsa_ComprobantesMovimientosDeStockRowChangeEventHandler tsa_ComprobantesMovimientosDeStockRowChanging;
            
            public event tsa_ComprobantesMovimientosDeStockRowChangeEventHandler tsa_ComprobantesMovimientosDeStockRowDeleted;
            
            public event tsa_ComprobantesMovimientosDeStockRowChangeEventHandler tsa_ComprobantesMovimientosDeStockRowDeleting;
            
            public void Addtsa_ComprobantesMovimientosDeStockRow(tsa_ComprobantesMovimientosDeStockRow row) {
                this.Rows.Add(row);
            }
            
            public tsa_ComprobantesMovimientosDeStockRow Addtsa_ComprobantesMovimientosDeStockRow(tsa_ComprobantesRow parenttsa_ComprobantesRowBytsa_Comprobantestsa_ComprobantesMovimientosDeStock, tlg_MovimientosDeStockRow parenttlg_MovimientosDeStockRowBytlg_MovimientosDeStocktsa_ComprobantesMovimientosDeStock, System.DateTime FechaCreacion, long IdConexionCreacion, System.Byte[] UltimaModificacion, long IdConexionUltimaModificacion, long IdReservado, System.Guid RowId, long IdEmpresa, long IdSucursal) {
                tsa_ComprobantesMovimientosDeStockRow rowtsa_ComprobantesMovimientosDeStockRow = ((tsa_ComprobantesMovimientosDeStockRow)(this.NewRow()));
                rowtsa_ComprobantesMovimientosDeStockRow.ItemArray = new object[] {
                        parenttsa_ComprobantesRowBytsa_Comprobantestsa_ComprobantesMovimientosDeStock[0],
                        parenttlg_MovimientosDeStockRowBytlg_MovimientosDeStocktsa_ComprobantesMovimientosDeStock[0],
                        FechaCreacion,
                        IdConexionCreacion,
                        UltimaModificacion,
                        IdConexionUltimaModificacion,
                        IdReservado,
                        RowId,
                        IdEmpresa,
                        IdSucursal};
                this.Rows.Add(rowtsa_ComprobantesMovimientosDeStockRow);
                return rowtsa_ComprobantesMovimientosDeStockRow;
            }
            
            public tsa_ComprobantesMovimientosDeStockRow FindByIdComprobanteIdMovimientoDeStock(string IdComprobante, string IdMovimientoDeStock) {
                return ((tsa_ComprobantesMovimientosDeStockRow)(this.Rows.Find(new object[] {
                            IdComprobante,
                            IdMovimientoDeStock})));
            }
            
            public System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            public override DataTable Clone() {
                tsa_ComprobantesMovimientosDeStockDataTable cln = ((tsa_ComprobantesMovimientosDeStockDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            protected override DataTable CreateInstance() {
                return new tsa_ComprobantesMovimientosDeStockDataTable();
            }
            
            internal void InitVars() {
                this.columnIdComprobante = this.Columns["IdComprobante"];
                this.columnIdMovimientoDeStock = this.Columns["IdMovimientoDeStock"];
                this.columnFechaCreacion = this.Columns["FechaCreacion"];
                this.columnIdConexionCreacion = this.Columns["IdConexionCreacion"];
                this.columnUltimaModificacion = this.Columns["UltimaModificacion"];
                this.columnIdConexionUltimaModificacion = this.Columns["IdConexionUltimaModificacion"];
                this.columnIdReservado = this.Columns["IdReservado"];
                this.columnRowId = this.Columns["RowId"];
                this.columnIdEmpresa = this.Columns["IdEmpresa"];
                this.columnIdSucursal = this.Columns["IdSucursal"];
            }
            
            private void InitClass() {
                this.columnIdComprobante = new DataColumn("IdComprobante", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdComprobante);
                this.columnIdMovimientoDeStock = new DataColumn("IdMovimientoDeStock", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdMovimientoDeStock);
                this.columnFechaCreacion = new DataColumn("FechaCreacion", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnFechaCreacion);
                this.columnIdConexionCreacion = new DataColumn("IdConexionCreacion", typeof(long), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdConexionCreacion);
                this.columnUltimaModificacion = new DataColumn("UltimaModificacion", typeof(System.Byte[]), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnUltimaModificacion);
                this.columnIdConexionUltimaModificacion = new DataColumn("IdConexionUltimaModificacion", typeof(long), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdConexionUltimaModificacion);
                this.columnIdReservado = new DataColumn("IdReservado", typeof(long), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdReservado);
                this.columnRowId = new DataColumn("RowId", typeof(System.Guid), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnRowId);
                this.columnIdEmpresa = new DataColumn("IdEmpresa", typeof(long), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdEmpresa);
                this.columnIdSucursal = new DataColumn("IdSucursal", typeof(long), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdSucursal);
                this.Constraints.Add(new UniqueConstraint("tsa_ComprobantesExDatasetKey9", new DataColumn[] {
                                this.columnIdComprobante,
                                this.columnIdMovimientoDeStock}, true));
                this.columnIdComprobante.AllowDBNull = false;
                this.columnIdMovimientoDeStock.AllowDBNull = false;
                this.columnUltimaModificacion.ReadOnly = true;
            }
            
            public tsa_ComprobantesMovimientosDeStockRow Newtsa_ComprobantesMovimientosDeStockRow() {
                return ((tsa_ComprobantesMovimientosDeStockRow)(this.NewRow()));
            }
            
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder) {
                return new tsa_ComprobantesMovimientosDeStockRow(builder);
            }
            
            protected override System.Type GetRowType() {
                return typeof(tsa_ComprobantesMovimientosDeStockRow);
            }
            
            protected override void OnRowChanged(DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.tsa_ComprobantesMovimientosDeStockRowChanged != null)) {
                    this.tsa_ComprobantesMovimientosDeStockRowChanged(this, new tsa_ComprobantesMovimientosDeStockRowChangeEvent(((tsa_ComprobantesMovimientosDeStockRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowChanging(DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.tsa_ComprobantesMovimientosDeStockRowChanging != null)) {
                    this.tsa_ComprobantesMovimientosDeStockRowChanging(this, new tsa_ComprobantesMovimientosDeStockRowChangeEvent(((tsa_ComprobantesMovimientosDeStockRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleted(DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.tsa_ComprobantesMovimientosDeStockRowDeleted != null)) {
                    this.tsa_ComprobantesMovimientosDeStockRowDeleted(this, new tsa_ComprobantesMovimientosDeStockRowChangeEvent(((tsa_ComprobantesMovimientosDeStockRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleting(DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.tsa_ComprobantesMovimientosDeStockRowDeleting != null)) {
                    this.tsa_ComprobantesMovimientosDeStockRowDeleting(this, new tsa_ComprobantesMovimientosDeStockRowChangeEvent(((tsa_ComprobantesMovimientosDeStockRow)(e.Row)), e.Action));
                }
            }
            
            public void Removetsa_ComprobantesMovimientosDeStockRow(tsa_ComprobantesMovimientosDeStockRow row) {
                this.Rows.Remove(row);
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class tsa_ComprobantesMovimientosDeStockRow : DataRow {
            
            private tsa_ComprobantesMovimientosDeStockDataTable tabletsa_ComprobantesMovimientosDeStock;
            
            internal tsa_ComprobantesMovimientosDeStockRow(DataRowBuilder rb) : 
                    base(rb) {
                this.tabletsa_ComprobantesMovimientosDeStock = ((tsa_ComprobantesMovimientosDeStockDataTable)(this.Table));
            }
            
            public string IdComprobante {
                get {
                    return ((string)(this[this.tabletsa_ComprobantesMovimientosDeStock.IdComprobanteColumn]));
                }
                set {
                    this[this.tabletsa_ComprobantesMovimientosDeStock.IdComprobanteColumn] = value;
                }
            }
            
            public string IdMovimientoDeStock {
                get {
                    return ((string)(this[this.tabletsa_ComprobantesMovimientosDeStock.IdMovimientoDeStockColumn]));
                }
                set {
                    this[this.tabletsa_ComprobantesMovimientosDeStock.IdMovimientoDeStockColumn] = value;
                }
            }
            
            public System.DateTime FechaCreacion {
                get {
                    try {
                        return ((System.DateTime)(this[this.tabletsa_ComprobantesMovimientosDeStock.FechaCreacionColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletsa_ComprobantesMovimientosDeStock.FechaCreacionColumn] = value;
                }
            }
            
            public long IdConexionCreacion {
                get {
                    try {
                        return ((long)(this[this.tabletsa_ComprobantesMovimientosDeStock.IdConexionCreacionColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletsa_ComprobantesMovimientosDeStock.IdConexionCreacionColumn] = value;
                }
            }
            
            public System.Byte[] UltimaModificacion {
                get {
                    try {
                        return ((System.Byte[])(this[this.tabletsa_ComprobantesMovimientosDeStock.UltimaModificacionColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletsa_ComprobantesMovimientosDeStock.UltimaModificacionColumn] = value;
                }
            }
            
            public long IdConexionUltimaModificacion {
                get {
                    try {
                        return ((long)(this[this.tabletsa_ComprobantesMovimientosDeStock.IdConexionUltimaModificacionColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletsa_ComprobantesMovimientosDeStock.IdConexionUltimaModificacionColumn] = value;
                }
            }
            
            public long IdReservado {
                get {
                    try {
                        return ((long)(this[this.tabletsa_ComprobantesMovimientosDeStock.IdReservadoColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletsa_ComprobantesMovimientosDeStock.IdReservadoColumn] = value;
                }
            }
            
            public System.Guid RowId {
                get {
                    try {
                        return ((System.Guid)(this[this.tabletsa_ComprobantesMovimientosDeStock.RowIdColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletsa_ComprobantesMovimientosDeStock.RowIdColumn] = value;
                }
            }
            
            public long IdEmpresa {
                get {
                    try {
                        return ((long)(this[this.tabletsa_ComprobantesMovimientosDeStock.IdEmpresaColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletsa_ComprobantesMovimientosDeStock.IdEmpresaColumn] = value;
                }
            }
            
            public long IdSucursal {
                get {
                    try {
                        return ((long)(this[this.tabletsa_ComprobantesMovimientosDeStock.IdSucursalColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletsa_ComprobantesMovimientosDeStock.IdSucursalColumn] = value;
                }
            }
            
            public tsa_ComprobantesRow tsa_ComprobantesRow {
                get {
                    return ((tsa_ComprobantesRow)(this.GetParentRow(this.Table.ParentRelations["tsa_Comprobantestsa_ComprobantesMovimientosDeStock"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["tsa_Comprobantestsa_ComprobantesMovimientosDeStock"]);
                }
            }
            
            public tlg_MovimientosDeStockRow tlg_MovimientosDeStockRow {
                get {
                    return ((tlg_MovimientosDeStockRow)(this.GetParentRow(this.Table.ParentRelations["tlg_MovimientosDeStocktsa_ComprobantesMovimientosDeStock"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["tlg_MovimientosDeStocktsa_ComprobantesMovimientosDeStock"]);
                }
            }
            
            public bool IsFechaCreacionNull() {
                return this.IsNull(this.tabletsa_ComprobantesMovimientosDeStock.FechaCreacionColumn);
            }
            
            public void SetFechaCreacionNull() {
                this[this.tabletsa_ComprobantesMovimientosDeStock.FechaCreacionColumn] = System.Convert.DBNull;
            }
            
            public bool IsIdConexionCreacionNull() {
                return this.IsNull(this.tabletsa_ComprobantesMovimientosDeStock.IdConexionCreacionColumn);
            }
            
            public void SetIdConexionCreacionNull() {
                this[this.tabletsa_ComprobantesMovimientosDeStock.IdConexionCreacionColumn] = System.Convert.DBNull;
            }
            
            public bool IsUltimaModificacionNull() {
                return this.IsNull(this.tabletsa_ComprobantesMovimientosDeStock.UltimaModificacionColumn);
            }
            
            public void SetUltimaModificacionNull() {
                this[this.tabletsa_ComprobantesMovimientosDeStock.UltimaModificacionColumn] = System.Convert.DBNull;
            }
            
            public bool IsIdConexionUltimaModificacionNull() {
                return this.IsNull(this.tabletsa_ComprobantesMovimientosDeStock.IdConexionUltimaModificacionColumn);
            }
            
            public void SetIdConexionUltimaModificacionNull() {
                this[this.tabletsa_ComprobantesMovimientosDeStock.IdConexionUltimaModificacionColumn] = System.Convert.DBNull;
            }
            
            public bool IsIdReservadoNull() {
                return this.IsNull(this.tabletsa_ComprobantesMovimientosDeStock.IdReservadoColumn);
            }
            
            public void SetIdReservadoNull() {
                this[this.tabletsa_ComprobantesMovimientosDeStock.IdReservadoColumn] = System.Convert.DBNull;
            }
            
            public bool IsRowIdNull() {
                return this.IsNull(this.tabletsa_ComprobantesMovimientosDeStock.RowIdColumn);
            }
            
            public void SetRowIdNull() {
                this[this.tabletsa_ComprobantesMovimientosDeStock.RowIdColumn] = System.Convert.DBNull;
            }
            
            public bool IsIdEmpresaNull() {
                return this.IsNull(this.tabletsa_ComprobantesMovimientosDeStock.IdEmpresaColumn);
            }
            
            public void SetIdEmpresaNull() {
                this[this.tabletsa_ComprobantesMovimientosDeStock.IdEmpresaColumn] = System.Convert.DBNull;
            }
            
            public bool IsIdSucursalNull() {
                return this.IsNull(this.tabletsa_ComprobantesMovimientosDeStock.IdSucursalColumn);
            }
            
            public void SetIdSucursalNull() {
                this[this.tabletsa_ComprobantesMovimientosDeStock.IdSucursalColumn] = System.Convert.DBNull;
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class tsa_ComprobantesMovimientosDeStockRowChangeEvent : EventArgs {
            
            private tsa_ComprobantesMovimientosDeStockRow eventRow;
            
            private DataRowAction eventAction;
            
            public tsa_ComprobantesMovimientosDeStockRowChangeEvent(tsa_ComprobantesMovimientosDeStockRow row, DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            public tsa_ComprobantesMovimientosDeStockRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            public DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class tfi_ValoresDatosAuxiliaresDataTable : DataTable, System.Collections.IEnumerable {
            
            private DataColumn columnIdValor;
            
            private DataColumn columnCODIGO_AUT_TC_TD_TCCUO_;
            
            private DataColumn columnCUPON_TC_TD_TCCUO_;
            
            private DataColumn columnFECHA_ACREDIT_TC_TCCUO_;
            
            private DataColumn columnFECHA_AUT_TC_TD_TCCUO_;
            
            private DataColumn columnLOTE_TC_TD_TCCUO_;
            
            private DataColumn columnCANTIDAD_CUOTAS_TCCUO_;
            
            private DataColumn columnCTA_BANCARIA_CHE_T_C_DT_D_DP_;
            
            private DataColumn columnLIBRADOR_CHE_T_DT_;
            
            private DataColumn columnSUCURSAL_CHE_T_C_DT_D_DP_;
            
            private DataColumn columnFECHA_PAGO_CHE_T_DT_;
            
            private DataColumn columnFECHA_RECEP_CHE_T_C_DT_D_;
            
            private DataColumn columnTIPO_RETENCION_RET_;
            
            private DataColumn columnFECHA_INGRESO_RET_;
            
            private DataColumn columnFECHA_COMP_RET_;
            
            private DataColumn columnaux1;
            
            private DataColumn columnaux2;
            
            private DataColumn columnaux3;
            
            private DataColumn columnNROBOLETA_CHE_T_C_DT_D_;
            
            private DataColumn columnCODIGO10_TC_TD_TCCUO_;
            
            private DataColumn columnFECHAINGBANCO_CHE_T_C_DT_D_;
            
            private DataColumn columnDESTINATARIO_CHE_DP_;
            
            private DataColumn columnSELLADO_CHE_T_C_DT_D_DP_;
            
            private DataColumn columnCRUZADO_CHE_T_C_DT_D_DP_;
            
            private DataColumn columnIDDESTINATARIO_CHE_DP_;
            
            private DataColumn columnBANCO_CHE_DP_;
            
            private DataColumn columnIDBANCO_CHE_DP_;
            
            internal tfi_ValoresDatosAuxiliaresDataTable() : 
                    base("tfi_ValoresDatosAuxiliares") {
                this.InitClass();
            }
            
            internal tfi_ValoresDatosAuxiliaresDataTable(DataTable table) : 
                    base(table.TableName) {
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
                this.DisplayExpression = table.DisplayExpression;
            }
            
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            internal DataColumn IdValorColumn {
                get {
                    return this.columnIdValor;
                }
            }
            
            internal DataColumn CODIGO_AUT_TC_TD_TCCUO_Column {
                get {
                    return this.columnCODIGO_AUT_TC_TD_TCCUO_;
                }
            }
            
            internal DataColumn CUPON_TC_TD_TCCUO_Column {
                get {
                    return this.columnCUPON_TC_TD_TCCUO_;
                }
            }
            
            internal DataColumn FECHA_ACREDIT_TC_TCCUO_Column {
                get {
                    return this.columnFECHA_ACREDIT_TC_TCCUO_;
                }
            }
            
            internal DataColumn FECHA_AUT_TC_TD_TCCUO_Column {
                get {
                    return this.columnFECHA_AUT_TC_TD_TCCUO_;
                }
            }
            
            internal DataColumn LOTE_TC_TD_TCCUO_Column {
                get {
                    return this.columnLOTE_TC_TD_TCCUO_;
                }
            }
            
            internal DataColumn CANTIDAD_CUOTAS_TCCUO_Column {
                get {
                    return this.columnCANTIDAD_CUOTAS_TCCUO_;
                }
            }
            
            internal DataColumn CTA_BANCARIA_CHE_T_C_DT_D_DP_Column {
                get {
                    return this.columnCTA_BANCARIA_CHE_T_C_DT_D_DP_;
                }
            }
            
            internal DataColumn LIBRADOR_CHE_T_DT_Column {
                get {
                    return this.columnLIBRADOR_CHE_T_DT_;
                }
            }
            
            internal DataColumn SUCURSAL_CHE_T_C_DT_D_DP_Column {
                get {
                    return this.columnSUCURSAL_CHE_T_C_DT_D_DP_;
                }
            }
            
            internal DataColumn FECHA_PAGO_CHE_T_DT_Column {
                get {
                    return this.columnFECHA_PAGO_CHE_T_DT_;
                }
            }
            
            internal DataColumn FECHA_RECEP_CHE_T_C_DT_D_Column {
                get {
                    return this.columnFECHA_RECEP_CHE_T_C_DT_D_;
                }
            }
            
            internal DataColumn TIPO_RETENCION_RET_Column {
                get {
                    return this.columnTIPO_RETENCION_RET_;
                }
            }
            
            internal DataColumn FECHA_INGRESO_RET_Column {
                get {
                    return this.columnFECHA_INGRESO_RET_;
                }
            }
            
            internal DataColumn FECHA_COMP_RET_Column {
                get {
                    return this.columnFECHA_COMP_RET_;
                }
            }
            
            internal DataColumn aux1Column {
                get {
                    return this.columnaux1;
                }
            }
            
            internal DataColumn aux2Column {
                get {
                    return this.columnaux2;
                }
            }
            
            internal DataColumn aux3Column {
                get {
                    return this.columnaux3;
                }
            }
            
            internal DataColumn NROBOLETA_CHE_T_C_DT_D_Column {
                get {
                    return this.columnNROBOLETA_CHE_T_C_DT_D_;
                }
            }
            
            internal DataColumn CODIGO10_TC_TD_TCCUO_Column {
                get {
                    return this.columnCODIGO10_TC_TD_TCCUO_;
                }
            }
            
            internal DataColumn FECHAINGBANCO_CHE_T_C_DT_D_Column {
                get {
                    return this.columnFECHAINGBANCO_CHE_T_C_DT_D_;
                }
            }
            
            internal DataColumn DESTINATARIO_CHE_DP_Column {
                get {
                    return this.columnDESTINATARIO_CHE_DP_;
                }
            }
            
            internal DataColumn SELLADO_CHE_T_C_DT_D_DP_Column {
                get {
                    return this.columnSELLADO_CHE_T_C_DT_D_DP_;
                }
            }
            
            internal DataColumn CRUZADO_CHE_T_C_DT_D_DP_Column {
                get {
                    return this.columnCRUZADO_CHE_T_C_DT_D_DP_;
                }
            }
            
            internal DataColumn IDDESTINATARIO_CHE_DP_Column {
                get {
                    return this.columnIDDESTINATARIO_CHE_DP_;
                }
            }
            
            internal DataColumn BANCO_CHE_DP_Column {
                get {
                    return this.columnBANCO_CHE_DP_;
                }
            }
            
            internal DataColumn IDBANCO_CHE_DP_Column {
                get {
                    return this.columnIDBANCO_CHE_DP_;
                }
            }
            
            public tfi_ValoresDatosAuxiliaresRow this[int index] {
                get {
                    return ((tfi_ValoresDatosAuxiliaresRow)(this.Rows[index]));
                }
            }
            
            public event tfi_ValoresDatosAuxiliaresRowChangeEventHandler tfi_ValoresDatosAuxiliaresRowChanged;
            
            public event tfi_ValoresDatosAuxiliaresRowChangeEventHandler tfi_ValoresDatosAuxiliaresRowChanging;
            
            public event tfi_ValoresDatosAuxiliaresRowChangeEventHandler tfi_ValoresDatosAuxiliaresRowDeleted;
            
            public event tfi_ValoresDatosAuxiliaresRowChangeEventHandler tfi_ValoresDatosAuxiliaresRowDeleting;
            
            public void Addtfi_ValoresDatosAuxiliaresRow(tfi_ValoresDatosAuxiliaresRow row) {
                this.Rows.Add(row);
            }
            
            public tfi_ValoresDatosAuxiliaresRow Addtfi_ValoresDatosAuxiliaresRow(
                        tfi_ValoresRow parenttfi_ValoresRowBytfi_Valorestfi_ValoresDatosAuxiliares, 
                        string CODIGO_AUT_TC_TD_TCCUO_, 
                        string CUPON_TC_TD_TCCUO_, 
                        System.DateTime FECHA_ACREDIT_TC_TCCUO_, 
                        System.DateTime FECHA_AUT_TC_TD_TCCUO_, 
                        string LOTE_TC_TD_TCCUO_, 
                        short CANTIDAD_CUOTAS_TCCUO_, 
                        string CTA_BANCARIA_CHE_T_C_DT_D_DP_, 
                        string LIBRADOR_CHE_T_DT_, 
                        string SUCURSAL_CHE_T_C_DT_D_DP_, 
                        System.DateTime FECHA_PAGO_CHE_T_DT_, 
                        System.DateTime FECHA_RECEP_CHE_T_C_DT_D_, 
                        string TIPO_RETENCION_RET_, 
                        System.DateTime FECHA_INGRESO_RET_, 
                        System.DateTime FECHA_COMP_RET_, 
                        string aux1, 
                        System.DateTime aux2, 
                        string aux3, 
                        string NROBOLETA_CHE_T_C_DT_D_, 
                        string CODIGO10_TC_TD_TCCUO_, 
                        System.DateTime FECHAINGBANCO_CHE_T_C_DT_D_, 
                        string DESTINATARIO_CHE_DP_, 
                        bool SELLADO_CHE_T_C_DT_D_DP_, 
                        bool CRUZADO_CHE_T_C_DT_D_DP_, 
                        string IDDESTINATARIO_CHE_DP_, 
                        string BANCO_CHE_DP_, 
                        string IDBANCO_CHE_DP_) {
                tfi_ValoresDatosAuxiliaresRow rowtfi_ValoresDatosAuxiliaresRow = ((tfi_ValoresDatosAuxiliaresRow)(this.NewRow()));
                rowtfi_ValoresDatosAuxiliaresRow.ItemArray = new object[] {
                        parenttfi_ValoresRowBytfi_Valorestfi_ValoresDatosAuxiliares[0],
                        CODIGO_AUT_TC_TD_TCCUO_,
                        CUPON_TC_TD_TCCUO_,
                        FECHA_ACREDIT_TC_TCCUO_,
                        FECHA_AUT_TC_TD_TCCUO_,
                        LOTE_TC_TD_TCCUO_,
                        CANTIDAD_CUOTAS_TCCUO_,
                        CTA_BANCARIA_CHE_T_C_DT_D_DP_,
                        LIBRADOR_CHE_T_DT_,
                        SUCURSAL_CHE_T_C_DT_D_DP_,
                        FECHA_PAGO_CHE_T_DT_,
                        FECHA_RECEP_CHE_T_C_DT_D_,
                        TIPO_RETENCION_RET_,
                        FECHA_INGRESO_RET_,
                        FECHA_COMP_RET_,
                        aux1,
                        aux2,
                        aux3,
                        NROBOLETA_CHE_T_C_DT_D_,
                        CODIGO10_TC_TD_TCCUO_,
                        FECHAINGBANCO_CHE_T_C_DT_D_,
                        DESTINATARIO_CHE_DP_,
                        SELLADO_CHE_T_C_DT_D_DP_,
                        CRUZADO_CHE_T_C_DT_D_DP_,
                        IDDESTINATARIO_CHE_DP_,
                        BANCO_CHE_DP_,
                        IDBANCO_CHE_DP_};
                this.Rows.Add(rowtfi_ValoresDatosAuxiliaresRow);
                return rowtfi_ValoresDatosAuxiliaresRow;
            }
            
            public tfi_ValoresDatosAuxiliaresRow FindByIdValor(string IdValor) {
                return ((tfi_ValoresDatosAuxiliaresRow)(this.Rows.Find(new object[] {
                            IdValor})));
            }
            
            public System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            public override DataTable Clone() {
                tfi_ValoresDatosAuxiliaresDataTable cln = ((tfi_ValoresDatosAuxiliaresDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            protected override DataTable CreateInstance() {
                return new tfi_ValoresDatosAuxiliaresDataTable();
            }
            
            internal void InitVars() {
                this.columnIdValor = this.Columns["IdValor"];
                this.columnCODIGO_AUT_TC_TD_TCCUO_ = this.Columns["CODIGO_AUT_TC_TD_TCCUO_"];
                this.columnCUPON_TC_TD_TCCUO_ = this.Columns["CUPON_TC_TD_TCCUO_"];
                this.columnFECHA_ACREDIT_TC_TCCUO_ = this.Columns["FECHA_ACREDIT_TC_TCCUO_"];
                this.columnFECHA_AUT_TC_TD_TCCUO_ = this.Columns["FECHA_AUT_TC_TD_TCCUO_"];
                this.columnLOTE_TC_TD_TCCUO_ = this.Columns["LOTE_TC_TD_TCCUO_"];
                this.columnCANTIDAD_CUOTAS_TCCUO_ = this.Columns["CANTIDAD_CUOTAS_TCCUO_"];
                this.columnCTA_BANCARIA_CHE_T_C_DT_D_DP_ = this.Columns["CTA_BANCARIA_CHE_T_C_DT_D_DP_"];
                this.columnLIBRADOR_CHE_T_DT_ = this.Columns["LIBRADOR_CHE_T_DT_"];
                this.columnSUCURSAL_CHE_T_C_DT_D_DP_ = this.Columns["SUCURSAL_CHE_T_C_DT_D_DP_"];
                this.columnFECHA_PAGO_CHE_T_DT_ = this.Columns["FECHA_PAGO_CHE_T_DT_"];
                this.columnFECHA_RECEP_CHE_T_C_DT_D_ = this.Columns["FECHA_RECEP_CHE_T_C_DT_D_"];
                this.columnTIPO_RETENCION_RET_ = this.Columns["TIPO_RETENCION_RET_"];
                this.columnFECHA_INGRESO_RET_ = this.Columns["FECHA_INGRESO_RET_"];
                this.columnFECHA_COMP_RET_ = this.Columns["FECHA_COMP_RET_"];
                this.columnaux1 = this.Columns["aux1"];
                this.columnaux2 = this.Columns["aux2"];
                this.columnaux3 = this.Columns["aux3"];
                this.columnNROBOLETA_CHE_T_C_DT_D_ = this.Columns["NROBOLETA_CHE_T_C_DT_D_"];
                this.columnCODIGO10_TC_TD_TCCUO_ = this.Columns["CODIGO10_TC_TD_TCCUO_"];
                this.columnFECHAINGBANCO_CHE_T_C_DT_D_ = this.Columns["FECHAINGBANCO_CHE_T_C_DT_D_"];
                this.columnDESTINATARIO_CHE_DP_ = this.Columns["DESTINATARIO_CHE_DP_"];
                this.columnSELLADO_CHE_T_C_DT_D_DP_ = this.Columns["SELLADO_CHE_T_C_DT_D_DP_"];
                this.columnCRUZADO_CHE_T_C_DT_D_DP_ = this.Columns["CRUZADO_CHE_T_C_DT_D_DP_"];
                this.columnIDDESTINATARIO_CHE_DP_ = this.Columns["IDDESTINATARIO_CHE_DP_"];
                this.columnBANCO_CHE_DP_ = this.Columns["BANCO_CHE_DP_"];
                this.columnIDBANCO_CHE_DP_ = this.Columns["IDBANCO_CHE_DP_"];
            }
            
            private void InitClass() {
                this.columnIdValor = new DataColumn("IdValor", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdValor);
                this.columnCODIGO_AUT_TC_TD_TCCUO_ = new DataColumn("CODIGO_AUT_TC_TD_TCCUO_", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnCODIGO_AUT_TC_TD_TCCUO_);
                this.columnCUPON_TC_TD_TCCUO_ = new DataColumn("CUPON_TC_TD_TCCUO_", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnCUPON_TC_TD_TCCUO_);
                this.columnFECHA_ACREDIT_TC_TCCUO_ = new DataColumn("FECHA_ACREDIT_TC_TCCUO_", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnFECHA_ACREDIT_TC_TCCUO_);
                this.columnFECHA_AUT_TC_TD_TCCUO_ = new DataColumn("FECHA_AUT_TC_TD_TCCUO_", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnFECHA_AUT_TC_TD_TCCUO_);
                this.columnLOTE_TC_TD_TCCUO_ = new DataColumn("LOTE_TC_TD_TCCUO_", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnLOTE_TC_TD_TCCUO_);
                this.columnCANTIDAD_CUOTAS_TCCUO_ = new DataColumn("CANTIDAD_CUOTAS_TCCUO_", typeof(short), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnCANTIDAD_CUOTAS_TCCUO_);
                this.columnCTA_BANCARIA_CHE_T_C_DT_D_DP_ = new DataColumn("CTA_BANCARIA_CHE_T_C_DT_D_DP_", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnCTA_BANCARIA_CHE_T_C_DT_D_DP_);
                this.columnLIBRADOR_CHE_T_DT_ = new DataColumn("LIBRADOR_CHE_T_DT_", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnLIBRADOR_CHE_T_DT_);
                this.columnSUCURSAL_CHE_T_C_DT_D_DP_ = new DataColumn("SUCURSAL_CHE_T_C_DT_D_DP_", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnSUCURSAL_CHE_T_C_DT_D_DP_);
                this.columnFECHA_PAGO_CHE_T_DT_ = new DataColumn("FECHA_PAGO_CHE_T_DT_", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnFECHA_PAGO_CHE_T_DT_);
                this.columnFECHA_RECEP_CHE_T_C_DT_D_ = new DataColumn("FECHA_RECEP_CHE_T_C_DT_D_", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnFECHA_RECEP_CHE_T_C_DT_D_);
                this.columnTIPO_RETENCION_RET_ = new DataColumn("TIPO_RETENCION_RET_", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnTIPO_RETENCION_RET_);
                this.columnFECHA_INGRESO_RET_ = new DataColumn("FECHA_INGRESO_RET_", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnFECHA_INGRESO_RET_);
                this.columnFECHA_COMP_RET_ = new DataColumn("FECHA_COMP_RET_", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnFECHA_COMP_RET_);
                this.columnaux1 = new DataColumn("aux1", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnaux1);
                this.columnaux2 = new DataColumn("aux2", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnaux2);
                this.columnaux3 = new DataColumn("aux3", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnaux3);
                this.columnNROBOLETA_CHE_T_C_DT_D_ = new DataColumn("NROBOLETA_CHE_T_C_DT_D_", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnNROBOLETA_CHE_T_C_DT_D_);
                this.columnCODIGO10_TC_TD_TCCUO_ = new DataColumn("CODIGO10_TC_TD_TCCUO_", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnCODIGO10_TC_TD_TCCUO_);
                this.columnFECHAINGBANCO_CHE_T_C_DT_D_ = new DataColumn("FECHAINGBANCO_CHE_T_C_DT_D_", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnFECHAINGBANCO_CHE_T_C_DT_D_);
                this.columnDESTINATARIO_CHE_DP_ = new DataColumn("DESTINATARIO_CHE_DP_", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnDESTINATARIO_CHE_DP_);
                this.columnSELLADO_CHE_T_C_DT_D_DP_ = new DataColumn("SELLADO_CHE_T_C_DT_D_DP_", typeof(bool), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnSELLADO_CHE_T_C_DT_D_DP_);
                this.columnCRUZADO_CHE_T_C_DT_D_DP_ = new DataColumn("CRUZADO_CHE_T_C_DT_D_DP_", typeof(bool), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnCRUZADO_CHE_T_C_DT_D_DP_);
                this.columnIDDESTINATARIO_CHE_DP_ = new DataColumn("IDDESTINATARIO_CHE_DP_", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIDDESTINATARIO_CHE_DP_);
                this.columnBANCO_CHE_DP_ = new DataColumn("BANCO_CHE_DP_", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnBANCO_CHE_DP_);
                this.columnIDBANCO_CHE_DP_ = new DataColumn("IDBANCO_CHE_DP_", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIDBANCO_CHE_DP_);
                this.Constraints.Add(new UniqueConstraint("tsa_ComprobantesExDatasetKey10", new DataColumn[] {
                                this.columnIdValor}, true));
                this.columnIdValor.AllowDBNull = false;
                this.columnIdValor.Unique = true;
            }
            
            public tfi_ValoresDatosAuxiliaresRow Newtfi_ValoresDatosAuxiliaresRow() {
                return ((tfi_ValoresDatosAuxiliaresRow)(this.NewRow()));
            }
            
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder) {
                return new tfi_ValoresDatosAuxiliaresRow(builder);
            }
            
            protected override System.Type GetRowType() {
                return typeof(tfi_ValoresDatosAuxiliaresRow);
            }
            
            protected override void OnRowChanged(DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.tfi_ValoresDatosAuxiliaresRowChanged != null)) {
                    this.tfi_ValoresDatosAuxiliaresRowChanged(this, new tfi_ValoresDatosAuxiliaresRowChangeEvent(((tfi_ValoresDatosAuxiliaresRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowChanging(DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.tfi_ValoresDatosAuxiliaresRowChanging != null)) {
                    this.tfi_ValoresDatosAuxiliaresRowChanging(this, new tfi_ValoresDatosAuxiliaresRowChangeEvent(((tfi_ValoresDatosAuxiliaresRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleted(DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.tfi_ValoresDatosAuxiliaresRowDeleted != null)) {
                    this.tfi_ValoresDatosAuxiliaresRowDeleted(this, new tfi_ValoresDatosAuxiliaresRowChangeEvent(((tfi_ValoresDatosAuxiliaresRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleting(DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.tfi_ValoresDatosAuxiliaresRowDeleting != null)) {
                    this.tfi_ValoresDatosAuxiliaresRowDeleting(this, new tfi_ValoresDatosAuxiliaresRowChangeEvent(((tfi_ValoresDatosAuxiliaresRow)(e.Row)), e.Action));
                }
            }
            
            public void Removetfi_ValoresDatosAuxiliaresRow(tfi_ValoresDatosAuxiliaresRow row) {
                this.Rows.Remove(row);
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class tfi_ValoresDatosAuxiliaresRow : DataRow {
            
            private tfi_ValoresDatosAuxiliaresDataTable tabletfi_ValoresDatosAuxiliares;
            
            internal tfi_ValoresDatosAuxiliaresRow(DataRowBuilder rb) : 
                    base(rb) {
                this.tabletfi_ValoresDatosAuxiliares = ((tfi_ValoresDatosAuxiliaresDataTable)(this.Table));
            }
            
            public string IdValor {
                get {
                    return ((string)(this[this.tabletfi_ValoresDatosAuxiliares.IdValorColumn]));
                }
                set {
                    this[this.tabletfi_ValoresDatosAuxiliares.IdValorColumn] = value;
                }
            }
            
            public string CODIGO_AUT_TC_TD_TCCUO_ {
                get {
                    try {
                        return ((string)(this[this.tabletfi_ValoresDatosAuxiliares.CODIGO_AUT_TC_TD_TCCUO_Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletfi_ValoresDatosAuxiliares.CODIGO_AUT_TC_TD_TCCUO_Column] = value;
                }
            }
            
            public string CUPON_TC_TD_TCCUO_ {
                get {
                    try {
                        return ((string)(this[this.tabletfi_ValoresDatosAuxiliares.CUPON_TC_TD_TCCUO_Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletfi_ValoresDatosAuxiliares.CUPON_TC_TD_TCCUO_Column] = value;
                }
            }
            
            public System.DateTime FECHA_ACREDIT_TC_TCCUO_ {
                get {
                    try {
                        return ((System.DateTime)(this[this.tabletfi_ValoresDatosAuxiliares.FECHA_ACREDIT_TC_TCCUO_Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletfi_ValoresDatosAuxiliares.FECHA_ACREDIT_TC_TCCUO_Column] = value;
                }
            }
            
            public System.DateTime FECHA_AUT_TC_TD_TCCUO_ {
                get {
                    try {
                        return ((System.DateTime)(this[this.tabletfi_ValoresDatosAuxiliares.FECHA_AUT_TC_TD_TCCUO_Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletfi_ValoresDatosAuxiliares.FECHA_AUT_TC_TD_TCCUO_Column] = value;
                }
            }
            
            public string LOTE_TC_TD_TCCUO_ {
                get {
                    try {
                        return ((string)(this[this.tabletfi_ValoresDatosAuxiliares.LOTE_TC_TD_TCCUO_Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletfi_ValoresDatosAuxiliares.LOTE_TC_TD_TCCUO_Column] = value;
                }
            }
            
            public short CANTIDAD_CUOTAS_TCCUO_ {
                get {
                    try {
                        return ((short)(this[this.tabletfi_ValoresDatosAuxiliares.CANTIDAD_CUOTAS_TCCUO_Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletfi_ValoresDatosAuxiliares.CANTIDAD_CUOTAS_TCCUO_Column] = value;
                }
            }
            
            public string CTA_BANCARIA_CHE_T_C_DT_D_DP_ {
                get {
                    try {
                        return ((string)(this[this.tabletfi_ValoresDatosAuxiliares.CTA_BANCARIA_CHE_T_C_DT_D_DP_Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletfi_ValoresDatosAuxiliares.CTA_BANCARIA_CHE_T_C_DT_D_DP_Column] = value;
                }
            }
            
            public string LIBRADOR_CHE_T_DT_ {
                get {
                    try {
                        return ((string)(this[this.tabletfi_ValoresDatosAuxiliares.LIBRADOR_CHE_T_DT_Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletfi_ValoresDatosAuxiliares.LIBRADOR_CHE_T_DT_Column] = value;
                }
            }
            
            public string SUCURSAL_CHE_T_C_DT_D_DP_ {
                get {
                    try {
                        return ((string)(this[this.tabletfi_ValoresDatosAuxiliares.SUCURSAL_CHE_T_C_DT_D_DP_Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletfi_ValoresDatosAuxiliares.SUCURSAL_CHE_T_C_DT_D_DP_Column] = value;
                }
            }
            
            public System.DateTime FECHA_PAGO_CHE_T_DT_ {
                get {
                    try {
                        return ((System.DateTime)(this[this.tabletfi_ValoresDatosAuxiliares.FECHA_PAGO_CHE_T_DT_Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletfi_ValoresDatosAuxiliares.FECHA_PAGO_CHE_T_DT_Column] = value;
                }
            }
            
            public System.DateTime FECHA_RECEP_CHE_T_C_DT_D_ {
                get {
                    try {
                        return ((System.DateTime)(this[this.tabletfi_ValoresDatosAuxiliares.FECHA_RECEP_CHE_T_C_DT_D_Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletfi_ValoresDatosAuxiliares.FECHA_RECEP_CHE_T_C_DT_D_Column] = value;
                }
            }
            
            public string TIPO_RETENCION_RET_ {
                get {
                    try {
                        return ((string)(this[this.tabletfi_ValoresDatosAuxiliares.TIPO_RETENCION_RET_Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletfi_ValoresDatosAuxiliares.TIPO_RETENCION_RET_Column] = value;
                }
            }
            
            public System.DateTime FECHA_INGRESO_RET_ {
                get {
                    try {
                        return ((System.DateTime)(this[this.tabletfi_ValoresDatosAuxiliares.FECHA_INGRESO_RET_Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletfi_ValoresDatosAuxiliares.FECHA_INGRESO_RET_Column] = value;
                }
            }
            
            public System.DateTime FECHA_COMP_RET_ {
                get {
                    try {
                        return ((System.DateTime)(this[this.tabletfi_ValoresDatosAuxiliares.FECHA_COMP_RET_Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletfi_ValoresDatosAuxiliares.FECHA_COMP_RET_Column] = value;
                }
            }
            
            public string aux1 {
                get {
                    try {
                        return ((string)(this[this.tabletfi_ValoresDatosAuxiliares.aux1Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletfi_ValoresDatosAuxiliares.aux1Column] = value;
                }
            }
            
            public System.DateTime aux2 {
                get {
                    try {
                        return ((System.DateTime)(this[this.tabletfi_ValoresDatosAuxiliares.aux2Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletfi_ValoresDatosAuxiliares.aux2Column] = value;
                }
            }
            
            public string aux3 {
                get {
                    try {
                        return ((string)(this[this.tabletfi_ValoresDatosAuxiliares.aux3Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletfi_ValoresDatosAuxiliares.aux3Column] = value;
                }
            }
            
            public string NROBOLETA_CHE_T_C_DT_D_ {
                get {
                    try {
                        return ((string)(this[this.tabletfi_ValoresDatosAuxiliares.NROBOLETA_CHE_T_C_DT_D_Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletfi_ValoresDatosAuxiliares.NROBOLETA_CHE_T_C_DT_D_Column] = value;
                }
            }
            
            public string CODIGO10_TC_TD_TCCUO_ {
                get {
                    try {
                        return ((string)(this[this.tabletfi_ValoresDatosAuxiliares.CODIGO10_TC_TD_TCCUO_Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletfi_ValoresDatosAuxiliares.CODIGO10_TC_TD_TCCUO_Column] = value;
                }
            }
            
            public System.DateTime FECHAINGBANCO_CHE_T_C_DT_D_ {
                get {
                    try {
                        return ((System.DateTime)(this[this.tabletfi_ValoresDatosAuxiliares.FECHAINGBANCO_CHE_T_C_DT_D_Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletfi_ValoresDatosAuxiliares.FECHAINGBANCO_CHE_T_C_DT_D_Column] = value;
                }
            }
            
            public string DESTINATARIO_CHE_DP_ {
                get {
                    try {
                        return ((string)(this[this.tabletfi_ValoresDatosAuxiliares.DESTINATARIO_CHE_DP_Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletfi_ValoresDatosAuxiliares.DESTINATARIO_CHE_DP_Column] = value;
                }
            }
            
            public bool SELLADO_CHE_T_C_DT_D_DP_ {
                get {
                    try {
                        return ((bool)(this[this.tabletfi_ValoresDatosAuxiliares.SELLADO_CHE_T_C_DT_D_DP_Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletfi_ValoresDatosAuxiliares.SELLADO_CHE_T_C_DT_D_DP_Column] = value;
                }
            }
            
            public bool CRUZADO_CHE_T_C_DT_D_DP_ {
                get {
                    try {
                        return ((bool)(this[this.tabletfi_ValoresDatosAuxiliares.CRUZADO_CHE_T_C_DT_D_DP_Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletfi_ValoresDatosAuxiliares.CRUZADO_CHE_T_C_DT_D_DP_Column] = value;
                }
            }
            
            public string IDDESTINATARIO_CHE_DP_ {
                get {
                    try {
                        return ((string)(this[this.tabletfi_ValoresDatosAuxiliares.IDDESTINATARIO_CHE_DP_Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletfi_ValoresDatosAuxiliares.IDDESTINATARIO_CHE_DP_Column] = value;
                }
            }
            
            public string BANCO_CHE_DP_ {
                get {
                    try {
                        return ((string)(this[this.tabletfi_ValoresDatosAuxiliares.BANCO_CHE_DP_Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletfi_ValoresDatosAuxiliares.BANCO_CHE_DP_Column] = value;
                }
            }
            
            public string IDBANCO_CHE_DP_ {
                get {
                    try {
                        return ((string)(this[this.tabletfi_ValoresDatosAuxiliares.IDBANCO_CHE_DP_Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletfi_ValoresDatosAuxiliares.IDBANCO_CHE_DP_Column] = value;
                }
            }
            
            public tfi_ValoresRow tfi_ValoresRow {
                get {
                    return ((tfi_ValoresRow)(this.GetParentRow(this.Table.ParentRelations["tfi_Valorestfi_ValoresDatosAuxiliares"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["tfi_Valorestfi_ValoresDatosAuxiliares"]);
                }
            }
            
            public bool IsCODIGO_AUT_TC_TD_TCCUO_Null() {
                return this.IsNull(this.tabletfi_ValoresDatosAuxiliares.CODIGO_AUT_TC_TD_TCCUO_Column);
            }
            
            public void SetCODIGO_AUT_TC_TD_TCCUO_Null() {
                this[this.tabletfi_ValoresDatosAuxiliares.CODIGO_AUT_TC_TD_TCCUO_Column] = System.Convert.DBNull;
            }
            
            public bool IsCUPON_TC_TD_TCCUO_Null() {
                return this.IsNull(this.tabletfi_ValoresDatosAuxiliares.CUPON_TC_TD_TCCUO_Column);
            }
            
            public void SetCUPON_TC_TD_TCCUO_Null() {
                this[this.tabletfi_ValoresDatosAuxiliares.CUPON_TC_TD_TCCUO_Column] = System.Convert.DBNull;
            }
            
            public bool IsFECHA_ACREDIT_TC_TCCUO_Null() {
                return this.IsNull(this.tabletfi_ValoresDatosAuxiliares.FECHA_ACREDIT_TC_TCCUO_Column);
            }
            
            public void SetFECHA_ACREDIT_TC_TCCUO_Null() {
                this[this.tabletfi_ValoresDatosAuxiliares.FECHA_ACREDIT_TC_TCCUO_Column] = System.Convert.DBNull;
            }
            
            public bool IsFECHA_AUT_TC_TD_TCCUO_Null() {
                return this.IsNull(this.tabletfi_ValoresDatosAuxiliares.FECHA_AUT_TC_TD_TCCUO_Column);
            }
            
            public void SetFECHA_AUT_TC_TD_TCCUO_Null() {
                this[this.tabletfi_ValoresDatosAuxiliares.FECHA_AUT_TC_TD_TCCUO_Column] = System.Convert.DBNull;
            }
            
            public bool IsLOTE_TC_TD_TCCUO_Null() {
                return this.IsNull(this.tabletfi_ValoresDatosAuxiliares.LOTE_TC_TD_TCCUO_Column);
            }
            
            public void SetLOTE_TC_TD_TCCUO_Null() {
                this[this.tabletfi_ValoresDatosAuxiliares.LOTE_TC_TD_TCCUO_Column] = System.Convert.DBNull;
            }
            
            public bool IsCANTIDAD_CUOTAS_TCCUO_Null() {
                return this.IsNull(this.tabletfi_ValoresDatosAuxiliares.CANTIDAD_CUOTAS_TCCUO_Column);
            }
            
            public void SetCANTIDAD_CUOTAS_TCCUO_Null() {
                this[this.tabletfi_ValoresDatosAuxiliares.CANTIDAD_CUOTAS_TCCUO_Column] = System.Convert.DBNull;
            }
            
            public bool IsCTA_BANCARIA_CHE_T_C_DT_D_DP_Null() {
                return this.IsNull(this.tabletfi_ValoresDatosAuxiliares.CTA_BANCARIA_CHE_T_C_DT_D_DP_Column);
            }
            
            public void SetCTA_BANCARIA_CHE_T_C_DT_D_DP_Null() {
                this[this.tabletfi_ValoresDatosAuxiliares.CTA_BANCARIA_CHE_T_C_DT_D_DP_Column] = System.Convert.DBNull;
            }
            
            public bool IsLIBRADOR_CHE_T_DT_Null() {
                return this.IsNull(this.tabletfi_ValoresDatosAuxiliares.LIBRADOR_CHE_T_DT_Column);
            }
            
            public void SetLIBRADOR_CHE_T_DT_Null() {
                this[this.tabletfi_ValoresDatosAuxiliares.LIBRADOR_CHE_T_DT_Column] = System.Convert.DBNull;
            }
            
            public bool IsSUCURSAL_CHE_T_C_DT_D_DP_Null() {
                return this.IsNull(this.tabletfi_ValoresDatosAuxiliares.SUCURSAL_CHE_T_C_DT_D_DP_Column);
            }
            
            public void SetSUCURSAL_CHE_T_C_DT_D_DP_Null() {
                this[this.tabletfi_ValoresDatosAuxiliares.SUCURSAL_CHE_T_C_DT_D_DP_Column] = System.Convert.DBNull;
            }
            
            public bool IsFECHA_PAGO_CHE_T_DT_Null() {
                return this.IsNull(this.tabletfi_ValoresDatosAuxiliares.FECHA_PAGO_CHE_T_DT_Column);
            }
            
            public void SetFECHA_PAGO_CHE_T_DT_Null() {
                this[this.tabletfi_ValoresDatosAuxiliares.FECHA_PAGO_CHE_T_DT_Column] = System.Convert.DBNull;
            }
            
            public bool IsFECHA_RECEP_CHE_T_C_DT_D_Null() {
                return this.IsNull(this.tabletfi_ValoresDatosAuxiliares.FECHA_RECEP_CHE_T_C_DT_D_Column);
            }
            
            public void SetFECHA_RECEP_CHE_T_C_DT_D_Null() {
                this[this.tabletfi_ValoresDatosAuxiliares.FECHA_RECEP_CHE_T_C_DT_D_Column] = System.Convert.DBNull;
            }
            
            public bool IsTIPO_RETENCION_RET_Null() {
                return this.IsNull(this.tabletfi_ValoresDatosAuxiliares.TIPO_RETENCION_RET_Column);
            }
            
            public void SetTIPO_RETENCION_RET_Null() {
                this[this.tabletfi_ValoresDatosAuxiliares.TIPO_RETENCION_RET_Column] = System.Convert.DBNull;
            }
            
            public bool IsFECHA_INGRESO_RET_Null() {
                return this.IsNull(this.tabletfi_ValoresDatosAuxiliares.FECHA_INGRESO_RET_Column);
            }
            
            public void SetFECHA_INGRESO_RET_Null() {
                this[this.tabletfi_ValoresDatosAuxiliares.FECHA_INGRESO_RET_Column] = System.Convert.DBNull;
            }
            
            public bool IsFECHA_COMP_RET_Null() {
                return this.IsNull(this.tabletfi_ValoresDatosAuxiliares.FECHA_COMP_RET_Column);
            }
            
            public void SetFECHA_COMP_RET_Null() {
                this[this.tabletfi_ValoresDatosAuxiliares.FECHA_COMP_RET_Column] = System.Convert.DBNull;
            }
            
            public bool Isaux1Null() {
                return this.IsNull(this.tabletfi_ValoresDatosAuxiliares.aux1Column);
            }
            
            public void Setaux1Null() {
                this[this.tabletfi_ValoresDatosAuxiliares.aux1Column] = System.Convert.DBNull;
            }
            
            public bool Isaux2Null() {
                return this.IsNull(this.tabletfi_ValoresDatosAuxiliares.aux2Column);
            }
            
            public void Setaux2Null() {
                this[this.tabletfi_ValoresDatosAuxiliares.aux2Column] = System.Convert.DBNull;
            }
            
            public bool Isaux3Null() {
                return this.IsNull(this.tabletfi_ValoresDatosAuxiliares.aux3Column);
            }
            
            public void Setaux3Null() {
                this[this.tabletfi_ValoresDatosAuxiliares.aux3Column] = System.Convert.DBNull;
            }
            
            public bool IsNROBOLETA_CHE_T_C_DT_D_Null() {
                return this.IsNull(this.tabletfi_ValoresDatosAuxiliares.NROBOLETA_CHE_T_C_DT_D_Column);
            }
            
            public void SetNROBOLETA_CHE_T_C_DT_D_Null() {
                this[this.tabletfi_ValoresDatosAuxiliares.NROBOLETA_CHE_T_C_DT_D_Column] = System.Convert.DBNull;
            }
            
            public bool IsCODIGO10_TC_TD_TCCUO_Null() {
                return this.IsNull(this.tabletfi_ValoresDatosAuxiliares.CODIGO10_TC_TD_TCCUO_Column);
            }
            
            public void SetCODIGO10_TC_TD_TCCUO_Null() {
                this[this.tabletfi_ValoresDatosAuxiliares.CODIGO10_TC_TD_TCCUO_Column] = System.Convert.DBNull;
            }
            
            public bool IsFECHAINGBANCO_CHE_T_C_DT_D_Null() {
                return this.IsNull(this.tabletfi_ValoresDatosAuxiliares.FECHAINGBANCO_CHE_T_C_DT_D_Column);
            }
            
            public void SetFECHAINGBANCO_CHE_T_C_DT_D_Null() {
                this[this.tabletfi_ValoresDatosAuxiliares.FECHAINGBANCO_CHE_T_C_DT_D_Column] = System.Convert.DBNull;
            }
            
            public bool IsDESTINATARIO_CHE_DP_Null() {
                return this.IsNull(this.tabletfi_ValoresDatosAuxiliares.DESTINATARIO_CHE_DP_Column);
            }
            
            public void SetDESTINATARIO_CHE_DP_Null() {
                this[this.tabletfi_ValoresDatosAuxiliares.DESTINATARIO_CHE_DP_Column] = System.Convert.DBNull;
            }
            
            public bool IsSELLADO_CHE_T_C_DT_D_DP_Null() {
                return this.IsNull(this.tabletfi_ValoresDatosAuxiliares.SELLADO_CHE_T_C_DT_D_DP_Column);
            }
            
            public void SetSELLADO_CHE_T_C_DT_D_DP_Null() {
                this[this.tabletfi_ValoresDatosAuxiliares.SELLADO_CHE_T_C_DT_D_DP_Column] = System.Convert.DBNull;
            }
            
            public bool IsCRUZADO_CHE_T_C_DT_D_DP_Null() {
                return this.IsNull(this.tabletfi_ValoresDatosAuxiliares.CRUZADO_CHE_T_C_DT_D_DP_Column);
            }
            
            public void SetCRUZADO_CHE_T_C_DT_D_DP_Null() {
                this[this.tabletfi_ValoresDatosAuxiliares.CRUZADO_CHE_T_C_DT_D_DP_Column] = System.Convert.DBNull;
            }
            
            public bool IsIDDESTINATARIO_CHE_DP_Null() {
                return this.IsNull(this.tabletfi_ValoresDatosAuxiliares.IDDESTINATARIO_CHE_DP_Column);
            }
            
            public void SetIDDESTINATARIO_CHE_DP_Null() {
                this[this.tabletfi_ValoresDatosAuxiliares.IDDESTINATARIO_CHE_DP_Column] = System.Convert.DBNull;
            }
            
            public bool IsBANCO_CHE_DP_Null() {
                return this.IsNull(this.tabletfi_ValoresDatosAuxiliares.BANCO_CHE_DP_Column);
            }
            
            public void SetBANCO_CHE_DP_Null() {
                this[this.tabletfi_ValoresDatosAuxiliares.BANCO_CHE_DP_Column] = System.Convert.DBNull;
            }
            
            public bool IsIDBANCO_CHE_DP_Null() {
                return this.IsNull(this.tabletfi_ValoresDatosAuxiliares.IDBANCO_CHE_DP_Column);
            }
            
            public void SetIDBANCO_CHE_DP_Null() {
                this[this.tabletfi_ValoresDatosAuxiliares.IDBANCO_CHE_DP_Column] = System.Convert.DBNull;
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class tfi_ValoresDatosAuxiliaresRowChangeEvent : EventArgs {
            
            private tfi_ValoresDatosAuxiliaresRow eventRow;
            
            private DataRowAction eventAction;
            
            public tfi_ValoresDatosAuxiliaresRowChangeEvent(tfi_ValoresDatosAuxiliaresRow row, DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            public tfi_ValoresDatosAuxiliaresRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            public DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class tsa_ComprobantesAutorizacionesDataTable : DataTable, System.Collections.IEnumerable {
            
            private DataColumn columnIdComprobanteAutorizacion;
            
            private DataColumn columnIdComprobante;
            
            private DataColumn columnIdAutorizacion;
            
            private DataColumn columnFechaCreacion;
            
            private DataColumn columnIdConexionCreacion;
            
            private DataColumn columnUltimaModificacion;
            
            private DataColumn columnIdConexionUltimaModificacion;
            
            private DataColumn columnIdReservado;
            
            private DataColumn columnRowId;
            
            private DataColumn columnIdSucursal;
            
            private DataColumn columnIdEmpresa;
            
            internal tsa_ComprobantesAutorizacionesDataTable() : 
                    base("tsa_ComprobantesAutorizaciones") {
                this.InitClass();
            }
            
            internal tsa_ComprobantesAutorizacionesDataTable(DataTable table) : 
                    base(table.TableName) {
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
                this.DisplayExpression = table.DisplayExpression;
            }
            
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            internal DataColumn IdComprobanteAutorizacionColumn {
                get {
                    return this.columnIdComprobanteAutorizacion;
                }
            }
            
            internal DataColumn IdComprobanteColumn {
                get {
                    return this.columnIdComprobante;
                }
            }
            
            internal DataColumn IdAutorizacionColumn {
                get {
                    return this.columnIdAutorizacion;
                }
            }
            
            internal DataColumn FechaCreacionColumn {
                get {
                    return this.columnFechaCreacion;
                }
            }
            
            internal DataColumn IdConexionCreacionColumn {
                get {
                    return this.columnIdConexionCreacion;
                }
            }
            
            internal DataColumn UltimaModificacionColumn {
                get {
                    return this.columnUltimaModificacion;
                }
            }
            
            internal DataColumn IdConexionUltimaModificacionColumn {
                get {
                    return this.columnIdConexionUltimaModificacion;
                }
            }
            
            internal DataColumn IdReservadoColumn {
                get {
                    return this.columnIdReservado;
                }
            }
            
            internal DataColumn RowIdColumn {
                get {
                    return this.columnRowId;
                }
            }
            
            internal DataColumn IdSucursalColumn {
                get {
                    return this.columnIdSucursal;
                }
            }
            
            internal DataColumn IdEmpresaColumn {
                get {
                    return this.columnIdEmpresa;
                }
            }
            
            public tsa_ComprobantesAutorizacionesRow this[int index] {
                get {
                    return ((tsa_ComprobantesAutorizacionesRow)(this.Rows[index]));
                }
            }
            
            public event tsa_ComprobantesAutorizacionesRowChangeEventHandler tsa_ComprobantesAutorizacionesRowChanged;
            
            public event tsa_ComprobantesAutorizacionesRowChangeEventHandler tsa_ComprobantesAutorizacionesRowChanging;
            
            public event tsa_ComprobantesAutorizacionesRowChangeEventHandler tsa_ComprobantesAutorizacionesRowDeleted;
            
            public event tsa_ComprobantesAutorizacionesRowChangeEventHandler tsa_ComprobantesAutorizacionesRowDeleting;
            
            public void Addtsa_ComprobantesAutorizacionesRow(tsa_ComprobantesAutorizacionesRow row) {
                this.Rows.Add(row);
            }
            
            public tsa_ComprobantesAutorizacionesRow Addtsa_ComprobantesAutorizacionesRow(string IdComprobanteAutorizacion, tsa_ComprobantesRow parenttsa_ComprobantesRowBytsa_Comprobantestsa_ComprobantesAutorizaciones, string IdAutorizacion, System.DateTime FechaCreacion, long IdConexionCreacion, System.Byte[] UltimaModificacion, long IdConexionUltimaModificacion, long IdReservado, System.Guid RowId, long IdSucursal, long IdEmpresa) {
                tsa_ComprobantesAutorizacionesRow rowtsa_ComprobantesAutorizacionesRow = ((tsa_ComprobantesAutorizacionesRow)(this.NewRow()));
                rowtsa_ComprobantesAutorizacionesRow.ItemArray = new object[] {
                        IdComprobanteAutorizacion,
                        parenttsa_ComprobantesRowBytsa_Comprobantestsa_ComprobantesAutorizaciones[0],
                        IdAutorizacion,
                        FechaCreacion,
                        IdConexionCreacion,
                        UltimaModificacion,
                        IdConexionUltimaModificacion,
                        IdReservado,
                        RowId,
                        IdSucursal,
                        IdEmpresa};
                this.Rows.Add(rowtsa_ComprobantesAutorizacionesRow);
                return rowtsa_ComprobantesAutorizacionesRow;
            }
            
            public tsa_ComprobantesAutorizacionesRow FindByIdComprobanteAutorizacion(string IdComprobanteAutorizacion) {
                return ((tsa_ComprobantesAutorizacionesRow)(this.Rows.Find(new object[] {
                            IdComprobanteAutorizacion})));
            }
            
            public System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            public override DataTable Clone() {
                tsa_ComprobantesAutorizacionesDataTable cln = ((tsa_ComprobantesAutorizacionesDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            protected override DataTable CreateInstance() {
                return new tsa_ComprobantesAutorizacionesDataTable();
            }
            
            internal void InitVars() {
                this.columnIdComprobanteAutorizacion = this.Columns["IdComprobanteAutorizacion"];
                this.columnIdComprobante = this.Columns["IdComprobante"];
                this.columnIdAutorizacion = this.Columns["IdAutorizacion"];
                this.columnFechaCreacion = this.Columns["FechaCreacion"];
                this.columnIdConexionCreacion = this.Columns["IdConexionCreacion"];
                this.columnUltimaModificacion = this.Columns["UltimaModificacion"];
                this.columnIdConexionUltimaModificacion = this.Columns["IdConexionUltimaModificacion"];
                this.columnIdReservado = this.Columns["IdReservado"];
                this.columnRowId = this.Columns["RowId"];
                this.columnIdSucursal = this.Columns["IdSucursal"];
                this.columnIdEmpresa = this.Columns["IdEmpresa"];
            }
            
            private void InitClass() {
                this.columnIdComprobanteAutorizacion = new DataColumn("IdComprobanteAutorizacion", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdComprobanteAutorizacion);
                this.columnIdComprobante = new DataColumn("IdComprobante", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdComprobante);
                this.columnIdAutorizacion = new DataColumn("IdAutorizacion", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdAutorizacion);
                this.columnFechaCreacion = new DataColumn("FechaCreacion", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnFechaCreacion);
                this.columnIdConexionCreacion = new DataColumn("IdConexionCreacion", typeof(long), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdConexionCreacion);
                this.columnUltimaModificacion = new DataColumn("UltimaModificacion", typeof(System.Byte[]), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnUltimaModificacion);
                this.columnIdConexionUltimaModificacion = new DataColumn("IdConexionUltimaModificacion", typeof(long), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdConexionUltimaModificacion);
                this.columnIdReservado = new DataColumn("IdReservado", typeof(long), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdReservado);
                this.columnRowId = new DataColumn("RowId", typeof(System.Guid), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnRowId);
                this.columnIdSucursal = new DataColumn("IdSucursal", typeof(long), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdSucursal);
                this.columnIdEmpresa = new DataColumn("IdEmpresa", typeof(long), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdEmpresa);
                this.Constraints.Add(new UniqueConstraint("tsa_ComprobantesExDatasetKey11", new DataColumn[] {
                                this.columnIdComprobanteAutorizacion}, true));
                this.columnIdComprobanteAutorizacion.AllowDBNull = false;
                this.columnIdComprobanteAutorizacion.Unique = true;
                this.columnIdComprobante.AllowDBNull = false;
                this.columnIdAutorizacion.AllowDBNull = false;
                this.columnUltimaModificacion.ReadOnly = true;
            }
            
            public tsa_ComprobantesAutorizacionesRow Newtsa_ComprobantesAutorizacionesRow() {
                return ((tsa_ComprobantesAutorizacionesRow)(this.NewRow()));
            }
            
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder) {
                return new tsa_ComprobantesAutorizacionesRow(builder);
            }
            
            protected override System.Type GetRowType() {
                return typeof(tsa_ComprobantesAutorizacionesRow);
            }
            
            protected override void OnRowChanged(DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.tsa_ComprobantesAutorizacionesRowChanged != null)) {
                    this.tsa_ComprobantesAutorizacionesRowChanged(this, new tsa_ComprobantesAutorizacionesRowChangeEvent(((tsa_ComprobantesAutorizacionesRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowChanging(DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.tsa_ComprobantesAutorizacionesRowChanging != null)) {
                    this.tsa_ComprobantesAutorizacionesRowChanging(this, new tsa_ComprobantesAutorizacionesRowChangeEvent(((tsa_ComprobantesAutorizacionesRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleted(DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.tsa_ComprobantesAutorizacionesRowDeleted != null)) {
                    this.tsa_ComprobantesAutorizacionesRowDeleted(this, new tsa_ComprobantesAutorizacionesRowChangeEvent(((tsa_ComprobantesAutorizacionesRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleting(DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.tsa_ComprobantesAutorizacionesRowDeleting != null)) {
                    this.tsa_ComprobantesAutorizacionesRowDeleting(this, new tsa_ComprobantesAutorizacionesRowChangeEvent(((tsa_ComprobantesAutorizacionesRow)(e.Row)), e.Action));
                }
            }
            
            public void Removetsa_ComprobantesAutorizacionesRow(tsa_ComprobantesAutorizacionesRow row) {
                this.Rows.Remove(row);
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class tsa_ComprobantesAutorizacionesRow : DataRow {
            
            private tsa_ComprobantesAutorizacionesDataTable tabletsa_ComprobantesAutorizaciones;
            
            internal tsa_ComprobantesAutorizacionesRow(DataRowBuilder rb) : 
                    base(rb) {
                this.tabletsa_ComprobantesAutorizaciones = ((tsa_ComprobantesAutorizacionesDataTable)(this.Table));
            }
            
            public string IdComprobanteAutorizacion {
                get {
                    return ((string)(this[this.tabletsa_ComprobantesAutorizaciones.IdComprobanteAutorizacionColumn]));
                }
                set {
                    this[this.tabletsa_ComprobantesAutorizaciones.IdComprobanteAutorizacionColumn] = value;
                }
            }
            
            public string IdComprobante {
                get {
                    return ((string)(this[this.tabletsa_ComprobantesAutorizaciones.IdComprobanteColumn]));
                }
                set {
                    this[this.tabletsa_ComprobantesAutorizaciones.IdComprobanteColumn] = value;
                }
            }
            
            public string IdAutorizacion {
                get {
                    return ((string)(this[this.tabletsa_ComprobantesAutorizaciones.IdAutorizacionColumn]));
                }
                set {
                    this[this.tabletsa_ComprobantesAutorizaciones.IdAutorizacionColumn] = value;
                }
            }
            
            public System.DateTime FechaCreacion {
                get {
                    try {
                        return ((System.DateTime)(this[this.tabletsa_ComprobantesAutorizaciones.FechaCreacionColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletsa_ComprobantesAutorizaciones.FechaCreacionColumn] = value;
                }
            }
            
            public long IdConexionCreacion {
                get {
                    try {
                        return ((long)(this[this.tabletsa_ComprobantesAutorizaciones.IdConexionCreacionColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletsa_ComprobantesAutorizaciones.IdConexionCreacionColumn] = value;
                }
            }
            
            public System.Byte[] UltimaModificacion {
                get {
                    try {
                        return ((System.Byte[])(this[this.tabletsa_ComprobantesAutorizaciones.UltimaModificacionColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletsa_ComprobantesAutorizaciones.UltimaModificacionColumn] = value;
                }
            }
            
            public long IdConexionUltimaModificacion {
                get {
                    try {
                        return ((long)(this[this.tabletsa_ComprobantesAutorizaciones.IdConexionUltimaModificacionColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletsa_ComprobantesAutorizaciones.IdConexionUltimaModificacionColumn] = value;
                }
            }
            
            public long IdReservado {
                get {
                    try {
                        return ((long)(this[this.tabletsa_ComprobantesAutorizaciones.IdReservadoColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletsa_ComprobantesAutorizaciones.IdReservadoColumn] = value;
                }
            }
            
            public System.Guid RowId {
                get {
                    try {
                        return ((System.Guid)(this[this.tabletsa_ComprobantesAutorizaciones.RowIdColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletsa_ComprobantesAutorizaciones.RowIdColumn] = value;
                }
            }
            
            public long IdSucursal {
                get {
                    try {
                        return ((long)(this[this.tabletsa_ComprobantesAutorizaciones.IdSucursalColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletsa_ComprobantesAutorizaciones.IdSucursalColumn] = value;
                }
            }
            
            public long IdEmpresa {
                get {
                    try {
                        return ((long)(this[this.tabletsa_ComprobantesAutorizaciones.IdEmpresaColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletsa_ComprobantesAutorizaciones.IdEmpresaColumn] = value;
                }
            }
            
            public tsa_ComprobantesRow tsa_ComprobantesRow {
                get {
                    return ((tsa_ComprobantesRow)(this.GetParentRow(this.Table.ParentRelations["tsa_Comprobantestsa_ComprobantesAutorizaciones"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["tsa_Comprobantestsa_ComprobantesAutorizaciones"]);
                }
            }
            
            public bool IsFechaCreacionNull() {
                return this.IsNull(this.tabletsa_ComprobantesAutorizaciones.FechaCreacionColumn);
            }
            
            public void SetFechaCreacionNull() {
                this[this.tabletsa_ComprobantesAutorizaciones.FechaCreacionColumn] = System.Convert.DBNull;
            }
            
            public bool IsIdConexionCreacionNull() {
                return this.IsNull(this.tabletsa_ComprobantesAutorizaciones.IdConexionCreacionColumn);
            }
            
            public void SetIdConexionCreacionNull() {
                this[this.tabletsa_ComprobantesAutorizaciones.IdConexionCreacionColumn] = System.Convert.DBNull;
            }
            
            public bool IsUltimaModificacionNull() {
                return this.IsNull(this.tabletsa_ComprobantesAutorizaciones.UltimaModificacionColumn);
            }
            
            public void SetUltimaModificacionNull() {
                this[this.tabletsa_ComprobantesAutorizaciones.UltimaModificacionColumn] = System.Convert.DBNull;
            }
            
            public bool IsIdConexionUltimaModificacionNull() {
                return this.IsNull(this.tabletsa_ComprobantesAutorizaciones.IdConexionUltimaModificacionColumn);
            }
            
            public void SetIdConexionUltimaModificacionNull() {
                this[this.tabletsa_ComprobantesAutorizaciones.IdConexionUltimaModificacionColumn] = System.Convert.DBNull;
            }
            
            public bool IsIdReservadoNull() {
                return this.IsNull(this.tabletsa_ComprobantesAutorizaciones.IdReservadoColumn);
            }
            
            public void SetIdReservadoNull() {
                this[this.tabletsa_ComprobantesAutorizaciones.IdReservadoColumn] = System.Convert.DBNull;
            }
            
            public bool IsRowIdNull() {
                return this.IsNull(this.tabletsa_ComprobantesAutorizaciones.RowIdColumn);
            }
            
            public void SetRowIdNull() {
                this[this.tabletsa_ComprobantesAutorizaciones.RowIdColumn] = System.Convert.DBNull;
            }
            
            public bool IsIdSucursalNull() {
                return this.IsNull(this.tabletsa_ComprobantesAutorizaciones.IdSucursalColumn);
            }
            
            public void SetIdSucursalNull() {
                this[this.tabletsa_ComprobantesAutorizaciones.IdSucursalColumn] = System.Convert.DBNull;
            }
            
            public bool IsIdEmpresaNull() {
                return this.IsNull(this.tabletsa_ComprobantesAutorizaciones.IdEmpresaColumn);
            }
            
            public void SetIdEmpresaNull() {
                this[this.tabletsa_ComprobantesAutorizaciones.IdEmpresaColumn] = System.Convert.DBNull;
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class tsa_ComprobantesAutorizacionesRowChangeEvent : EventArgs {
            
            private tsa_ComprobantesAutorizacionesRow eventRow;
            
            private DataRowAction eventAction;
            
            public tsa_ComprobantesAutorizacionesRowChangeEvent(tsa_ComprobantesAutorizacionesRow row, DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            public tsa_ComprobantesAutorizacionesRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            public DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class tsh_ProductosAuxiliaresDataTable : DataTable, System.Collections.IEnumerable {
            
            private DataColumn columnIdProducto;
            
            private DataColumn columnContador;
            
            private DataColumn columnActivo;
            
            private DataColumn columnFechaCreacion;
            
            private DataColumn columnIdConexionCreacion;
            
            private DataColumn columnUltimaModificacion;
            
            private DataColumn columnIdConexionUltimaModificacion;
            
            private DataColumn columnIdReservado;
            
            private DataColumn columnRowId;
            
            private DataColumn columnIdEmpresa;
            
            private DataColumn columnIdSucursal;
            
            internal tsh_ProductosAuxiliaresDataTable() : 
                    base("tsh_ProductosAuxiliares") {
                this.InitClass();
            }
            
            internal tsh_ProductosAuxiliaresDataTable(DataTable table) : 
                    base(table.TableName) {
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
                this.DisplayExpression = table.DisplayExpression;
            }
            
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            internal DataColumn IdProductoColumn {
                get {
                    return this.columnIdProducto;
                }
            }
            
            internal DataColumn ContadorColumn {
                get {
                    return this.columnContador;
                }
            }
            
            internal DataColumn ActivoColumn {
                get {
                    return this.columnActivo;
                }
            }
            
            internal DataColumn FechaCreacionColumn {
                get {
                    return this.columnFechaCreacion;
                }
            }
            
            internal DataColumn IdConexionCreacionColumn {
                get {
                    return this.columnIdConexionCreacion;
                }
            }
            
            internal DataColumn UltimaModificacionColumn {
                get {
                    return this.columnUltimaModificacion;
                }
            }
            
            internal DataColumn IdConexionUltimaModificacionColumn {
                get {
                    return this.columnIdConexionUltimaModificacion;
                }
            }
            
            internal DataColumn IdReservadoColumn {
                get {
                    return this.columnIdReservado;
                }
            }
            
            internal DataColumn RowIdColumn {
                get {
                    return this.columnRowId;
                }
            }
            
            internal DataColumn IdEmpresaColumn {
                get {
                    return this.columnIdEmpresa;
                }
            }
            
            internal DataColumn IdSucursalColumn {
                get {
                    return this.columnIdSucursal;
                }
            }
            
            public tsh_ProductosAuxiliaresRow this[int index] {
                get {
                    return ((tsh_ProductosAuxiliaresRow)(this.Rows[index]));
                }
            }
            
            public event tsh_ProductosAuxiliaresRowChangeEventHandler tsh_ProductosAuxiliaresRowChanged;
            
            public event tsh_ProductosAuxiliaresRowChangeEventHandler tsh_ProductosAuxiliaresRowChanging;
            
            public event tsh_ProductosAuxiliaresRowChangeEventHandler tsh_ProductosAuxiliaresRowDeleted;
            
            public event tsh_ProductosAuxiliaresRowChangeEventHandler tsh_ProductosAuxiliaresRowDeleting;
            
            public void Addtsh_ProductosAuxiliaresRow(tsh_ProductosAuxiliaresRow row) {
                this.Rows.Add(row);
            }
            
            public tsh_ProductosAuxiliaresRow Addtsh_ProductosAuxiliaresRow(string IdProducto, long Contador, bool Activo, System.DateTime FechaCreacion, long IdConexionCreacion, System.Byte[] UltimaModificacion, long IdConexionUltimaModificacion, long IdReservado, System.Guid RowId, long IdEmpresa, long IdSucursal) {
                tsh_ProductosAuxiliaresRow rowtsh_ProductosAuxiliaresRow = ((tsh_ProductosAuxiliaresRow)(this.NewRow()));
                rowtsh_ProductosAuxiliaresRow.ItemArray = new object[] {
                        IdProducto,
                        Contador,
                        Activo,
                        FechaCreacion,
                        IdConexionCreacion,
                        UltimaModificacion,
                        IdConexionUltimaModificacion,
                        IdReservado,
                        RowId,
                        IdEmpresa,
                        IdSucursal};
                this.Rows.Add(rowtsh_ProductosAuxiliaresRow);
                return rowtsh_ProductosAuxiliaresRow;
            }
            
            public tsh_ProductosAuxiliaresRow FindByIdProducto(string IdProducto) {
                return ((tsh_ProductosAuxiliaresRow)(this.Rows.Find(new object[] {
                            IdProducto})));
            }
            
            public System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            public override DataTable Clone() {
                tsh_ProductosAuxiliaresDataTable cln = ((tsh_ProductosAuxiliaresDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            protected override DataTable CreateInstance() {
                return new tsh_ProductosAuxiliaresDataTable();
            }
            
            internal void InitVars() {
                this.columnIdProducto = this.Columns["IdProducto"];
                this.columnContador = this.Columns["Contador"];
                this.columnActivo = this.Columns["Activo"];
                this.columnFechaCreacion = this.Columns["FechaCreacion"];
                this.columnIdConexionCreacion = this.Columns["IdConexionCreacion"];
                this.columnUltimaModificacion = this.Columns["UltimaModificacion"];
                this.columnIdConexionUltimaModificacion = this.Columns["IdConexionUltimaModificacion"];
                this.columnIdReservado = this.Columns["IdReservado"];
                this.columnRowId = this.Columns["RowId"];
                this.columnIdEmpresa = this.Columns["IdEmpresa"];
                this.columnIdSucursal = this.Columns["IdSucursal"];
            }
            
            private void InitClass() {
                this.columnIdProducto = new DataColumn("IdProducto", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdProducto);
                this.columnContador = new DataColumn("Contador", typeof(long), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnContador);
                this.columnActivo = new DataColumn("Activo", typeof(bool), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnActivo);
                this.columnFechaCreacion = new DataColumn("FechaCreacion", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnFechaCreacion);
                this.columnIdConexionCreacion = new DataColumn("IdConexionCreacion", typeof(long), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdConexionCreacion);
                this.columnUltimaModificacion = new DataColumn("UltimaModificacion", typeof(System.Byte[]), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnUltimaModificacion);
                this.columnIdConexionUltimaModificacion = new DataColumn("IdConexionUltimaModificacion", typeof(long), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdConexionUltimaModificacion);
                this.columnIdReservado = new DataColumn("IdReservado", typeof(long), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdReservado);
                this.columnRowId = new DataColumn("RowId", typeof(System.Guid), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnRowId);
                this.columnIdEmpresa = new DataColumn("IdEmpresa", typeof(long), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdEmpresa);
                this.columnIdSucursal = new DataColumn("IdSucursal", typeof(long), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdSucursal);
                this.Constraints.Add(new UniqueConstraint("tsa_ComprobantesExDatasetKey13", new DataColumn[] {
                                this.columnIdProducto}, true));
                this.columnIdProducto.AllowDBNull = false;
                this.columnIdProducto.Unique = true;
                this.columnUltimaModificacion.ReadOnly = true;
            }
            
            public tsh_ProductosAuxiliaresRow Newtsh_ProductosAuxiliaresRow() {
                return ((tsh_ProductosAuxiliaresRow)(this.NewRow()));
            }
            
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder) {
                return new tsh_ProductosAuxiliaresRow(builder);
            }
            
            protected override System.Type GetRowType() {
                return typeof(tsh_ProductosAuxiliaresRow);
            }
            
            protected override void OnRowChanged(DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.tsh_ProductosAuxiliaresRowChanged != null)) {
                    this.tsh_ProductosAuxiliaresRowChanged(this, new tsh_ProductosAuxiliaresRowChangeEvent(((tsh_ProductosAuxiliaresRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowChanging(DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.tsh_ProductosAuxiliaresRowChanging != null)) {
                    this.tsh_ProductosAuxiliaresRowChanging(this, new tsh_ProductosAuxiliaresRowChangeEvent(((tsh_ProductosAuxiliaresRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleted(DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.tsh_ProductosAuxiliaresRowDeleted != null)) {
                    this.tsh_ProductosAuxiliaresRowDeleted(this, new tsh_ProductosAuxiliaresRowChangeEvent(((tsh_ProductosAuxiliaresRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleting(DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.tsh_ProductosAuxiliaresRowDeleting != null)) {
                    this.tsh_ProductosAuxiliaresRowDeleting(this, new tsh_ProductosAuxiliaresRowChangeEvent(((tsh_ProductosAuxiliaresRow)(e.Row)), e.Action));
                }
            }
            
            public void Removetsh_ProductosAuxiliaresRow(tsh_ProductosAuxiliaresRow row) {
                this.Rows.Remove(row);
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class tsh_ProductosAuxiliaresRow : DataRow {
            
            private tsh_ProductosAuxiliaresDataTable tabletsh_ProductosAuxiliares;
            
            internal tsh_ProductosAuxiliaresRow(DataRowBuilder rb) : 
                    base(rb) {
                this.tabletsh_ProductosAuxiliares = ((tsh_ProductosAuxiliaresDataTable)(this.Table));
            }
            
            public string IdProducto {
                get {
                    return ((string)(this[this.tabletsh_ProductosAuxiliares.IdProductoColumn]));
                }
                set {
                    this[this.tabletsh_ProductosAuxiliares.IdProductoColumn] = value;
                }
            }
            
            public long Contador {
                get {
                    try {
                        return ((long)(this[this.tabletsh_ProductosAuxiliares.ContadorColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletsh_ProductosAuxiliares.ContadorColumn] = value;
                }
            }
            
            public bool Activo {
                get {
                    try {
                        return ((bool)(this[this.tabletsh_ProductosAuxiliares.ActivoColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletsh_ProductosAuxiliares.ActivoColumn] = value;
                }
            }
            
            public System.DateTime FechaCreacion {
                get {
                    try {
                        return ((System.DateTime)(this[this.tabletsh_ProductosAuxiliares.FechaCreacionColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletsh_ProductosAuxiliares.FechaCreacionColumn] = value;
                }
            }
            
            public long IdConexionCreacion {
                get {
                    try {
                        return ((long)(this[this.tabletsh_ProductosAuxiliares.IdConexionCreacionColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletsh_ProductosAuxiliares.IdConexionCreacionColumn] = value;
                }
            }
            
            public System.Byte[] UltimaModificacion {
                get {
                    try {
                        return ((System.Byte[])(this[this.tabletsh_ProductosAuxiliares.UltimaModificacionColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletsh_ProductosAuxiliares.UltimaModificacionColumn] = value;
                }
            }
            
            public long IdConexionUltimaModificacion {
                get {
                    try {
                        return ((long)(this[this.tabletsh_ProductosAuxiliares.IdConexionUltimaModificacionColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletsh_ProductosAuxiliares.IdConexionUltimaModificacionColumn] = value;
                }
            }
            
            public long IdReservado {
                get {
                    try {
                        return ((long)(this[this.tabletsh_ProductosAuxiliares.IdReservadoColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletsh_ProductosAuxiliares.IdReservadoColumn] = value;
                }
            }
            
            public System.Guid RowId {
                get {
                    try {
                        return ((System.Guid)(this[this.tabletsh_ProductosAuxiliares.RowIdColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletsh_ProductosAuxiliares.RowIdColumn] = value;
                }
            }
            
            public long IdEmpresa {
                get {
                    try {
                        return ((long)(this[this.tabletsh_ProductosAuxiliares.IdEmpresaColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletsh_ProductosAuxiliares.IdEmpresaColumn] = value;
                }
            }
            
            public long IdSucursal {
                get {
                    try {
                        return ((long)(this[this.tabletsh_ProductosAuxiliares.IdSucursalColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletsh_ProductosAuxiliares.IdSucursalColumn] = value;
                }
            }
            
            public bool IsContadorNull() {
                return this.IsNull(this.tabletsh_ProductosAuxiliares.ContadorColumn);
            }
            
            public void SetContadorNull() {
                this[this.tabletsh_ProductosAuxiliares.ContadorColumn] = System.Convert.DBNull;
            }
            
            public bool IsActivoNull() {
                return this.IsNull(this.tabletsh_ProductosAuxiliares.ActivoColumn);
            }
            
            public void SetActivoNull() {
                this[this.tabletsh_ProductosAuxiliares.ActivoColumn] = System.Convert.DBNull;
            }
            
            public bool IsFechaCreacionNull() {
                return this.IsNull(this.tabletsh_ProductosAuxiliares.FechaCreacionColumn);
            }
            
            public void SetFechaCreacionNull() {
                this[this.tabletsh_ProductosAuxiliares.FechaCreacionColumn] = System.Convert.DBNull;
            }
            
            public bool IsIdConexionCreacionNull() {
                return this.IsNull(this.tabletsh_ProductosAuxiliares.IdConexionCreacionColumn);
            }
            
            public void SetIdConexionCreacionNull() {
                this[this.tabletsh_ProductosAuxiliares.IdConexionCreacionColumn] = System.Convert.DBNull;
            }
            
            public bool IsUltimaModificacionNull() {
                return this.IsNull(this.tabletsh_ProductosAuxiliares.UltimaModificacionColumn);
            }
            
            public void SetUltimaModificacionNull() {
                this[this.tabletsh_ProductosAuxiliares.UltimaModificacionColumn] = System.Convert.DBNull;
            }
            
            public bool IsIdConexionUltimaModificacionNull() {
                return this.IsNull(this.tabletsh_ProductosAuxiliares.IdConexionUltimaModificacionColumn);
            }
            
            public void SetIdConexionUltimaModificacionNull() {
                this[this.tabletsh_ProductosAuxiliares.IdConexionUltimaModificacionColumn] = System.Convert.DBNull;
            }
            
            public bool IsIdReservadoNull() {
                return this.IsNull(this.tabletsh_ProductosAuxiliares.IdReservadoColumn);
            }
            
            public void SetIdReservadoNull() {
                this[this.tabletsh_ProductosAuxiliares.IdReservadoColumn] = System.Convert.DBNull;
            }
            
            public bool IsRowIdNull() {
                return this.IsNull(this.tabletsh_ProductosAuxiliares.RowIdColumn);
            }
            
            public void SetRowIdNull() {
                this[this.tabletsh_ProductosAuxiliares.RowIdColumn] = System.Convert.DBNull;
            }
            
            public bool IsIdEmpresaNull() {
                return this.IsNull(this.tabletsh_ProductosAuxiliares.IdEmpresaColumn);
            }
            
            public void SetIdEmpresaNull() {
                this[this.tabletsh_ProductosAuxiliares.IdEmpresaColumn] = System.Convert.DBNull;
            }
            
            public bool IsIdSucursalNull() {
                return this.IsNull(this.tabletsh_ProductosAuxiliares.IdSucursalColumn);
            }
            
            public void SetIdSucursalNull() {
                this[this.tabletsh_ProductosAuxiliares.IdSucursalColumn] = System.Convert.DBNull;
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class tsh_ProductosAuxiliaresRowChangeEvent : EventArgs {
            
            private tsh_ProductosAuxiliaresRow eventRow;
            
            private DataRowAction eventAction;
            
            public tsh_ProductosAuxiliaresRowChangeEvent(tsh_ProductosAuxiliaresRow row, DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            public tsh_ProductosAuxiliaresRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            public DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class tsa_ComprobantesDetAuxiliaresDataTable : DataTable, System.Collections.IEnumerable {
            
            private DataColumn columnIdComprobante;
            
            private DataColumn columnOrdinal;
            
            private DataColumn columnIdEmpresa;
            
            private DataColumn columnIdSucursal;
            
            private DataColumn columnContadorOrigen;
            
            private DataColumn columnContadorDestino;
            
            private DataColumn columnFechaCreacion;
            
            private DataColumn columnIdConexionCreacion;
            
            private DataColumn columnUltimaModificacion;
            
            private DataColumn columnIdConexionUltimaModificacion;
            
            private DataColumn columnIdReservado;
            
            private DataColumn columnRowId;
            
            private DataColumn columnVisible;
            
            private DataColumn columnIdOrdenReparacion;
            
            private DataColumn columnIdComprobantesPredecesores;
            
            private DataColumn columnIdComprobantesSucesores;
            
            private DataColumn columnIdTiposComprobantesPredecesores;
            
            private DataColumn columnIdTiposComprobantesSucesores;
            
            private DataColumn columnIdInstanciaOrdenReparacion;
            
            private DataColumn columnIdRepuestoOrdenReparacion;
            
            private DataColumn columnIdTareaRealizada;
            
            private DataColumn columnIdResponsableOrigen;
            
            private DataColumn columnEquipo;
            
            private DataColumn columnOrdinalesPredecesores;
            
            private DataColumn columnOrdinalesSucesores;
            
            internal tsa_ComprobantesDetAuxiliaresDataTable() : 
                    base("tsa_ComprobantesDetAuxiliares") {
                this.InitClass();
            }
            
            internal tsa_ComprobantesDetAuxiliaresDataTable(DataTable table) : 
                    base(table.TableName) {
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
                this.DisplayExpression = table.DisplayExpression;
            }
            
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            internal DataColumn IdComprobanteColumn {
                get {
                    return this.columnIdComprobante;
                }
            }
            
            internal DataColumn OrdinalColumn {
                get {
                    return this.columnOrdinal;
                }
            }
            
            internal DataColumn IdEmpresaColumn {
                get {
                    return this.columnIdEmpresa;
                }
            }
            
            internal DataColumn IdSucursalColumn {
                get {
                    return this.columnIdSucursal;
                }
            }
            
            internal DataColumn ContadorOrigenColumn {
                get {
                    return this.columnContadorOrigen;
                }
            }
            
            internal DataColumn ContadorDestinoColumn {
                get {
                    return this.columnContadorDestino;
                }
            }
            
            internal DataColumn FechaCreacionColumn {
                get {
                    return this.columnFechaCreacion;
                }
            }
            
            internal DataColumn IdConexionCreacionColumn {
                get {
                    return this.columnIdConexionCreacion;
                }
            }
            
            internal DataColumn UltimaModificacionColumn {
                get {
                    return this.columnUltimaModificacion;
                }
            }
            
            internal DataColumn IdConexionUltimaModificacionColumn {
                get {
                    return this.columnIdConexionUltimaModificacion;
                }
            }
            
            internal DataColumn IdReservadoColumn {
                get {
                    return this.columnIdReservado;
                }
            }
            
            internal DataColumn RowIdColumn {
                get {
                    return this.columnRowId;
                }
            }
            
            internal DataColumn VisibleColumn {
                get {
                    return this.columnVisible;
                }
            }
            
            internal DataColumn IdOrdenReparacionColumn {
                get {
                    return this.columnIdOrdenReparacion;
                }
            }
            
            internal DataColumn IdComprobantesPredecesoresColumn {
                get {
                    return this.columnIdComprobantesPredecesores;
                }
            }
            
            internal DataColumn IdComprobantesSucesoresColumn {
                get {
                    return this.columnIdComprobantesSucesores;
                }
            }
            
            internal DataColumn IdTiposComprobantesPredecesoresColumn {
                get {
                    return this.columnIdTiposComprobantesPredecesores;
                }
            }
            
            internal DataColumn IdTiposComprobantesSucesoresColumn {
                get {
                    return this.columnIdTiposComprobantesSucesores;
                }
            }
            
            internal DataColumn IdInstanciaOrdenReparacionColumn {
                get {
                    return this.columnIdInstanciaOrdenReparacion;
                }
            }
            
            internal DataColumn IdRepuestoOrdenReparacionColumn {
                get {
                    return this.columnIdRepuestoOrdenReparacion;
                }
            }
            
            internal DataColumn IdTareaRealizadaColumn {
                get {
                    return this.columnIdTareaRealizada;
                }
            }
            
            internal DataColumn IdResponsableOrigenColumn {
                get {
                    return this.columnIdResponsableOrigen;
                }
            }
            
            internal DataColumn EquipoColumn {
                get {
                    return this.columnEquipo;
                }
            }
            
            internal DataColumn OrdinalesPredecesoresColumn {
                get {
                    return this.columnOrdinalesPredecesores;
                }
            }
            
            internal DataColumn OrdinalesSucesoresColumn {
                get {
                    return this.columnOrdinalesSucesores;
                }
            }
            
            public tsa_ComprobantesDetAuxiliaresRow this[int index] {
                get {
                    return ((tsa_ComprobantesDetAuxiliaresRow)(this.Rows[index]));
                }
            }
            
            public event tsa_ComprobantesDetAuxiliaresRowChangeEventHandler tsa_ComprobantesDetAuxiliaresRowChanged;
            
            public event tsa_ComprobantesDetAuxiliaresRowChangeEventHandler tsa_ComprobantesDetAuxiliaresRowChanging;
            
            public event tsa_ComprobantesDetAuxiliaresRowChangeEventHandler tsa_ComprobantesDetAuxiliaresRowDeleted;
            
            public event tsa_ComprobantesDetAuxiliaresRowChangeEventHandler tsa_ComprobantesDetAuxiliaresRowDeleting;
            
            public void Addtsa_ComprobantesDetAuxiliaresRow(tsa_ComprobantesDetAuxiliaresRow row) {
                this.Rows.Add(row);
            }
            
            public tsa_ComprobantesDetAuxiliaresRow Addtsa_ComprobantesDetAuxiliaresRow(
                        string IdComprobante, 
                        long Ordinal, 
                        long IdEmpresa, 
                        long IdSucursal, 
                        long ContadorOrigen, 
                        long ContadorDestino, 
                        System.DateTime FechaCreacion, 
                        long IdConexionCreacion, 
                        System.Byte[] UltimaModificacion, 
                        long IdConexionUltimaModificacion, 
                        long IdReservado, 
                        System.Guid RowId, 
                        bool Visible, 
                        long IdOrdenReparacion, 
                        string IdComprobantesPredecesores, 
                        string IdComprobantesSucesores, 
                        string IdTiposComprobantesPredecesores, 
                        string IdTiposComprobantesSucesores, 
                        long IdInstanciaOrdenReparacion, 
                        long IdRepuestoOrdenReparacion, 
                        long IdTareaRealizada, 
                        string IdResponsableOrigen, 
                        long Equipo, 
                        string OrdinalesPredecesores, 
                        string OrdinalesSucesores) {
                tsa_ComprobantesDetAuxiliaresRow rowtsa_ComprobantesDetAuxiliaresRow = ((tsa_ComprobantesDetAuxiliaresRow)(this.NewRow()));
                rowtsa_ComprobantesDetAuxiliaresRow.ItemArray = new object[] {
                        IdComprobante,
                        Ordinal,
                        IdEmpresa,
                        IdSucursal,
                        ContadorOrigen,
                        ContadorDestino,
                        FechaCreacion,
                        IdConexionCreacion,
                        UltimaModificacion,
                        IdConexionUltimaModificacion,
                        IdReservado,
                        RowId,
                        Visible,
                        IdOrdenReparacion,
                        IdComprobantesPredecesores,
                        IdComprobantesSucesores,
                        IdTiposComprobantesPredecesores,
                        IdTiposComprobantesSucesores,
                        IdInstanciaOrdenReparacion,
                        IdRepuestoOrdenReparacion,
                        IdTareaRealizada,
                        IdResponsableOrigen,
                        Equipo,
                        OrdinalesPredecesores,
                        OrdinalesSucesores};
                this.Rows.Add(rowtsa_ComprobantesDetAuxiliaresRow);
                return rowtsa_ComprobantesDetAuxiliaresRow;
            }
            
            public tsa_ComprobantesDetAuxiliaresRow FindByIdComprobanteOrdinal(string IdComprobante, long Ordinal) {
                return ((tsa_ComprobantesDetAuxiliaresRow)(this.Rows.Find(new object[] {
                            IdComprobante,
                            Ordinal})));
            }
            
            public System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            public override DataTable Clone() {
                tsa_ComprobantesDetAuxiliaresDataTable cln = ((tsa_ComprobantesDetAuxiliaresDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            protected override DataTable CreateInstance() {
                return new tsa_ComprobantesDetAuxiliaresDataTable();
            }
            
            internal void InitVars() {
                this.columnIdComprobante = this.Columns["IdComprobante"];
                this.columnOrdinal = this.Columns["Ordinal"];
                this.columnIdEmpresa = this.Columns["IdEmpresa"];
                this.columnIdSucursal = this.Columns["IdSucursal"];
                this.columnContadorOrigen = this.Columns["ContadorOrigen"];
                this.columnContadorDestino = this.Columns["ContadorDestino"];
                this.columnFechaCreacion = this.Columns["FechaCreacion"];
                this.columnIdConexionCreacion = this.Columns["IdConexionCreacion"];
                this.columnUltimaModificacion = this.Columns["UltimaModificacion"];
                this.columnIdConexionUltimaModificacion = this.Columns["IdConexionUltimaModificacion"];
                this.columnIdReservado = this.Columns["IdReservado"];
                this.columnRowId = this.Columns["RowId"];
                this.columnVisible = this.Columns["Visible"];
                this.columnIdOrdenReparacion = this.Columns["IdOrdenReparacion"];
                this.columnIdComprobantesPredecesores = this.Columns["IdComprobantesPredecesores"];
                this.columnIdComprobantesSucesores = this.Columns["IdComprobantesSucesores"];
                this.columnIdTiposComprobantesPredecesores = this.Columns["IdTiposComprobantesPredecesores"];
                this.columnIdTiposComprobantesSucesores = this.Columns["IdTiposComprobantesSucesores"];
                this.columnIdInstanciaOrdenReparacion = this.Columns["IdInstanciaOrdenReparacion"];
                this.columnIdRepuestoOrdenReparacion = this.Columns["IdRepuestoOrdenReparacion"];
                this.columnIdTareaRealizada = this.Columns["IdTareaRealizada"];
                this.columnIdResponsableOrigen = this.Columns["IdResponsableOrigen"];
                this.columnEquipo = this.Columns["Equipo"];
                this.columnOrdinalesPredecesores = this.Columns["OrdinalesPredecesores"];
                this.columnOrdinalesSucesores = this.Columns["OrdinalesSucesores"];
            }
            
            private void InitClass() {
                this.columnIdComprobante = new DataColumn("IdComprobante", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdComprobante);
                this.columnOrdinal = new DataColumn("Ordinal", typeof(long), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnOrdinal);
                this.columnIdEmpresa = new DataColumn("IdEmpresa", typeof(long), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdEmpresa);
                this.columnIdSucursal = new DataColumn("IdSucursal", typeof(long), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdSucursal);
                this.columnContadorOrigen = new DataColumn("ContadorOrigen", typeof(long), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnContadorOrigen);
                this.columnContadorDestino = new DataColumn("ContadorDestino", typeof(long), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnContadorDestino);
                this.columnFechaCreacion = new DataColumn("FechaCreacion", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnFechaCreacion);
                this.columnIdConexionCreacion = new DataColumn("IdConexionCreacion", typeof(long), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdConexionCreacion);
                this.columnUltimaModificacion = new DataColumn("UltimaModificacion", typeof(System.Byte[]), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnUltimaModificacion);
                this.columnIdConexionUltimaModificacion = new DataColumn("IdConexionUltimaModificacion", typeof(long), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdConexionUltimaModificacion);
                this.columnIdReservado = new DataColumn("IdReservado", typeof(long), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdReservado);
                this.columnRowId = new DataColumn("RowId", typeof(System.Guid), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnRowId);
                this.columnVisible = new DataColumn("Visible", typeof(bool), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnVisible);
                this.columnIdOrdenReparacion = new DataColumn("IdOrdenReparacion", typeof(long), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdOrdenReparacion);
                this.columnIdComprobantesPredecesores = new DataColumn("IdComprobantesPredecesores", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdComprobantesPredecesores);
                this.columnIdComprobantesSucesores = new DataColumn("IdComprobantesSucesores", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdComprobantesSucesores);
                this.columnIdTiposComprobantesPredecesores = new DataColumn("IdTiposComprobantesPredecesores", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdTiposComprobantesPredecesores);
                this.columnIdTiposComprobantesSucesores = new DataColumn("IdTiposComprobantesSucesores", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdTiposComprobantesSucesores);
                this.columnIdInstanciaOrdenReparacion = new DataColumn("IdInstanciaOrdenReparacion", typeof(long), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdInstanciaOrdenReparacion);
                this.columnIdRepuestoOrdenReparacion = new DataColumn("IdRepuestoOrdenReparacion", typeof(long), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdRepuestoOrdenReparacion);
                this.columnIdTareaRealizada = new DataColumn("IdTareaRealizada", typeof(long), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdTareaRealizada);
                this.columnIdResponsableOrigen = new DataColumn("IdResponsableOrigen", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdResponsableOrigen);
                this.columnEquipo = new DataColumn("Equipo", typeof(long), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnEquipo);
                this.columnOrdinalesPredecesores = new DataColumn("OrdinalesPredecesores", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnOrdinalesPredecesores);
                this.columnOrdinalesSucesores = new DataColumn("OrdinalesSucesores", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnOrdinalesSucesores);
                this.Constraints.Add(new UniqueConstraint("tsa_ComprobantesExDatasetKey12", new DataColumn[] {
                                this.columnIdComprobante,
                                this.columnOrdinal}, true));
                this.columnIdComprobante.AllowDBNull = false;
                this.columnOrdinal.AllowDBNull = false;
                this.columnUltimaModificacion.ReadOnly = true;
            }
            
            public tsa_ComprobantesDetAuxiliaresRow Newtsa_ComprobantesDetAuxiliaresRow() {
                return ((tsa_ComprobantesDetAuxiliaresRow)(this.NewRow()));
            }
            
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder) {
                return new tsa_ComprobantesDetAuxiliaresRow(builder);
            }
            
            protected override System.Type GetRowType() {
                return typeof(tsa_ComprobantesDetAuxiliaresRow);
            }
            
            protected override void OnRowChanged(DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.tsa_ComprobantesDetAuxiliaresRowChanged != null)) {
                    this.tsa_ComprobantesDetAuxiliaresRowChanged(this, new tsa_ComprobantesDetAuxiliaresRowChangeEvent(((tsa_ComprobantesDetAuxiliaresRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowChanging(DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.tsa_ComprobantesDetAuxiliaresRowChanging != null)) {
                    this.tsa_ComprobantesDetAuxiliaresRowChanging(this, new tsa_ComprobantesDetAuxiliaresRowChangeEvent(((tsa_ComprobantesDetAuxiliaresRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleted(DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.tsa_ComprobantesDetAuxiliaresRowDeleted != null)) {
                    this.tsa_ComprobantesDetAuxiliaresRowDeleted(this, new tsa_ComprobantesDetAuxiliaresRowChangeEvent(((tsa_ComprobantesDetAuxiliaresRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleting(DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.tsa_ComprobantesDetAuxiliaresRowDeleting != null)) {
                    this.tsa_ComprobantesDetAuxiliaresRowDeleting(this, new tsa_ComprobantesDetAuxiliaresRowChangeEvent(((tsa_ComprobantesDetAuxiliaresRow)(e.Row)), e.Action));
                }
            }
            
            public void Removetsa_ComprobantesDetAuxiliaresRow(tsa_ComprobantesDetAuxiliaresRow row) {
                this.Rows.Remove(row);
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class tsa_ComprobantesDetAuxiliaresRow : DataRow {
            
            private tsa_ComprobantesDetAuxiliaresDataTable tabletsa_ComprobantesDetAuxiliares;
            
            internal tsa_ComprobantesDetAuxiliaresRow(DataRowBuilder rb) : 
                    base(rb) {
                this.tabletsa_ComprobantesDetAuxiliares = ((tsa_ComprobantesDetAuxiliaresDataTable)(this.Table));
            }
            
            public string IdComprobante {
                get {
                    return ((string)(this[this.tabletsa_ComprobantesDetAuxiliares.IdComprobanteColumn]));
                }
                set {
                    this[this.tabletsa_ComprobantesDetAuxiliares.IdComprobanteColumn] = value;
                }
            }
            
            public long Ordinal {
                get {
                    return ((long)(this[this.tabletsa_ComprobantesDetAuxiliares.OrdinalColumn]));
                }
                set {
                    this[this.tabletsa_ComprobantesDetAuxiliares.OrdinalColumn] = value;
                }
            }
            
            public long IdEmpresa {
                get {
                    try {
                        return ((long)(this[this.tabletsa_ComprobantesDetAuxiliares.IdEmpresaColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletsa_ComprobantesDetAuxiliares.IdEmpresaColumn] = value;
                }
            }
            
            public long IdSucursal {
                get {
                    try {
                        return ((long)(this[this.tabletsa_ComprobantesDetAuxiliares.IdSucursalColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletsa_ComprobantesDetAuxiliares.IdSucursalColumn] = value;
                }
            }
            
            public long ContadorOrigen {
                get {
                    try {
                        return ((long)(this[this.tabletsa_ComprobantesDetAuxiliares.ContadorOrigenColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletsa_ComprobantesDetAuxiliares.ContadorOrigenColumn] = value;
                }
            }
            
            public long ContadorDestino {
                get {
                    try {
                        return ((long)(this[this.tabletsa_ComprobantesDetAuxiliares.ContadorDestinoColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletsa_ComprobantesDetAuxiliares.ContadorDestinoColumn] = value;
                }
            }
            
            public System.DateTime FechaCreacion {
                get {
                    try {
                        return ((System.DateTime)(this[this.tabletsa_ComprobantesDetAuxiliares.FechaCreacionColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletsa_ComprobantesDetAuxiliares.FechaCreacionColumn] = value;
                }
            }
            
            public long IdConexionCreacion {
                get {
                    try {
                        return ((long)(this[this.tabletsa_ComprobantesDetAuxiliares.IdConexionCreacionColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletsa_ComprobantesDetAuxiliares.IdConexionCreacionColumn] = value;
                }
            }
            
            public System.Byte[] UltimaModificacion {
                get {
                    try {
                        return ((System.Byte[])(this[this.tabletsa_ComprobantesDetAuxiliares.UltimaModificacionColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletsa_ComprobantesDetAuxiliares.UltimaModificacionColumn] = value;
                }
            }
            
            public long IdConexionUltimaModificacion {
                get {
                    try {
                        return ((long)(this[this.tabletsa_ComprobantesDetAuxiliares.IdConexionUltimaModificacionColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletsa_ComprobantesDetAuxiliares.IdConexionUltimaModificacionColumn] = value;
                }
            }
            
            public long IdReservado {
                get {
                    try {
                        return ((long)(this[this.tabletsa_ComprobantesDetAuxiliares.IdReservadoColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletsa_ComprobantesDetAuxiliares.IdReservadoColumn] = value;
                }
            }
            
            public System.Guid RowId {
                get {
                    try {
                        return ((System.Guid)(this[this.tabletsa_ComprobantesDetAuxiliares.RowIdColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletsa_ComprobantesDetAuxiliares.RowIdColumn] = value;
                }
            }
            
            public bool Visible {
                get {
                    try {
                        return ((bool)(this[this.tabletsa_ComprobantesDetAuxiliares.VisibleColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletsa_ComprobantesDetAuxiliares.VisibleColumn] = value;
                }
            }
            
            public long IdOrdenReparacion {
                get {
                    try {
                        return ((long)(this[this.tabletsa_ComprobantesDetAuxiliares.IdOrdenReparacionColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletsa_ComprobantesDetAuxiliares.IdOrdenReparacionColumn] = value;
                }
            }
            
            public string IdComprobantesPredecesores {
                get {
                    try {
                        return ((string)(this[this.tabletsa_ComprobantesDetAuxiliares.IdComprobantesPredecesoresColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletsa_ComprobantesDetAuxiliares.IdComprobantesPredecesoresColumn] = value;
                }
            }
            
            public string IdComprobantesSucesores {
                get {
                    try {
                        return ((string)(this[this.tabletsa_ComprobantesDetAuxiliares.IdComprobantesSucesoresColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletsa_ComprobantesDetAuxiliares.IdComprobantesSucesoresColumn] = value;
                }
            }
            
            public string IdTiposComprobantesPredecesores {
                get {
                    try {
                        return ((string)(this[this.tabletsa_ComprobantesDetAuxiliares.IdTiposComprobantesPredecesoresColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletsa_ComprobantesDetAuxiliares.IdTiposComprobantesPredecesoresColumn] = value;
                }
            }
            
            public string IdTiposComprobantesSucesores {
                get {
                    try {
                        return ((string)(this[this.tabletsa_ComprobantesDetAuxiliares.IdTiposComprobantesSucesoresColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletsa_ComprobantesDetAuxiliares.IdTiposComprobantesSucesoresColumn] = value;
                }
            }
            
            public long IdInstanciaOrdenReparacion {
                get {
                    try {
                        return ((long)(this[this.tabletsa_ComprobantesDetAuxiliares.IdInstanciaOrdenReparacionColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletsa_ComprobantesDetAuxiliares.IdInstanciaOrdenReparacionColumn] = value;
                }
            }
            
            public long IdRepuestoOrdenReparacion {
                get {
                    try {
                        return ((long)(this[this.tabletsa_ComprobantesDetAuxiliares.IdRepuestoOrdenReparacionColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletsa_ComprobantesDetAuxiliares.IdRepuestoOrdenReparacionColumn] = value;
                }
            }
            
            public long IdTareaRealizada {
                get {
                    try {
                        return ((long)(this[this.tabletsa_ComprobantesDetAuxiliares.IdTareaRealizadaColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletsa_ComprobantesDetAuxiliares.IdTareaRealizadaColumn] = value;
                }
            }
            
            public string IdResponsableOrigen {
                get {
                    try {
                        return ((string)(this[this.tabletsa_ComprobantesDetAuxiliares.IdResponsableOrigenColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletsa_ComprobantesDetAuxiliares.IdResponsableOrigenColumn] = value;
                }
            }
            
            public long Equipo {
                get {
                    try {
                        return ((long)(this[this.tabletsa_ComprobantesDetAuxiliares.EquipoColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tabletsa_ComprobantesDetAuxiliares.EquipoColumn] = value;
                }
            }
            
            public string OrdinalesPredecesores {
                get {
                    if (this.IsOrdinalesPredecesoresNull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tabletsa_ComprobantesDetAuxiliares.OrdinalesPredecesoresColumn]));
                    }
                }
                set {
                    this[this.tabletsa_ComprobantesDetAuxiliares.OrdinalesPredecesoresColumn] = value;
                }
            }
            
            public string OrdinalesSucesores {
                get {
                    if (this.IsOrdinalesSucesoresNull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tabletsa_ComprobantesDetAuxiliares.OrdinalesSucesoresColumn]));
                    }
                }
                set {
                    this[this.tabletsa_ComprobantesDetAuxiliares.OrdinalesSucesoresColumn] = value;
                }
            }
            
            public tsa_ComprobantesDetRow tsa_ComprobantesDetRowParent {
                get {
                    return ((tsa_ComprobantesDetRow)(this.GetParentRow(this.Table.ParentRelations["tsa_ComprobantesDettsa_ComprobantesDetAuxiliares"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["tsa_ComprobantesDettsa_ComprobantesDetAuxiliares"]);
                }
            }
            
            public bool IsIdEmpresaNull() {
                return this.IsNull(this.tabletsa_ComprobantesDetAuxiliares.IdEmpresaColumn);
            }
            
            public void SetIdEmpresaNull() {
                this[this.tabletsa_ComprobantesDetAuxiliares.IdEmpresaColumn] = System.Convert.DBNull;
            }
            
            public bool IsIdSucursalNull() {
                return this.IsNull(this.tabletsa_ComprobantesDetAuxiliares.IdSucursalColumn);
            }
            
            public void SetIdSucursalNull() {
                this[this.tabletsa_ComprobantesDetAuxiliares.IdSucursalColumn] = System.Convert.DBNull;
            }
            
            public bool IsContadorOrigenNull() {
                return this.IsNull(this.tabletsa_ComprobantesDetAuxiliares.ContadorOrigenColumn);
            }
            
            public void SetContadorOrigenNull() {
                this[this.tabletsa_ComprobantesDetAuxiliares.ContadorOrigenColumn] = System.Convert.DBNull;
            }
            
            public bool IsContadorDestinoNull() {
                return this.IsNull(this.tabletsa_ComprobantesDetAuxiliares.ContadorDestinoColumn);
            }
            
            public void SetContadorDestinoNull() {
                this[this.tabletsa_ComprobantesDetAuxiliares.ContadorDestinoColumn] = System.Convert.DBNull;
            }
            
            public bool IsFechaCreacionNull() {
                return this.IsNull(this.tabletsa_ComprobantesDetAuxiliares.FechaCreacionColumn);
            }
            
            public void SetFechaCreacionNull() {
                this[this.tabletsa_ComprobantesDetAuxiliares.FechaCreacionColumn] = System.Convert.DBNull;
            }
            
            public bool IsIdConexionCreacionNull() {
                return this.IsNull(this.tabletsa_ComprobantesDetAuxiliares.IdConexionCreacionColumn);
            }
            
            public void SetIdConexionCreacionNull() {
                this[this.tabletsa_ComprobantesDetAuxiliares.IdConexionCreacionColumn] = System.Convert.DBNull;
            }
            
            public bool IsUltimaModificacionNull() {
                return this.IsNull(this.tabletsa_ComprobantesDetAuxiliares.UltimaModificacionColumn);
            }
            
            public void SetUltimaModificacionNull() {
                this[this.tabletsa_ComprobantesDetAuxiliares.UltimaModificacionColumn] = System.Convert.DBNull;
            }
            
            public bool IsIdConexionUltimaModificacionNull() {
                return this.IsNull(this.tabletsa_ComprobantesDetAuxiliares.IdConexionUltimaModificacionColumn);
            }
            
            public void SetIdConexionUltimaModificacionNull() {
                this[this.tabletsa_ComprobantesDetAuxiliares.IdConexionUltimaModificacionColumn] = System.Convert.DBNull;
            }
            
            public bool IsIdReservadoNull() {
                return this.IsNull(this.tabletsa_ComprobantesDetAuxiliares.IdReservadoColumn);
            }
            
            public void SetIdReservadoNull() {
                this[this.tabletsa_ComprobantesDetAuxiliares.IdReservadoColumn] = System.Convert.DBNull;
            }
            
            public bool IsRowIdNull() {
                return this.IsNull(this.tabletsa_ComprobantesDetAuxiliares.RowIdColumn);
            }
            
            public void SetRowIdNull() {
                this[this.tabletsa_ComprobantesDetAuxiliares.RowIdColumn] = System.Convert.DBNull;
            }
            
            public bool IsVisibleNull() {
                return this.IsNull(this.tabletsa_ComprobantesDetAuxiliares.VisibleColumn);
            }
            
            public void SetVisibleNull() {
                this[this.tabletsa_ComprobantesDetAuxiliares.VisibleColumn] = System.Convert.DBNull;
            }
            
            public bool IsIdOrdenReparacionNull() {
                return this.IsNull(this.tabletsa_ComprobantesDetAuxiliares.IdOrdenReparacionColumn);
            }
            
            public void SetIdOrdenReparacionNull() {
                this[this.tabletsa_ComprobantesDetAuxiliares.IdOrdenReparacionColumn] = System.Convert.DBNull;
            }
            
            public bool IsIdComprobantesPredecesoresNull() {
                return this.IsNull(this.tabletsa_ComprobantesDetAuxiliares.IdComprobantesPredecesoresColumn);
            }
            
            public void SetIdComprobantesPredecesoresNull() {
                this[this.tabletsa_ComprobantesDetAuxiliares.IdComprobantesPredecesoresColumn] = System.Convert.DBNull;
            }
            
            public bool IsIdComprobantesSucesoresNull() {
                return this.IsNull(this.tabletsa_ComprobantesDetAuxiliares.IdComprobantesSucesoresColumn);
            }
            
            public void SetIdComprobantesSucesoresNull() {
                this[this.tabletsa_ComprobantesDetAuxiliares.IdComprobantesSucesoresColumn] = System.Convert.DBNull;
            }
            
            public bool IsIdTiposComprobantesPredecesoresNull() {
                return this.IsNull(this.tabletsa_ComprobantesDetAuxiliares.IdTiposComprobantesPredecesoresColumn);
            }
            
            public void SetIdTiposComprobantesPredecesoresNull() {
                this[this.tabletsa_ComprobantesDetAuxiliares.IdTiposComprobantesPredecesoresColumn] = System.Convert.DBNull;
            }
            
            public bool IsIdTiposComprobantesSucesoresNull() {
                return this.IsNull(this.tabletsa_ComprobantesDetAuxiliares.IdTiposComprobantesSucesoresColumn);
            }
            
            public void SetIdTiposComprobantesSucesoresNull() {
                this[this.tabletsa_ComprobantesDetAuxiliares.IdTiposComprobantesSucesoresColumn] = System.Convert.DBNull;
            }
            
            public bool IsIdInstanciaOrdenReparacionNull() {
                return this.IsNull(this.tabletsa_ComprobantesDetAuxiliares.IdInstanciaOrdenReparacionColumn);
            }
            
            public void SetIdInstanciaOrdenReparacionNull() {
                this[this.tabletsa_ComprobantesDetAuxiliares.IdInstanciaOrdenReparacionColumn] = System.Convert.DBNull;
            }
            
            public bool IsIdRepuestoOrdenReparacionNull() {
                return this.IsNull(this.tabletsa_ComprobantesDetAuxiliares.IdRepuestoOrdenReparacionColumn);
            }
            
            public void SetIdRepuestoOrdenReparacionNull() {
                this[this.tabletsa_ComprobantesDetAuxiliares.IdRepuestoOrdenReparacionColumn] = System.Convert.DBNull;
            }
            
            public bool IsIdTareaRealizadaNull() {
                return this.IsNull(this.tabletsa_ComprobantesDetAuxiliares.IdTareaRealizadaColumn);
            }
            
            public void SetIdTareaRealizadaNull() {
                this[this.tabletsa_ComprobantesDetAuxiliares.IdTareaRealizadaColumn] = System.Convert.DBNull;
            }
            
            public bool IsIdResponsableOrigenNull() {
                return this.IsNull(this.tabletsa_ComprobantesDetAuxiliares.IdResponsableOrigenColumn);
            }
            
            public void SetIdResponsableOrigenNull() {
                this[this.tabletsa_ComprobantesDetAuxiliares.IdResponsableOrigenColumn] = System.Convert.DBNull;
            }
            
            public bool IsEquipoNull() {
                return this.IsNull(this.tabletsa_ComprobantesDetAuxiliares.EquipoColumn);
            }
            
            public void SetEquipoNull() {
                this[this.tabletsa_ComprobantesDetAuxiliares.EquipoColumn] = System.Convert.DBNull;
            }
            
            public bool IsOrdinalesPredecesoresNull() {
                return this.IsNull(this.tabletsa_ComprobantesDetAuxiliares.OrdinalesPredecesoresColumn);
            }
            
            public void SetOrdinalesPredecesoresNull() {
                this[this.tabletsa_ComprobantesDetAuxiliares.OrdinalesPredecesoresColumn] = System.Convert.DBNull;
            }
            
            public bool IsOrdinalesSucesoresNull() {
                return this.IsNull(this.tabletsa_ComprobantesDetAuxiliares.OrdinalesSucesoresColumn);
            }
            
            public void SetOrdinalesSucesoresNull() {
                this[this.tabletsa_ComprobantesDetAuxiliares.OrdinalesSucesoresColumn] = System.Convert.DBNull;
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class tsa_ComprobantesDetAuxiliaresRowChangeEvent : EventArgs {
            
            private tsa_ComprobantesDetAuxiliaresRow eventRow;
            
            private DataRowAction eventAction;
            
            public tsa_ComprobantesDetAuxiliaresRowChangeEvent(tsa_ComprobantesDetAuxiliaresRow row, DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            public tsa_ComprobantesDetAuxiliaresRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            public DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
