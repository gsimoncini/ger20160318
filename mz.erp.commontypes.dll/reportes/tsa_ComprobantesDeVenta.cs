//------------------------------------------------------------------------------
// <autogenerated>
//     This code was generated by a tool.
//     Runtime Version: 1.1.4322.573
//
//     Changes to this file may cause incorrect behavior and will be lost if 
//     the code is regenerated.
// </autogenerated>
//------------------------------------------------------------------------------

namespace mz.erp.commontypes.reportes {
    using System;
    using System.Data;
    using System.Xml;
    using System.Runtime.Serialization;
    
    
    [Serializable()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Diagnostics.DebuggerStepThrough()]
    [System.ComponentModel.ToolboxItem(true)]
    public class tsa_ComprobantesDeVenta : DataSet {
        
        private RP_tsa_ComprobantesDeVentaDataTable tableRP_tsa_ComprobantesDeVenta;
        
        public tsa_ComprobantesDeVenta() {
            this.InitClass();
            System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            this.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        protected tsa_ComprobantesDeVenta(SerializationInfo info, StreamingContext context) {
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((strSchema != null)) {
                DataSet ds = new DataSet();
                ds.ReadXmlSchema(new XmlTextReader(new System.IO.StringReader(strSchema)));
                if ((ds.Tables["RP_tsa_ComprobantesDeVenta"] != null)) {
                    this.Tables.Add(new RP_tsa_ComprobantesDeVentaDataTable(ds.Tables["RP_tsa_ComprobantesDeVenta"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.InitClass();
            }
            this.GetSerializationData(info, context);
            System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            this.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public RP_tsa_ComprobantesDeVentaDataTable RP_tsa_ComprobantesDeVenta {
            get {
                return this.tableRP_tsa_ComprobantesDeVenta;
            }
        }
        
        public override DataSet Clone() {
            tsa_ComprobantesDeVenta cln = ((tsa_ComprobantesDeVenta)(base.Clone()));
            cln.InitVars();
            return cln;
        }
        
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        protected override void ReadXmlSerializable(XmlReader reader) {
            this.Reset();
            DataSet ds = new DataSet();
            ds.ReadXml(reader);
            if ((ds.Tables["RP_tsa_ComprobantesDeVenta"] != null)) {
                this.Tables.Add(new RP_tsa_ComprobantesDeVentaDataTable(ds.Tables["RP_tsa_ComprobantesDeVenta"]));
            }
            this.DataSetName = ds.DataSetName;
            this.Prefix = ds.Prefix;
            this.Namespace = ds.Namespace;
            this.Locale = ds.Locale;
            this.CaseSensitive = ds.CaseSensitive;
            this.EnforceConstraints = ds.EnforceConstraints;
            this.Merge(ds, false, System.Data.MissingSchemaAction.Add);
            this.InitVars();
        }
        
        protected override System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            System.IO.MemoryStream stream = new System.IO.MemoryStream();
            this.WriteXmlSchema(new XmlTextWriter(stream, null));
            stream.Position = 0;
            return System.Xml.Schema.XmlSchema.Read(new XmlTextReader(stream), null);
        }
        
        internal void InitVars() {
            this.tableRP_tsa_ComprobantesDeVenta = ((RP_tsa_ComprobantesDeVentaDataTable)(this.Tables["RP_tsa_ComprobantesDeVenta"]));
            if ((this.tableRP_tsa_ComprobantesDeVenta != null)) {
                this.tableRP_tsa_ComprobantesDeVenta.InitVars();
            }
        }
        
        private void InitClass() {
            this.DataSetName = "tsa_ComprobantesDeVenta";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/tsa_ComprobantesDeVenta.xsd";
            this.Locale = new System.Globalization.CultureInfo("en-US");
            this.CaseSensitive = false;
            this.EnforceConstraints = true;
            this.tableRP_tsa_ComprobantesDeVenta = new RP_tsa_ComprobantesDeVentaDataTable();
            this.Tables.Add(this.tableRP_tsa_ComprobantesDeVenta);
        }
        
        private bool ShouldSerializeRP_tsa_ComprobantesDeVenta() {
            return false;
        }
        
        private void SchemaChanged(object sender, System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        public delegate void RP_tsa_ComprobantesDeVentaRowChangeEventHandler(object sender, RP_tsa_ComprobantesDeVentaRowChangeEvent e);
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class RP_tsa_ComprobantesDeVentaDataTable : DataTable, System.Collections.IEnumerable {
            
            private DataColumn columnDescripcion;
            
            private DataColumn columnNumero;
            
            private DataColumn columnFecha;
            
            private DataColumn columnCodigo;
            
            private DataColumn columnNombre;
            
            private DataColumn columnTotal;
            
            private DataColumn columnMoneda;
            
            private DataColumn columnResponsable;
            
            private DataColumn columnEmpresa;
            
            private DataColumn columnSucursal;
            
            private DataColumn columnIdComprobante;
            
            internal RP_tsa_ComprobantesDeVentaDataTable() : 
                    base("RP_tsa_ComprobantesDeVenta") {
                this.InitClass();
            }
            
            internal RP_tsa_ComprobantesDeVentaDataTable(DataTable table) : 
                    base(table.TableName) {
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
                this.DisplayExpression = table.DisplayExpression;
            }
            
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            internal DataColumn DescripcionColumn {
                get {
                    return this.columnDescripcion;
                }
            }
            
            internal DataColumn NumeroColumn {
                get {
                    return this.columnNumero;
                }
            }
            
            internal DataColumn FechaColumn {
                get {
                    return this.columnFecha;
                }
            }
            
            internal DataColumn CodigoColumn {
                get {
                    return this.columnCodigo;
                }
            }
            
            internal DataColumn NombreColumn {
                get {
                    return this.columnNombre;
                }
            }
            
            internal DataColumn TotalColumn {
                get {
                    return this.columnTotal;
                }
            }
            
            internal DataColumn MonedaColumn {
                get {
                    return this.columnMoneda;
                }
            }
            
            internal DataColumn ResponsableColumn {
                get {
                    return this.columnResponsable;
                }
            }
            
            internal DataColumn EmpresaColumn {
                get {
                    return this.columnEmpresa;
                }
            }
            
            internal DataColumn SucursalColumn {
                get {
                    return this.columnSucursal;
                }
            }
            
            internal DataColumn IdComprobanteColumn {
                get {
                    return this.columnIdComprobante;
                }
            }
            
            public RP_tsa_ComprobantesDeVentaRow this[int index] {
                get {
                    return ((RP_tsa_ComprobantesDeVentaRow)(this.Rows[index]));
                }
            }
            
            public event RP_tsa_ComprobantesDeVentaRowChangeEventHandler RP_tsa_ComprobantesDeVentaRowChanged;
            
            public event RP_tsa_ComprobantesDeVentaRowChangeEventHandler RP_tsa_ComprobantesDeVentaRowChanging;
            
            public event RP_tsa_ComprobantesDeVentaRowChangeEventHandler RP_tsa_ComprobantesDeVentaRowDeleted;
            
            public event RP_tsa_ComprobantesDeVentaRowChangeEventHandler RP_tsa_ComprobantesDeVentaRowDeleting;
            
            public void AddRP_tsa_ComprobantesDeVentaRow(RP_tsa_ComprobantesDeVentaRow row) {
                this.Rows.Add(row);
            }
            
            public RP_tsa_ComprobantesDeVentaRow AddRP_tsa_ComprobantesDeVentaRow(string Descripcion, string Numero, System.DateTime Fecha, string Codigo, string Nombre, System.Decimal Total, string Moneda, string Responsable, string Empresa, string Sucursal, string IdComprobante) {
                RP_tsa_ComprobantesDeVentaRow rowRP_tsa_ComprobantesDeVentaRow = ((RP_tsa_ComprobantesDeVentaRow)(this.NewRow()));
                rowRP_tsa_ComprobantesDeVentaRow.ItemArray = new object[] {
                        Descripcion,
                        Numero,
                        Fecha,
                        Codigo,
                        Nombre,
                        Total,
                        Moneda,
                        Responsable,
                        Empresa,
                        Sucursal,
                        IdComprobante};
                this.Rows.Add(rowRP_tsa_ComprobantesDeVentaRow);
                return rowRP_tsa_ComprobantesDeVentaRow;
            }
            
            public System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            public override DataTable Clone() {
                RP_tsa_ComprobantesDeVentaDataTable cln = ((RP_tsa_ComprobantesDeVentaDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            protected override DataTable CreateInstance() {
                return new RP_tsa_ComprobantesDeVentaDataTable();
            }
            
            internal void InitVars() {
                this.columnDescripcion = this.Columns["Descripcion"];
                this.columnNumero = this.Columns["Numero"];
                this.columnFecha = this.Columns["Fecha"];
                this.columnCodigo = this.Columns["Codigo"];
                this.columnNombre = this.Columns["Nombre"];
                this.columnTotal = this.Columns["Total"];
                this.columnMoneda = this.Columns["Moneda"];
                this.columnResponsable = this.Columns["Responsable"];
                this.columnEmpresa = this.Columns["Empresa"];
                this.columnSucursal = this.Columns["Sucursal"];
                this.columnIdComprobante = this.Columns["IdComprobante"];
            }
            
            private void InitClass() {
                this.columnDescripcion = new DataColumn("Descripcion", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnDescripcion);
                this.columnNumero = new DataColumn("Numero", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnNumero);
                this.columnFecha = new DataColumn("Fecha", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnFecha);
                this.columnCodigo = new DataColumn("Codigo", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnCodigo);
                this.columnNombre = new DataColumn("Nombre", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnNombre);
                this.columnTotal = new DataColumn("Total", typeof(System.Decimal), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnTotal);
                this.columnMoneda = new DataColumn("Moneda", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnMoneda);
                this.columnResponsable = new DataColumn("Responsable", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnResponsable);
                this.columnEmpresa = new DataColumn("Empresa", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnEmpresa);
                this.columnSucursal = new DataColumn("Sucursal", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnSucursal);
                this.columnIdComprobante = new DataColumn("IdComprobante", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdComprobante);
                this.columnIdComprobante.AllowDBNull = false;
            }
            
            public RP_tsa_ComprobantesDeVentaRow NewRP_tsa_ComprobantesDeVentaRow() {
                return ((RP_tsa_ComprobantesDeVentaRow)(this.NewRow()));
            }
            
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder) {
                return new RP_tsa_ComprobantesDeVentaRow(builder);
            }
            
            protected override System.Type GetRowType() {
                return typeof(RP_tsa_ComprobantesDeVentaRow);
            }
            
            protected override void OnRowChanged(DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.RP_tsa_ComprobantesDeVentaRowChanged != null)) {
                    this.RP_tsa_ComprobantesDeVentaRowChanged(this, new RP_tsa_ComprobantesDeVentaRowChangeEvent(((RP_tsa_ComprobantesDeVentaRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowChanging(DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.RP_tsa_ComprobantesDeVentaRowChanging != null)) {
                    this.RP_tsa_ComprobantesDeVentaRowChanging(this, new RP_tsa_ComprobantesDeVentaRowChangeEvent(((RP_tsa_ComprobantesDeVentaRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleted(DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.RP_tsa_ComprobantesDeVentaRowDeleted != null)) {
                    this.RP_tsa_ComprobantesDeVentaRowDeleted(this, new RP_tsa_ComprobantesDeVentaRowChangeEvent(((RP_tsa_ComprobantesDeVentaRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleting(DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.RP_tsa_ComprobantesDeVentaRowDeleting != null)) {
                    this.RP_tsa_ComprobantesDeVentaRowDeleting(this, new RP_tsa_ComprobantesDeVentaRowChangeEvent(((RP_tsa_ComprobantesDeVentaRow)(e.Row)), e.Action));
                }
            }
            
            public void RemoveRP_tsa_ComprobantesDeVentaRow(RP_tsa_ComprobantesDeVentaRow row) {
                this.Rows.Remove(row);
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class RP_tsa_ComprobantesDeVentaRow : DataRow {
            
            private RP_tsa_ComprobantesDeVentaDataTable tableRP_tsa_ComprobantesDeVenta;
            
            internal RP_tsa_ComprobantesDeVentaRow(DataRowBuilder rb) : 
                    base(rb) {
                this.tableRP_tsa_ComprobantesDeVenta = ((RP_tsa_ComprobantesDeVentaDataTable)(this.Table));
            }
            
            public string Descripcion {
                get {
                    try {
                        return ((string)(this[this.tableRP_tsa_ComprobantesDeVenta.DescripcionColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableRP_tsa_ComprobantesDeVenta.DescripcionColumn] = value;
                }
            }
            
            public string Numero {
                get {
                    try {
                        return ((string)(this[this.tableRP_tsa_ComprobantesDeVenta.NumeroColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableRP_tsa_ComprobantesDeVenta.NumeroColumn] = value;
                }
            }
            
            public System.DateTime Fecha {
                get {
                    try {
                        return ((System.DateTime)(this[this.tableRP_tsa_ComprobantesDeVenta.FechaColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableRP_tsa_ComprobantesDeVenta.FechaColumn] = value;
                }
            }
            
            public string Codigo {
                get {
                    try {
                        return ((string)(this[this.tableRP_tsa_ComprobantesDeVenta.CodigoColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableRP_tsa_ComprobantesDeVenta.CodigoColumn] = value;
                }
            }
            
            public string Nombre {
                get {
                    try {
                        return ((string)(this[this.tableRP_tsa_ComprobantesDeVenta.NombreColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableRP_tsa_ComprobantesDeVenta.NombreColumn] = value;
                }
            }
            
            public System.Decimal Total {
                get {
                    try {
                        return ((System.Decimal)(this[this.tableRP_tsa_ComprobantesDeVenta.TotalColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableRP_tsa_ComprobantesDeVenta.TotalColumn] = value;
                }
            }
            
            public string Moneda {
                get {
                    try {
                        return ((string)(this[this.tableRP_tsa_ComprobantesDeVenta.MonedaColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableRP_tsa_ComprobantesDeVenta.MonedaColumn] = value;
                }
            }
            
            public string Responsable {
                get {
                    try {
                        return ((string)(this[this.tableRP_tsa_ComprobantesDeVenta.ResponsableColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableRP_tsa_ComprobantesDeVenta.ResponsableColumn] = value;
                }
            }
            
            public string Empresa {
                get {
                    try {
                        return ((string)(this[this.tableRP_tsa_ComprobantesDeVenta.EmpresaColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableRP_tsa_ComprobantesDeVenta.EmpresaColumn] = value;
                }
            }
            
            public string Sucursal {
                get {
                    try {
                        return ((string)(this[this.tableRP_tsa_ComprobantesDeVenta.SucursalColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("No se puede obtener el valor porque es DBNull.", e);
                    }
                }
                set {
                    this[this.tableRP_tsa_ComprobantesDeVenta.SucursalColumn] = value;
                }
            }
            
            public string IdComprobante {
                get {
                    return ((string)(this[this.tableRP_tsa_ComprobantesDeVenta.IdComprobanteColumn]));
                }
                set {
                    this[this.tableRP_tsa_ComprobantesDeVenta.IdComprobanteColumn] = value;
                }
            }
            
            public bool IsDescripcionNull() {
                return this.IsNull(this.tableRP_tsa_ComprobantesDeVenta.DescripcionColumn);
            }
            
            public void SetDescripcionNull() {
                this[this.tableRP_tsa_ComprobantesDeVenta.DescripcionColumn] = System.Convert.DBNull;
            }
            
            public bool IsNumeroNull() {
                return this.IsNull(this.tableRP_tsa_ComprobantesDeVenta.NumeroColumn);
            }
            
            public void SetNumeroNull() {
                this[this.tableRP_tsa_ComprobantesDeVenta.NumeroColumn] = System.Convert.DBNull;
            }
            
            public bool IsFechaNull() {
                return this.IsNull(this.tableRP_tsa_ComprobantesDeVenta.FechaColumn);
            }
            
            public void SetFechaNull() {
                this[this.tableRP_tsa_ComprobantesDeVenta.FechaColumn] = System.Convert.DBNull;
            }
            
            public bool IsCodigoNull() {
                return this.IsNull(this.tableRP_tsa_ComprobantesDeVenta.CodigoColumn);
            }
            
            public void SetCodigoNull() {
                this[this.tableRP_tsa_ComprobantesDeVenta.CodigoColumn] = System.Convert.DBNull;
            }
            
            public bool IsNombreNull() {
                return this.IsNull(this.tableRP_tsa_ComprobantesDeVenta.NombreColumn);
            }
            
            public void SetNombreNull() {
                this[this.tableRP_tsa_ComprobantesDeVenta.NombreColumn] = System.Convert.DBNull;
            }
            
            public bool IsTotalNull() {
                return this.IsNull(this.tableRP_tsa_ComprobantesDeVenta.TotalColumn);
            }
            
            public void SetTotalNull() {
                this[this.tableRP_tsa_ComprobantesDeVenta.TotalColumn] = System.Convert.DBNull;
            }
            
            public bool IsMonedaNull() {
                return this.IsNull(this.tableRP_tsa_ComprobantesDeVenta.MonedaColumn);
            }
            
            public void SetMonedaNull() {
                this[this.tableRP_tsa_ComprobantesDeVenta.MonedaColumn] = System.Convert.DBNull;
            }
            
            public bool IsResponsableNull() {
                return this.IsNull(this.tableRP_tsa_ComprobantesDeVenta.ResponsableColumn);
            }
            
            public void SetResponsableNull() {
                this[this.tableRP_tsa_ComprobantesDeVenta.ResponsableColumn] = System.Convert.DBNull;
            }
            
            public bool IsEmpresaNull() {
                return this.IsNull(this.tableRP_tsa_ComprobantesDeVenta.EmpresaColumn);
            }
            
            public void SetEmpresaNull() {
                this[this.tableRP_tsa_ComprobantesDeVenta.EmpresaColumn] = System.Convert.DBNull;
            }
            
            public bool IsSucursalNull() {
                return this.IsNull(this.tableRP_tsa_ComprobantesDeVenta.SucursalColumn);
            }
            
            public void SetSucursalNull() {
                this[this.tableRP_tsa_ComprobantesDeVenta.SucursalColumn] = System.Convert.DBNull;
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class RP_tsa_ComprobantesDeVentaRowChangeEvent : EventArgs {
            
            private RP_tsa_ComprobantesDeVentaRow eventRow;
            
            private DataRowAction eventAction;
            
            public RP_tsa_ComprobantesDeVentaRowChangeEvent(RP_tsa_ComprobantesDeVentaRow row, DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            public RP_tsa_ComprobantesDeVentaRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            public DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
